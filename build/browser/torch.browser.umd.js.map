{"version":3,"file":"torch.browser.umd.js","sources":["../../../../../.yarn/berry/cache/@veehz-gpu.js-npm-2.16.0-abb25a4924-10c0.zip/node_modules/@veehz/gpu.js/dist/gpu-browser.js","../../src/broadcasting.ts","../../src/gpu.ts","../../src/operations/registry.ts","../../src/tensor.ts","../../src/operations/base.ts","../../src/operations/functional.ts","../../src/operations/ops.gen.ts","../../src/creation/index.ts","../../src/nn/ops.gen.ts","../../src/nn/module.ts","../../src/nn/functional.ts","../../src/optim/base.ts","../../src/optim/optimizers.ts"],"sourcesContent":["/**\n * gpu.js\n * http://gpu.rocks/\n *\n * GPU Accelerated JavaScript\n *\n * @version 2.16.0\n * @date Thu Feb 13 2025 11:46:48 GMT-0800 (Pacific Standard Time)\n *\n * @license MIT\n * The MIT License\n *\n * Copyright (c) 2025 gpu.js Team\n */(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GPU = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.acorn = {}));\n})(this, (function (exports) { 'use strict';\n\n  var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n  var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];\n\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0897-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c8a\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7cd\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7dc\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords$1 = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n    return false\n  }\n\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n\n\n\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n\n  var keywords = {};\n\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords[name] = new TokenType(name, options)\n  }\n\n  var types$1 = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    privateId: new TokenType(\"privateId\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    questionDot: new TokenType(\"?.\"),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n    coalesce: binop(\"??\", 1),\n\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code) {\n    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n  }\n\n  function nextLineBreak(code, from, end) {\n    if ( end === void 0 ) end = code.length;\n\n    for (var i = from; i < end; i++) {\n      var next = code.charCodeAt(i);\n      if (isNewLine(next))\n        { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n    }\n    return -1\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n  var hasOwn = Object.hasOwn || (function (obj, propName) { return (\n    hasOwnProperty.call(obj, propName)\n  ); });\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  var regexpCache = Object.create(null);\n\n  function wordsRegexp(words) {\n    return regexpCache[words] || (regexpCache[words] = new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\"))\n  }\n\n  function codePointToString(code) {\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  var loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      var nextBreak = nextLineBreak(input, cur, offset);\n      if (nextBreak < 0) { return new Position(line, offset - cur) }\n      ++line;\n      cur = nextBreak;\n    }\n  }\n\n\n  var defaultOptions = {\n    ecmaVersion: null,\n    sourceType: \"script\",\n    onInsertedSemicolon: null,\n    onTrailingComma: null,\n    allowReserved: null,\n    allowReturnOutsideFunction: false,\n    allowImportExportEverywhere: false,\n    allowAwaitOutsideFunction: null,\n    allowSuperOutsideMethod: null,\n    allowHashBang: false,\n    checkPrivateFields: true,\n    locations: false,\n    onToken: null,\n    onComment: null,\n    ranges: false,\n    program: null,\n    sourceFile: null,\n    directSourceFile: null,\n    preserveParens: false\n  };\n\n\n  var warnedAboutEcmaVersion = false;\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion === \"latest\") {\n      options.ecmaVersion = 1e8;\n    } else if (options.ecmaVersion == null) {\n      if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n        warnedAboutEcmaVersion = true;\n        console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n      }\n      options.ecmaVersion = 11;\n    } else if (options.ecmaVersion >= 2015) {\n      options.ecmaVersion -= 2009;\n    }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (!opts || opts.allowHashBang == null)\n      { options.allowHashBang = options.ecmaVersion >= 14; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128,\n      SCOPE_CLASS_STATIC_BLOCK = 256,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  var\n      BIND_NONE = 0, \n      BIND_VAR = 1, \n      BIND_LEXICAL = 2, \n      BIND_FUNCTION = 3, \n      BIND_SIMPLE_CATCH = 4, \n      BIND_OUTSIDE = 5; \n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    this.containsEsc = false;\n\n\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    this.potentialArrowAt = -1;\n    this.potentialArrowInForAwait = false;\n\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    this.labels = [];\n    this.undefinedExports = Object.create(null);\n\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    this.regexpState = null;\n\n    this.privateNameStack = [];\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\n  prototypeAccessors.canAwait.get = function () {\n    for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n      if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n    }\n    return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n  };\n\n  prototypeAccessors.allowSuper.get = function () {\n    var ref = this.currentThisScope();\n      var flags = ref.flags;\n      var inClassFieldInit = ref.inClassFieldInit;\n    return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n  };\n\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  prototypeAccessors.allowNewDotTarget.get = function () {\n    var ref = this.currentThisScope();\n      var flags = ref.flags;\n      var inClassFieldInit = ref.inClassFieldInit;\n    return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n  };\n\n  prototypeAccessors.inClassStaticBlock.get = function () {\n    return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n  };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp$9 = Parser.prototype;\n\n\n  var literal = /^(?:'((?:\\\\[^]|[^'\\\\])*?)'|\"((?:\\\\[^]|[^\"\\\\])*?)\")/;\n  pp$9.strictDirective = function(start) {\n    if (this.options.ecmaVersion < 5) { return false }\n    for (;;) {\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") {\n        skipWhiteSpace.lastIndex = start + match[0].length;\n        var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n        var next = this.input.charAt(end);\n        return next === \";\" || next === \"}\" ||\n          (lineBreak.test(spaceAfter[0]) &&\n           !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n      }\n      start += match[0].length;\n\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n\n  pp$9.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n\n  pp$9.isContextual = function(name) {\n    return this.type === types$1.name && this.value === name && !this.containsEsc\n  };\n\n\n  pp$9.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n\n  pp$9.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n\n  pp$9.canInsertSemicolon = function() {\n    return this.type === types$1.eof ||\n      this.type === types$1.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp$9.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n\n  pp$9.semicolon = function() {\n    if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp$9.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n\n  pp$9.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n\n  pp$9.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  var DestructuringErrors = function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  };\n\n  pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n  };\n\n  pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp$9.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp$9.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$8 = Parser.prototype;\n\n\n\n  pp$8.parseTopLevel = function(node) {\n    var exports = Object.create(null);\n    if (!node.body) { node.body = []; }\n    while (this.type !== types$1.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$8.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91 || nextCh === 92) { return true } \n    if (context) { return false }\n\n    if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } \n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n      if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  pp$8.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, after;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length ||\n       !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n  };\n\n\n  pp$8.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n\n    switch (starttype) {\n    case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types$1._debugger: return this.parseDebuggerStatement(node)\n    case types$1._do: return this.parseDoStatement(node)\n    case types$1._for: return this.parseForStatement(node)\n    case types$1._function:\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types$1._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types$1._if: return this.parseIfStatement(node)\n    case types$1._return: return this.parseReturnStatement(node)\n    case types$1._switch: return this.parseSwitchStatement(node)\n    case types$1._throw: return this.parseThrowStatement(node)\n    case types$1._try: return this.parseTryStatement(node)\n    case types$1._const: case types$1._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types$1._while: return this.parseWhileStatement(node)\n    case types$1._with: return this.parseWithStatement(node)\n    case types$1.braceL: return this.parseBlock(true, node)\n    case types$1.semi: return this.parseEmptyStatement(node)\n    case types$1._export:\n    case types$1._import:\n      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40 || nextCh === 46) \n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$8.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types$1.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$8.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$8.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types$1.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n\n  pp$8.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types$1.parenL);\n    if (this.type === types$1.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types$1._var || this.type === types$1._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types$1._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n    var containsEsc = this.containsEsc;\n    var refDestructuringErrors = new DestructuringErrors;\n    var initPos = this.start;\n    var init = awaitAt > -1\n      ? this.parseExprSubscripts(refDestructuringErrors, \"await\")\n      : this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (awaitAt > -1) { \n        if (this.type === types$1._in) { this.unexpected(awaitAt); }\n        node.await = true;\n      } else if (isForOf && this.options.ecmaVersion >= 8) {\n        if (init.start === initPos && !containsEsc && init.type === \"Identifier\" && init.name === \"async\") { this.unexpected(); }\n        else if (this.options.ecmaVersion >= 9) { node.await = false; }\n      }\n      if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLValPattern(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$8.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$8.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$8.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types$1.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n\n    var cur;\n    for (var sawDefault = false; this.type !== types$1.braceR;) {\n      if (this.type === types$1._case || this.type === types$1._default) {\n        var isCase = this.type === types$1._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types$1.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); \n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$8.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n\n  var empty$1 = [];\n\n  pp$8.parseCatchClauseParam = function() {\n    var param = this.parseBindingAtom();\n    var simple = param.type === \"Identifier\";\n    this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLValPattern(param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n    this.expect(types$1.parenR);\n\n    return param\n  };\n\n  pp$8.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types$1._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types$1.parenL)) {\n        clause.param = this.parseCatchClauseParam();\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$8.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$8.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$8.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$8.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n\n  pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types$1.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (exitStrict) { this.strict = false; }\n    this.next();\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n\n  pp$8.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types$1.semi);\n    node.test = this.type === types$1.semi ? null : this.parseExpression();\n    this.expect(types$1.semi);\n    node.update = this.type === types$1.parenR ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n\n  pp$8.parseForIn = function(node, init) {\n    var isForIn = this.type === types$1._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n\n  pp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types$1.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (!allowMissingInitializer && kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (!allowMissingInitializer && decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) { break }\n    }\n    return node\n  };\n\n  pp$8.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n\n  pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types$1.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$8.parseFunctionParams = function(node) {\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n\n  pp$8.parseClass = function(node, isStatement) {\n    this.next();\n\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var privateNameMap = this.enterClassBody();\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    while (this.type !== types$1.braceR) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raiseRecoverable(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n          this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n        }\n      }\n    }\n    this.strict = oldStrict;\n    this.next();\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.exitClassBody();\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$8.parseClassElement = function(constructorAllowsSuper) {\n    if (this.eat(types$1.semi)) { return null }\n\n    var ecmaVersion = this.options.ecmaVersion;\n    var node = this.startNode();\n    var keyName = \"\";\n    var isGenerator = false;\n    var isAsync = false;\n    var kind = \"method\";\n    var isStatic = false;\n\n    if (this.eatContextual(\"static\")) {\n      if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(node);\n        return node\n      }\n      if (this.isClassElementNameStart() || this.type === types$1.star) {\n        isStatic = true;\n      } else {\n        keyName = \"static\";\n      }\n    }\n    node.static = isStatic;\n    if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n      if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n        isAsync = true;\n      } else {\n        keyName = \"async\";\n      }\n    }\n    if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n      isGenerator = true;\n    }\n    if (!keyName && !isAsync && !isGenerator) {\n      var lastValue = this.value;\n      if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n        if (this.isClassElementNameStart()) {\n          kind = lastValue;\n        } else {\n          keyName = lastValue;\n        }\n      }\n    }\n\n    if (keyName) {\n      node.computed = false;\n      node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n      node.key.name = keyName;\n      this.finishNode(node.key, \"Identifier\");\n    } else {\n      this.parseClassElementName(node);\n    }\n\n    if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n      var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n      var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n      if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n      node.kind = isConstructor ? \"constructor\" : kind;\n      this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n    } else {\n      this.parseClassField(node);\n    }\n\n    return node\n  };\n\n  pp$8.isClassElementNameStart = function() {\n    return (\n      this.type === types$1.name ||\n      this.type === types$1.privateId ||\n      this.type === types$1.num ||\n      this.type === types$1.string ||\n      this.type === types$1.bracketL ||\n      this.type.keyword\n    )\n  };\n\n  pp$8.parseClassElementName = function(element) {\n    if (this.type === types$1.privateId) {\n      if (this.value === \"constructor\") {\n        this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n      }\n      element.computed = false;\n      element.key = this.parsePrivateIdent();\n    } else {\n      this.parsePropertyName(element);\n    }\n  };\n\n  pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    var key = method.key;\n    if (method.kind === \"constructor\") {\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    } else if (method.static && checkKeyName(method, \"prototype\")) {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n\n    var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n    if (method.kind === \"get\" && value.params.length !== 0)\n      { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && value.params.length !== 1)\n      { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$8.parseClassField = function(field) {\n    if (checkKeyName(field, \"constructor\")) {\n      this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n    } else if (field.static && checkKeyName(field, \"prototype\")) {\n      this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n    }\n\n    if (this.eat(types$1.eq)) {\n      var scope = this.currentThisScope();\n      var inClassFieldInit = scope.inClassFieldInit;\n      scope.inClassFieldInit = true;\n      field.value = this.parseMaybeAssign();\n      scope.inClassFieldInit = inClassFieldInit;\n    } else {\n      field.value = null;\n    }\n    this.semicolon();\n\n    return this.finishNode(field, \"PropertyDefinition\")\n  };\n\n  pp$8.parseClassStaticBlock = function(node) {\n    node.body = [];\n\n    var oldLabels = this.labels;\n    this.labels = [];\n    this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    this.next();\n    this.exitScope();\n    this.labels = oldLabels;\n\n    return this.finishNode(node, \"StaticBlock\")\n  };\n\n  pp$8.parseClassId = function(node, isStatement) {\n    if (this.type === types$1.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$8.parseClassSuper = function(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;\n  };\n\n  pp$8.enterClassBody = function() {\n    var element = {declared: Object.create(null), used: []};\n    this.privateNameStack.push(element);\n    return element.declared\n  };\n\n  pp$8.exitClassBody = function() {\n    var ref = this.privateNameStack.pop();\n    var declared = ref.declared;\n    var used = ref.used;\n    if (!this.options.checkPrivateFields) { return }\n    var len = this.privateNameStack.length;\n    var parent = len === 0 ? null : this.privateNameStack[len - 1];\n    for (var i = 0; i < used.length; ++i) {\n      var id = used[i];\n      if (!hasOwn(declared, id.name)) {\n        if (parent) {\n          parent.used.push(id);\n        } else {\n          this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n        }\n      }\n    }\n  };\n\n  function isPrivateNameConflicted(privateNameMap, element) {\n    var name = element.key.name;\n    var curr = privateNameMap[name];\n\n    var next = \"true\";\n    if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n      next = (element.static ? \"s\" : \"i\") + element.kind;\n    }\n\n    if (\n      curr === \"iget\" && next === \"iset\" ||\n      curr === \"iset\" && next === \"iget\" ||\n      curr === \"sget\" && next === \"sset\" ||\n      curr === \"sset\" && next === \"sget\"\n    ) {\n      privateNameMap[name] = \"true\";\n      return false\n    } else if (!curr) {\n      privateNameMap[name] = next;\n      return false\n    } else {\n      return true\n    }\n  }\n\n  function checkKeyName(node, name) {\n    var computed = node.computed;\n    var key = node.key;\n    return !computed && (\n      key.type === \"Identifier\" && key.name === name ||\n      key.type === \"Literal\" && key.value === name\n    )\n  }\n\n\n  pp$8.parseExportAllDeclaration = function(node, exports) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n        this.checkExport(exports, node.exported, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types$1.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    if (this.options.ecmaVersion >= 16)\n      { node.attributes = this.parseWithClause(); }\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  };\n\n  pp$8.parseExport = function(node, exports) {\n    this.next();\n    if (this.eat(types$1.star)) {\n      return this.parseExportAllDeclaration(node, exports)\n    }\n    if (this.eat(types$1._default)) { \n      this.checkExport(exports, \"default\", this.lastTokStart);\n      node.declaration = this.parseExportDefaultDeclaration();\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseExportDeclaration(node);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { \n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types$1.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n        if (this.options.ecmaVersion >= 16)\n          { node.attributes = this.parseWithClause(); }\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          this.checkLocalExport(spec.local);\n\n          if (spec.local.type === \"Literal\") {\n            this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n          }\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$8.parseExportDeclaration = function(node) {\n    return this.parseStatement(null)\n  };\n\n  pp$8.parseExportDefaultDeclaration = function() {\n    var isAsync;\n    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      return this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync)\n    } else if (this.type === types$1._class) {\n      var cNode = this.startNode();\n      return this.parseClass(cNode, \"nullableID\")\n    } else {\n      var declaration = this.parseMaybeAssign();\n      this.semicolon();\n      return declaration\n    }\n  };\n\n  pp$8.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (typeof name !== \"string\")\n      { name = name.type === \"Identifier\" ? name.name : name.value; }\n    if (hasOwn(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$8.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n  };\n\n  pp$8.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$8.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n\n  pp$8.parseExportSpecifier = function(exports) {\n    var node = this.startNode();\n    node.local = this.parseModuleExportName();\n\n    node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n    this.checkExport(\n      exports,\n      node.exported,\n      node.exported.start\n    );\n\n    return this.finishNode(node, \"ExportSpecifier\")\n  };\n\n  pp$8.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      nodes.push(this.parseExportSpecifier(exports));\n    }\n    return nodes\n  };\n\n\n  pp$8.parseImport = function(node) {\n    this.next();\n\n    if (this.type === types$1.string) {\n      node.specifiers = empty$1;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n    }\n    if (this.options.ecmaVersion >= 16)\n      { node.attributes = this.parseWithClause(); }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n\n  pp$8.parseImportSpecifier = function() {\n    var node = this.startNode();\n    node.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      node.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node.imported);\n      node.local = node.imported;\n    }\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n\n    return this.finishNode(node, \"ImportSpecifier\")\n  };\n\n  pp$8.parseImportDefaultSpecifier = function() {\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    return this.finishNode(node, \"ImportDefaultSpecifier\")\n  };\n\n  pp$8.parseImportNamespaceSpecifier = function() {\n    var node = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    return this.finishNode(node, \"ImportNamespaceSpecifier\")\n  };\n\n  pp$8.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types$1.name) {\n      nodes.push(this.parseImportDefaultSpecifier());\n      if (!this.eat(types$1.comma)) { return nodes }\n    }\n    if (this.type === types$1.star) {\n      nodes.push(this.parseImportNamespaceSpecifier());\n      return nodes\n    }\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      nodes.push(this.parseImportSpecifier());\n    }\n    return nodes\n  };\n\n  pp$8.parseWithClause = function() {\n    var nodes = [];\n    if (!this.eat(types$1._with)) {\n      return nodes\n    }\n    this.expect(types$1.braceL);\n    var attributeKeys = {};\n    var first = true;\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var attr = this.parseImportAttribute();\n      var keyName = attr.key.type === \"Identifier\" ? attr.key.name : attr.key.value;\n      if (hasOwn(attributeKeys, keyName))\n        { this.raiseRecoverable(attr.key.start, \"Duplicate attribute key '\" + keyName + \"'\"); }\n      attributeKeys[keyName] = true;\n      nodes.push(attr);\n    }\n    return nodes\n  };\n\n  pp$8.parseImportAttribute = function() {\n    var node = this.startNode();\n    node.key = this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\");\n    this.expect(types$1.colon);\n    if (this.type !== types$1.string) {\n      this.unexpected();\n    }\n    node.value = this.parseExprAtom();\n    return this.finishNode(node, \"ImportAttribute\")\n  };\n\n  pp$8.parseModuleExportName = function() {\n    if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n      var stringLiteral = this.parseLiteral(this.value);\n      if (loneSurrogate.test(stringLiteral.value)) {\n        this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n      }\n      return stringLiteral\n    }\n    return this.parseIdent(true)\n  };\n\n  pp$8.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$8.isDirectiveCandidate = function(statement) {\n    return (\n      this.options.ecmaVersion >= 5 &&\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$7 = Parser.prototype;\n\n\n  pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"ChainExpression\":\n        this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n\n  pp$7.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n\n  pp$7.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$7.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n\n  pp$7.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types$1.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types$1.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types$1.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types$1.comma); }\n      if (allowEmpty && this.type === types$1.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types$1.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types$1.comma) { this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        elts.push(this.parseAssignableListItem(allowModifiers));\n      }\n    }\n    return elts\n  };\n\n  pp$7.parseAssignableListItem = function(allowModifiers) {\n    var elem = this.parseMaybeDefault(this.start, this.startLoc);\n    this.parseBindingListItem(elem);\n    return elem\n  };\n\n  pp$7.parseBindingListItem = function(param) {\n    return param\n  };\n\n\n  pp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n\n  pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    var isBind = bindingType !== BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (isBind) {\n        if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n          { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n        if (checkClashes) {\n          if (hasOwn(checkClashes, expr.name))\n            { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n          checkClashes[expr.name] = true;\n        }\n        if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      }\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ParenthesizedExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n      return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n    default:\n      this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n  pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.checkLValInnerPattern(prop, bindingType, checkClashes);\n      }\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n      }\n      break\n\n    default:\n      this.checkLValSimple(expr, bindingType, checkClashes);\n    }\n  };\n\n  pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Property\":\n      this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLValPattern(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLValPattern(expr.argument, bindingType, checkClashes);\n      break\n\n    default:\n      this.checkLValPattern(expr, bindingType, checkClashes);\n    }\n  };\n\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.initialContext = function() {\n    return [types.b_stat]\n  };\n\n  pp$6.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n  pp$6.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types.f_expr || parent === types.f_stat)\n      { return true }\n    if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n      { return !parent.isExpr }\n\n    if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n      { return true }\n    if (prevType === types$1.braceL)\n      { return parent === types.b_stat }\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$6.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$6.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types$1.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n\n  pp$6.overrideContext = function(tokenCtx) {\n    if (this.curContext() !== tokenCtx) {\n      this.context[this.context.length - 1] = tokenCtx;\n    }\n  };\n\n\n  types$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types$1.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.dollarBraceL.updateContext = function() {\n    this.context.push(types.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types$1.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n    this.context.push(statementParens ? types.p_stat : types.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.incDec.updateContext = function() {\n  };\n\n  types$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types$1._else &&\n        !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n        !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n      { this.context.push(types.f_expr); }\n    else\n      { this.context.push(types.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types$1.colon.updateContext = function() {\n    if (this.curContext().token === \"function\") { this.context.pop(); }\n    this.exprAllowed = true;\n  };\n\n  types$1.backQuote.updateContext = function() {\n    if (this.curContext() === types.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types$1.star.updateContext = function(prevType) {\n    if (prevType === types$1._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types.f_expr)\n        { this.context[index] = types.f_expr_gen; }\n      else\n        { this.context[index] = types.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types$1.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n\n\n  var pp$5 = Parser.prototype;\n\n\n  pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0) {\n              refDestructuringErrors.doubleProto = key.start;\n            }\n          } else {\n            this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n          }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n\n\n\n  pp$5.parseExpression = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n    if (this.type === types$1.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n\n  pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(forInit) }\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      oldDoubleProto = refDestructuringErrors.doubleProto;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types$1.parenL || this.type === types$1.name) {\n      this.potentialArrowAt = this.start;\n      this.potentialArrowInForAwait = forInit === \"await\";\n    }\n    var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      if (this.type === types$1.eq)\n        { left = this.toAssignable(left, false, refDestructuringErrors); }\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } \n      if (this.type === types$1.eq)\n        { this.checkLValPattern(left); }\n      else\n        { this.checkLValSimple(left); }\n      node.left = left;\n      this.next();\n      node.right = this.parseMaybeAssign(forInit);\n      if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n\n  pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(forInit, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types$1.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign(forInit);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n\n  pp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n  };\n\n\n  pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n    var prec = this.type.binop;\n    if (prec != null && (!forInit || this.type !== types$1._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n        var coalesce = this.type === types$1.coalesce;\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n        if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n          this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n        }\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n      }\n    }\n    return left\n  };\n\n  pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n\n  pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && this.canAwait) {\n      expr = this.parseAwait(forInit);\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types$1.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true, update, forInit);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLValSimple(node.argument); }\n      else if (this.strict && node.operator === \"delete\" && isLocalVariableAccess(node.argument))\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n        { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else if (!sawUnary && this.type === types$1.privateId) {\n      if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }\n      expr = this.parsePrivateIdent();\n      if (this.type !== types$1._in) { this.unexpected(); }\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLValSimple(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!incDec && this.eat(types$1.starstar)) {\n      if (sawUnary)\n        { this.unexpected(this.lastTokStart); }\n      else\n        { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n    } else {\n      return expr\n    }\n  };\n\n  function isLocalVariableAccess(node) {\n    return (\n      node.type === \"Identifier\" ||\n      node.type === \"ParenthesizedExpression\" && isLocalVariableAccess(node.expression)\n    )\n  }\n\n  function isPrivateFieldAccess(node) {\n    return (\n      node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n      node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression) ||\n      node.type === \"ParenthesizedExpression\" && isPrivateFieldAccess(node.expression)\n    )\n  }\n\n\n  pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n      if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n    }\n    return result\n  };\n\n  pp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n        this.potentialArrowAt === base.start;\n    var optionalChained = false;\n\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n      if (element.optional) { optionalChained = true; }\n      if (element === base || element.type === \"ArrowFunctionExpression\") {\n        if (optionalChained) {\n          var chainNode = this.startNodeAt(startPos, startLoc);\n          chainNode.expression = element;\n          element = this.finishNode(chainNode, \"ChainExpression\");\n        }\n        return element\n      }\n\n      base = element;\n    }\n  };\n\n  pp$5.shouldParseAsyncArrow = function() {\n    return !this.canInsertSemicolon() && this.eat(types$1.arrow)\n  };\n\n  pp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n  };\n\n  pp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n    var optionalSupported = this.options.ecmaVersion >= 11;\n    var optional = optionalSupported && this.eat(types$1.questionDot);\n    if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n    var computed = this.eat(types$1.bracketL);\n    if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      if (computed) {\n        node.property = this.parseExpression();\n        this.expect(types$1.bracketR);\n      } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n        node.property = this.parsePrivateIdent();\n      } else {\n        node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n      }\n      node.computed = !!computed;\n      if (optionalSupported) {\n        node.optional = optional;\n      }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types$1.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      if (optionalSupported) {\n        node$1.optional = optional;\n      }\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types$1.backQuote) {\n      if (optional || optionalChained) {\n        this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n      }\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n\n  pp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {\n    if (this.type === types$1.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types$1._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types$1.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types$1._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types$1.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n        this.overrideContext(types.f_expr);\n        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n      }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types$1.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n            (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n        }\n      }\n      return id\n\n    case types$1.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types$1.num: case types$1.string:\n      return this.parseLiteral(this.value)\n\n    case types$1._null: case types$1._true: case types$1._false:\n      node = this.startNode();\n      node.value = this.type === types$1._null ? null : this.type === types$1._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types$1.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types$1.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types$1.braceL:\n      this.overrideContext(types.b_expr);\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types$1._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types$1._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types$1._new:\n      return this.parseNew()\n\n    case types$1.backQuote:\n      return this.parseTemplate()\n\n    case types$1._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport(forNew)\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      return this.parseExprAtomDefault()\n    }\n  };\n\n  pp$5.parseExprAtomDefault = function() {\n    this.unexpected();\n  };\n\n  pp$5.parseExprImport = function(forNew) {\n    var node = this.startNode();\n\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n    this.next();\n\n    if (this.type === types$1.parenL && !forNew) {\n      return this.parseDynamicImport(node)\n    } else if (this.type === types$1.dot) {\n      var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n      meta.name = \"import\";\n      node.meta = this.finishNode(meta, \"Identifier\");\n      return this.parseImportMeta(node)\n    } else {\n      this.unexpected();\n    }\n  };\n\n  pp$5.parseDynamicImport = function(node) {\n    this.next(); \n\n    node.source = this.parseMaybeAssign();\n\n    if (this.options.ecmaVersion >= 16) {\n      if (!this.eat(types$1.parenR)) {\n        this.expect(types$1.comma);\n        if (!this.afterTrailingComma(types$1.parenR)) {\n          node.options = this.parseMaybeAssign();\n          if (!this.eat(types$1.parenR)) {\n            this.expect(types$1.comma);\n            if (!this.afterTrailingComma(types$1.parenR)) {\n              this.unexpected();\n            }\n          }\n        } else {\n          node.options = null;\n        }\n      } else {\n        node.options = null;\n      }\n    } else {\n      if (!this.eat(types$1.parenR)) {\n        var errorPos = this.start;\n        if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n          this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n        } else {\n          this.unexpected(errorPos);\n        }\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$5.parseImportMeta = function(node) {\n    this.next(); \n\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== \"meta\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n    if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n      { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n    return this.finishNode(node, \"MetaProperty\")\n  };\n\n  pp$5.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$5.parseParenExpression = function() {\n    this.expect(types$1.parenL);\n    var val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val\n  };\n\n  pp$5.shouldParseArrow = function(exprList) {\n    return !this.canInsertSemicolon()\n  };\n\n  pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      while (this.type !== types$1.parenR) {\n        first ? first = false : this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types$1.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types$1.comma) {\n            this.raiseRecoverable(\n              this.start,\n              \"Comma is not permitted after the rest element\"\n            );\n          }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n      this.expect(types$1.parenR);\n\n      if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$5.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n  };\n\n\n  var empty = [];\n\n  pp$5.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    this.next();\n    if (this.options.ecmaVersion >= 6 && this.type === types$1.dot) {\n      var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n      meta.name = \"new\";\n      node.meta = this.finishNode(meta, \"Identifier\");\n      this.next();\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\")\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n      if (containsEsc)\n        { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n      if (!this.allowNewDotTarget)\n        { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc;\n    node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);\n    if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n\n  pp$5.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types$1.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value.replace(/\\r\\n?/g, \"\\n\"),\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types$1.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$5.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$5.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n\n  pp$5.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types$1.comma) {\n          this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types$1.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n      this.parsePropertyName(prop);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$5.parseGetterSetter = function(prop) {\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  };\n\n  pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types$1.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.parseGetterSetter(prop);\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else if (this.type === types$1.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else {\n        prop.value = this.copyNode(prop.key);\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$5.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types$1.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types$1.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n\n  pp$5.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n\n  pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n\n  pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n\n  pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n    var isExpression = isArrowFunction && this.type !== types$1.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign(forInit);\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n      node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n  };\n\n  pp$5.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n\n  pp$5.checkParams = function(node, allowDuplicates) {\n    var nameHash = Object.create(null);\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n\n  pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types$1.comma)\n        { elt = null; }\n      else if (this.type === types$1.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$5.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n      { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n    if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n      { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n\n  pp$5.parseIdent = function(liberal) {\n    var node = this.parseIdentNode();\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n  pp$5.parseIdentNode = function() {\n    var node = this.startNode();\n    if (this.type === types$1.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n      this.type = types$1.name;\n    } else {\n      this.unexpected();\n    }\n    return node\n  };\n\n  pp$5.parsePrivateIdent = function() {\n    var node = this.startNode();\n    if (this.type === types$1.privateId) {\n      node.name = this.value;\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    this.finishNode(node, \"PrivateIdentifier\");\n\n    if (this.options.checkPrivateFields) {\n      if (this.privateNameStack.length === 0) {\n        this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n      } else {\n        this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n      }\n    }\n\n    return node\n  };\n\n\n  pp$5.parseYield = function(forInit) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign(forInit);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$5.parseAwait = function(forInit) {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, false, forInit);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$3 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n    this.inClassFieldInit = false;\n  };\n\n\n  pp$3.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$3.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  pp$3.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$3.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$3.checkLocalExport = function(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$3.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$3.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  pp$3.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n\n  var pp$2 = Parser.prototype;\n\n  pp$2.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$2.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$2.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n\n  pp$2.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n  pp$2.copyNode = function(node) {\n    var newNode = new Node(this, node.start, this.startLoc);\n    for (var prop in node) { newNode[prop] = node[prop]; }\n    return newNode\n  };\n\n  var scriptValuesAddedInUnicode = \"Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz\";\n\n\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\n  var ecma13BinaryProperties = ecma12BinaryProperties;\n  var ecma14BinaryProperties = ecma13BinaryProperties;\n\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties,\n    12: ecma12BinaryProperties,\n    13: ecma13BinaryProperties,\n    14: ecma14BinaryProperties\n  };\n\n  var ecma14BinaryPropertiesOfStrings = \"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji\";\n\n  var unicodeBinaryPropertiesOfStrings = {\n    9: \"\",\n    10: \"\",\n    11: \"\",\n    12: \"\",\n    13: \"\",\n    14: ecma14BinaryPropertiesOfStrings\n  };\n\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\n  var ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\n  var ecma14ScriptValues = ecma13ScriptValues + \" \" + scriptValuesAddedInUnicode;\n\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues,\n    12: ecma12ScriptValues,\n    13: ecma13ScriptValues,\n    14: ecma14ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n\n  for (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {\n    var ecmaVersion = list[i];\n\n    buildUnicodeData(ecmaVersion);\n  }\n\n  var pp$1 = Parser.prototype;\n\n  var BranchID = function BranchID(parent, base) {\n    this.parent = parent;\n    this.base = base || this;\n  };\n\n  BranchID.prototype.separatedFrom = function separatedFrom (alt) {\n    for (var self = this; self; self = self.parent) {\n      for (var other = alt; other; other = other.parent) {\n        if (self.base === other.base && self !== other) { return true }\n      }\n    }\n    return false\n  };\n\n  BranchID.prototype.sibling = function sibling () {\n    return new BranchID(this.parent, this.base)\n  };\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\") + (parser.options.ecmaVersion >= 15 ? \"v\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchV = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = Object.create(null);\n    this.backReferenceNames = [];\n    this.branchID = null;\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicodeSets = flags.indexOf(\"v\") !== -1;\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    if (unicodeSets && this.parser.options.ecmaVersion >= 15) {\n      this.switchU = true;\n      this.switchV = true;\n      this.switchN = true;\n    } else {\n      this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n      this.switchV = false;\n      this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n    }\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  RegExpValidationState.prototype.at = function at (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.pos, forceU)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.nextIndex(this.pos, forceU), forceU)\n  };\n\n  RegExpValidationState.prototype.advance = function advance (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    this.pos = this.nextIndex(this.pos, forceU);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    if (this.current(forceU) === ch) {\n      this.advance(forceU);\n      return true\n    }\n    return false\n  };\n\n  RegExpValidationState.prototype.eatChars = function eatChars (chs, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var pos = this.pos;\n    for (var i = 0, list = chs; i < list.length; i += 1) {\n      var ch = list[i];\n\n        var current = this.at(pos, forceU);\n      if (current === -1 || current !== ch) {\n        return false\n      }\n      pos = this.nextIndex(pos, forceU);\n    }\n    this.pos = pos;\n    return true\n  };\n\n  pp$1.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    var u = false;\n    var v = false;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n      if (flag === \"u\") { u = true; }\n      if (flag === \"v\") { v = true; }\n    }\n    if (this.options.ecmaVersion >= 15 && u && v) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n  };\n\n  function hasProp(obj) {\n    for (var _ in obj) { return true }\n    return false\n  }\n\n  pp$1.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    if (!state.switchN && this.options.ecmaVersion >= 9 && hasProp(state.groupNames)) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  pp$1.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames = Object.create(null);\n    state.backReferenceNames.length = 0;\n    state.branchID = null;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      if (state.eat(0x29 )) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D ) || state.eat(0x7D )) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (!state.groupNames[name]) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  pp$1.regexp_disjunction = function(state) {\n    var trackDisjunction = this.options.ecmaVersion >= 16;\n    if (trackDisjunction) { state.branchID = new BranchID(state.branchID, null); }\n    this.regexp_alternative(state);\n    while (state.eat(0x7C )) {\n      if (trackDisjunction) { state.branchID = state.branchID.sibling(); }\n      this.regexp_alternative(state);\n    }\n    if (trackDisjunction) { state.branchID = state.branchID.parent; }\n\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B )) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  pp$1.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}\n  };\n\n  pp$1.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  pp$1.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    if (state.eat(0x5E ) || state.eat(0x24 )) {\n      return true\n    }\n\n    if (state.eat(0x5C )) {\n      if (state.eat(0x42 ) || state.eat(0x62 )) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    if (state.eat(0x28 ) && state.eat(0x3F )) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C );\n      }\n      if (state.eat(0x3D ) || state.eat(0x21 )) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 )) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  pp$1.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F );\n      return true\n    }\n    return false\n  };\n\n  pp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A ) ||\n      state.eat(0x2B ) ||\n      state.eat(0x3F ) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$1.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B )) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C ) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D )) {\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$1.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 )) {\n      if (state.eat(0x3F )) {\n        if (this.options.ecmaVersion >= 16) {\n          var addModifiers = this.regexp_eatModifiers(state);\n          var hasHyphen = state.eat(0x2D );\n          if (addModifiers || hasHyphen) {\n            for (var i = 0; i < addModifiers.length; i++) {\n              var modifier = addModifiers.charAt(i);\n              if (addModifiers.indexOf(modifier, i + 1) > -1) {\n                state.raise(\"Duplicate regular expression modifiers\");\n              }\n            }\n            if (hasHyphen) {\n              var removeModifiers = this.regexp_eatModifiers(state);\n              if (!addModifiers && !removeModifiers && state.current() === 0x3A ) {\n                state.raise(\"Invalid regular expression modifiers\");\n              }\n              for (var i$1 = 0; i$1 < removeModifiers.length; i$1++) {\n                var modifier$1 = removeModifiers.charAt(i$1);\n                if (\n                  removeModifiers.indexOf(modifier$1, i$1 + 1) > -1 ||\n                  addModifiers.indexOf(modifier$1) > -1\n                ) {\n                  state.raise(\"Duplicate regular expression modifiers\");\n                }\n              }\n            }\n          }\n        }\n        if (state.eat(0x3A )) {\n          this.regexp_disjunction(state);\n          if (state.eat(0x29 )) {\n            return true\n          }\n          state.raise(\"Unterminated group\");\n        }\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 )) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F ) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 )) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n  pp$1.regexp_eatModifiers = function(state) {\n    var modifiers = \"\";\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && isRegularExpressionModifier(ch)) {\n      modifiers += codePointToString(ch);\n      state.advance();\n    }\n    return modifiers\n  };\n  function isRegularExpressionModifier(ch) {\n    return ch === 0x69  || ch === 0x6d  || ch === 0x73 \n  }\n\n  pp$1.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  pp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  pp$1.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24  ||\n      ch >= 0x28  && ch <= 0x2B  ||\n      ch === 0x2E  ||\n      ch === 0x3F  ||\n      ch >= 0x5B  && ch <= 0x5E  ||\n      ch >= 0x7B  && ch <= 0x7D \n    )\n  }\n\n  pp$1.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  pp$1.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24  &&\n      !(ch >= 0x28  && ch <= 0x2B ) &&\n      ch !== 0x2E  &&\n      ch !== 0x3F  &&\n      ch !== 0x5B  &&\n      ch !== 0x5E  &&\n      ch !== 0x7C \n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$1.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F )) {\n      if (!this.regexp_eatGroupName(state)) { state.raise(\"Invalid group\"); }\n      var trackDisjunction = this.options.ecmaVersion >= 16;\n      var known = state.groupNames[state.lastStringValue];\n      if (known) {\n        if (trackDisjunction) {\n          for (var i = 0, list = known; i < list.length; i += 1) {\n            var altID = list[i];\n\n            if (!altID.separatedFrom(state.branchID))\n              { state.raise(\"Duplicate capture group name\"); }\n          }\n        } else {\n          state.raise(\"Duplicate capture group name\");\n        }\n      }\n      if (trackDisjunction) {\n        (known || (state.groupNames[state.lastStringValue] = [])).push(state.branchID);\n      } else {\n        state.groupNames[state.lastStringValue] = true;\n      }\n    }\n  };\n\n  pp$1.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C )) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E )) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  pp$1.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$1.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24  || ch === 0x5F \n  }\n\n  pp$1.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24  || ch === 0x5F  || ch === 0x200C  || ch === 0x200D \n  }\n\n  pp$1.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      if (state.current() === 0x63 ) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$1.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B )) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  pp$1.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$1.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 )) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatZero = function(state) {\n    if (state.current() === 0x30  && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$1.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 ) {\n      state.lastIntValue = 0x09; \n      state.advance();\n      return true\n    }\n    if (ch === 0x6E ) {\n      state.lastIntValue = 0x0A; \n      state.advance();\n      return true\n    }\n    if (ch === 0x76 ) {\n      state.lastIntValue = 0x0B; \n      state.advance();\n      return true\n    }\n    if (ch === 0x66 ) {\n      state.lastIntValue = 0x0C; \n      state.advance();\n      return true\n    }\n    if (ch === 0x72 ) {\n      state.lastIntValue = 0x0D; \n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$1.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41  && ch <= 0x5A ) ||\n      (ch >= 0x61  && ch <= 0x7A )\n    )\n  }\n\n  pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n    var start = state.pos;\n    var switchU = forceU || state.switchU;\n\n    if (state.eat(0x75 )) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C ) && state.eat(0x75 ) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        switchU &&\n        state.eat(0x7B ) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D ) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  pp$1.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F )) {\n        state.lastIntValue = 0x2F; \n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63  && (!state.switchN || ch !== 0x6B )) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$1.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31  && ch <= 0x39 ) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n        state.advance();\n      } while ((ch = state.current()) >= 0x30  && ch <= 0x39 )\n      return true\n    }\n    return false\n  };\n\n  var CharSetNone = 0; \n  var CharSetOk = 1; \n  var CharSetString = 2; \n\n  pp$1.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return CharSetOk\n    }\n\n    var negate = false;\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      ((negate = ch === 0x50 ) || ch === 0x70 )\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      var result;\n      if (\n        state.eat(0x7B ) &&\n        (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&\n        state.eat(0x7D )\n      ) {\n        if (negate && result === CharSetString) { state.raise(\"Invalid property name\"); }\n        return result\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return CharSetNone\n  };\n\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64  ||\n      ch === 0x44  ||\n      ch === 0x73  ||\n      ch === 0x53  ||\n      ch === 0x77  ||\n      ch === 0x57 \n    )\n  }\n\n  pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D )) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return CharSetOk\n      }\n    }\n    state.pos = start;\n\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue)\n    }\n    return CharSetNone\n  };\n\n  pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!hasOwn(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n\n  pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }\n    if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }\n    state.raise(\"Invalid property name\");\n  };\n\n  pp$1.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F \n  }\n\n  pp$1.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  pp$1.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B )) {\n      var negate = state.eat(0x5E );\n      var result = this.regexp_classContents(state);\n      if (!state.eat(0x5D ))\n        { state.raise(\"Unterminated character class\"); }\n      if (negate && result === CharSetString)\n        { state.raise(\"Negated character class may contain strings\"); }\n      return true\n    }\n    return false\n  };\n\n  pp$1.regexp_classContents = function(state) {\n    if (state.current() === 0x5D ) { return CharSetOk }\n    if (state.switchV) { return this.regexp_classSetExpression(state) }\n    this.regexp_nonEmptyClassRanges(state);\n    return CharSetOk\n  };\n\n  pp$1.regexp_nonEmptyClassRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D ) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  pp$1.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        var ch$1 = state.current();\n        if (ch$1 === 0x63  || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D ) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$1.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 )) {\n      state.lastIntValue = 0x08; \n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D )) {\n      state.lastIntValue = 0x2D; \n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 )) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  pp$1.regexp_classSetExpression = function(state) {\n    var result = CharSetOk, subResult;\n    if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {\n      if (subResult === CharSetString) { result = CharSetString; }\n      var start = state.pos;\n      while (state.eatChars([0x26, 0x26] )) {\n        if (\n          state.current() !== 0x26  &&\n          (subResult = this.regexp_eatClassSetOperand(state))\n        ) {\n          if (subResult !== CharSetString) { result = CharSetOk; }\n          continue\n        }\n        state.raise(\"Invalid character in character class\");\n      }\n      if (start !== state.pos) { return result }\n      while (state.eatChars([0x2D, 0x2D] )) {\n        if (this.regexp_eatClassSetOperand(state)) { continue }\n        state.raise(\"Invalid character in character class\");\n      }\n      if (start !== state.pos) { return result }\n    } else {\n      state.raise(\"Invalid character in character class\");\n    }\n    for (;;) {\n      if (this.regexp_eatClassSetRange(state)) { continue }\n      subResult = this.regexp_eatClassSetOperand(state);\n      if (!subResult) { return result }\n      if (subResult === CharSetString) { result = CharSetString; }\n    }\n  };\n\n  pp$1.regexp_eatClassSetRange = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatClassSetCharacter(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D ) && this.regexp_eatClassSetCharacter(state)) {\n        var right = state.lastIntValue;\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$1.regexp_eatClassSetOperand = function(state) {\n    if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }\n    return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)\n  };\n\n  pp$1.regexp_eatNestedClass = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5B )) {\n      var negate = state.eat(0x5E );\n      var result = this.regexp_classContents(state);\n      if (state.eat(0x5D )) {\n        if (negate && result === CharSetString) {\n          state.raise(\"Negated character class may contain strings\");\n        }\n        return result\n      }\n      state.pos = start;\n    }\n    if (state.eat(0x5C )) {\n      var result$1 = this.regexp_eatCharacterClassEscape(state);\n      if (result$1) {\n        return result$1\n      }\n      state.pos = start;\n    }\n    return null\n  };\n\n  pp$1.regexp_eatClassStringDisjunction = function(state) {\n    var start = state.pos;\n    if (state.eatChars([0x5C, 0x71] )) {\n      if (state.eat(0x7B )) {\n        var result = this.regexp_classStringDisjunctionContents(state);\n        if (state.eat(0x7D )) {\n          return result\n        }\n      } else {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return null\n  };\n\n  pp$1.regexp_classStringDisjunctionContents = function(state) {\n    var result = this.regexp_classString(state);\n    while (state.eat(0x7C )) {\n      if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }\n    }\n    return result\n  };\n\n  pp$1.regexp_classString = function(state) {\n    var count = 0;\n    while (this.regexp_eatClassSetCharacter(state)) { count++; }\n    return count === 1 ? CharSetOk : CharSetString\n  };\n\n  pp$1.regexp_eatClassSetCharacter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C )) {\n      if (\n        this.regexp_eatCharacterEscape(state) ||\n        this.regexp_eatClassSetReservedPunctuator(state)\n      ) {\n        return true\n      }\n      if (state.eat(0x62 )) {\n        state.lastIntValue = 0x08; \n        return true\n      }\n      state.pos = start;\n      return false\n    }\n    var ch = state.current();\n    if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }\n    if (isClassSetSyntaxCharacter(ch)) { return false }\n    state.advance();\n    state.lastIntValue = ch;\n    return true\n  };\n\n  function isClassSetReservedDoublePunctuatorCharacter(ch) {\n    return (\n      ch === 0x21  ||\n      ch >= 0x23  && ch <= 0x26  ||\n      ch >= 0x2A  && ch <= 0x2C  ||\n      ch === 0x2E  ||\n      ch >= 0x3A  && ch <= 0x40  ||\n      ch === 0x5E  ||\n      ch === 0x60  ||\n      ch === 0x7E \n    )\n  }\n\n  function isClassSetSyntaxCharacter(ch) {\n    return (\n      ch === 0x28  ||\n      ch === 0x29  ||\n      ch === 0x2D  ||\n      ch === 0x2F  ||\n      ch >= 0x5B  && ch <= 0x5D  ||\n      ch >= 0x7B  && ch <= 0x7D \n    )\n  }\n\n  pp$1.regexp_eatClassSetReservedPunctuator = function(state) {\n    var ch = state.current();\n    if (isClassSetReservedPunctuator(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  function isClassSetReservedPunctuator(ch) {\n    return (\n      ch === 0x21  ||\n      ch === 0x23  ||\n      ch === 0x25  ||\n      ch === 0x26  ||\n      ch === 0x2C  ||\n      ch === 0x2D  ||\n      ch >= 0x3A  && ch <= 0x3E  ||\n      ch === 0x40  ||\n      ch === 0x60  ||\n      ch === 0x7E \n    )\n  }\n\n  pp$1.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F ) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$1.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 )) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$1.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x39 \n  }\n\n  pp$1.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30  && ch <= 0x39 ) ||\n      (ch >= 0x41  && ch <= 0x46 ) ||\n      (ch >= 0x61  && ch <= 0x66 )\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41  && ch <= 0x46 ) {\n      return 10 + (ch - 0x41 )\n    }\n    if (ch >= 0x61  && ch <= 0x66 ) {\n      return 10 + (ch - 0x61 )\n    }\n    return ch - 0x30 \n  }\n\n  pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$1.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; \n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x37 \n  }\n\n  pp$1.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n\n  var pp = Parser.prototype;\n\n\n  pp.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  if (typeof Symbol !== \"undefined\")\n    { pp[Symbol.iterator] = function() {\n      var this$1$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1$1.getToken();\n          return {\n            done: token.type === types$1.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n\n\n  pp.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp.readToken = function(code) {\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 )\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xdc00) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n  };\n\n  pp.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n        ++this.curLine;\n        pos = this.lineStart = nextBreak;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n\n  pp.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: \n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: \n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: \n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n\n  pp.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n\n  pp.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { \n      this.pos += 3;\n      return this.finishToken(types$1.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types$1.dot)\n    }\n  };\n\n  pp.readToken_slash = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.slash, 1)\n  };\n\n  pp.readToken_mult_modulo_exp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types$1.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp.readToken_pipe_amp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (this.options.ecmaVersion >= 12) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n  };\n\n  pp.readToken_caret = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.bitwiseXOR, 1)\n  };\n\n  pp.readToken_plus_min = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types$1.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.plusMin, 1)\n  };\n\n  pp.readToken_lt_gt = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n      return this.finishOp(types$1.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types$1.relational, size)\n  };\n\n  pp.readToken_eq_excl = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { \n      this.pos += 2;\n      return this.finishToken(types$1.arrow)\n    }\n    return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n  };\n\n  pp.readToken_question = function() { \n    var ecmaVersion = this.options.ecmaVersion;\n    if (ecmaVersion >= 11) {\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 46) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n      }\n      if (next === 63) {\n        if (ecmaVersion >= 12) {\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\n          if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n        }\n        return this.finishOp(types$1.coalesce, 2)\n      }\n    }\n    return this.finishOp(types$1.question, 1)\n  };\n\n  pp.readToken_numberSign = function() { \n    var ecmaVersion = this.options.ecmaVersion;\n    var code = 35; \n    if (ecmaVersion >= 13) {\n      ++this.pos;\n      code = this.fullCharCodeAtPos();\n      if (isIdentifierStart(code, true) || code === 92 ) {\n        return this.finishToken(types$1.privateId, this.readWord1())\n      }\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.getTokenFromCode = function(code) {\n    switch (code) {\n    case 46: \n      return this.readToken_dot()\n\n    case 40: ++this.pos; return this.finishToken(types$1.parenL)\n    case 41: ++this.pos; return this.finishToken(types$1.parenR)\n    case 59: ++this.pos; return this.finishToken(types$1.semi)\n    case 44: ++this.pos; return this.finishToken(types$1.comma)\n    case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n    case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n    case 123: ++this.pos; return this.finishToken(types$1.braceL)\n    case 125: ++this.pos; return this.finishToken(types$1.braceR)\n    case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n    case 96: \n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types$1.backQuote)\n\n    case 48: \n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } \n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } \n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } \n      }\n\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: \n      return this.readNumber(false)\n\n    case 34: case 39: \n      return this.readString(code)\n\n    case 47: \n      return this.readToken_slash()\n\n    case 37: case 42: \n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: \n      return this.readToken_pipe_amp(code)\n\n    case 94: \n      return this.readToken_caret()\n\n    case 43: case 45: \n      return this.readToken_plus_min(code)\n\n    case 60: case 62: \n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: \n      return this.readToken_eq_excl(code)\n\n    case 63: \n      return this.readToken_question()\n\n    case 126: \n      return this.finishOp(types$1.prefix, 1)\n\n    case 35: \n      return this.readToken_numberSign()\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n    }\n\n    return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n\n  pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n    var start = this.pos, total = 0, lastCode = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n      if (allowSeparators && code === 95) {\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n        if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n        if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n        lastCode = code;\n        continue\n      }\n\n      if (code >= 97) { val = code - 97 + 10; } \n      else if (code >= 65) { val = code - 65 + 10; } \n      else if (code >= 48 && code <= 57) { val = code - 48; } \n      else { val = Infinity; }\n      if (val >= radix) { break }\n      lastCode = code;\n      total = total * radix + val;\n    }\n\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  function stringToNumber(str, isLegacyOctalNumericLiteral) {\n    if (isLegacyOctalNumericLiteral) {\n      return parseInt(str, 8)\n    }\n\n    return parseFloat(str.replace(/_/g, \"\"))\n  }\n\n  function stringToBigInt(str) {\n    if (typeof BigInt !== \"function\") {\n      return null\n    }\n\n    return BigInt(str.replace(/_/g, \"\"))\n  }\n\n  pp.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; \n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val)\n  };\n\n\n  pp.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types$1.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { \n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { \n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } \n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var val = stringToNumber(this.input.slice(start, this.pos), octal);\n    return this.finishToken(types$1.num, val)\n  };\n\n\n  pp.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { \n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  pp.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else if (ch === 0x2028 || ch === 0x2029) {\n        if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n        if (this.options.locations) {\n          this.curLine++;\n          this.lineStart = this.pos;\n        }\n      } else {\n        if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types$1.string, out)\n  };\n\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { \n        if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types$1.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types$1.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types$1.template, out)\n      }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  pp.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") { break }\n      case \"`\":\n        return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      case \"\\r\":\n        if (this.input[this.pos + 1] === \"\\n\") { ++this.pos; }\n      case \"\\n\": case \"\\u2028\": case \"\\u2029\":\n        ++this.curLine;\n        this.lineStart = this.pos + 1;\n        break\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n\n  pp.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" \n    case 114: return \"\\r\" \n    case 120: return String.fromCharCode(this.readHexChar(2)) \n    case 117: return codePointToString(this.readCodePoint()) \n    case 116: return \"\\t\" \n    case 98: return \"\\b\" \n    case 118: return \"\\u000b\" \n    case 102: return \"\\f\" \n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } \n    case 10: \n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (this.strict) {\n        this.invalidStringToken(\n          this.pos - 1,\n          \"Invalid escape sequence\"\n        );\n      }\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n\n  pp.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n\n  pp.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { \n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) \n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n\n  pp.readWord = function() {\n    var word = this.readWord1();\n    var type = types$1.name;\n    if (this.keywords.test(word)) {\n      type = keywords[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n\n\n  var version = \"8.14.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types$1,\n    keywordTypes: keywords,\n    TokContext: TokContext,\n    tokContexts: types,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types;\n  exports.tokTypes = types$1;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n}));\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { \n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); \n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables, onUnrecognizedArgumentLookup } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (!variables.hasOwnProperty(name)) continue;\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    if (onUnrecognizedArgumentLookup) {\n      return onUnrecognizedArgumentLookup(value);\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n\n},{}],4:[function(require,module,exports){\nfunction setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  const mockMethod = () => kernel;\n  const methods = [\n    'setWarnVarUsage',\n    'setArgumentTypes',\n    'setTactic',\n    'setOptimizeFloatMemory',\n    'setDebug',\n    'setLoopMaxIterations',\n    'setConstantTypes',\n    'setFunctions',\n    'setNativeFunctions',\n    'setInjectedNative',\n    'setPipeline',\n    'setPrecision',\n    'setOutputToTexture',\n    'setImmutable',\n    'setStrictIntegers',\n    'setDynamicOutput',\n    'setHardcodeConstants',\n    'setDynamicArguments',\n    'setUseLegacyEncoder',\n    'setWarnVarUsage',\n    'addSubKernel',\n  ];\n  for (let i = 0; i < methods.length; i++) {\n    kernel[methods[i]] = mockMethod;\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  const halfHeight = height / 2 | 0; \n  const bytesPerRow = width * 4;\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n\n},{}],5:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction alias(name, source) {\n  const fnString = source.toString();\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\n  ${ utils.getFunctionBodyFromString(fnString) }\n}`)();\n}\n\nmodule.exports = {\n  alias\n};\n},{\"./utils\":114}],6:[function(require,module,exports){\nconst { FunctionNode } = require('../function-node');\n\nclass CPUFunctionNode extends FunctionNode {\n  astFunction(ast, retArr) {\n\n    if (!this.isRootKernel) {\n      retArr.push('function');\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n\n      retArr.push(') {\\n');\n    }\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    if (!this.isRootKernel) {\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    const type = this.returnType || this.getType(ast.argument);\n\n    if (!this.returnType) {\n      this.returnType = type;\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(this.leadingReturnStatement);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';\\n');\n      retArr.push(this.followingReturnStatement);\n      retArr.push('continue;\\n');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = `);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push('return ');\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    retArr.push(ast.value);\n\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    retArr.push('(');\n    this.astGeneric(ast.left, retArr);\n    retArr.push(ast.operator);\n    this.astGeneric(ast.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    switch (idtNode.name) {\n      case 'Infinity':\n        retArr.push('Infinity');\n        break;\n      default:\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n          retArr.push('constants_' + idtNode.name);\n        } else {\n          retArr.push('user_' + idtNode.name);\n        }\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < initArr.length; i++) {\n        if (initArr[i].includes && initArr[i].includes(',')) {\n          isSafe = false;\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        whileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    retArr.push('if (');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') {\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('} else {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        doWhileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n\n  }\n\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    this.astGeneric(assNode.left, retArr);\n    retArr.push(assNode.operator);\n    this.astGeneric(assNode.right, retArr);\n    return retArr;\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    retArr.push(`${varDecNode.kind} `);\n    const { declarations } = varDecNode;\n    for (let i = 0; i < declarations.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      const declaration = declarations[i];\n      const info = this.getDeclaration(declaration.id);\n      if (!info.valueType) {\n        info.valueType = this.getType(declaration.init);\n      }\n      this.astGeneric(declaration, retArr);\n    }\n    if (!this.isState('in-for-loop-init')) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n\n  }\n\n  astSwitchStatement(ast, retArr) {\n    const { discriminant, cases } = ast;\n    retArr.push('switch (');\n    this.astGeneric(discriminant, retArr);\n    retArr.push(') {\\n');\n    for (let i = 0; i < cases.length; i++) {\n      if (cases[i].test === null) {\n        retArr.push('default:\\n');\n        this.astGeneric(cases[i].consequent, retArr);\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          retArr.push('break;\\n');\n        }\n        continue;\n      }\n      retArr.push('case ');\n      this.astGeneric(cases[i].test, retArr);\n      retArr.push(':\\n');\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('break;\\n');\n      }\n    }\n    retArr.push('\\n}');\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('_this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      signature,\n      type,\n      property,\n      xProperty,\n      yProperty,\n      zProperty,\n      name,\n      origin\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'this.thread.value':\n        retArr.push(`_this.thread.${ name }`);\n        return retArr;\n      case 'this.output.value':\n        switch (name) {\n          case 'x':\n            retArr.push('outputX');\n            break;\n          case 'y':\n            retArr.push('outputY');\n            break;\n          case 'z':\n            retArr.push('outputZ');\n            break;\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }[0]`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }[1]`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }[2]`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }[3]`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n      case 'this.constants.value[]':\n      case 'this.constants.value[][]':\n      case 'this.constants.value[][][]':\n        break;\n      case 'fn()[]':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      case 'fn()[][]':\n        this.astGeneric(mNode.object.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.object.property, retArr);\n        retArr.push(']');\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      default:\n        throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (!mNode.computed) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'HTMLImageArray':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      default:\n        let size;\n        let isInput;\n        if (origin === 'constants') {\n          const constant = this.constants[name];\n          isInput = this.constantTypes[name] === 'Input';\n          size = isInput ? constant.size : null;\n        } else {\n          isInput = this.isInput(name);\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n        }\n        retArr.push(`${ markupName }`);\n        if (zProperty && yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (typeof xProperty !== 'undefined') {\n          retArr.push('[');\n          this.astGeneric(xProperty, retArr);\n          retArr.push(']');\n        }\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (ast.type !== 'CallExpression') {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n    for (let i = 0; i < ast.arguments.length; ++i) {\n      const argument = ast.arguments[i];\n\n      let argumentType = this.getType(argument);\n      if (!targetTypes[i]) {\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\n      }\n\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      this.astGeneric(argument, retArr);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n    const arrLen = arrNode.elements.length;\n    const elements = [];\n    for (let i = 0; i < arrLen; ++i) {\n      const element = [];\n      this.astGeneric(arrNode.elements[i], element);\n      elements.push(element.join(''));\n    }\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`[${elements.join(', ')}]`);\n        break;\n      default:\n        retArr.push(`new Float32Array([${elements.join(', ')}])`);\n    }\n    return retArr;\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    retArr.push('debugger;');\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  CPUFunctionNode\n};\n},{\"../function-node\":10}],7:[function(require,module,exports){\nconst { utils } = require('../../utils');\n\nfunction constantsToString(constants, types) {\n  const results = [];\n  for (const name in types) {\n    if (!types.hasOwnProperty(name)) continue;\n    const type = types[name];\n    const constant = constants[name];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n        results.push(`${name}:${constant}`);\n        break;\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\n        break;\n    }\n  }\n  return `{ ${ results.join() } }`;\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  const header = [];\n  const thisProperties = [];\n  const beforeReturn = [];\n\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n\n  header.push(\n    '  const { context, canvas, constants: incomingConstants } = settings;',\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\n    `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,\n    `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`\n  );\n\n  thisProperties.push(\n    '    constants: _constants,',\n    '    context,',\n    '    output,',\n    '    thread: {x: 0, y: 0, z: 0},'\n  );\n\n  if (cpuKernel.graphical) {\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: (object, name) => {\n        return null;\n      }\n    });\n\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: () => {\n        return null;\n      }\n    });\n\n    thisProperties.push(\n      '    _imageData,',\n      '    _colorData,',\n      `    color: ${colorFn},`\n    );\n\n    beforeReturn.push(\n      `  kernel.getPixels = ${getPixelsFn};`\n    );\n  }\n\n  const constantTypes = [];\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\n  for (let i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: (object, name) => {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n          case 'context':\n            return 'context';\n        }\n      }\n    });\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n    thisProperties.push(`    _imageTo3DArray,`);\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\n      findDependency: (object, name) => {\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n          case 'context':\n            return 'settings.context';\n        }\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n  }\n\n  return `function(settings) {\n${ header.join('\\n') }\n  for (const p in _constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        if (incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\n        }\n        continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = incomingConstants[p];\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${ beforeReturn.join('\\n') }\n  return kernel;\n}`;\n}\n\nmodule.exports = {\n  cpuKernelString\n};\n},{\"../../utils\":114}],8:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { CPUFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst { cpuKernelString } = require('./kernel-string');\n\nclass CPUKernel extends Kernel {\n  static getFeatures() {\n    return this.features;\n  }\n  static get features() {\n    return Object.freeze({\n      kernelMap: true,\n      isIntegerDivisionAccurate: true\n    });\n  }\n  static get isSupported() {\n    return true;\n  }\n  static isContextMatch(context) {\n    return false;\n  }\n  static get mode() {\n    return 'cpu';\n  }\n\n  static nativeFunctionArguments() {\n    return null;\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`Looking up native function return type not supported on ${this.name}`);\n  }\n\n  static combineKernels(combinedKernel) {\n    return combinedKernel;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return 'cpu' + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.mergeSettings(source.settings || settings);\n\n    this._imageData = null;\n    this._colorData = null;\n    this._kernelString = null;\n    this._prependedString = [];\n    this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    this.translatedSources = null;\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    if (!this.canvas) return null;\n    return this.canvas.getContext('2d');\n  }\n\n  initPlugins(settings) {\n    return [];\n  }\n\n  validateSettings(args) {\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n    }\n\n    this.checkOutput();\n  }\n\n  translateSource() {\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n    if (this.subKernels) {\n      const followingReturnStatement = [];\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const {\n          name\n        } = this.subKernels[i];\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\n      }\n      this.followingReturnStatement = followingReturnStatement.join('');\n    }\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.setupConstants();\n    this.setupArguments(arguments);\n    this.validateSettings(arguments);\n    this.translateSource();\n\n    if (this.graphical) {\n      const {\n        canvas,\n        output\n      } = this;\n      if (!canvas) {\n        throw new Error('no canvas available for using graphical output');\n      }\n      const width = output[0];\n      const height = output[1] || 1;\n      canvas.width = width;\n      canvas.height = height;\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n\n    const kernelString = this.getKernelString();\n    this.kernelString = kernelString;\n\n    if (this.debug) {\n      console.log('Function output:');\n      console.log(kernelString);\n    }\n\n    try {\n      this.run = new Function([], kernelString).bind(this)();\n    } catch (e) {\n      console.error('An error occurred compiling the javascript: ', e);\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  color(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = this.output[0];\n    const height = this.output[1];\n\n    const x = this.thread.x;\n    const y = height - this.thread.y - 1;\n\n    const index = x + y * width;\n\n    this._colorData[index * 4 + 0] = r;\n    this._colorData[index * 4 + 1] = g;\n    this._colorData[index * 4 + 2] = b;\n    this._colorData[index * 4 + 3] = a;\n  }\n\n  getKernelString() {\n    if (this._kernelString !== null) return this._kernelString;\n\n    let kernelThreadString = null;\n    let {\n      translatedSources\n    } = this;\n    if (translatedSources.length > 1) {\n      translatedSources = translatedSources.filter(fn => {\n        if (/^function/.test(fn)) return fn;\n        kernelThreadString = fn;\n        return false;\n      });\n    } else {\n      kernelThreadString = translatedSources.shift();\n    }\n    return this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() };\n  ${ this.injectedNative || '' }\n  const _this = this;\n  ${ this._resultKernelHeader() }\n  ${ this._processConstants() }\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\n    ${ this._prependedString.join('') }\n    ${ this._earlyThrows() }\n    ${ this._processArguments() }\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\n  };`;\n  }\n\n  toString() {\n    return cpuKernelString(this);\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${ parseInt(this.loopMaxIterations) };` :\n      ' 1000;'\n    );\n  }\n\n  _processConstants() {\n    if (!this.constants) return '';\n\n    const result = [];\n    for (let p in this.constants) {\n      const type = this.constantTypes[p];\n      switch (type) {\n        case 'HTMLCanvas':\n        case 'OffscreenCanvas':\n        case 'HTMLImage':\n        case 'ImageBitmap':\n        case 'ImageData':\n        case 'HTMLVideo':\n          result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n          break;\n        case 'Input':\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n          break;\n        default:\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\n      }\n    }\n    return result.join('');\n  }\n\n  _earlyThrows() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    const arrayArguments = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      if (this.argumentTypes[i] === 'Array') {\n        arrayArguments.push(this.argumentNames[i]);\n      }\n    }\n    if (arrayArguments.length === 0) return '';\n    const checks = [];\n    for (let i = 0; i < arrayArguments.length; i++) {\n      const argumentName = arrayArguments[i];\n      const checkSubKernels = this._mapSubKernels(subKernel => `user_${argumentName} === result_${subKernel.name}`).join(' || ');\n      checks.push(`user_${argumentName} === result${checkSubKernels ? ` || ${checkSubKernels}` : ''}`);\n    }\n    return `if (${checks.join(' || ')}) throw new Error('Source and destination arrays are the same.  Use immutable = true');`;\n  }\n\n  _processArguments() {\n    const result = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      const variableName = `user_${this.argumentNames[i]}`;\n      switch (this.argumentTypes[i]) {\n        case 'HTMLCanvas':\n        case 'OffscreenCanvas':\n        case 'HTMLImage':\n        case 'ImageBitmap':\n        case 'ImageData':\n        case 'HTMLVideo':\n          result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n          break;\n        case 'Input':\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\n          break;\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n          result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n          break;\n      }\n    }\n    return result.join('');\n  }\n\n  _mediaTo2DArray(media) {\n    const canvas = this.canvas;\n    const width = media.width > 0 ? media.width : media.videoWidth;\n    const height = media.height > 0 ? media.height : media.videoHeight;\n    if (canvas.width < width) {\n      canvas.width = width;\n    }\n    if (canvas.height < height) {\n      canvas.height = height;\n    }\n    const ctx = this.context;\n    let pixelsData;\n    if (media.constructor === ImageData) {\n      pixelsData = media.data;\n    } else {\n      ctx.drawImage(media, 0, 0, width, height);\n      pixelsData = ctx.getImageData(0, 0, width, height).data;\n    }\n    const imageArray = new Array(height);\n    let index = 0;\n    for (let y = height - 1; y >= 0; y--) {\n      const row = imageArray[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        const pixel = new Float32Array(4);\n        pixel[0] = pixelsData[index++] / 255; \n        pixel[1] = pixelsData[index++] / 255; \n        pixel[2] = pixelsData[index++] / 255; \n        pixel[3] = pixelsData[index++] / 255; \n        row[x] = pixel;\n      }\n    }\n    return imageArray;\n  }\n\n  getPixels(flip) {\n    const [width, height] = this.output;\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n  }\n\n  _imageTo3DArray(images) {\n    const imagesArray = new Array(images.length);\n    for (let i = 0; i < images.length; i++) {\n      imagesArray[i] = this._mediaTo2DArray(images[i]);\n    }\n    return imagesArray;\n  }\n\n  _resultKernelHeader() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    switch (this.output.length) {\n      case 1:\n        return this._mutableKernel1DResults();\n      case 2:\n        return this._mutableKernel2DResults();\n      case 3:\n        return this._mutableKernel3DResults();\n    }\n  }\n\n  _resultKernelBody(kernelString) {\n    switch (this.output.length) {\n      case 1:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel1DLoop(kernelString) : this._resultImmutableKernel1DLoop(kernelString)) + this._kernelOutput();\n      case 2:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel2DLoop(kernelString) : this._resultImmutableKernel2DLoop(kernelString)) + this._kernelOutput();\n      case 3:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel3DLoop(kernelString) : this._resultImmutableKernel3DLoop(kernelString)) + this._kernelOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalKernelBody(kernelThreadString) {\n    switch (this.output.length) {\n      case 2:\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalOutput() {\n    return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`\n  }\n\n  _getKernelResultTypeConstructorString() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return 'Float32Array';\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        return 'Array';\n      default:\n        if (this.graphical) {\n          return 'Float32Array';\n        }\n        throw new Error(`unhandled returnType ${ this.returnType }`);\n    }\n  }\n\n  _resultImmutableKernel1DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _mutableKernel1DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }`;\n  }\n\n  _resultMutableKernel1DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _resultImmutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _mutableKernel2DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n    }`;\n  }\n\n  _resultMutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y];\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _graphicalKernel2DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _resultImmutableKernel3DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _mutableKernel3DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n      }\n    }`;\n  }\n\n  _resultMutableKernel3DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z];\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y];\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _kernelOutput() {\n    if (!this.subKernels) {\n      return '\\n    return result;';\n    }\n    return `\\n    return {\n      result: result,\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\n    };`;\n  }\n\n  _mapSubKernels(fn) {\n    return this.subKernels === null ? [''] :\n      this.subKernels.map(fn);\n  }\n\n  destroy(removeCanvasReference) {\n    if (removeCanvasReference) {\n      delete this.canvas;\n    }\n  }\n\n  static destroyContext(context) {}\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n    return json;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    const [width, height] = this.output;\n    if (this.graphical) {\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n  }\n\n  prependString(value) {\n    if (this._kernelString) throw new Error('Kernel already built');\n    this._prependedString.push(value);\n  }\n\n  hasPrependString(value) {\n    return this._prependedString.indexOf(value) > -1;\n  }\n}\n\nmodule.exports = {\n  CPUKernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../kernel\":36,\"./function-node\":6,\"./kernel-string\":7}],9:[function(require,module,exports){\nclass FunctionBuilder {\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n    const {\n      kernelArguments,\n      kernelConstants,\n      argumentNames,\n      argumentSizes,\n      argumentBitRatios,\n      constants,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      nativeFunctions,\n      output,\n      optimizeFloatMemory,\n      precision,\n      plugins,\n      source,\n      subKernels,\n      functions,\n      leadingReturnStatement,\n      followingReturnStatement,\n      dynamicArguments,\n      dynamicOutput,\n    } = kernel;\n\n    const argumentTypes = new Array(kernelArguments.length);\n    const constantTypes = {};\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      argumentTypes[i] = kernelArguments[i].type;\n    }\n\n    for (let i = 0; i < kernelConstants.length; i++) {\n      const kernelConstant = kernelConstants[i];\n      constantTypes[kernelConstant.name] = kernelConstant.type;\n    }\n\n    const needsArgumentType = (functionName, index) => {\n      return functionBuilder.needsArgumentType(functionName, index);\n    };\n\n    const assignArgumentType = (functionName, index, type) => {\n      functionBuilder.assignArgumentType(functionName, index, type);\n    };\n\n    const lookupReturnType = (functionName, ast, requestingNode) => {\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n    };\n\n    const lookupFunctionArgumentTypes = (functionName) => {\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\n    };\n\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n    };\n\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n    };\n\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n    };\n\n    const triggerImplyArgumentBitRatio = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n      functionBuilder.assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex);\n    };\n\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n    };\n\n    const onNestedFunction = (ast, source) => {\n      const argumentNames = [];\n      for (let i = 0; i < ast.params.length; i++) {\n        argumentNames.push(ast.params[i].name);\n      }\n      const nestedFunction = new FunctionNode(source, Object.assign({}, nodeOptions, {\n        returnType: null,\n        ast,\n        name: ast.id.name,\n        argumentNames,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n      }));\n      nestedFunction.traceFunctionAST(ast);\n      functionBuilder.addFunctionNode(nestedFunction);\n    };\n\n    const nodeOptions = Object.assign({\n      isRootKernel: false,\n      onNestedFunction,\n      lookupReturnType,\n      lookupFunctionArgumentTypes,\n      lookupFunctionArgumentName,\n      lookupFunctionArgumentBitRatio,\n      needsArgumentType,\n      assignArgumentType,\n      triggerImplyArgumentType,\n      triggerImplyArgumentBitRatio,\n      onFunctionCall,\n      optimizeFloatMemory,\n      precision,\n      constants,\n      constantTypes,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      output,\n      plugins,\n      dynamicArguments,\n      dynamicOutput,\n    }, extraNodeOptions || {});\n\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\n      isRootKernel: true,\n      name: 'kernel',\n      argumentNames,\n      argumentTypes,\n      argumentSizes,\n      argumentBitRatios,\n      leadingReturnStatement,\n      followingReturnStatement,\n    });\n\n    if (typeof source === 'object' && source.functionNodes) {\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n    }\n\n    const rootNode = new FunctionNode(source, rootNodeOptions);\n\n    let functionNodes = null;\n    if (functions) {\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\n        returnType: fn.returnType,\n        argumentTypes: fn.argumentTypes,\n        output,\n        plugins,\n        constants,\n        constantTypes,\n        constantBitRatios,\n        optimizeFloatMemory,\n        precision,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n        onNestedFunction,\n      }));\n    }\n\n    let subKernelNodes = null;\n    if (subKernels) {\n      subKernelNodes = subKernels.map((subKernel) => {\n        const { name, source } = subKernel;\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\n          name,\n          isSubKernel: true,\n          isRootKernel: false,\n        }));\n      });\n    }\n\n    const functionBuilder = new FunctionBuilder({\n      kernel,\n      rootNode,\n      functionNodes,\n      nativeFunctions,\n      subKernelNodes\n    });\n\n    return functionBuilder;\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (let i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\n        const nativeFunction = this.nativeFunctions[i];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n\n  addFunctionNode(functionNode) {\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\n    this.functionMap[functionNode.name] = functionNode;\n    if (functionNode.isRootKernel) {\n      this.rootNode = functionNode;\n    }\n  }\n\n  traceFunctionCalls(functionName, retList) {\n    functionName = functionName || 'kernel';\n    retList = retList || [];\n\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n      const nativeFunctionIndex = retList.indexOf(functionName);\n      if (nativeFunctionIndex === -1) {\n        retList.push(functionName);\n      } else {\n        const dependantNativeFunctionName = retList.splice(nativeFunctionIndex, 1)[0];\n        retList.push(dependantNativeFunctionName);\n      }\n      return retList;\n    }\n\n    const functionNode = this.functionMap[functionName];\n    if (functionNode) {\n      const functionIndex = retList.indexOf(functionName);\n      if (functionIndex === -1) {\n        retList.push(functionName);\n        functionNode.toString(); \n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n        }\n      } else {\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n        retList.push(dependantFunctionName);\n      }\n    }\n\n    return retList;\n  }\n\n  getPrototypeString(functionName) {\n    return this.getPrototypes(functionName).join('\\n');\n  }\n\n  getPrototypes(functionName) {\n    if (this.rootNode) {\n      this.rootNode.toString();\n    }\n    if (functionName) {\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n    }\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  getStringFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const node = this.functionMap[functionList[i]];\n      if (node) {\n        ret.push(this.functionMap[functionList[i]].toString());\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  getPrototypesFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const functionName = functionList[i];\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n      if (functionIndex > -1) {\n        ret.push(this.nativeFunctions[functionIndex].source);\n        continue;\n      }\n      const node = this.functionMap[functionName];\n      if (node) {\n        ret.push(node.toString());\n      }\n    }\n    return ret;\n  }\n\n  toJSON() {\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n      const nativeIndex = this.nativeFunctions.indexOf(name);\n      if (nativeIndex > -1) {\n        return {\n          name,\n          source: this.nativeFunctions[nativeIndex].source\n        };\n      } else if (this.functionMap[name]) {\n        return this.functionMap[name].toJSON();\n      } else {\n        throw new Error(`function ${ name } not found`);\n      }\n    });\n  }\n\n  fromJSON(jsonFunctionNodes, FunctionNode) {\n    this.functionMap = {};\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\n      const jsonFunctionNode = jsonFunctionNodes[i];\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n    }\n    return this;\n  }\n\n  getString(functionName) {\n    if (functionName) {\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n    }\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  lookupReturnType(functionName, ast, requestingNode) {\n    if (ast.type !== 'CallExpression') {\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\n    }\n    if (this._isNativeFunction(functionName)) {\n      return this._lookupNativeFunctionReturnType(functionName);\n    } else if (this._isFunction(functionName)) {\n      const node = this._getFunction(functionName);\n      if (node.returnType) {\n        return node.returnType;\n      } else {\n        for (let i = 0; i < this.lookupChain.length; i++) {\n          if (this.lookupChain[i].ast === ast) {\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n              const args = ast.arguments;\n              for (let j = 0; j < args.length; j++) {\n                this.lookupChain.push({\n                  name: requestingNode.name,\n                  ast: args[i],\n                  requestingNode\n                });\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\n                this.lookupChain.pop();\n              }\n              return node.returnType = node.getType(node.getJsAST());\n            }\n\n            throw new Error('circlical logic detected!');\n          }\n        }\n        this.lookupChain.push({\n          name: requestingNode.name,\n          ast,\n          requestingNode\n        });\n        const type = node.getType(node.getJsAST());\n        this.lookupChain.pop();\n        return node.returnType = type;\n      }\n    }\n\n    return null;\n  }\n\n  _getFunction(functionName) {\n    if (!this._isFunction(functionName)) {\n      new Error(`Function ${functionName} not found`);\n    }\n    return this.functionMap[functionName];\n  }\n\n  _isFunction(functionName) {\n    return Boolean(this.functionMap[functionName]);\n  }\n\n  _getNativeFunction(functionName) {\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n    }\n    return null;\n  }\n\n  _isNativeFunction(functionName) {\n    return Boolean(this._getNativeFunction(functionName));\n  }\n\n  _lookupNativeFunctionReturnType(functionName) {\n    let nativeFunction = this._getNativeFunction(functionName);\n    if (nativeFunction) {\n      return nativeFunction.returnType;\n    }\n    throw new Error(`Native function ${ functionName } not found`);\n  }\n\n  lookupFunctionArgumentTypes(functionName) {\n    if (this._isNativeFunction(functionName)) {\n      return this._getNativeFunction(functionName).argumentTypes;\n    } else if (this._isFunction(functionName)) {\n      return this._getFunction(functionName).argumentTypes;\n    }\n    return null;\n  }\n\n  lookupFunctionArgumentName(functionName, argumentIndex) {\n    return this._getFunction(functionName).argumentNames[argumentIndex];\n  }\n\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\n    if (!this._isFunction(functionName)) {\n      throw new Error('function not found');\n    }\n    if (this.rootNode.name === functionName) {\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\n      if (i !== -1) {\n        return this.rootNode.argumentBitRatios[i];\n      }\n    }\n    const node = this._getFunction(functionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error('argument not found');\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error('argument bit ratio not found');\n    }\n    return bitRatio;\n  }\n\n  needsArgumentType(functionName, i) {\n    if (!this._isFunction(functionName)) return false;\n    const fnNode = this._getFunction(functionName);\n    return !fnNode.argumentTypes[i];\n  }\n\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\n    if (!this._isFunction(functionName)) return;\n    const fnNode = this._getFunction(functionName);\n    if (!fnNode.argumentTypes[i]) {\n      fnNode.argumentTypes[i] = argumentType;\n    }\n  }\n\n  assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {\n    const node = this._getFunction(functionName);\n    if (this._isNativeFunction(calleeFunctionName)) return null;\n    const calleeNode = this._getFunction(calleeFunctionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error(`Argument ${argumentName} not found in arguments from function ${functionName}`);\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error(`Bit ratio for argument ${argumentName} not found in function ${functionName}`);\n    }\n    if (!calleeNode.argumentBitRatios) {\n      calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.length);\n    }\n    const calleeBitRatio = calleeNode.argumentBitRatios[i];\n    if (typeof calleeBitRatio === 'number') {\n      if (calleeBitRatio !== bitRatio) {\n        throw new Error(`Incompatible bit ratio found at function ${functionName} at argument ${argumentName}`);\n      }\n      return calleeBitRatio;\n    }\n    calleeNode.argumentBitRatios[i] = bitRatio;\n    return bitRatio;\n  }\n\n  trackFunctionCall(functionName, calleeFunctionName, args) {\n    if (!this.functionNodeDependencies[functionName]) {\n      this.functionNodeDependencies[functionName] = new Set();\n      this.functionCalls[functionName] = [];\n    }\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\n    this.functionCalls[functionName].push(args);\n  }\n\n  getKernelResultType() {\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n  }\n\n  getSubKernelResultType(index) {\n    const subKernelNode = this.subKernelNodes[index];\n    let called = false;\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\n      if (functionCall.ast.callee.name === subKernelNode.name) {\n        called = true;\n      }\n    }\n    if (!called) {\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\n    }\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n  }\n\n  getReturnTypes() {\n    const result = {\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\n    };\n    const list = this.traceFunctionCalls(this.rootNode.name);\n    for (let i = 0; i < list.length; i++) {\n      const functionName = list[i];\n      const functionNode = this.functionMap[functionName];\n      result[functionName] = functionNode.getType(functionNode.ast);\n    }\n    return result;\n  }\n}\n\nmodule.exports = {\n  FunctionBuilder\n};\n},{}],10:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { utils } = require('../utils');\nconst { FunctionTracer } = require('./function-tracer');\n\nclass FunctionNode {\n  constructor(source, settings) {\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\n      'kernel' :\n      (settings.name || utils.getFunctionNameFromString(source)) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerImplyArgumentBitRatio = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = (typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null);\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n\n    if (settings) {\n      for (const p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.literalTypes = {};\n\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  validate() {\n    if (typeof this.source !== 'string' && !this.ast) {\n      throw new Error('this.source not a string');\n    }\n\n    if (!this.ast && !utils.isFunctionString(this.source)) {\n      throw new Error('this.source not a function string');\n    }\n\n    if (!this.name) {\n      throw new Error('this.name could not be set');\n    }\n\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\n    }\n\n    if (this.output.length < 1) {\n      throw new Error('this.output is not big enough');\n    }\n  }\n\n  isIdentifierConstant(name) {\n    if (!this.constants) return false;\n    return this.constants.hasOwnProperty(name);\n  }\n\n  isInput(argumentName) {\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.state !== state) {\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\n    }\n    this.states.pop();\n  }\n\n  isState(state) {\n    return this.state === state;\n  }\n\n  get state() {\n    return this.states[this.states.length - 1];\n  }\n\n  astMemberExpressionUnroll(ast) {\n    if (ast.type === 'Identifier') {\n      return ast.name;\n    } else if (ast.type === 'ThisExpression') {\n      return 'this';\n    }\n\n    if (ast.type === 'MemberExpression') {\n      if (ast.object && ast.property) {\n        if (ast.object.hasOwnProperty('name') && ast.object.name !== 'Math') {\n          return this.astMemberExpressionUnroll(ast.property);\n        }\n\n        return (\n          this.astMemberExpressionUnroll(ast.object) +\n          '.' +\n          this.astMemberExpressionUnroll(ast.property)\n        );\n      }\n    }\n\n    if (ast.hasOwnProperty('expressions')) {\n      const firstExpression = ast.expressions[0];\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\n      }\n    }\n\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n  }\n\n  getJsAST(inParser) {\n    if (this.ast) {\n      return this.ast;\n    }\n    if (typeof this.source === 'object') {\n      this.traceFunctionAST(this.source);\n      return this.ast = this.source;\n    }\n\n    inParser = inParser || acorn;\n    if (inParser === null) {\n      throw new Error('Missing JS to AST parser');\n    }\n\n    const ast = Object.freeze(inParser.parse(`const parser_${ this.name } = ${ this.source };`, {\n      locations: true\n    }));\n    const functionAST = ast.body[0].declarations[0].init;\n    this.traceFunctionAST(functionAST);\n\n    if (!ast) {\n      throw new Error('Failed to parse JS code');\n    }\n\n    return this.ast = functionAST;\n  }\n\n  traceFunctionAST(ast) {\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\n    this.contexts = contexts;\n    this.identifiers = identifiers;\n    this.functionCalls = functionCalls;\n    this.functions = functions;\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const { ast, inForLoopInit, inForLoopTest } = declaration;\n      const { init } = ast;\n      const dependencies = this.getDependencies(init);\n      let valueType = null;\n\n      if (inForLoopInit && inForLoopTest) {\n        valueType = 'Integer';\n      } else {\n        if (init) {\n          const realType = this.getType(init);\n          switch (realType) {\n            case 'Integer':\n            case 'Float':\n            case 'Number':\n              if (init.type === 'MemberExpression') {\n                valueType = realType;\n              } else {\n                valueType = 'Number';\n              }\n              break;\n            case 'LiteralInteger':\n              valueType = 'Number';\n              break;\n            default:\n              valueType = realType;\n          }\n        }\n      }\n      declaration.valueType = valueType;\n      declaration.dependencies = dependencies;\n      declaration.isSafe = this.isSafeDependencies(dependencies);\n    }\n\n    for (let i = 0; i < functions.length; i++) {\n      this.onNestedFunction(functions[i], this.source);\n    }\n  }\n\n  getDeclaration(ast) {\n    for (let i = 0; i < this.identifiers.length; i++) {\n      const identifier = this.identifiers[i];\n      if (ast === identifier.ast) {\n        return identifier.declaration;\n      }\n    }\n    return null;\n  }\n\n  getVariableType(ast) {\n    if (ast.type !== 'Identifier') {\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n    }\n    let type = null;\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\n    if (argumentIndex === -1) {\n      const declaration = this.getDeclaration(ast);\n      if (declaration) {\n        return declaration.valueType;\n      }\n    } else {\n      const argumentType = this.argumentTypes[argumentIndex];\n      if (argumentType) {\n        type = argumentType;\n      }\n    }\n    if (!type && this.strictTypingChecking) {\n      throw new Error(`Declaration of ${name} not found`);\n    }\n    return type;\n  }\n\n  getLookupType(type) {\n    if (!typeLookupMap.hasOwnProperty(type)) {\n      throw new Error(`unknown typeLookupMap ${ type }`);\n    }\n    return typeLookupMap[type];\n  }\n\n  getConstantType(constantName) {\n    if (this.constantTypes[constantName]) {\n      const type = this.constantTypes[constantName];\n      if (type === 'Float') {\n        return 'Number';\n      } else {\n        return type;\n      }\n    }\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\n  }\n\n  toString() {\n    if (this._string) return this._string;\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n  }\n\n  toJSON() {\n    const settings = {\n      source: this.source,\n      name: this.name,\n      constants: this.constants,\n      constantTypes: this.constantTypes,\n      isRootKernel: this.isRootKernel,\n      isSubKernel: this.isSubKernel,\n      debug: this.debug,\n      output: this.output,\n      loopMaxIterations: this.loopMaxIterations,\n      argumentNames: this.argumentNames,\n      argumentTypes: this.argumentTypes,\n      argumentSizes: this.argumentSizes,\n      returnType: this.returnType,\n      leadingReturnStatement: this.leadingReturnStatement,\n      followingReturnStatement: this.followingReturnStatement,\n    };\n\n    return {\n      ast: this.ast,\n      settings\n    };\n  }\n\n  getType(ast) {\n    if (Array.isArray(ast)) {\n      return this.getType(ast[ast.length - 1]);\n    }\n    switch (ast.type) {\n      case 'BlockStatement':\n        return this.getType(ast.body);\n      case 'ArrayExpression':\n        const childType = this.getType(ast.elements[0]);\n        switch (childType) {\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            return `Matrix(${ast.elements.length})`;\n        }\n        return `Array(${ ast.elements.length })`;\n      case 'Literal':\n        const literalKey = this.astKey(ast);\n        if (this.literalTypes[literalKey]) {\n          return this.literalTypes[literalKey];\n        }\n        if (Number.isInteger(ast.value)) {\n          return 'LiteralInteger';\n        } else if (ast.value === true || ast.value === false) {\n          return 'Boolean';\n        } else {\n          return 'Number';\n        }\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            if (this.getVariableSignature(ast.callee, true) === 'this.color') {\n              return null;\n            }\n            if (ast.callee.type === 'MemberExpression' && ast.callee.object && ast.callee.property && ast.callee.property.name && ast.arguments) {\n              const functionName = ast.callee.property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n          if (ast.callee && ast.callee.name) {\n            const functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n            return this.lookupReturnType(functionName, ast, this);\n          }\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n        case 'LogicalExpression':\n          return 'Boolean';\n        case 'BinaryExpression':\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n              case '>':\n              case '<':\n                return 'Boolean';\n              case '&':\n              case '|':\n              case '^':\n              case '<<':\n              case '>>':\n              case '>>>':\n                return 'Integer';\n          }\n          const type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n          if (type === 'LiteralInteger') {\n            const rightType = this.getType(ast.right);\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n            return rightType;\n          }\n          return typeLookupMap[type] || type;\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n          return this.getType(ast.argument);\n        case 'VariableDeclaration': {\n          const declarations = ast.declarations;\n          let lastType;\n          for (let i = 0; i < declarations.length; i++) {\n            const declaration = declarations[i];\n            lastType = this.getType(declaration);\n          }\n          if (!lastType) {\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n          }\n          return lastType;\n        }\n        case 'VariableDeclarator':\n          const declaration = this.getDeclaration(ast.id);\n          if (!declaration) {\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n          }\n\n          return declaration.valueType;\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const signature = this.getVariableSignature(ast);\n            if (signature === 'value') {\n              return this.getCheckVariableType(ast);\n            }\n          }\n          const origin = this.findIdentifierOrigin(ast);\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n          return null;\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n              case 'floor':\n                return 'Integer';\n              case 'round':\n                return 'Integer';\n            }\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const variableSignature = this.getVariableSignature(ast);\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getCheckVariableType(ast.object));\n              case 'value[][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object));\n              case 'value[][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object));\n              case 'value[][][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object.object));\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n              case 'fn()[]':\n              case 'fn()[][]':\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n                switch (ast.property.name) {\n                  case 'r':\n                  case 'g':\n                  case 'b':\n                  case 'a':\n                    return this.getLookupType(this.getCheckVariableType(ast.object));\n                }\n                case '[][]':\n                  return 'Number';\n            }\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          const lastReturn = this.findLastReturn(ast.body);\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n          return null;\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n        case 'SequenceExpression':\n          return this.getType(ast.expressions[ast.expressions.length - 1]);\n        default:\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n    }\n  }\n\n  getCheckVariableType(ast) {\n    const type = this.getVariableType(ast);\n    if (!type) {\n      throw this.astErrorOutput(`${ast.type} is not defined`, ast);\n    }\n    return type;\n  }\n\n  inferArgumentTypesIfNeeded(functionName, args) {\n    for (let i = 0; i < args.length; i++) {\n      if (!this.needsArgumentType(functionName, i)) continue;\n      const type = this.getType(args[i]);\n      if (!type) {\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n      }\n      this.assignArgumentType(functionName, i, type);\n    }\n  }\n\n  isAstMathVariable(ast) {\n    const mathProperties = [\n      'E',\n      'PI',\n      'SQRT2',\n      'SQRT1_2',\n      'LN2',\n      'LN10',\n      'LOG2E',\n      'LOG10E',\n    ];\n    return ast.type === 'MemberExpression' &&\n      ast.object && ast.object.type === 'Identifier' &&\n      ast.object.name === 'Math' &&\n      ast.property &&\n      ast.property.type === 'Identifier' &&\n      mathProperties.indexOf(ast.property.name) > -1;\n  }\n\n  isAstMathFunction(ast) {\n    const mathFunctions = [\n      'abs',\n      'acos',\n      'acosh',\n      'asin',\n      'asinh',\n      'atan',\n      'atan2',\n      'atanh',\n      'cbrt',\n      'ceil',\n      'clz32',\n      'cos',\n      'cosh',\n      'expm1',\n      'exp',\n      'floor',\n      'fround',\n      'imul',\n      'log',\n      'log2',\n      'log10',\n      'log1p',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sinh',\n      'sqrt',\n      'tan',\n      'tanh',\n      'trunc',\n    ];\n    return ast.type === 'CallExpression' &&\n      ast.callee &&\n      ast.callee.type === 'MemberExpression' &&\n      ast.callee.object &&\n      ast.callee.object.type === 'Identifier' &&\n      ast.callee.object.name === 'Math' &&\n      ast.callee.property &&\n      ast.callee.property.type === 'Identifier' &&\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\n  }\n\n  isAstVariable(ast) {\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n  }\n\n  isSafe(ast) {\n    return this.isSafeDependencies(this.getDependencies(ast));\n  }\n\n  isSafeDependencies(dependencies) {\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n  }\n\n  getDependencies(ast, dependencies, isNotSafe) {\n    if (!dependencies) {\n      dependencies = [];\n    }\n    if (!ast) return null;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.getDependencies(ast[i], dependencies, isNotSafe);\n      }\n      return dependencies;\n    }\n    switch (ast.type) {\n      case 'AssignmentExpression':\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'ConditionalExpression':\n        this.getDependencies(ast.test, dependencies, isNotSafe);\n        this.getDependencies(ast.alternate, dependencies, isNotSafe);\n        this.getDependencies(ast.consequent, dependencies, isNotSafe);\n        return dependencies;\n      case 'Literal':\n        dependencies.push({\n          origin: 'literal',\n          value: ast.value,\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n        });\n        break;\n      case 'VariableDeclarator':\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\n      case 'Identifier':\n        const declaration = this.getDeclaration(ast);\n        if (declaration) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'declaration',\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\n          });\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'argument',\n            isSafe: false,\n          });\n        } else if (this.strictTypingChecking) {\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n        }\n        break;\n      case 'FunctionDeclaration':\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n      case 'ReturnStatement':\n        return this.getDependencies(ast.argument, dependencies);\n      case 'BinaryExpression':\n      case 'LogicalExpression':\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\n      case 'VariableDeclaration':\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n      case 'ArrayExpression':\n        dependencies.push({\n          origin: 'declaration',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'CallExpression':\n        dependencies.push({\n          origin: 'function',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'MemberExpression':\n        const details = this.getMemberExpressionDetails(ast);\n        switch (details.signature) {\n          case 'value[]':\n            this.getDependencies(ast.object, dependencies, isNotSafe);\n            break;\n          case 'value[][]':\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\n            break;\n          case 'value[][][]':\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n            break;\n          case 'this.output.value':\n            if (this.dynamicOutput) {\n              dependencies.push({\n                name: details.name,\n                origin: 'output',\n                isSafe: false,\n              });\n            }\n            break;\n        }\n        if (details) {\n          if (details.property) {\n            this.getDependencies(details.property, dependencies, isNotSafe);\n          }\n          if (details.xProperty) {\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\n          }\n          if (details.yProperty) {\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\n          }\n          if (details.zProperty) {\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\n          }\n          return dependencies;\n        }\n        case 'SequenceExpression':\n          return this.getDependencies(ast.expressions, dependencies, isNotSafe);\n        default:\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\n    }\n    return dependencies;\n  }\n\n  getVariableSignature(ast, returnRawValue) {\n    if (!this.isAstVariable(ast)) {\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\n    }\n    if (ast.type === 'Identifier') {\n      return 'value';\n    }\n    const signature = [];\n    while (true) {\n      if (!ast) break;\n      if (ast.computed) {\n        signature.push('[]');\n      } else if (ast.type === 'ThisExpression') {\n        signature.unshift('this');\n      } else if (ast.property && ast.property.name) {\n        if (\n          ast.property.name === 'x' ||\n          ast.property.name === 'y' ||\n          ast.property.name === 'z'\n        ) {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        } else if (\n          ast.property.name === 'constants' ||\n          ast.property.name === 'thread' ||\n          ast.property.name === 'output'\n        ) {\n          signature.unshift('.' + ast.property.name);\n        } else {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        }\n      } else if (ast.name) {\n        signature.unshift(returnRawValue ? ast.name : 'value');\n      } else if (ast.callee && ast.callee.name) {\n        signature.unshift(returnRawValue ? ast.callee.name + '()' : 'fn()');\n      } else if (ast.elements) {\n        signature.unshift('[]');\n      } else {\n        signature.unshift('unknown');\n      }\n      ast = ast.object;\n    }\n\n    const signatureString = signature.join('');\n    if (returnRawValue) {\n      return signatureString;\n    }\n\n    const allowedExpressions = [\n      'value',\n      'value[]',\n      'value[][]',\n      'value[][][]',\n      'value[][][][]',\n      'value.value',\n      'value.thread.value',\n      'this.thread.value',\n      'this.output.value',\n      'this.constants.value',\n      'this.constants.value[]',\n      'this.constants.value[][]',\n      'this.constants.value[][][]',\n      'this.constants.value[][][][]',\n      'fn()[]',\n      'fn()[][]',\n      'fn()[][][]',\n      '[][]',\n    ];\n    if (allowedExpressions.indexOf(signatureString) > -1) {\n      return signatureString;\n    }\n    return null;\n  }\n\n  build() {\n    return this.toString().length > 0;\n  }\n\n  astGeneric(ast, retArr) {\n    if (ast === null) {\n      throw this.astErrorOutput('NULL ast', ast);\n    } else {\n      if (Array.isArray(ast)) {\n        for (let i = 0; i < ast.length; i++) {\n          this.astGeneric(ast[i], retArr);\n        }\n        return retArr;\n      }\n\n      switch (ast.type) {\n        case 'FunctionDeclaration':\n          return this.astFunctionDeclaration(ast, retArr);\n        case 'FunctionExpression':\n          return this.astFunctionExpression(ast, retArr);\n        case 'ReturnStatement':\n          return this.astReturnStatement(ast, retArr);\n        case 'Literal':\n          return this.astLiteral(ast, retArr);\n        case 'BinaryExpression':\n          return this.astBinaryExpression(ast, retArr);\n        case 'Identifier':\n          return this.astIdentifierExpression(ast, retArr);\n        case 'AssignmentExpression':\n          return this.astAssignmentExpression(ast, retArr);\n        case 'ExpressionStatement':\n          return this.astExpressionStatement(ast, retArr);\n        case 'EmptyStatement':\n          return this.astEmptyStatement(ast, retArr);\n        case 'BlockStatement':\n          return this.astBlockStatement(ast, retArr);\n        case 'IfStatement':\n          return this.astIfStatement(ast, retArr);\n        case 'SwitchStatement':\n          return this.astSwitchStatement(ast, retArr);\n        case 'BreakStatement':\n          return this.astBreakStatement(ast, retArr);\n        case 'ContinueStatement':\n          return this.astContinueStatement(ast, retArr);\n        case 'ForStatement':\n          return this.astForStatement(ast, retArr);\n        case 'WhileStatement':\n          return this.astWhileStatement(ast, retArr);\n        case 'DoWhileStatement':\n          return this.astDoWhileStatement(ast, retArr);\n        case 'VariableDeclaration':\n          return this.astVariableDeclaration(ast, retArr);\n        case 'VariableDeclarator':\n          return this.astVariableDeclarator(ast, retArr);\n        case 'ThisExpression':\n          return this.astThisExpression(ast, retArr);\n        case 'SequenceExpression':\n          return this.astSequenceExpression(ast, retArr);\n        case 'UnaryExpression':\n          return this.astUnaryExpression(ast, retArr);\n        case 'UpdateExpression':\n          return this.astUpdateExpression(ast, retArr);\n        case 'LogicalExpression':\n          return this.astLogicalExpression(ast, retArr);\n        case 'MemberExpression':\n          return this.astMemberExpression(ast, retArr);\n        case 'CallExpression':\n          return this.astCallExpression(ast, retArr);\n        case 'ArrayExpression':\n          return this.astArrayExpression(ast, retArr);\n        case 'DebuggerStatement':\n          return this.astDebuggerStatement(ast, retArr);\n        case 'ConditionalExpression':\n          return this.astConditionalExpression(ast, retArr);\n      }\n\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n    }\n  }\n  astErrorOutput(error, ast) {\n    if (typeof this.source !== 'string') {\n      return new Error(error);\n    }\n\n    const debugString = utils.getAstString(this.source, ast);\n    const leadingSource = this.source.substr(ast.start);\n    const splitLines = leadingSource.split(/\\n/);\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    return retArr;\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\n  }\n\n  astFunctionDeclaration(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  astFunctionExpression(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  isChildFunction(ast) {\n    for (let i = 0; i < this.functions.length; i++) {\n      if (this.functions[i] === ast) {\n        return true;\n      }\n    }\n    return false;\n  }\n  astReturnStatement(ast, retArr) {\n    return retArr;\n  }\n  astLiteral(ast, retArr) {\n    this.literalTypes[this.astKey(ast)] = 'Number';\n    return retArr;\n  }\n  astBinaryExpression(ast, retArr) {\n    return retArr;\n  }\n  astIdentifierExpression(ast, retArr) {\n    return retArr;\n  }\n  astAssignmentExpression(ast, retArr) {\n    return retArr;\n  }\n  astExpressionStatement(esNode, retArr) {\n    this.astGeneric(esNode.expression, retArr);\n    retArr.push(';');\n    return retArr;\n  }\n  astEmptyStatement(eNode, retArr) {\n    return retArr;\n  }\n  astBlockStatement(ast, retArr) {\n    return retArr;\n  }\n  astIfStatement(ast, retArr) {\n    return retArr;\n  }\n  astSwitchStatement(ast, retArr) {\n    return retArr;\n  }\n  astBreakStatement(brNode, retArr) {\n    retArr.push('break;');\n    return retArr;\n  }\n  astContinueStatement(crNode, retArr) {\n    retArr.push('continue;\\n');\n    return retArr;\n  }\n  astForStatement(ast, retArr) {\n    return retArr;\n  }\n  astWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astDoWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astVariableDeclarator(iVarDecNode, retArr) {\n    this.astGeneric(iVarDecNode.id, retArr);\n    if (iVarDecNode.init !== null) {\n      retArr.push('=');\n      this.astGeneric(iVarDecNode.init, retArr);\n    }\n    return retArr;\n  }\n  astThisExpression(ast, retArr) {\n    return retArr;\n  }\n  astSequenceExpression(sNode, retArr) {\n    const { expressions } = sNode;\n    const sequenceResult = [];\n    for (let i = 0; i < expressions.length; i++) {\n      const expression = expressions[i];\n      const expressionResult = [];\n      this.astGeneric(expression, expressionResult);\n      sequenceResult.push(expressionResult.join(''));\n    }\n    if (sequenceResult.length > 1) {\n      retArr.push('(', sequenceResult.join(','), ')');\n    } else {\n      retArr.push(sequenceResult[0]);\n    }\n    return retArr;\n  }\n  astUnaryExpression(uNode, retArr) {\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n    if (unaryResult) {\n      return retArr;\n    }\n\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n\n  astUpdateExpression(uNode, retArr) {\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n  astLogicalExpression(logNode, retArr) {\n    retArr.push('(');\n    this.astGeneric(logNode.left, retArr);\n    retArr.push(logNode.operator);\n    this.astGeneric(logNode.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n  astMemberExpression(ast, retArr) {\n    return retArr;\n  }\n  astCallExpression(ast, retArr) {\n    return retArr;\n  }\n  astArrayExpression(ast, retArr) {\n    return retArr;\n  }\n\n  getMemberExpressionDetails(ast) {\n    if (ast.type !== 'MemberExpression') {\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\n    }\n    let name = null;\n    let type = null;\n    const variableSignature = this.getVariableSignature(ast);\n    switch (variableSignature) {\n      case 'value':\n        return null;\n      case 'value.thread.value':\n      case 'this.thread.value':\n      case 'this.output.value':\n        return {\n          signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n        };\n      case 'value[]':\n        if (typeof ast.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n        };\n      case 'value[][]':\n        if (typeof ast.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][]':\n        if (typeof ast.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][][]':\n        if (typeof ast.object.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value.value':\n        if (typeof ast.property.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        if (this.isAstMathVariable(ast)) {\n          name = ast.property.name;\n          return {\n            name,\n            origin: 'Math',\n            type: 'Number',\n            signature: variableSignature,\n          };\n        }\n        switch (ast.property.name) {\n          case 'r':\n          case 'g':\n          case 'b':\n          case 'a':\n            name = ast.object.name;\n            return {\n              name,\n              property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n            };\n          default:\n            throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n          };\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n              xProperty: ast.property,\n          };\n        case 'this.constants.value[][]': {\n          if (typeof ast.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'this.constants.value[][][]': {\n          if (typeof ast.object.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'fn()[]':\n        case 'fn()[][]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n              property: ast.property,\n          };\n        default:\n          throw this.astErrorOutput('Unexpected expression', ast);\n    }\n  }\n\n  findIdentifierOrigin(astToFind) {\n    const stack = [this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack[0];\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n        return atNode;\n      }\n      stack.shift();\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      }\n    }\n    return null;\n  }\n\n  findLastReturn(ast) {\n    const stack = [ast || this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack.pop();\n      if (atNode.type === 'ReturnStatement') {\n        return atNode;\n      }\n      if (atNode.type === 'FunctionDeclaration') {\n        continue;\n      }\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      } else if (atNode.consequent) {\n        stack.push(atNode.consequent);\n      } else if (atNode.cases) {\n        stack.push(atNode.cases);\n      }\n    }\n    return null;\n  }\n\n  getInternalVariableName(name) {\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\n      this._internalVariableNames[name] = 0;\n    }\n    this._internalVariableNames[name]++;\n    if (this._internalVariableNames[name] === 1) {\n      return name;\n    }\n    return name + this._internalVariableNames[name];\n  }\n\n  astKey(ast, separator = ',') {\n    if (!ast.start || !ast.end) throw new Error('AST start and end needed');\n    return `${ast.start}${separator}${ast.end}`;\n  }\n}\n\nconst typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Matrix(2)': 'Number',\n  'Matrix(3)': 'Number',\n  'Matrix(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLCanvas': 'Array(4)',\n  'OffscreenCanvas': 'Array(4)',\n  'HTMLImage': 'Array(4)',\n  'ImageBitmap': 'Array(4)',\n  'ImageData': 'Array(4)',\n  'HTMLVideo': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)',\n};\n\nmodule.exports = {\n  FunctionNode\n};\n},{\"../utils\":114,\"./function-tracer\":11,\"acorn\":1}],11:[function(require,module,exports){\nconst { utils } = require('../utils');\n\nfunction last(array) {\n  return array.length > 0 ? array[array.length - 1] : null;\n}\n\nconst states = {\n  trackIdentifiers: 'trackIdentifiers',\n  memberExpression: 'memberExpression',\n  inForLoopInit: 'inForLoopInit'\n};\n\nclass FunctionTracer {\n  constructor(ast) {\n    this.runningContexts = [];\n    this.functionContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.trackedIdentifiers = null;\n    this.states = [];\n    this.newFunctionContext();\n    this.scan(ast);\n  }\n\n  isState(state) {\n    return this.states[this.states.length - 1] === state;\n  }\n\n  hasState(state) {\n    return this.states.indexOf(state) > -1;\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.isState(state)) {\n      this.states.pop();\n    } else {\n      throw new Error(`Cannot pop the non-active state \"${state}\"`);\n    }\n  }\n\n  get currentFunctionContext() {\n    return last(this.functionContexts);\n  }\n\n  get currentContext() {\n    return last(this.runningContexts);\n  }\n\n  newFunctionContext() {\n    const newContext = { '@contextType': 'function' };\n    this.contexts.push(newContext);\n    this.functionContexts.push(newContext);\n  }\n\n  newContext(run) {\n    const newContext = Object.assign({ '@contextType': 'const/let' }, this.currentContext);\n    this.contexts.push(newContext);\n    this.runningContexts.push(newContext);\n    run();\n    const { currentFunctionContext } = this;\n    for (const p in currentFunctionContext) {\n      if (!currentFunctionContext.hasOwnProperty(p) || newContext.hasOwnProperty(p)) continue;\n      newContext[p] = currentFunctionContext[p];\n    }\n    this.runningContexts.pop();\n    return newContext;\n  }\n\n  useFunctionContext(run) {\n    const functionContext = last(this.functionContexts);\n    this.runningContexts.push(functionContext);\n    run();\n    this.runningContexts.pop();\n  }\n\n  getIdentifiers(run) {\n    const trackedIdentifiers = this.trackedIdentifiers = [];\n    this.pushState(states.trackIdentifiers);\n    run();\n    this.trackedIdentifiers = null;\n    this.popState(states.trackIdentifiers);\n    return trackedIdentifiers;\n  }\n\n  getDeclaration(name) {\n    const { currentContext, currentFunctionContext, runningContexts } = this;\n    const declaration = currentContext[name] || currentFunctionContext[name] || null;\n\n    if (\n      !declaration &&\n      currentContext === currentFunctionContext &&\n      runningContexts.length > 0\n    ) {\n      const previousRunningContext = runningContexts[runningContexts.length - 2];\n      if (previousRunningContext[name]) {\n        return previousRunningContext[name];\n      }\n    }\n\n    return declaration;\n  }\n\n  scan(ast) {\n    if (!ast) return;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.scan(ast[i]);\n      }\n      return;\n    }\n    switch (ast.type) {\n      case 'Program':\n        this.useFunctionContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'BlockStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'AssignmentExpression':\n      case 'LogicalExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'BinaryExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'UpdateExpression':\n        if (ast.operator === '++') {\n          const declaration = this.getDeclaration(ast.argument.name);\n          if (declaration) {\n            declaration.suggestedType = 'Integer';\n          }\n        }\n        this.scan(ast.argument);\n        break;\n      case 'UnaryExpression':\n        this.scan(ast.argument);\n        break;\n      case 'VariableDeclaration':\n        if (ast.kind === 'var') {\n          this.useFunctionContext(() => {\n            ast.declarations = utils.normalizeDeclarations(ast);\n            this.scan(ast.declarations);\n          });\n        } else {\n          ast.declarations = utils.normalizeDeclarations(ast);\n          this.scan(ast.declarations);\n        }\n        break;\n      case 'VariableDeclarator': {\n        const { currentContext } = this;\n        const inForLoopInit = this.hasState(states.inForLoopInit);\n        const declaration = {\n          ast: ast,\n          context: currentContext,\n          name: ast.id.name,\n          origin: 'declaration',\n          inForLoopInit,\n          inForLoopTest: null,\n          assignable: currentContext === this.currentFunctionContext || (!inForLoopInit && !currentContext.hasOwnProperty(ast.id.name)),\n          suggestedType: null,\n          valueType: null,\n          dependencies: null,\n          isSafe: null,\n        };\n        if (!currentContext[ast.id.name]) {\n          currentContext[ast.id.name] = declaration;\n        }\n        this.declarations.push(declaration);\n        this.scan(ast.id);\n        this.scan(ast.init);\n        break;\n      }\n      case 'FunctionExpression':\n      case 'FunctionDeclaration':\n        if (this.runningContexts.length === 0) {\n          this.scan(ast.body);\n        } else {\n          this.functions.push(ast);\n        }\n        break;\n      case 'IfStatement':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        if (ast.alternate) this.scan(ast.alternate);\n        break;\n      case 'ForStatement': {\n        let testIdentifiers;\n        const context = this.newContext(() => {\n          this.pushState(states.inForLoopInit);\n          this.scan(ast.init);\n          this.popState(states.inForLoopInit);\n\n          testIdentifiers = this.getIdentifiers(() => {\n            this.scan(ast.test);\n          });\n\n          this.scan(ast.update);\n          this.newContext(() => {\n            this.scan(ast.body);\n          });\n        });\n\n        if (testIdentifiers) {\n          for (const p in context) {\n            if (p === '@contextType') continue;\n            if (testIdentifiers.indexOf(p) > -1) {\n              context[p].inForLoopTest = true;\n            }\n          }\n        }\n        break;\n      }\n      case 'DoWhileStatement':\n      case 'WhileStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n          this.scan(ast.test);\n        });\n        break;\n      case 'Identifier': {\n        if (this.isState(states.trackIdentifiers)) {\n          this.trackedIdentifiers.push(ast.name);\n        }\n        this.identifiers.push({\n          context: this.currentContext,\n          declaration: this.getDeclaration(ast.name),\n          ast,\n        });\n        break;\n      }\n      case 'ReturnStatement':\n        this.returnStatements.push(ast);\n        this.scan(ast.argument);\n        break;\n      case 'MemberExpression':\n        this.pushState(states.memberExpression);\n        this.scan(ast.object);\n        this.scan(ast.property);\n        this.popState(states.memberExpression);\n        break;\n      case 'ExpressionStatement':\n        this.scan(ast.expression);\n        break;\n      case 'SequenceExpression':\n        this.scan(ast.expressions);\n        break;\n      case 'CallExpression':\n        this.functionCalls.push({\n          context: this.currentContext,\n          ast,\n        });\n        this.scan(ast.arguments);\n        break;\n      case 'ArrayExpression':\n        this.scan(ast.elements);\n        break;\n      case 'ConditionalExpression':\n        this.scan(ast.test);\n        this.scan(ast.alternate);\n        this.scan(ast.consequent);\n        break;\n      case 'SwitchStatement':\n        this.scan(ast.discriminant);\n        this.scan(ast.cases);\n        break;\n      case 'SwitchCase':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        break;\n\n      case 'ThisExpression':\n      case 'Literal':\n      case 'DebuggerStatement':\n      case 'EmptyStatement':\n      case 'BreakStatement':\n      case 'ContinueStatement':\n        break;\n      default:\n        throw new Error(`unhandled type \"${ast.type}\"`);\n    }\n  }\n}\n\nmodule.exports = {\n  FunctionTracer,\n};\n},{\"../utils\":114}],12:[function(require,module,exports){\nconst { glWiretap } = require('gl-wiretap');\nconst { utils } = require('../../utils');\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString()\n    .replace('=>', '')\n    .replace(/^function /, '')\n    .replace(/utils[.]/g, '/*utils.*/');\n}\n\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  if (!originKernel.built) {\n    originKernel.build.apply(originKernel, args);\n  }\n  args = args ? Array.from(args).map(arg => {\n    switch (typeof arg) {\n      case 'boolean':\n        return new Boolean(arg);\n      case 'number':\n        return new Number(arg);\n      default:\n        return arg;\n    }\n  }) : null;\n  const uploadedValues = [];\n  const postResult = [];\n  const context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: (targetName) => {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n          subKernelsResultVariableSetup = true;\n        } else {\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n        }\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n        return;\n      }\n      if (targetName) {\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n      } else {\n        postResult.push(`    return null;`);\n      }\n    },\n    onUnrecognizedArgumentLookup: (argument) => {\n      const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);\n      if (argumentName) {\n        return argumentName;\n      }\n      const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context, uploadedValues);\n      if (constantName) {\n        return constantName;\n      }\n      return null;\n    }\n  });\n  let subKernelsResultVariableSetup = false;\n  let subKernelsResultIndex = 0;\n  const {\n    source,\n    canvas,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    kernelArguments,\n    kernelConstants,\n    tactic,\n  } = originKernel;\n  const kernel = new Kernel(source, {\n    canvas,\n    context,\n    checkContext: false,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    tactic,\n  });\n  let result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\n    switch (kernelArgument.type) {\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLCanvas':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'HTMLImageArray':\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          const arg = args[i];\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n        }\n        break;\n      case 'Input':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\n        break;\n      default:\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\n    );\n  }\n  result.push('/** end of injected functions **/');\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n  context.setIndent(4);\n  kernel.run.apply(kernel, args);\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n  result.push('    /** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(kernelArgument => {\n    result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\n  });\n  result.push('    /** end setup uploads for kernel values **/');\n  result.push(context.toString());\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    const framebufferName = context.getContextVariableName(kernel.framebuffer);\n    if (kernel.renderKernels) {\n      const results = kernel.renderKernels();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n      result: {\n        texture: ${ textureName },\n        type: '${ results.result.type }',\n        toArray: ${ getToArrayString(results.result, textureName, framebufferName) }\n      },`);\n      const { subKernels, mappedTextures } = kernel;\n      for (let i = 0; i < subKernels.length; i++) {\n        const texture = mappedTextures[i];\n        const subKernel = subKernels[i];\n        const subKernelResult = results[subKernel.property];\n        const subKernelTextureName = context.getContextVariableName(texture.texture);\n        result.push(`\n      ${subKernel.property}: {\n        texture: ${ subKernelTextureName },\n        type: '${ subKernelResult.type }',\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName, framebufferName) }\n      },`);\n      }\n      result.push(`    };`);\n    } else {\n      const rendered = kernel.renderOutput();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n        texture: ${ textureName },\n        type: '${ rendered.type }',\n        toArray: ${ getToArrayString(rendered, textureName, framebufferName) }\n      };`);\n    }\n  }\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(`  innerKernel.getPixels = getPixels;`);\n  }\n  result.push('  return innerKernel;');\n\n  let constantsUpload = [];\n  kernelConstants.forEach((kernelConstant) => {\n    constantsUpload.push(`${kernelConstant.getStringValueHandler()}`);\n  });\n  return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n}\n\nfunction getRenderString(targetName, kernel) {\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n  if (kernel.output[2]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n  }\n  if (kernel.output[1]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n  }\n\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n}\n\nfunction getGetPixelsString(kernel) {\n  const getPixels = kernel.getPixels.toString();\n  const useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      }\n      return null;\n    },\n    thisLookup: (property) => {\n      if (property === 'context') {\n        return null;\n      }\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName, framebufferName) {\n  const toArray = kernelResult.toArray.toString();\n  const useFunctionKeyword = !/^function/.test(toArray);\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      } else if (object === 'this') {\n        if (name === 'framebuffer') {\n          return '';\n        }\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: (property, isDeclaration) => {\n      if (property === 'texture') {\n        return textureName;\n      }\n      if (property === 'context') {\n        if (isDeclaration) return null;\n        return 'gl';\n      }\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n  return `() => {\n  function framebuffer() { return ${framebufferName}; };\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n}\n\nfunction findKernelValue(argument, kernelValues, values, context, uploadedValues) {\n  if (argument === null) return null;\n  if (kernelValues === null) return null;\n  switch (typeof argument) {\n    case 'boolean':\n    case 'number':\n      return null;\n  }\n  if (\n    typeof HTMLImageElement !== 'undefined' &&\n    argument instanceof HTMLImageElement\n  ) {\n    for (let i = 0; i < kernelValues.length; i++) {\n      const kernelValue = kernelValues[i];\n      if (kernelValue.type !== 'HTMLImageArray' && kernelValue) continue;\n      if (kernelValue.uploadValue !== argument) continue;\n      const variableIndex = values[i].indexOf(argument);\n      if (variableIndex === -1) continue;\n      const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\n      context.insertVariable(variableName, argument);\n      return variableName;\n    }\n  }\n\n  for (let i = 0; i < kernelValues.length; i++) {\n    const kernelValue = kernelValues[i];\n    if (argument !== kernelValue.uploadValue) continue;\n    const variable = `uploadValue_${kernelValue.name}`;\n    context.insertVariable(variable, kernelValue);\n    return variable;\n  }\n  return null;\n}\n\nmodule.exports = {\n  glKernelString\n};\n},{\"../../utils\":114,\"gl-wiretap\":3}],13:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { utils } = require('../../utils');\nconst { GLTextureArray2Float } = require('./texture/array-2-float');\nconst { GLTextureArray2Float2D } = require('./texture/array-2-float-2d');\nconst { GLTextureArray2Float3D } = require('./texture/array-2-float-3d');\nconst { GLTextureArray3Float } = require('./texture/array-3-float');\nconst { GLTextureArray3Float2D } = require('./texture/array-3-float-2d');\nconst { GLTextureArray3Float3D } = require('./texture/array-3-float-3d');\nconst { GLTextureArray4Float } = require('./texture/array-4-float');\nconst { GLTextureArray4Float2D } = require('./texture/array-4-float-2d');\nconst { GLTextureArray4Float3D } = require('./texture/array-4-float-3d');\nconst { GLTextureFloat } = require('./texture/float');\nconst { GLTextureFloat2D } = require('./texture/float-2d');\nconst { GLTextureFloat3D } = require('./texture/float-3d');\nconst { GLTextureMemoryOptimized } = require('./texture/memory-optimized');\nconst { GLTextureMemoryOptimized2D } = require('./texture/memory-optimized-2d');\nconst { GLTextureMemoryOptimized3D } = require('./texture/memory-optimized-3d');\nconst { GLTextureUnsigned } = require('./texture/unsigned');\nconst { GLTextureUnsigned2D } = require('./texture/unsigned-2d');\nconst { GLTextureUnsigned3D } = require('./texture/unsigned-3d');\nconst { GLTextureGraphical } = require('./texture/graphical');\n\nclass GLKernel extends Kernel {\n  static get mode() {\n    return 'gpu';\n  }\n\n  static getIsFloatRead() {\n    const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n    const kernel = new this(kernelString, {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [1],\n      precision: 'single',\n      returnType: 'Number',\n      tactic: 'speed',\n    });\n    kernel.build();\n    kernel.run();\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 1;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    function kernelFunction(v1, v2) {\n      return v1[this.thread.x] / v2[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [2],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [6, 6030401],\n      [3, 3991]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 2 && result[1] === 1511;\n  }\n\n  static getIsSpeedTacticSupported() {\n    function kernelFunction(value) {\n      return value[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [4],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [0, 1, 2, 3]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return Math.round(result[0]) === 0 && Math.round(result[1]) === 1 && Math.round(result[2]) === 2 && Math.round(result[3]) === 3;\n  }\n\n  static get testCanvas() {\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\n  }\n\n  static get testContext() {\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static setupFeatureChecks() {\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return kernel.getVariablePrecisionString() + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  setFixIntegerDivisionAccuracy(fix) {\n    this.fixIntegerDivisionAccuracy = fix;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setFloatTextures(flag) {\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n    this.floatTextures = flag;\n    return this;\n  }\n\n  static nativeFunctionArguments(source) {\n    const argumentTypes = [];\n    const argumentNames = [];\n    const states = [];\n    const isStartingVariableName = /^[a-zA-Z_]/;\n    const isVariableChar = /[a-zA-Z_0-9]/;\n    let i = 0;\n    let argumentName = null;\n    let argumentType = null;\n    while (i < source.length) {\n      const char = source[i];\n      const nextChar = source[i + 1];\n      const state = states.length > 0 ? states[states.length - 1] : null;\n\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n        states.push('MULTI_LINE_COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n        states.pop();\n        i += 2;\n        continue;\n      }\n\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n        states.push('COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'COMMENT' && char === '\\n') {\n        states.pop();\n        i++;\n        continue;\n      }\n\n      else if (state === null && char === '(') {\n        states.push('FUNCTION_ARGUMENTS');\n        i++;\n        continue;\n      } else if (state === 'FUNCTION_ARGUMENTS') {\n        if (char === ')') {\n          states.pop();\n          break;\n        }\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'float';\n          argumentName = '';\n          i += 6;\n          continue;\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'int';\n          argumentName = '';\n          i += 4;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec2';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec3';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec4';\n          argumentName = '';\n          i += 5;\n          continue;\n        }\n      }\n\n      else if (state === 'DECLARE_VARIABLE') {\n        if (argumentName === '') {\n          if (char === ' ') {\n            i++;\n            continue;\n          }\n          if (!isStartingVariableName.test(char)) {\n            throw new Error('variable name is not expected string');\n          }\n        }\n        argumentName += char;\n        if (!isVariableChar.test(nextChar)) {\n          states.pop();\n          argumentNames.push(argumentName);\n          argumentTypes.push(typeMap[argumentType]);\n        }\n      }\n\n      i++;\n    }\n    if (states.length > 0) {\n      throw new Error('GLSL function was not parsable');\n    }\n    return {\n      argumentNames,\n      argumentTypes,\n    };\n  }\n\n  static nativeFunctionReturnType(source) {\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n  }\n\n  static combineKernels(combinedKernel, lastKernel) {\n    combinedKernel.apply(null, arguments);\n    const {\n      texSize,\n      context,\n      threadDim\n    } = lastKernel.texSize;\n    let result;\n    if (lastKernel.precision === 'single') {\n      const w = texSize[0];\n      const h = Math.ceil(texSize[1] / 4);\n      result = new Float32Array(w * h * 4 * 4);\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n    } else {\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n      result = new Float32Array(bytes.buffer);\n    }\n\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n    if (lastKernel.output.length === 1) {\n      return result;\n    } else if (lastKernel.output.length === 2) {\n      return utils.splitArray(result, lastKernel.output[0]);\n    } else if (lastKernel.output.length === 3) {\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n      return cube.map(function(x) {\n        return utils.splitArray(x, lastKernel.output[0]);\n      });\n    }\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.transferValues = null;\n    this.formatValues = null;\n    this.TextureConstructor = null;\n    this.renderOutput = null;\n    this.renderRawOutput = null;\n    this.texSize = null;\n    this.translatedSource = null;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n    this.switchingKernels = null;\n    this._textureSwitched = null;\n    this._mappedTextureSwitched = null;\n  }\n\n  checkTextureSize() {\n    const { features } = this.constructor;\n    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\n      throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\n    }\n  }\n\n  translateSource() {\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n  }\n\n  pickRenderStrategy(args) {\n    if (this.graphical) {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = (pixels) => pixels;\n      this.TextureConstructor = GLTextureGraphical;\n      return null;\n    }\n    if (this.precision === 'unsigned') {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = this.readPackedPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      } else {\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            this.renderOutput = this.renderValues;\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.formatValues = utils.erect3DPackedFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.formatValues = utils.erect2DPackedFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.formatValues = utils.erectPackedFloat;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      }\n    } else if (this.precision === 'single') {\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n      this.transferValues = this.readFloatPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.optimizeFloatMemory) {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                return null;\n              }\n            } else {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                return null;\n              }\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              return null;\n            }\n          }\n        }\n      }\n      this.renderOutput = this.renderValues;\n      if (this.subKernels !== null) {\n        this.renderKernels = this.renderKernelsToArrays;\n      }\n      if (this.optimizeFloatMemory) {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureMemoryOptimized;\n              this.formatValues = utils.erectMemoryOptimizedFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      } else {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureFloat3D;\n              this.formatValues = utils.erect3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureFloat2D;\n              this.formatValues = utils.erect2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureFloat;\n              this.formatValues = utils.erectFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      }\n    } else {\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\n    }\n\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\n  }\n\n  getKernelString() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultTexture() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Integer':\n      case 'Number':\n        return this.getMainResultNumberTexture();\n      case 'Array(2)':\n        return this.getMainResultArray2Texture();\n      case 'Array(3)':\n        return this.getMainResultArray3Texture();\n      case 'Array(4)':\n        return this.getMainResultArray4Texture();\n      default:\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultGraphical() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultMemoryOptimizedFloats() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultPackedPixels() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultString() {\n    if (this.graphical) {\n      return this.getMainResultGraphical();\n    } else if (this.precision === 'single') {\n      if (this.optimizeFloatMemory) {\n        return this.getMainResultMemoryOptimizedFloats();\n      }\n      return this.getMainResultTexture();\n    } else {\n      return this.getMainResultPackedPixels();\n    }\n  }\n\n  getMainResultNumberTexture() {\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\n  }\n\n  getMainResultArray2Texture() {\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\n  }\n\n  getMainResultArray3Texture() {\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\n  }\n\n  getMainResultArray4Texture() {\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\n  }\n\n  getFloatTacticDeclaration() {\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    return `precision ${variablePrecision} float;\\n`;\n  }\n\n  getIntTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic, true)} int;\\n`;\n  }\n\n  getSampler2DTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\\n`;\n  }\n\n  getSampler2DArrayTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DArray;\\n`;\n  }\n\n  renderTexture() {\n    return this.immutable ? this.texture.clone() : this.texture;\n  }\n  readPackedPixelsToUint8Array() {\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n\n  readPackedPixelsToFloat32Array() {\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n  }\n\n  readFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  getPixels(flip) {\n    const {\n      context: gl,\n      output\n    } = this;\n    const [width, height] = output;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n  }\n\n  renderKernelsToArrays() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = this.mappedTextures[i].toArray();\n    }\n    return result;\n  }\n\n  renderKernelsToTextures() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    if (this.immutable) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i].clone();\n      }\n    } else {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i];\n      }\n    }\n    return result;\n  }\n\n  resetSwitchingKernels() {\n    const existingValue = this.switchingKernels;\n    this.switchingKernels = null;\n    return existingValue;\n  }\n\n  setOutput(output) {\n    const newOutput = this.toKernelOutput(output);\n    if (this.program) {\n      if (!this.dynamicOutput) {\n        throw new Error('Resizing a kernel with dynamicOutput: false is not possible');\n      }\n      const newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];\n      const newTexSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, newThreadDim);\n      const oldTexSize = this.texSize;\n      if (oldTexSize) {\n        const oldPrecision = this.getVariablePrecisionString(oldTexSize, this.tactic);\n        const newPrecision = this.getVariablePrecisionString(newTexSize, this.tactic);\n        if (oldPrecision !== newPrecision) {\n          if (this.debug) {\n            console.warn('Precision requirement changed, asking GPU instance to recompile');\n          }\n          this.switchKernels({\n            type: 'outputPrecisionMismatch',\n            precision: newPrecision,\n            needed: output\n          });\n          return;\n        }\n      }\n      this.output = newOutput;\n      this.threadDim = newThreadDim;\n      this.texSize = newTexSize;\n      const { context: gl } = this;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      this.updateMaxTexSize();\n      this.framebuffer.width = this.texSize[0];\n      this.framebuffer.height = this.texSize[1];\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      this.canvas.width = this.maxTexSize[0];\n      this.canvas.height = this.maxTexSize[1];\n      if (this.texture) {\n        this.texture.delete();\n      }\n      this.texture = null;\n      this._setupOutputTexture();\n      if (this.mappedTextures && this.mappedTextures.length > 0) {\n        for (let i = 0; i < this.mappedTextures.length; i++) {\n          this.mappedTextures[i].delete();\n        }\n        this.mappedTextures = null;\n        this._setupSubOutputTextures();\n      }\n    } else {\n      this.output = newOutput;\n    }\n    return this;\n  }\n  renderValues() {\n    return this.formatValues(\n      this.transferValues(),\n      this.output[0],\n      this.output[1],\n      this.output[2]\n    );\n  }\n  switchKernels(reason) {\n    if (this.switchingKernels) {\n      this.switchingKernels.push(reason);\n    } else {\n      this.switchingKernels = [reason];\n    }\n  }\n  getVariablePrecisionString(textureSize = this.texSize, tactic = this.tactic, isInt = false) {\n    if (!tactic) {\n      if (!this.constructor.features.isSpeedTacticSupported) return 'highp';\n      const low = this.constructor.features[isInt ? 'lowIntPrecision' : 'lowFloatPrecision'];\n      const medium = this.constructor.features[isInt ? 'mediumIntPrecision' : 'mediumFloatPrecision'];\n      const high = this.constructor.features[isInt ? 'highIntPrecision' : 'highFloatPrecision'];\n      const requiredSize = Math.log2(textureSize[0] * textureSize[1]);\n      if (requiredSize <= low.rangeMax) {\n        return 'lowp';\n      } else if (requiredSize <= medium.rangeMax) {\n        return 'mediump';\n      } else if (requiredSize <= high.rangeMax) {\n        return 'highp';\n      } else {\n        throw new Error(`The required size exceeds that of the ability of your system`);\n      }\n    }\n    switch (tactic) {\n      case 'speed':\n        return 'lowp';\n      case 'balanced':\n        return 'mediump';\n      case 'precision':\n        return 'highp';\n      default:\n        throw new Error(`Unknown tactic \"${tactic}\" use \"speed\", \"balanced\", \"precision\", or empty for auto`);\n    }\n  }\n\n  updateTextureArgumentRefs(kernelValue, arg) {\n    if (!this.immutable) return;\n    if (this.texture.texture === arg.texture) {\n      const { prevArg } = kernelValue;\n      if (prevArg) {\n        if (prevArg.texture._refs === 1) {\n          this.texture.delete();\n          this.texture = prevArg.clone();\n          this._textureSwitched = true;\n        }\n        prevArg.delete();\n      }\n      kernelValue.prevArg = arg.clone();\n    } else if (this.mappedTextures && this.mappedTextures.length > 0) {\n      const { mappedTextures } = this;\n      for (let i = 0; i < mappedTextures.length; i++) {\n        const mappedTexture = mappedTextures[i];\n        if (mappedTexture.texture === arg.texture) {\n          const { prevArg } = kernelValue;\n          if (prevArg) {\n            if (prevArg.texture._refs === 1) {\n              mappedTexture.delete();\n              mappedTextures[i] = prevArg.clone();\n              this._mappedTextureSwitched[i] = true;\n            }\n            prevArg.delete();\n          }\n          kernelValue.prevArg = arg.clone();\n          return;\n        }\n      }\n    }\n  }\n\n  onActivate(previousKernel) {\n    this._textureSwitched = true;\n    this.texture = previousKernel.texture;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        this._mappedTextureSwitched[i] = true;\n      }\n      this.mappedTextures = previousKernel.mappedTextures;\n    }\n  }\n\n  initCanvas() {}\n}\n\nconst typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)',\n};\n\nmodule.exports = {\n  GLKernel\n};\n},{\"../../utils\":114,\"../kernel\":36,\"./texture/array-2-float\":16,\"./texture/array-2-float-2d\":14,\"./texture/array-2-float-3d\":15,\"./texture/array-3-float\":19,\"./texture/array-3-float-2d\":17,\"./texture/array-3-float-3d\":18,\"./texture/array-4-float\":22,\"./texture/array-4-float-2d\":20,\"./texture/array-4-float-3d\":21,\"./texture/float\":25,\"./texture/float-2d\":23,\"./texture/float-3d\":24,\"./texture/graphical\":26,\"./texture/memory-optimized\":30,\"./texture/memory-optimized-2d\":28,\"./texture/memory-optimized-3d\":29,\"./texture/unsigned\":33,\"./texture/unsigned-2d\":31,\"./texture/unsigned-3d\":32}],14:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],15:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],16:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float\n};\n},{\"../../../utils\":114,\"./float\":25}],17:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],18:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],19:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erectArray3(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float\n};\n},{\"../../../utils\":114,\"./float\":25}],20:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],21:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],22:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erectArray4(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float\n};\n},{\"../../../utils\":114,\"./float\":25}],23:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat2D\n};\n},{\"../../../utils\":114,\"./float\":25}],24:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat3D\n};\n},{\"../../../utils\":114,\"./float\":25}],25:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureFloat extends GLTexture {\n  get textureType() {\n    return this.context.FLOAT;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  renderRawOutput() {\n    const gl = this.context;\n    const size = this.size;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Float32Array(size[0] * size[1] * 4);\n    gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return this.renderRawOutput();\n  }\n  toArray() {\n    return utils.erectFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat\n};\n},{\"../../../utils\":114,\"./index\":27}],26:[function(require,module,exports){\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureGraphical extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return this.renderValues();\n  }\n}\n\nmodule.exports = {\n  GLTextureGraphical\n};\n},{\"./unsigned\":33}],27:[function(require,module,exports){\nconst { Texture } = require('../../../texture');\n\nclass GLTexture extends Texture {\n  get textureType() {\n    throw new Error(`\"textureType\" not implemented on ${ this.name }`);\n  }\n\n  clone() {\n    return new this.constructor(this);\n  }\n\n  beforeMutate() {\n    if (this.texture._refs > 1) {\n      this.newTexture();\n      return true;\n    }\n    return false;\n  }\n\n  cloneTexture() {\n    this.texture._refs--;\n    const { context: gl, size, texture, kernel } = this;\n    if (kernel.debug) {\n      console.warn('cloning internal texture');\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  newTexture() {\n    this.texture._refs--;\n    const gl = this.context;\n    const size = this.size;\n    const kernel = this.kernel;\n    if (kernel.debug) {\n      console.warn('new internal texture');\n    }\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  clear() {\n    if (this.texture._refs) {\n      this.texture._refs--;\n      const gl = this.context;\n      const target = this.texture = gl.createTexture();\n      selectTexture(gl, target);\n      const size = this.size;\n      target._refs = 1;\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    }\n    const { context: gl, texture } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n\n  delete() {\n    if (this._deleted) return;\n    this._deleted = true;\n    if (this.texture._refs) {\n      this.texture._refs--;\n      if (this.texture._refs) return;\n    }\n    this.context.deleteTexture(this.texture);\n  }\n\n  framebuffer() {\n    if (!this._framebuffer) {\n      this._framebuffer = this.kernel.getRawValueFramebuffer(this.size[0], this.size[1]);\n    }\n    return this._framebuffer;\n  }\n}\n\nfunction selectTexture(gl, texture) {\n  gl.activeTexture(gl.TEXTURE15);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n}\n\nmodule.exports = { GLTexture };\n},{\"../../../texture\":113}],28:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D\n};\n},{\"../../../utils\":114,\"./float\":25}],29:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D\n};\n},{\"../../../utils\":114,\"./float\":25}],30:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized\n};\n},{\"../../../utils\":114,\"./float\":25}],31:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned2D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned2D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],32:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned3D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned3D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],33:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureUnsigned extends GLTexture {\n  get textureType() {\n    return this.context.UNSIGNED_BYTE;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return new Float32Array(this.renderRawOutput().buffer);\n  }\n  toArray() {\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned\n};\n},{\"../../../utils\":114,\"./index\":27}],34:[function(require,module,exports){\nconst getContext = require('gl');\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { glKernelString } = require('../gl/kernel-string');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nclass HeadlessGLKernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) return isSupported;\n    this.setupFeatureChecks();\n    isSupported = testContext !== null;\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    testCanvas = null;\n    testExtensions = null;\n    if (typeof getContext !== 'function') return;\n    try { \n      testContext = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n        WEBGL_color_buffer_float: testContext.getExtension('WEBGL_color_buffer_float'),\n      };\n      features = this.getFeatures();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  static isContextMatch(context) {\n    try {\n      return context.getParameter(context.RENDERER) === 'ANGLE';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  initCanvas() {\n    return {};\n  }\n\n  initContext() {\n    return getContext(2, 2, {\n      preserveDrawingBuffer: true\n    });\n  }\n\n  initExtensions() {\n    this.extensions = {\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n    };\n  }\n\n  build() {\n    super.build.apply(this, arguments);\n    if (!this.fallbackRequested) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n\n  destroyExtensions() {\n    this.extensions.STACKGL_resize_drawingbuffer = null;\n    this.extensions.STACKGL_destroy_context = null;\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('STACKGL_destroy_context');\n    if (extension && extension.destroy) {\n      extension.destroy();\n    }\n  }\n\n  toString() {\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n    const destroyContextString = `    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n    return this;\n  }\n}\n\nmodule.exports = {\n  HeadlessGLKernel\n};\n},{\"../gl/kernel-string\":12,\"../web-gl/kernel\":70,\"gl\":2}],35:[function(require,module,exports){\nclass KernelValue {\n  constructor(value, settings) {\n    const {\n      name,\n      kernel,\n      context,\n      checkContext,\n      onRequestContextHandle,\n      onUpdateValueMismatch,\n      origin,\n      strictIntegers,\n      type,\n      tactic,\n    } = settings;\n    if (!name) {\n      throw new Error('name not set');\n    }\n    if (!type) {\n      throw new Error('type not set');\n    }\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\n    }\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n    this.name = name;\n    this.origin = origin;\n    this.tactic = tactic;\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers;\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n    this.forceUploadEachRun = null;\n  }\n\n  get id() {\n    return `${this.origin}_${name}`;\n  }\n\n  getSource() {\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\n  }\n\n  updateValue(value) {\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\n  }\n}\n\nmodule.exports = {\n  KernelValue\n};\n},{}],36:[function(require,module,exports){\nconst { utils } = require('../utils');\nconst { Input } = require('../input');\n\nclass Kernel {\n  static get isSupported() {\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\n  }\n\n  static isContextMatch(context) {\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\n  }\n\n  static destroyContext(context) {\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionArguments() {\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\n  }\n\n  static combineKernels() {\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\n  }\n\n  constructor(source, settings) {\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n    this.forceUploadKernelConstants = null;\n\n\n    this.source = source;\n\n    this.output = null;\n\n    this.debug = false;\n\n    this.graphical = false;\n\n    this.loopMaxIterations = 0;\n\n    this.constants = null;\n\n    this.constantTypes = null;\n\n    this.constantBitRatios = null;\n\n    this.dynamicArguments = false;\n\n    this.dynamicOutput = false;\n\n    this.canvas = null;\n\n    this.context = null;\n\n    this.checkContext = null;\n\n    this.gpu = null;\n\n    this.functions = null;\n\n    this.nativeFunctions = null;\n\n    this.injectedNative = null;\n\n    this.subKernels = null;\n\n    this.validate = true;\n\n    this.immutable = false;\n\n    this.pipeline = false;\n\n    this.precision = null;\n\n    this.tactic = null;\n\n    this.plugins = null;\n\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.built = false;\n    this.signature = null;\n  }\n\n  mergeSettings(settings) {\n    for (let p in settings) {\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n      switch (p) {\n        case 'output':\n          if (!Array.isArray(settings.output)) {\n            this.setOutput(settings.output); \n            continue;\n          }\n          break;\n        case 'functions':\n          this.functions = [];\n          for (let i = 0; i < settings.functions.length; i++) {\n            this.addFunction(settings.functions[i]);\n          }\n          continue;\n        case 'graphical':\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\n            this.precision = 'unsigned';\n          }\n          this[p] = settings[p];\n          continue;\n        case 'nativeFunctions':\n          if (!settings.nativeFunctions) continue;\n          this.nativeFunctions = [];\n          for (let i = 0; i < settings.nativeFunctions.length; i++) {\n            const s = settings.nativeFunctions[i];\n            const { name, source } = s;\n            this.addNativeFunction(name, source, s);\n          }\n          continue;\n      }\n      this[p] = settings[p];\n    }\n\n    if (!this.canvas) this.canvas = this.initCanvas();\n    if (!this.context) this.context = this.initContext();\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\n  }\n  build() {\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\n  }\n\n  run() {\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\n  }\n\n  initCanvas() {\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\n  }\n\n  initContext() {\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\n  }\n\n  initPlugins(settings) {\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\n  }\n\n  addFunction(source, settings = {}) {\n    if (source.name && source.source && source.argumentTypes && 'returnType' in source) {\n      this.functions.push(source);\n    } else if ('settings' in source && 'source' in source) {\n      this.functions.push(this.functionToIGPUFunction(source.source, source.settings));\n    } else if (typeof source === 'string' || typeof source === 'function') {\n      this.functions.push(this.functionToIGPUFunction(source, settings));\n    } else {\n      throw new Error(`function not properly defined`);\n    }\n    return this;\n  }\n\n  addNativeFunction(name, source, settings = {}) {\n    const { argumentTypes, argumentNames } = settings.argumentTypes ?\n      splitArgumentTypes(settings.argumentTypes) :\n      this.constructor.nativeFunctionArguments(source) || {};\n    this.nativeFunctions.push({\n      name,\n      source,\n      settings,\n      argumentTypes,\n      argumentNames,\n      returnType: settings.returnType || this.constructor.nativeFunctionReturnType(source)\n    });\n    return this;\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    if (!this.argumentTypes) {\n      if (!this.argumentTypes) {\n        this.argumentTypes = [];\n        for (let i = 0; i < args.length; i++) {\n          const argType = utils.getVariableType(args[i], this.strictIntegers);\n          const type = argType === 'Integer' ? 'Number' : argType;\n          this.argumentTypes.push(type);\n          this.kernelArguments.push({\n            type\n          });\n        }\n      }\n    } else {\n      for (let i = 0; i < this.argumentTypes.length; i++) {\n        this.kernelArguments.push({\n          type: this.argumentTypes[i]\n        });\n      }\n    }\n\n    this.argumentSizes = new Array(args.length);\n    this.argumentBitRatios = new Int32Array(args.length);\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\n    }\n\n    if (this.argumentNames.length !== args.length) {\n      throw new Error(`arguments are miss-aligned`);\n    }\n  }\n\n  setupConstants() {\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    if (this.constants) {\n      for (let name in this.constants) {\n        if (needsConstantTypes) {\n          const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n          this.constantTypes[name] = type;\n          this.kernelConstants.push({\n            name,\n            type\n          });\n        } else {\n          this.kernelConstants.push({\n            name,\n            type: this.constantTypes[name]\n          });\n        }\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n      }\n    }\n  }\n\n  setOptimizeFloatMemory(flag) {\n    this.optimizeFloatMemory = flag;\n    return this;\n  }\n\n  toKernelOutput(output) {\n    if (output.hasOwnProperty('x')) {\n      if (output.hasOwnProperty('y')) {\n        if (output.hasOwnProperty('z')) {\n          return [output.x, output.y, output.z];\n        } else {\n          return [output.x, output.y];\n        }\n      } else {\n        return [output.x];\n      }\n    } else {\n      return output;\n    }\n  }\n\n  setOutput(output) {\n    this.output = this.toKernelOutput(output);\n    return this;\n  }\n\n  setDebug(flag) {\n    this.debug = flag;\n    return this;\n  }\n\n  setGraphical(flag) {\n    this.graphical = flag;\n    this.precision = 'unsigned';\n    return this;\n  }\n\n  setLoopMaxIterations(max) {\n    this.loopMaxIterations = max;\n    return this;\n  }\n\n  setConstants(constants) {\n    this.constants = constants;\n    return this;\n  }\n\n  setConstantTypes(constantTypes) {\n    this.constantTypes = constantTypes;\n    return this;\n  }\n\n  setFunctions(functions) {\n    for (let i = 0; i < functions.length; i++) {\n      this.addFunction(functions[i]);\n    }\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    for (let i = 0; i < nativeFunctions.length; i++) {\n      const settings = nativeFunctions[i];\n      const { name, source } = settings;\n      this.addNativeFunction(name, source, settings);\n    }\n    return this;\n  }\n\n  setInjectedNative(injectedNative) {\n    this.injectedNative = injectedNative;\n    return this;\n  }\n\n  setPipeline(flag) {\n    this.pipeline = flag;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setDimensions(flag) {\n    utils.warnDeprecated('method', 'setDimensions', 'setOutput');\n    this.output = flag;\n    return this;\n  }\n\n  setOutputToTexture(flag) {\n    utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n    this.pipeline = flag;\n    return this;\n  }\n\n  setImmutable(flag) {\n    this.immutable = flag;\n    return this;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    return this;\n  }\n\n  setStrictIntegers(flag) {\n    this.strictIntegers = flag;\n    return this;\n  }\n\n  setDynamicOutput(flag) {\n    this.dynamicOutput = flag;\n    return this;\n  }\n\n  setHardcodeConstants(flag) {\n    utils.warnDeprecated('method', 'setHardcodeConstants');\n    this.setDynamicOutput(flag);\n    this.setDynamicArguments(flag);\n    return this;\n  }\n\n  setDynamicArguments(flag) {\n    this.dynamicArguments = flag;\n    return this;\n  }\n\n  setUseLegacyEncoder(flag) {\n    this.useLegacyEncoder = flag;\n    return this;\n  }\n\n  setWarnVarUsage(flag) {\n    utils.warnDeprecated('method', 'setWarnVarUsage');\n    return this;\n  }\n\n  getCanvas() {\n    utils.warnDeprecated('method', 'getCanvas');\n    return this.canvas;\n  }\n\n  getWebGl() {\n    utils.warnDeprecated('method', 'getWebGl');\n    return this.context;\n  }\n\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  setArgumentTypes(argumentTypes) {\n    if (Array.isArray(argumentTypes)) {\n      this.argumentTypes = argumentTypes;\n    } else {\n      this.argumentTypes = [];\n      for (const p in argumentTypes) {\n        if (!argumentTypes.hasOwnProperty(p)) continue;\n        const argumentIndex = this.argumentNames.indexOf(p);\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\n      }\n    }\n    return this;\n  }\n\n  setTactic(tactic) {\n    this.tactic = tactic;\n    return this;\n  }\n\n  requestFallback(args) {\n    if (!this.onRequestFallback) {\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\n    }\n    this.fallbackRequested = true;\n    return this.onRequestFallback(args);\n  }\n\n  validateSettings() {\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\n  }\n\n  addSubKernel(subKernel) {\n    if (this.subKernels === null) {\n      this.subKernels = [];\n    }\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n    this.subKernels.push(subKernel);\n    return this;\n  }\n\n  destroy(removeCanvasReferences) {\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\n  }\n\n  getBitRatio(value) {\n    if (this.precision === 'single') {\n      return 4;\n    } else if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  getPixels(flip) {\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\n  }\n\n  checkOutput() {\n    if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n    for (let i = 0; i < this.output.length; i++) {\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\n      }\n    }\n  }\n\n  prependString(value) {\n    throw new Error(`\"prependString\" called on ${ this.constructor.name }`);\n  }\n\n  hasPrependString(value) {\n    throw new Error(`\"hasPrependString\" called on ${ this.constructor.name }`);\n  }\n\n  toJSON() {\n    return {\n      settings: {\n        output: this.output,\n        pipeline: this.pipeline,\n        argumentNames: this.argumentNames,\n        argumentsTypes: this.argumentTypes,\n        constants: this.constants,\n        pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n        returnType: this.returnType,\n      }\n    };\n  }\n\n  buildSignature(args) {\n    const Constructor = this.constructor;\n    this.signature = Constructor.getSignature(this, Constructor.getArgumentTypes(this, args));\n  }\n\n  static getArgumentTypes(kernel, args) {\n    const argumentTypes = new Array(args.length);\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const type = kernel.argumentTypes[i];\n      if (arg.type) {\n        argumentTypes[i] = arg.type;\n      } else {\n        switch (type) {\n          case 'Number':\n          case 'Integer':\n          case 'Float':\n          case 'ArrayTexture(1)':\n            argumentTypes[i] = utils.getVariableType(arg);\n            break;\n          default:\n            argumentTypes[i] = type;\n        }\n      }\n    }\n    return argumentTypes;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    throw new Error(`\"getSignature\" not implemented on ${ this.name }`);\n  }\n\n  functionToIGPUFunction(source, settings = {}) {\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    const sourceString = typeof source === 'string' ? source : source.toString();\n    let argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString)\n        .map(name => settings.argumentTypes[name]) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      name: utils.getFunctionNameFromString(sourceString) || null,\n      source: sourceString,\n      argumentTypes,\n      returnType: settings.returnType || null,\n    };\n  }\n\n  onActivate(previousKernel) {}\n}\n\nfunction splitArgumentTypes(argumentTypesObject) {\n  const argumentNames = Object.keys(argumentTypesObject);\n  const argumentTypes = [];\n  for (let i = 0; i < argumentNames.length; i++) {\n    const argumentName = argumentNames[i];\n    argumentTypes.push(argumentTypesObject[argumentName]);\n  }\n  return { argumentTypes, argumentNames };\n}\n\nmodule.exports = {\n  Kernel\n};\n},{\"../input\":110,\"../utils\":114}],37:[function(require,module,exports){\nconst fragmentShader = `__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nfloat acosh(float x) {\n  return log(x + sqrt(x * x - 1.0));\n}\n\nfloat sinh(float x) {\n  return (pow(${Math.E}, x) - pow(${Math.E}, -x)) / 2.0;\n}\n\nfloat asinh(float x) {\n  return log(x + sqrt(x * x + 1.0));\n}\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat atanh(float x) {\n  x = (x + 1.0) / (x - 1.0);\n  if (x < 0.0) {\n    return 0.5 * log(-x);\n  }\n  return 0.5 * log(x);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat cosh(float x) {\n  return (pow(${Math.E}, x) + pow(${Math.E}, -x)) / 2.0; \n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat tanh(float x) {\n  float e = exp(2.0 * x);\n  return (e - 1.0) / (e + 1.0);\n}\n\nfloat trunc(float x) {\n  if (x >= 0.0) {\n    return floor(x); \n  } else {\n    return ceil(x);\n  }\n}\n\nvec4 _round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(_round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],38:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { FunctionNode } = require('../function-node');\n\nclass WebGLFunctionNode extends FunctionNode {\n  constructor(source, settings) {\n    super(source, settings);\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    const consequentType = this.getType(ast.consequent);\n    const alternateType = this.getType(ast.alternate);\n    if (consequentType === null && alternateType === null) {\n      retArr.push('if (');\n      this.astGeneric(ast.test, retArr);\n      retArr.push(') {');\n      this.astGeneric(ast.consequent, retArr);\n      retArr.push(';');\n      retArr.push('} else {');\n      this.astGeneric(ast.alternate, retArr);\n      retArr.push(';');\n      retArr.push('}');\n      return retArr;\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    if (this.isRootKernel) {\n      retArr.push('void');\n    } else {\n      if (!this.returnType) {\n        const lastReturn = this.findLastReturn();\n        if (lastReturn) {\n          this.returnType = this.getType(ast.body);\n          if (this.returnType === 'LiteralInteger') {\n            this.returnType = 'Number';\n          }\n        }\n      }\n\n      const { returnType } = this;\n      if (!returnType) {\n        retArr.push('void');\n      } else {\n        const type = typeMap[returnType];\n        if (!type) {\n          throw new Error(`unknown type ${returnType}`);\n        }\n        retArr.push(type);\n      }\n    }\n    retArr.push(' ');\n    retArr.push(this.name);\n    retArr.push('(');\n\n    if (!this.isRootKernel) {\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n        if (!argumentType) {\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n        }\n        if (argumentType === 'LiteralInteger') {\n          this.argumentTypes[i] = argumentType = 'Number';\n        }\n        const type = typeMap[argumentType];\n        if (!type) {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        const name = utils.sanitizeName(argumentName);\n        if (type === 'sampler2D' || type === 'sampler2DArray') {\n          retArr.push(`${type} user_${name},ivec2 user_${name}Size,ivec3 user_${name}Dim`);\n        } else {\n          retArr.push(`${type} user_${name}`);\n        }\n      }\n    }\n\n    retArr.push(') {\\n');\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    retArr.push('}\\n');\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n    this.pushState('skip-literal-correction');\n    const type = this.getType(ast.argument);\n    this.popState('skip-literal-correction');\n\n    const result = [];\n\n    if (!this.returnType) {\n      if (type === 'LiteralInteger' || type === 'Integer') {\n        this.returnType = 'Number';\n      } else {\n        this.returnType = type;\n      }\n    }\n\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Float':\n        switch (type) {\n          case 'Integer':\n            result.push('float(');\n            this.astGeneric(ast.argument, result);\n            result.push(')');\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.argument, result);\n\n            if (this.getType(ast) === 'Integer') {\n              result.unshift('float(');\n              result.push(')');\n            }\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Integer':\n        switch (type) {\n          case 'Float':\n          case 'Number':\n            this.castValueToInteger(ast.argument, result);\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToInteger(ast.argument, result);\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Array(4)':\n      case 'Array(3)':\n      case 'Array(2)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'Input':\n        this.astGeneric(ast.argument, result);\n        break;\n      default:\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(`kernelResult = ${ result.join('') };`);\n      retArr.push('return;');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push(`return ${ result.join('') };`);\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    const key = this.astKey(ast);\n    if (Number.isInteger(ast.value)) {\n      if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(`${ast.value}`);\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      }\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n      this.literalTypes[key] = 'Integer';\n      retArr.push(Math.round(ast.value));\n    } else {\n      this.literalTypes[key] = 'Number';\n      retArr.push(`${ast.value}`);\n    }\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\n      return retArr;\n    }\n\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n      retArr.push('divWithIntCheck(');\n      this.pushState('building-float');\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n      retArr.push(', ');\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n      this.popState('building-float');\n      retArr.push(')');\n      return retArr;\n    }\n\n    retArr.push('(');\n    const leftType = this.getType(ast.left) || 'Number';\n    const rightType = this.getType(ast.right) || 'Number';\n    if (!leftType || !rightType) {\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\n    }\n    const key = leftType + ' & ' + rightType;\n    switch (key) {\n      case 'Integer & Integer':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n      case 'Number & Float':\n      case 'Float & Number':\n      case 'Float & Float':\n      case 'Number & Number':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & LiteralInteger':\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.castLiteralToFloat(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n\n      case 'Integer & Float':\n      case 'Integer & Number':\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n          if (!Number.isInteger(ast.right.value)) {\n            this.pushState('building-float');\n            this.castValueToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-float');\n            break;\n          }\n        }\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.pushState('casting-to-integer');\n        if (ast.right.type === 'Literal') {\n          const literalResult = [];\n          this.astGeneric(ast.right, literalResult);\n          const literalType = this.getType(ast.right);\n          if (literalType === 'Integer') {\n            retArr.push(literalResult.join(''));\n          } else {\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n          }\n        } else {\n          retArr.push('int(');\n          this.astGeneric(ast.right, retArr);\n          retArr.push(')');\n        }\n        this.popState('casting-to-integer');\n        this.popState('building-integer');\n        break;\n      case 'Integer & LiteralInteger':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToInteger(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Number & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'Float & LiteralInteger':\n      case 'Number & LiteralInteger':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & Float':\n      case 'LiteralInteger & Number':\n        if (this.isState('casting-to-integer')) {\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-float');\n          this.astGeneric(ast.right, retArr);\n          this.popState('casting-to-float');\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Integer':\n        this.pushState('building-integer');\n        this.castLiteralToInteger(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Boolean & Boolean':\n        this.pushState('building-boolean');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-boolean');\n        break;\n\n      case 'Float & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n\n      default:\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  checkAndUpconvertOperator(ast, retArr) {\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n    if (bitwiseResult) {\n      return bitwiseResult;\n    }\n    const upconvertableOperators = {\n      '%': this.fixIntegerDivisionAccuracy ? 'integerCorrectionModulo' : 'modulo',\n      '**': 'pow',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.left)) {\n      case 'Integer':\n        this.castValueToFloat(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    switch (this.getType(ast.right)) {\n      case 'Integer':\n        this.castValueToFloat(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\n    const upconvertableOperators = {\n      '&': 'bitwiseAnd',\n      '|': 'bitwiseOr',\n      '^': 'bitwiseXOR',\n      '<<': 'bitwiseZeroFillLeftShift',\n      '>>': 'bitwiseSignedRightShift',\n      '>>>': 'bitwiseZeroFillRightShift',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    const leftType = this.getType(ast.left);\n    switch (leftType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    const rightType = this.getType(ast.right);\n    switch (rightType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\n    const upconvertableOperators = {\n      '~': 'bitwiseNot',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.argument)) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.argument, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.argument, retArr);\n        break;\n      default:\n        this.astGeneric(ast.argument, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  castLiteralToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castLiteralToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  castValueToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    retArr.push('int(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castValueToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    retArr.push('float(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('3.402823466e+38');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      const { declarations } = forNode.init;\n      if (declarations.length > 1) {\n        isSafe = false;\n      }\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < declarations.length; i++) {\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n          isSafe = false;\n        }\n      }\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      const initString = initArr.join('');\n      const initNeedsSemiColon = initString[initString.length - 1] !== ';';\n      retArr.push(`for (${initString}${initNeedsSemiColon ? ';' : ''}${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), '\\n');\n      }\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', whileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    retArr.push('if (!');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') break;\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') break;\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n\n  astAssignmentExpression(assNode, retArr) {\n    if (assNode.operator === '%=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('mod(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else if (assNode.operator === '**=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('pow(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else {\n      const leftType = this.getType(assNode.left);\n      const rightType = this.getType(assNode.right);\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      if (leftType !== 'Integer' && rightType === 'Integer') {\n        retArr.push('float(');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        this.astGeneric(assNode.right, retArr);\n      }\n      return retArr;\n    }\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    let lastType = null;\n    const declarationSets = [];\n    let declarationSet = [];\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const init = declaration.init;\n      const info = this.getDeclaration(declaration.id);\n      const actualType = this.getType(declaration.init);\n      let type = actualType;\n      if (type === 'LiteralInteger') {\n        if (info.suggestedType === 'Integer') {\n          type = 'Integer';\n        } else {\n          type = 'Number';\n        }\n      }\n      const markupType = typeMap[type];\n      if (!markupType) {\n        throw this.astErrorOutput(`Markup type ${ type } not handled`, varDecNode);\n      }\n      const declarationResult = [];\n      if (actualType === 'Integer' && type === 'Integer') {\n        info.valueType = 'Number';\n        if (i === 0 || lastType === null) {\n          declarationResult.push('float ');\n        } else if (type !== lastType) {\n          throw new Error('Unhandled declaration');\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        declarationResult.push('float(');\n        this.astGeneric(init, declarationResult);\n        declarationResult.push(')');\n      } else {\n        info.valueType = type;\n        if (i === 0 || lastType === null) {\n          declarationResult.push(`${markupType} `);\n        } else if (type !== lastType) {\n          declarationSets.push(declarationSet.join(','));\n          declarationSet = [];\n          declarationResult.push(`${markupType} `);\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        if (actualType === 'Number' && type === 'Integer') {\n          if (init.left && init.left.type === 'Literal') {\n            this.astGeneric(init, declarationResult);\n          } else {\n            declarationResult.push('int(');\n            this.astGeneric(init, declarationResult);\n            declarationResult.push(')');\n          }\n        } else if (actualType === 'LiteralInteger' && type === 'Integer') {\n          this.castLiteralToInteger(init, declarationResult);\n        } else {\n          this.astGeneric(init, declarationResult);\n        }\n      }\n      declarationSet.push(declarationResult.join(''));\n    }\n\n    if (declarationSet.length > 0) {\n      declarationSets.push(declarationSet.join(','));\n    }\n\n    result.push(declarationSets.join(';'));\n\n    retArr.push(result.join(''));\n    retArr.push(';');\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n  }\n\n  astSwitchStatement(ast, retArr) {\n    if (ast.type !== 'SwitchStatement') {\n      throw this.astErrorOutput('Invalid switch statement', ast);\n    }\n    const { discriminant, cases } = ast;\n    const type = this.getType(discriminant);\n    const varName = `switchDiscriminant${this.astKey(ast, '_')}`;\n    switch (type) {\n      case 'Float':\n      case 'Number':\n        retArr.push(`float ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n      case 'Integer':\n        retArr.push(`int ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n    }\n    if (cases.length === 1 && !cases[0].test) {\n      this.astGeneric(cases[0].consequent, retArr);\n      return retArr;\n    }\n\n    let fallingThrough = false;\n    let defaultResult = [];\n    let movingDefaultToEnd = false;\n    let pastFirstIf = false;\n    for (let i = 0; i < cases.length; i++) {\n      if (!cases[i].test) {\n        if (cases.length > i + 1) {\n          movingDefaultToEnd = true;\n          this.astGeneric(cases[i].consequent, defaultResult);\n          continue;\n        } else {\n          retArr.push(' else {\\n');\n        }\n      } else {\n        if (i === 0 || !pastFirstIf) {\n          pastFirstIf = true;\n          retArr.push(`if (${varName} == `);\n        } else {\n          if (fallingThrough) {\n            retArr.push(`${varName} == `);\n            fallingThrough = false;\n          } else {\n            retArr.push(` else if (${varName} == `);\n          }\n        }\n        if (type === 'Integer') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'Number':\n            case 'Float':\n              this.castValueToInteger(cases[i].test, retArr);\n              break;\n            case 'LiteralInteger':\n              this.castLiteralToInteger(cases[i].test, retArr);\n              break;\n          }\n        } else if (type === 'Float') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'LiteralInteger':\n              this.castLiteralToFloat(cases[i].test, retArr);\n              break;\n            case 'Integer':\n              this.castValueToFloat(cases[i].test, retArr);\n              break;\n          }\n        } else {\n          throw new Error('unhanlded');\n        }\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\n          fallingThrough = true;\n          retArr.push(' || ');\n          continue;\n        }\n        retArr.push(`) {\\n`);\n      }\n      this.astGeneric(cases[i].consequent, retArr);\n      retArr.push('\\n}');\n    }\n    if (movingDefaultToEnd) {\n      retArr.push(' else {');\n      retArr.push(defaultResult.join(''));\n      retArr.push('}');\n    }\n    return retArr;\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      property,\n      name,\n      signature,\n      origin,\n      type,\n      xProperty,\n      yProperty,\n      zProperty\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'value.thread.value':\n      case 'this.thread.value':\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n        }\n        retArr.push(`threadId.${name}`);\n        return retArr;\n      case 'this.output.value':\n        if (this.dynamicOutput) {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.x)');\n              } else {\n                retArr.push('uOutputDim.x');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.y)');\n              } else {\n                retArr.push('uOutputDim.y');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.z)');\n              } else {\n                retArr.push('uOutputDim.z');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        } else {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[0]);\n              } else {\n                retArr.push(this.output[0], '.0');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[1]);\n              } else {\n                retArr.push(this.output[1], '.0');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[2]);\n              } else {\n                retArr.push(this.output[2], '.0');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value[][][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        const cleanName = utils.sanitizeName(name);\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ cleanName }.r`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ cleanName }.g`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ cleanName }.b`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ cleanName }.a`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n        if (typeof xProperty === 'undefined') {\n          switch (type) {\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              retArr.push(`constants_${ utils.sanitizeName(name) }`);\n              return retArr;\n          }\n        }\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case 'fn()[][]':\n          this.astCallExpression(mNode.object.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.object.property));\n          retArr.push(']');\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.property));\n          retArr.push(']');\n          return retArr;\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        default:\n          throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (mNode.computed === false) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${utils.sanitizeName(name)}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${utils.sanitizeName(name)}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n        retArr.push(']');\n        break;\n      case 'HTMLImageArray':\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(1)':\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(2)':\n      case 'Array2D(2)':\n      case 'Array3D(2)':\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(2)':\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(3)':\n      case 'Array2D(3)':\n      case 'Array3D(3)':\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(3)':\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(4)':\n      case 'Array2D(4)':\n      case 'Array3D(4)':\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(4)':\n      case 'HTMLCanvas':\n      case 'OffscreenCanvas':\n      case 'HTMLImage':\n      case 'ImageBitmap':\n      case 'ImageData':\n      case 'HTMLVideo':\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'NumberTexture':\n      case 'Array':\n      case 'Array2D':\n      case 'Array3D':\n      case 'Array4D':\n      case 'Input':\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        if (this.precision === 'single') {\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        } else {\n          const bitRatio = (origin === 'user' ?\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\n            this.constantBitRatios[name]\n          );\n          switch (bitRatio) {\n            case 1:\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 2:\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 4:\n            case 0:\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            default:\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\n          }\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        }\n        break;\n      case 'MemoryOptimizedNumberTexture':\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`${markupName}[${this.memberExpressionPropertyMarkup(yProperty)}]`);\n        if (yProperty) {\n          retArr.push(`[${this.memberExpressionPropertyMarkup(xProperty)}]`);\n        }\n        break;\n      default:\n        throw new Error(`unhandled member expression \"${ type }\"`);\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (!ast.callee) {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n\n    let functionName = null;\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\n      functionName = ast.callee.property.name;\n    }\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n      functionName = ast.callee.expressions[1].property.name;\n    } else {\n      functionName = ast.callee.name;\n    }\n\n    if (!functionName) {\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n    }\n\n    switch (functionName) {\n      case 'pow':\n        functionName = '_pow';\n        break;\n      case 'round':\n        functionName = '_round';\n        break;\n    }\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n          retArr.push(plugin.functionReplace);\n          return retArr;\n        }\n      }\n    }\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n\n    if (isMathFunction) {\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        const argumentType = this.getType(argument);\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        switch (argumentType) {\n          case 'Integer':\n            this.castValueToFloat(argument, retArr);\n            break;\n          default:\n            this.astGeneric(argument, retArr);\n            break;\n        }\n      }\n    } else {\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        let targetType = targetTypes[i];\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        const argumentType = this.getType(argument);\n        if (!targetType) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n          targetType = argumentType;\n        }\n        switch (argumentType) {\n          case 'Boolean':\n            this.astGeneric(argument, retArr);\n            continue;\n          case 'Number':\n          case 'Float':\n            if (targetType === 'Integer') {\n              retArr.push('int(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.astGeneric(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Integer':\n            if (targetType === 'Number' || targetType === 'Float') {\n              retArr.push('float(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Integer') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'LiteralInteger':\n            if (targetType === 'Integer') {\n              this.castLiteralToInteger(argument, retArr);\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            if (targetType === argumentType) {\n              if (argument.type === 'Identifier') {\n                retArr.push(`user_${utils.sanitizeName(argument.name)}`);\n              } else if (argument.type === 'ArrayExpression' || argument.type === 'MemberExpression' || argument.type === 'CallExpression') {\n                this.astGeneric(argument, retArr);\n              } else {\n                throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              }\n              continue;\n            }\n            break;\n          case 'HTMLCanvas':\n          case 'OffscreenCanvas':\n          case 'HTMLImage':\n          case 'ImageBitmap':\n          case 'ImageData':\n          case 'HTMLImageArray':\n          case 'HTMLVideo':\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'Array':\n          case 'Input':\n            if (targetType === argumentType) {\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\n              const name = utils.sanitizeName(argument.name);\n              retArr.push(`user_${name},user_${name}Size,user_${name}Dim`);\n              continue;\n            }\n            break;\n        }\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\n      }\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n\n    const arrLen = arrNode.elements.length;\n\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`mat${arrLen}(`);\n        break;\n      default:\n        retArr.push(`vec${arrLen}(`);\n    }\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  memberExpressionXYZ(x, y, z, retArr) {\n    if (z) {\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    if (y) {\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    retArr.push(this.memberExpressionPropertyMarkup(x));\n    return retArr;\n  }\n\n  memberExpressionPropertyMarkup(property) {\n    if (!property) {\n      throw new Error('Property not set');\n    }\n    const type = this.getType(property);\n    const result = [];\n    switch (type) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(property, result);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(property, result);\n        break;\n      default:\n        this.astGeneric(property, result);\n    }\n    return result.join('');\n  }\n}\n\nconst typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Matrix(2)': 'mat2',\n  'Matrix(3)': 'mat3',\n  'Matrix(4)': 'mat4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D',\n  'HTMLVideo': 'sampler2D',\n  'HTMLCanvas': 'sampler2D',\n  'OffscreenCanvas': 'sampler2D',\n  'HTMLImage': 'sampler2D',\n  'ImageBitmap': 'sampler2D',\n  'ImageData': 'sampler2D',\n  'HTMLImageArray': 'sampler2DArray',\n};\n\nconst operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\n\nmodule.exports = {\n  WebGLFunctionNode\n};\n},{\"../../utils\":114,\"../function-node\":10}],39:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGLKernelValueFloat } = require('./kernel-value/float');\nconst { WebGLKernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGLKernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGLKernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGLKernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGLKernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGLKernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGLKernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGLKernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGLKernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGLKernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGLKernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGLKernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGLKernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGLKernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGLKernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGLKernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGLKernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGLKernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGLKernelValueArray2 } = require('./kernel-value/array2');\nconst { WebGLKernelValueArray3 } = require('./kernel-value/array3');\nconst { WebGLKernelValueArray4 } = require('./kernel-value/array4');\n\nconst { WebGLKernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n      'ImageData': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'ImageBitmap': WebGLKernelValueHTMLImage,\n      'ImageData': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n      'Input': WebGLKernelValueDynamicSingleInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n      'ImageData': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'ImageBitmap': WebGLKernelValueHTMLImage,\n      'ImageData': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType,\n  kernelValueMaps,\n};\n},{\"./kernel-value/array2\":41,\"./kernel-value/array3\":42,\"./kernel-value/array4\":43,\"./kernel-value/boolean\":44,\"./kernel-value/dynamic-html-image\":45,\"./kernel-value/dynamic-html-video\":46,\"./kernel-value/dynamic-memory-optimized-number-texture\":47,\"./kernel-value/dynamic-number-texture\":48,\"./kernel-value/dynamic-single-array\":49,\"./kernel-value/dynamic-single-array1d-i\":50,\"./kernel-value/dynamic-single-array2d-i\":51,\"./kernel-value/dynamic-single-array3d-i\":52,\"./kernel-value/dynamic-single-input\":53,\"./kernel-value/dynamic-unsigned-array\":54,\"./kernel-value/dynamic-unsigned-input\":55,\"./kernel-value/float\":56,\"./kernel-value/html-image\":57,\"./kernel-value/html-video\":58,\"./kernel-value/integer\":60,\"./kernel-value/memory-optimized-number-texture\":61,\"./kernel-value/number-texture\":62,\"./kernel-value/single-array\":63,\"./kernel-value/single-array1d-i\":64,\"./kernel-value/single-array2d-i\":65,\"./kernel-value/single-array3d-i\":66,\"./kernel-value/single-input\":67,\"./kernel-value/unsigned-array\":68,\"./kernel-value/unsigned-input\":69}],40:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\nconst { Input } = require('../../../input');\n\nclass WebGLKernelArray extends WebGLKernelValue {\n  checkSize(width, height) {\n    if (!this.kernel.validate) return;\n    const { maxTextureSize } = this.kernel.constructor.features;\n    if (width > maxTextureSize || height > maxTextureSize) {\n      if (width > height) {\n        throw new Error(`Argument texture width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else if (width < height) {\n        throw new Error(`Argument texture height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else {\n        throw new Error(`Argument texture height and width of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      }\n    }\n  }\n\n  setup() {\n    this.requestTexture();\n    this.setupTexture();\n    this.defineTexture();\n  }\n\n  requestTexture() {\n    this.texture = this.onRequestTexture();\n  }\n\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  }\n\n  setupTexture() {\n    this.contextHandle = this.onRequestContextHandle();\n    this.index = this.onRequestIndex();\n    this.dimensionsId = this.id + 'Dim';\n    this.sizeId = this.id + 'Size';\n  }\n\n  getBitRatio(value) {\n    if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  destroy() {\n    if (this.prevArg) {\n      this.prevArg.delete();\n    }\n    this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelArray\n};\n},{\"../../../input\":110,\"./index\":59}],41:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray2 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n    }\n    return `uniform vec2 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray2\n};\n},{\"./index\":59}],42:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray3 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n    }\n    return `uniform vec3 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray3\n};\n},{\"./index\":59}],43:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray4 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n    }\n    return `uniform vec4 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray4\n};\n},{\"./index\":59}],44:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueBoolean extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const bool ${this.id} = ${value};\\n`;\n    }\n    return `uniform bool ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueBoolean\n};\n},{\"../../../utils\":114,\"./index\":59}],45:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"./html-image\":57}],46:[function(require,module,exports){\nconst { WebGLKernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLVideo\n};\n},{\"./dynamic-html-image\":45}],47:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    this.dimensions = inputTexture.dimensions;\n    this.checkSize(inputTexture.size[0], inputTexture.size[1]);\n    this.textureSize = inputTexture.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(inputTexture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"./memory-optimized-number-texture\":61}],48:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('./number-texture');\n\nclass WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = value.dimensions;\n    this.checkSize(value.size[0], value.size[1]);\n    this.textureSize = value.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"./number-texture\":62}],49:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('./single-array');\n\nclass WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"./single-array\":63}],50:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('./single-array1d-i');\n\nclass WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"./single-array1d-i\":64}],51:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('./single-array2d-i');\n\nclass WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"./single-array2d-i\":65}],52:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('./single-array3d-i');\n\nclass WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"./single-array3d-i\":66}],53:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('./single-input');\n\nclass WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"./single-input\":67}],54:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('./unsigned-array');\n\nclass WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"./unsigned-array\":68}],55:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('./unsigned-input');\n\nclass WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value.value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"./unsigned-input\":69}],56:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueFloat extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      if (Number.isInteger(value)) {\n        return `const float ${this.id} = ${value}.0;\\n`;\n      }\n      return `const float ${this.id} = ${value};\\n`;\n    }\n    return `uniform float ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueFloat\n};\n},{\"../../../utils\":114,\"./index\":59}],57:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueHTMLImage extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.uploadValue = value;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputImage) {\n    if (inputImage.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputImage.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"./array\":40}],58:[function(require,module,exports){\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueHTMLVideo\n};\n},{\"./html-image\":57}],59:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { KernelValue } = require('../../kernel-value');\n\nclass WebGLKernelValue extends KernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.dimensionsId = null;\n    this.sizeId = null;\n    this.initialValueConstructor = value.constructor;\n    this.onRequestTexture = settings.onRequestTexture;\n    this.onRequestIndex = settings.onRequestIndex;\n    this.uploadValue = null;\n    this.textureSize = null;\n    this.bitRatio = null;\n    this.prevArg = null;\n  }\n\n  get id() {\n    return `${this.origin}_${utils.sanitizeName(this.name)}`;\n  }\n\n  setup() {}\n\n  getTransferArrayType(value) {\n    if (Array.isArray(value[0])) {\n      return this.getTransferArrayType(value[0]);\n    }\n    switch (value.constructor) {\n      case Array:\n      case Int32Array:\n      case Int16Array:\n      case Int8Array:\n        return Float32Array;\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Float32Array:\n      case Float64Array:\n        return value.constructor;\n    }\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n    return value.constructor;\n  }\n\n  getStringValueHandler() {\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n  }\n\n  getVariablePrecisionString() {\n    return this.kernel.getVariablePrecisionString(this.textureSize || undefined, this.tactic || undefined);\n  }\n\n  destroy() {}\n}\n\nmodule.exports = {\n  WebGLKernelValue\n};\n},{\"../../../utils\":114,\"../../kernel-value\":35}],60:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueInteger extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueInteger\n};\n},{\"../../../utils\":114,\"./index\":59}],61:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nconst sameError = `Source and destination textures are the same.  Use immutable = true and manually cleanup kernel output texture memory with texture.delete()`;\n\nclass WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture,\n  sameError\n};\n},{\"../../../utils\":114,\"./array\":40}],62:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\nconst { sameError } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    const { size: textureSize, dimensions } = value;\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = dimensions;\n    this.textureSize = textureSize;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"./array\":40,\"./memory-optimized-number-texture\":61}],63:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray\n};\n},{\"../../../utils\":114,\"./array\":40}],64:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray1DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten2dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"./array\":40}],65:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray2DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten3dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"./array\":40}],66:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray3DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten4dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"./array\":40}],67:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(input.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleInput\n};\n},{\"../../../utils\":114,\"./array\":40}],68:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"./array\":40}],69:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    const [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value.value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"./array\":40}],70:[function(require,module,exports){\nconst { GLKernel } = require('../gl/kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { WebGLFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst mrud = require('../../plugins/math-random-uniformly-distributed');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { glKernelString } = require('../gl/kernel-string');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nconst plugins = [mrud];\nconst canvases = [];\nconst maxTexSizes = {};\n\n\nclass WebGLKernel extends GLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGLRenderingContext !== 'undefined') {\n      return context instanceof WebGLRenderingContext;\n    }\n    return false;\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.program = null;\n    this.pipeline = settings.pipeline;\n    this.endianness = utils.systemEndianness();\n    this.extensions = {};\n    this.argumentTextureCount = 0;\n    this.constantTextureCount = 0;\n    this.fragShader = null;\n    this.vertShader = null;\n    this.drawBuffersMap = null;\n\n    this.maxTexSize = null;\n    this.onRequestSwitchKernel = null;\n\n    this.texture = null;\n    this.mappedTextures = null;\n    this.mergeSettings(source.settings || settings);\n\n    this.threadDim = null;\n    this.framebuffer = null;\n    this.buffer = null;\n\n    this.textureCache = [];\n    this.programUniformLocationCache = {};\n    this.uniform1fCache = {};\n    this.uniform1iCache = {};\n    this.uniform2fCache = {};\n    this.uniform2fvCache = {};\n    this.uniform2ivCache = {};\n    this.uniform3fvCache = {};\n    this.uniform3ivCache = {};\n    this.uniform4fvCache = {};\n    this.uniform4ivCache = {};\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      const canvas = document.createElement('canvas');\n      canvas.width = 2;\n      canvas.height = 2;\n      return canvas;\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n  }\n\n  initPlugins(settings) {\n    const pluginsToUse = [];\n    const { source } = this;\n    if (typeof source === 'string') {\n      for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        if (source.match(plugin.functionMatch)) {\n          pluginsToUse.push(plugin);\n        }\n      }\n    } else if (typeof source === 'object') {\n      if (settings.pluginNames) { \n        for (let i = 0; i < plugins.length; i++) {\n          const plugin = plugins[i];\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n          if (usePlugin) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      }\n    }\n    return pluginsToUse;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n      throw new Error('Float textures are not supported');\n    } else if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Single precision not supported');\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n      throw new Error('could not instantiate draw buffers extension');\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'precision') {\n        this.precision = 'unsigned';\n        console.warn('Cannot use graphical mode and single precision at the same time');\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  updateMaxTexSize() {\n    const { texSize, canvas } = this;\n    if (this.maxTexSize === null) {\n      let canvasIndex = canvases.indexOf(canvas);\n      if (canvasIndex === -1) {\n        canvasIndex = canvases.length;\n        canvases.push(canvas);\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n      }\n      this.maxTexSize = maxTexSizes[canvasIndex];\n    }\n    if (this.maxTexSize[0] < texSize[0]) {\n      this.maxTexSize[0] = texSize[0];\n    }\n    if (this.maxTexSize[1] < texSize[1]) {\n      this.maxTexSize[1] = texSize[1];\n    }\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    this.argumentTextureCount = 0;\n    const needsArgumentTypes = this.argumentTypes === null;\n    if (needsArgumentTypes) {\n      this.argumentTypes = [];\n    }\n    this.argumentSizes = [];\n    this.argumentBitRatios = [];\n\n    if (args.length < this.argumentNames.length) {\n      throw new Error('not enough arguments for kernel');\n    } else if (args.length > this.argumentNames.length) {\n      throw new Error('too many arguments for kernel');\n    }\n\n    const { context: gl } = this;\n    let textureIndexes = 0;\n\n    const onRequestTexture = () => {\n      return this.createTexture();\n    };\n    const onRequestIndex = () => {\n      return this.constantTextureCount + textureIndexes++;\n    };\n    const onUpdateValueMismatch = (constructor) => {\n      this.switchKernels({\n        type: 'argumentMismatch',\n        needed: constructor\n      });\n    };\n    const onRequestContextHandle = () => {\n      return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n    };\n\n    for (let index = 0; index < args.length; index++) {\n      const value = args[index];\n      const name = this.argumentNames[index];\n      let type;\n      if (needsArgumentTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.argumentTypes.push(type);\n      } else {\n        type = this.argumentTypes[index];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelArgument = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'user',\n        context: gl,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture,\n        onRequestIndex,\n        onUpdateValueMismatch,\n        onRequestContextHandle,\n      });\n      this.kernelArguments.push(kernelArgument);\n      kernelArgument.setup();\n      this.argumentSizes.push(kernelArgument.textureSize);\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\n    }\n  }\n\n  createTexture() {\n    const texture = this.context.createTexture();\n    this.textureCache.push(texture);\n    return texture;\n  }\n\n  setupConstants(args) {\n    const { context: gl } = this;\n    this.kernelConstants = [];\n    this.forceUploadKernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    let textureIndexes = 0;\n    for (const name in this.constants) {\n      const value = this.constants[name];\n      let type;\n      if (needsConstantTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.constantTypes[name] = type;\n      } else {\n        type = this.constantTypes[name];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelValue = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'constants',\n        context: this.context,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount++;\n        }\n      });\n      this.constantBitRatios[name] = kernelValue.bitRatio;\n      this.kernelConstants.push(kernelValue);\n      kernelValue.setup();\n      if (kernelValue.forceUploadEachRun) {\n        this.forceUploadKernelConstants.push(kernelValue);\n      }\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.initExtensions();\n    this.validateSettings(arguments);\n    this.setupConstants(arguments);\n    if (this.fallbackRequested) return;\n    this.setupArguments(arguments);\n    if (this.fallbackRequested) return;\n    this.updateMaxTexSize();\n    this.translateSource();\n    const failureResult = this.pickRenderStrategy(arguments);\n    if (failureResult) {\n      return failureResult;\n    }\n    const { texSize, context: gl, canvas } = this;\n    gl.enable(gl.SCISSOR_TEST);\n    if (this.pipeline && this.precision === 'single') {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    } else {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    }\n    const threadDim = this.threadDim = Array.from(this.output);\n    while (threadDim.length < 3) {\n      threadDim.push(1);\n    }\n\n    const compiledVertexShader = this.getVertexShader(arguments);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertShader, compiledVertexShader);\n    gl.compileShader(vertShader);\n    this.vertShader = vertShader;\n\n    const compiledFragmentShader = this.getFragmentShader(arguments);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragShader, compiledFragmentShader);\n    gl.compileShader(fragShader);\n    this.fragShader = fragShader;\n\n    if (this.debug) {\n      console.log('GLSL Shader Output:');\n      console.log(compiledFragmentShader);\n    }\n\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n    }\n\n    const program = this.program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    this.framebuffer = gl.createFramebuffer();\n    this.framebuffer.width = texSize[0];\n    this.framebuffer.height = texSize[1];\n    this.rawValueFramebuffers = {};\n\n    const vertices = new Float32Array([-1, -1,\n      1, -1, -1, 1,\n      1, 1\n    ]);\n    const texCoords = new Float32Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ]);\n\n    const texCoordOffset = vertices.byteLength;\n\n    let buffer = this.buffer;\n    if (!buffer) {\n      buffer = this.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    }\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n    gl.enableVertexAttribArray(aPosLoc);\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n    gl.enableVertexAttribArray(aTexCoordLoc);\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n    let i = 0;\n    gl.useProgram(this.program);\n    for (let p in this.constants) {\n      this.kernelConstants[i++].updateValue(this.constants[p]);\n    }\n\n    this._setupOutputTexture();\n    if (\n      this.subKernels !== null &&\n      this.subKernels.length > 0\n    ) {\n      this._mappedTextureSwitched = {};\n      this._setupSubOutputTextures();\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  setupReturnTypes(functionBuilder) {\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments, texSize, forceUploadKernelConstants, context: gl } = this;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\n      const constant = forceUploadKernelConstants[i];\n      constant.updateValue(this.constants[constant.name]);\n      if (this.switchingKernels) return;\n    }\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        if (this.immutable) {\n          this._replaceOutputTexture();\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return this.immutable ? this.texture.clone() : this.texture;\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (this.immutable) {\n      this._replaceOutputTexture();\n    }\n\n    if (this.subKernels !== null) {\n      if (this.immutable) {\n        this._replaceSubOutputTextures();\n      }\n      this.drawBuffers();\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  drawBuffers() {\n    this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n  }\n\n  getInternalFormat() {\n    return this.context.RGBA;\n  }\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n\n  _replaceOutputTexture() {\n    if (this.texture.beforeMutate() || this._textureSwitched) {\n      const gl = this.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      this._textureSwitched = false;\n    }\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    const texSize = this.texSize;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    const texture = this.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _replaceSubOutputTextures() {\n    const gl = this.context;\n    for (let i = 0; i < this.mappedTextures.length; i++) {\n      const mappedTexture = this.mappedTextures[i];\n      if (mappedTexture.beforeMutate() || this._mappedTextureSwitched[i]) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n        this._mappedTextureSwitched[i] = false;\n      }\n    }\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  setUniform1f(name, value) {\n    if (this.uniform1fCache.hasOwnProperty(name)) {\n      const cache = this.uniform1fCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1fCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1f(loc, value);\n  }\n\n  setUniform1i(name, value) {\n    if (this.uniform1iCache.hasOwnProperty(name)) {\n      const cache = this.uniform1iCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1iCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1i(loc, value);\n  }\n\n  setUniform2f(name, value1, value2) {\n    if (this.uniform2fCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fCache[name];\n      if (\n        value1 === cache[0] &&\n        value2 === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fCache[name] = [value1, value2];\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2f(loc, value1, value2);\n  }\n\n  setUniform2fv(name, value) {\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2fv(loc, value);\n  }\n\n  setUniform2iv(name, value) {\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform2ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform3iv(name, value) {\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform3ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3iv(loc, value);\n  }\n\n  setUniform4fv(name, value) {\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform4fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4fv(loc, value);\n  }\n\n  setUniform4iv(name, value) {\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform4ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4iv(loc, value);\n  }\n\n  getUniformLocation(name) {\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\n      return this.programUniformLocationCache[name];\n    }\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n  }\n\n  _getFragShaderArtifactMap(args) {\n    return {\n      HEADER: this._getHeaderString(),\n      LOOP_MAX: this._getLoopMaxString(),\n      PLUGINS: this._getPluginsString(),\n      CONSTANTS: this._getConstantsString(),\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n      INJECTED_NATIVE: this._getInjectedNative(),\n      MAIN_CONSTANTS: this._getMainConstantsString(),\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n      KERNEL: this.getKernelString(),\n      MAIN_RESULT: this.getMainResultString(),\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getVertShaderArtifactMap(args) {\n    return {\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getHeaderString() {\n    return (\n      this.subKernels !== null ?\n      '#extension GL_EXT_draw_buffers : require\\n' :\n      ''\n    );\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\n      ' 1000;\\n'\n    );\n  }\n\n  _getPluginsString() {\n    if (!this.plugins) return '\\n';\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n  }\n\n  _getConstantsString() {\n    const result = [];\n    const { threadDim, texSize } = this;\n    if (this.dynamicOutput) {\n      result.push(\n        'uniform ivec3 uOutputDim',\n        'uniform ivec2 uTexSize'\n      );\n    } else {\n      result.push(\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\n      );\n    }\n    return utils.linesToString(result);\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'varying vec2 vTexCoord;\\n';\n    } else {\n      return 'out vec2 vTexCoord;\\n';\n    }\n  }\n\n  _getDecode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getEncode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getDivideWithIntegerCheckString() {\n    return this.fixIntegerDivisionAccuracy ?\n      `float divWithIntCheck(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x) / int(y));\n  }\n  return x / y;\n}\n\nfloat integerCorrectionModulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -(number - (divisor * floor(divWithIntCheck(number, divisor))));\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return number - (divisor * floor(divWithIntCheck(number, divisor)));\n}` :\n      '';\n  }\n\n  _getMainArgumentsString(args) {\n    const results = [];\n    const { argumentNames } = this;\n    for (let i = 0; i < argumentNames.length; i++) {\n      results.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return results.join('');\n  }\n\n  _getInjectedNative() {\n    return this.injectedNative || '';\n  }\n\n  _getMainConstantsString() {\n    const result = [];\n    const { constants } = this;\n    if (constants) {\n      let i = 0;\n      for (const name in constants) {\n        if (!this.constants.hasOwnProperty(name)) continue;\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n      }\n    }\n    return result.join('');\n  }\n\n  getRawValueFramebuffer(width, height) {\n    if (!this.rawValueFramebuffers[width]) {\n      this.rawValueFramebuffers[width] = {};\n    }\n    if (!this.rawValueFramebuffers[width][height]) {\n      const framebuffer = this.context.createFramebuffer();\n      framebuffer.width = width;\n      framebuffer.height = height;\n      this.rawValueFramebuffers[width][height] = framebuffer;\n    }\n    return this.rawValueFramebuffers[width][height];\n  }\n\n  getKernelResultDeclaration() {\n    switch (this.returnType) {\n      case 'Array(2)':\n        return 'vec2 kernelResult';\n      case 'Array(3)':\n        return 'vec3 kernelResult';\n      case 'Array(4)':\n        return 'vec4 kernelResult';\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        return 'float kernelResult';\n      default:\n        if (this.graphical) {\n          return 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n  }\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const { subKernels } = this;\n    if (subKernels !== null) {\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n      }\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragColor = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0].${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n      '  gl_FragData[0][2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    switch (this.returnType) {\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          const subKernel = this.subKernels[i];\n          if (subKernel.returnType === 'Integer') {\n            result.push(\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`\n            );\n          } else {\n            result.push(\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`\n            );\n          }\n        }\n        break;\n      case 'Array(2)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n          );\n        }\n        break;\n      case 'Array(3)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n          );\n        }\n        break;\n      case 'Array(4)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`\n          );\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  replaceArtifacts(src, map) {\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\n      if (map.hasOwnProperty(artifact)) {\n        return map[artifact];\n      }\n      throw `unhandled artifact ${artifact}`;\n    });\n  }\n\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\n  }\n\n  toString() {\n    const setupContextString = utils.linesToString([\n      `const gl = context`,\n    ]);\n    return glKernelString(this.constructor, arguments, this, setupContextString);\n  }\n\n  destroy(removeCanvasReferences) {\n    if (!this.context) return;\n    if (this.buffer) {\n      this.context.deleteBuffer(this.buffer);\n    }\n    if (this.framebuffer) {\n      this.context.deleteFramebuffer(this.framebuffer);\n    }\n    for (const width in this.rawValueFramebuffers) {\n      for (const height in this.rawValueFramebuffers[width]) {\n        this.context.deleteFramebuffer(this.rawValueFramebuffers[width][height]);\n        delete this.rawValueFramebuffers[width][height];\n      }\n      delete this.rawValueFramebuffers[width];\n    }\n    if (this.vertShader) {\n      this.context.deleteShader(this.vertShader);\n    }\n    if (this.fragShader) {\n      this.context.deleteShader(this.fragShader);\n    }\n    if (this.program) {\n      this.context.deleteProgram(this.program);\n    }\n    if (this.texture) {\n      this.texture.delete();\n      const textureCacheIndex = this.textureCache.indexOf(this.texture.texture);\n      if (textureCacheIndex > -1) {\n        this.textureCache.splice(textureCacheIndex, 1);\n      }\n      this.texture = null;\n    }\n    if (this.mappedTextures && this.mappedTextures.length) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.delete();\n        const textureCacheIndex = this.textureCache.indexOf(mappedTexture.texture);\n        if (textureCacheIndex > -1) {\n          this.textureCache.splice(textureCacheIndex, 1);\n        }\n      }\n      this.mappedTextures = null;\n    }\n    if (this.kernelArguments) {\n      for (let i = 0; i < this.kernelArguments.length; i++) {\n        this.kernelArguments[i].destroy();\n      }\n    }\n    if (this.kernelConstants) {\n      for (let i = 0; i < this.kernelConstants.length; i++) {\n        this.kernelConstants[i].destroy();\n      }\n    }\n    while (this.textureCache.length > 0) {\n      const texture = this.textureCache.pop();\n      this.context.deleteTexture(texture);\n    }\n    if (removeCanvasReferences) {\n      const idx = canvases.indexOf(this.canvas);\n      if (idx >= 0) {\n        canvases[idx] = null;\n        maxTexSizes[idx] = null;\n      }\n    }\n    this.destroyExtensions();\n    delete this.context;\n    delete this.canvas;\n    if (!this.gpu) return;\n    const i = this.gpu.kernels.indexOf(this);\n    if (i === -1) return;\n    this.gpu.kernels.splice(i, 1);\n  }\n\n  destroyExtensions() {\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGLKernel\n};\n},{\"../../plugins/math-random-uniformly-distributed\":112,\"../../utils\":114,\"../function-builder\":9,\"../gl/kernel\":13,\"../gl/kernel-string\":12,\"./fragment-shader\":37,\"./function-node\":38,\"./kernel-value-maps\":39,\"./vertex-shader\":71}],71:[function(require,module,exports){\nconst vertexShader = `__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],72:[function(require,module,exports){\nconst fragmentShader = `#version 300 es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],73:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { WebGLFunctionNode } = require('../web-gl/function-node');\n\nclass WebGL2FunctionNode extends WebGLFunctionNode {\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('intBitsToFloat(2139095039)');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  WebGL2FunctionNode\n};\n},{\"../../utils\":114,\"../web-gl/function-node\":38}],74:[function(require,module,exports){\nconst { WebGL2KernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGL2KernelValueFloat } = require('./kernel-value/float');\nconst { WebGL2KernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGL2KernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGL2KernelValueHTMLImageArray } = require('./kernel-value/html-image-array');\nconst { WebGL2KernelValueDynamicHTMLImageArray } = require('./kernel-value/dynamic-html-image-array');\n\nconst { WebGL2KernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGL2KernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGL2KernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGL2KernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGL2KernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGL2KernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGL2KernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGL2KernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGL2KernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGL2KernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGL2KernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGL2KernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGL2KernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGL2KernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGL2KernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGL2KernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGL2KernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGL2KernelValueArray2 } = require('./kernel-value/array2');\nconst { WebGL2KernelValueArray3 } = require('./kernel-value/array3');\nconst { WebGL2KernelValueArray4 } = require('./kernel-value/array4');\n\nconst { WebGL2KernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGL2KernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n      'ImageData': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'ImageBitmap': WebGL2KernelValueHTMLImage,\n      'ImageData': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n      'ImageData': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'ImageBitmap': WebGL2KernelValueHTMLImage,\n      'ImageData': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  kernelValueMaps,\n  lookupKernelValueType\n};\n},{\"./kernel-value/array2\":75,\"./kernel-value/array3\":76,\"./kernel-value/array4\":77,\"./kernel-value/boolean\":78,\"./kernel-value/dynamic-html-image\":80,\"./kernel-value/dynamic-html-image-array\":79,\"./kernel-value/dynamic-html-video\":81,\"./kernel-value/dynamic-memory-optimized-number-texture\":82,\"./kernel-value/dynamic-number-texture\":83,\"./kernel-value/dynamic-single-array\":84,\"./kernel-value/dynamic-single-array1d-i\":85,\"./kernel-value/dynamic-single-array2d-i\":86,\"./kernel-value/dynamic-single-array3d-i\":87,\"./kernel-value/dynamic-single-input\":88,\"./kernel-value/dynamic-unsigned-array\":89,\"./kernel-value/dynamic-unsigned-input\":90,\"./kernel-value/float\":91,\"./kernel-value/html-image\":93,\"./kernel-value/html-image-array\":92,\"./kernel-value/html-video\":94,\"./kernel-value/integer\":95,\"./kernel-value/memory-optimized-number-texture\":96,\"./kernel-value/number-texture\":97,\"./kernel-value/single-array\":98,\"./kernel-value/single-array1d-i\":99,\"./kernel-value/single-array2d-i\":100,\"./kernel-value/single-array3d-i\":101,\"./kernel-value/single-input\":102,\"./kernel-value/unsigned-array\":103,\"./kernel-value/unsigned-input\":104}],75:[function(require,module,exports){\nconst { WebGLKernelValueArray2 } = require('../../web-gl/kernel-value/array2');\n\nclass WebGL2KernelValueArray2 extends WebGLKernelValueArray2 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray2\n};\n},{\"../../web-gl/kernel-value/array2\":41}],76:[function(require,module,exports){\nconst { WebGLKernelValueArray3 } = require('../../web-gl/kernel-value/array3');\n\nclass WebGL2KernelValueArray3 extends WebGLKernelValueArray3 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray3\n};\n},{\"../../web-gl/kernel-value/array3\":42}],77:[function(require,module,exports){\nconst { WebGLKernelValueArray4 } = require('../../web-gl/kernel-value/array4');\n\nclass WebGL2KernelValueArray4 extends WebGLKernelValueArray4 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray4\n};\n},{\"../../web-gl/kernel-value/array4\":43}],78:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('../../web-gl/kernel-value/boolean');\n\nclass WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n\nmodule.exports = {\n  WebGL2KernelValueBoolean\n};\n},{\"../../web-gl/kernel-value/boolean\":44}],79:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImageArray } = require('./html-image-array');\n\nclass WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { width, height } = images[0];\n    this.checkSize(width, height);\n    this.dimensions = [width, height, images.length];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(images);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImageArray\n};\n},{\"../../../utils\":114,\"./html-image-array\":92}],80:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicHTMLImage } = require('../../web-gl/kernel-value/dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-html-image\":45}],81:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLVideo\n};\n},{\"../../../utils\":114,\"./dynamic-html-image\":80}],82:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n\nclass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\":47}],83:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicNumberTexture } = require('../../web-gl/kernel-value/dynamic-number-texture');\n\nclass WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-number-texture\":48}],84:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray } = require('../../web-gl2/kernel-value/single-array');\n\nclass WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array\":98}],85:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray1DI } = require('../../web-gl2/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array1d-i\":99}],86:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray2DI } = require('../../web-gl2/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array2d-i\":100}],87:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray3DI } = require('../../web-gl2/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array3d-i\":101}],88:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleInput } = require('../../web-gl2/kernel-value/single-input');\n\nclass WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-input\":102}],89:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n\nclass WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-array\":54}],90:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n\nclass WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-input\":55}],91:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueFloat } = require('../../web-gl/kernel-value/float');\n\nclass WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n\nmodule.exports = {\n  WebGL2KernelValueFloat\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/float\":56}],92:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('../../web-gl/kernel-value/array');\n\nclass WebGL2KernelValueHTMLImageArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.checkSize(value[0].width, value[0].height);\n    this.dimensions = [value[0].width, value[0].height, value.length];\n    this.textureSize = [value[0].width, value[0].height];\n  }\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage3D(\n      gl.TEXTURE_2D_ARRAY,\n      0,\n      gl.RGBA,\n      images[0].width,\n      images[0].height,\n      images.length,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    );\n    for (let i = 0; i < images.length; i++) {\n      const xOffset = 0;\n      const yOffset = 0;\n      const imageDepth = 1;\n      gl.texSubImage3D(\n        gl.TEXTURE_2D_ARRAY,\n        0,\n        xOffset,\n        yOffset,\n        i,\n        images[i].width,\n        images[i].height,\n        imageDepth,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.uploadValue = images[i]\n      );\n    }\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImageArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/array\":40}],93:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('../../web-gl/kernel-value/html-image');\n\nclass WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/html-image\":57}],94:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImage } = require('./html-image');\n\nclass WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLVideo\n};\n},{\"../../../utils\":114,\"./html-image\":93}],95:[function(require,module,exports){\nconst { WebGLKernelValueInteger } = require('../../web-gl/kernel-value/integer');\n\nclass WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n  getSource(value) {\n    const variablePrecision = this.getVariablePrecisionString();\n    if (this.origin === 'constants') {\n      return `const ${ variablePrecision } int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform ${ variablePrecision } int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueInteger\n};\n},{\"../../web-gl/kernel-value/integer\":60}],96:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n\nclass WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/memory-optimized-number-texture\":61}],97:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('../../web-gl/kernel-value/number-texture');\n\nclass WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/number-texture\":62}],98:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('../../web-gl/kernel-value/single-array');\n\nclass WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array\":63}],99:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('../../web-gl/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array1d-i\":64}],100:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('../../web-gl/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array2d-i\":65}],101:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('../../web-gl/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array3d-i\":66}],102:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('../../web-gl/kernel-value/single-input');\n\nclass WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-input\":67}],103:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('../../web-gl/kernel-value/unsigned-array');\n\nclass WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-array\":68}],104:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('../../web-gl/kernel-value/unsigned-input');\n\nclass WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-input\":69}],105:[function(require,module,exports){\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { WebGL2FunctionNode } = require('./function-node');\nconst { FunctionBuilder } = require('../function-builder');\nconst { utils } = require('../../utils');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\n\nlet features = null;\n\nclass WebGL2Kernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl2');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGL2RenderingContext !== 'undefined') {\n      return context instanceof WebGL2RenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      kernelMap: true,\n      isTextureFloat: true,\n      isDrawBuffers: true,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return true;\n  }\n\n  static getChannelCount() {\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl2', settings);\n  }\n\n  initExtensions() {\n    this.extensions = {\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n    if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Float texture outputs are not supported');\n    } else if (!this.graphical && this.precision === null) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'single') {\n        console.warn('Cannot use graphical mode and single precision at the same time');\n        this.precision = 'unsigned';\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  drawBuffers() {\n    this.context.drawBuffers(this.drawBuffersMap);\n  }\n\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.R32F:\n        return gl.RED;\n      case gl.RG32F:\n        return gl.RG;\n      case gl.RGBA32F:\n        return gl.RGBA;\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n  getInternalFormat() {\n    const { context: gl } = this;\n\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              return gl.RGBA32F;\n            } else {\n              return gl.R32F;\n            }\n            case 'Array(2)':\n              return gl.RG32F;\n            case 'Array(3)': \n            case 'Array(4)':\n              return gl.RGBA32F;\n            default:\n              throw new Error('Unhandled return type');\n        }\n      }\n      return gl.RGBA32F;\n    }\n    return gl.RGBA;\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    const texture = gl.createTexture();\n    const texSize = this.texSize;\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      const format = this.getInternalFormat();\n      if (this.precision === 'single') {\n        gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  _getHeaderString() {\n    return '';\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    if (subKernels === null || subKernels.length < 1) {\n      return `in ${ variablePrecision } vec2 vTexCoord;\\n`;\n    } else {\n      return `out ${ variablePrecision } vec2 vTexCoord;\\n`;\n    }\n  }\n\n  _getMainArgumentsString(args) {\n    const result = [];\n    const argumentNames = this.argumentNames;\n    for (let i = 0; i < argumentNames.length; i++) {\n      result.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return result.join('');\n  }\n\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        'layout(location = 0) out vec4 data0'\n      );\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n      }\n    } else {\n      result.push(\n        'out vec4 data0'\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0.${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n      '  data0[2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`\n      );\n    }\n    return result;\n  }\n\n  destroyExtensions() {\n    this.extensions.EXT_color_buffer_float = null;\n    this.extensions.OES_texture_float_linear = null;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGL2Kernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../web-gl/kernel\":70,\"./fragment-shader\":72,\"./function-node\":73,\"./kernel-value-maps\":74,\"./vertex-shader\":106}],106:[function(require,module,exports){\nconst vertexShader = `#version 300 es\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],107:[function(require,module,exports){\nconst lib = require('./index');\nconst GPU = lib.GPU;\nfor (const p in lib) {\n  if (!lib.hasOwnProperty(p)) continue;\n  if (p === 'GPU') continue; \n  GPU[p] = lib[p];\n}\n\nif (typeof window !== 'undefined') {\n  bindTo(window);\n}\nif (typeof self !== 'undefined') {\n  bindTo(self);\n}\n\nfunction bindTo(target) {\n  if (target.GPU) return;\n  Object.defineProperty(target, 'GPU', {\n    get() {\n      return GPU;\n    }\n  });\n}\n\nmodule.exports = lib;\n},{\"./index\":109}],108:[function(require,module,exports){\nconst { gpuMock } = require('gpu-mock.js');\nconst { utils } = require('./utils');\nconst { Kernel } = require('./backend/kernel');\nconst { CPUKernel } = require('./backend/cpu/kernel');\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelRunShortcut } = require('./kernel-run-shortcut');\n\n\nconst kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n\nconst kernelTypes = ['gpu', 'cpu'];\n\nconst internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel,\n};\n\nlet validate = true;\n\nclass GPU {\n  static disableValidation() {\n    validate = false;\n  }\n\n  static enableValidation() {\n    validate = true;\n  }\n\n  static get isGPUSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported);\n  }\n\n  static get isKernelMapSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\n  }\n\n  static get isWebGLSupported() {\n    return WebGLKernel.isSupported;\n  }\n\n  static get isWebGL2Supported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isHeadlessGLSupported() {\n    return HeadlessGLKernel.isSupported;\n  }\n\n  static get isCanvasSupported() {\n    return typeof HTMLCanvasElement !== 'undefined';\n  }\n\n  static get isGPUHTMLImageArraySupported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isSinglePrecisionSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    this.injectedNative = null;\n    if (this.mode === 'dev') return;\n    this.chooseKernel();\n    if (settings.functions) {\n      for (let i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    }\n\n    if (settings.nativeFunctions) {\n      for (const p in settings.nativeFunctions) {\n        if (!settings.nativeFunctions.hasOwnProperty(p)) continue;\n        const s = settings.nativeFunctions[p];\n        const { name, source } = s;\n        this.addNativeFunction(name, source, s);\n      }\n    }\n  }\n\n  chooseKernel() {\n    if (this.Kernel) return;\n\n    let Kernel = null;\n\n    if (this.context) {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        const ExternalKernel = kernelOrder[i];\n        if (ExternalKernel.isContextMatch(this.context)) {\n          if (!ExternalKernel.isSupported) {\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n          }\n          Kernel = ExternalKernel;\n          break;\n        }\n      }\n      if (Kernel === null) {\n        throw new Error('unknown Context');\n      }\n    } else if (this.mode) {\n      if (this.mode in internalKernels) {\n        if (!validate || internalKernels[this.mode].isSupported) {\n          Kernel = internalKernels[this.mode];\n        }\n      } else if (this.mode === 'gpu') {\n        for (let i = 0; i < kernelOrder.length; i++) {\n          if (kernelOrder[i].isSupported) {\n            Kernel = kernelOrder[i];\n            break;\n          }\n        }\n      } else if (this.mode === 'cpu') {\n        Kernel = CPUKernel;\n      }\n      if (!Kernel) {\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n      }\n    } else {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        if (kernelOrder[i].isSupported) {\n          Kernel = kernelOrder[i];\n          break;\n        }\n      }\n      if (!Kernel) {\n        Kernel = CPUKernel;\n      }\n    }\n\n    if (!this.mode) {\n      this.mode = Kernel.mode;\n    }\n    this.Kernel = Kernel;\n  }\n\n  createKernel(source, settings) {\n    if (typeof source === 'undefined') {\n      throw new Error('Missing source parameter');\n    }\n    if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n      throw new Error('source parameter not a function');\n    }\n\n    const kernels = this.kernels;\n    if (this.mode === 'dev') {\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n      kernels.push(devKernel);\n      return devKernel;\n    }\n\n    source = typeof source === 'function' ? source.toString() : source;\n    const switchableKernels = {};\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    function onRequestFallback(args) {\n      console.warn('Falling back to CPU');\n      const fallbackKernel = new CPUKernel(source, {\n        argumentTypes: kernelRun.argumentTypes,\n        constantTypes: kernelRun.constantTypes,\n        graphical: kernelRun.graphical,\n        loopMaxIterations: kernelRun.loopMaxIterations,\n        constants: kernelRun.constants,\n        dynamicOutput: kernelRun.dynamicOutput,\n        dynamicArgument: kernelRun.dynamicArguments,\n        output: kernelRun.output,\n        precision: kernelRun.precision,\n        pipeline: kernelRun.pipeline,\n        immutable: kernelRun.immutable,\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n        functions: kernelRun.functions,\n        nativeFunctions: kernelRun.nativeFunctions,\n        injectedNative: kernelRun.injectedNative,\n        subKernels: kernelRun.subKernels,\n        strictIntegers: kernelRun.strictIntegers,\n        debug: kernelRun.debug,\n      });\n      fallbackKernel.build.apply(fallbackKernel, args);\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\n      kernelRun.replaceKernel(fallbackKernel);\n      return result;\n    }\n\n    function onRequestSwitchKernel(reasons, args, _kernel) {\n      if (_kernel.debug) {\n        console.warn('Switching kernels');\n      }\n      let newOutput = null;\n      if (_kernel.signature && !switchableKernels[_kernel.signature]) {\n        switchableKernels[_kernel.signature] = _kernel;\n      }\n      if (_kernel.dynamicOutput) {\n        for (let i = reasons.length - 1; i >= 0; i--) {\n          const reason = reasons[i];\n          if (reason.type === 'outputPrecisionMismatch') {\n            newOutput = reason.needed;\n          }\n        }\n      }\n\n      const Constructor = _kernel.constructor;\n      const argumentTypes = Constructor.getArgumentTypes(_kernel, args);\n      const signature = Constructor.getSignature(_kernel, argumentTypes);\n      const existingKernel = switchableKernels[signature];\n      if (existingKernel) {\n        existingKernel.onActivate(_kernel);\n        return existingKernel;\n      }\n\n      const newKernel = switchableKernels[signature] = new Constructor(source, {\n        argumentTypes,\n        constantTypes: _kernel.constantTypes,\n        graphical: _kernel.graphical,\n        loopMaxIterations: _kernel.loopMaxIterations,\n        constants: _kernel.constants,\n        dynamicOutput: _kernel.dynamicOutput,\n        dynamicArgument: _kernel.dynamicArguments,\n        context: _kernel.context,\n        canvas: _kernel.canvas,\n        output: newOutput || _kernel.output,\n        precision: _kernel.precision,\n        pipeline: _kernel.pipeline,\n        immutable: _kernel.immutable,\n        optimizeFloatMemory: _kernel.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: _kernel.fixIntegerDivisionAccuracy,\n        functions: _kernel.functions,\n        nativeFunctions: _kernel.nativeFunctions,\n        injectedNative: _kernel.injectedNative,\n        subKernels: _kernel.subKernels,\n        strictIntegers: _kernel.strictIntegers,\n        debug: _kernel.debug,\n        gpu: _kernel.gpu,\n        validate,\n        returnType: _kernel.returnType,\n        tactic: _kernel.tactic,\n        onRequestFallback,\n        onRequestSwitchKernel,\n        texture: _kernel.texture,\n        mappedTextures: _kernel.mappedTextures,\n        drawBuffersMap: _kernel.drawBuffersMap,\n      });\n      newKernel.build.apply(newKernel, args);\n      kernelRun.replaceKernel(newKernel);\n      kernels.push(newKernel);\n      return newKernel;\n    }\n    const mergedSettings = Object.assign({\n      context: this.context,\n      canvas: this.canvas,\n      functions: this.functions,\n      nativeFunctions: this.nativeFunctions,\n      injectedNative: this.injectedNative,\n      gpu: this,\n      validate,\n      onRequestFallback,\n      onRequestSwitchKernel\n    }, settingsCopy);\n\n    const kernel = new this.Kernel(source, mergedSettings);\n    const kernelRun = kernelRunShortcut(kernel);\n\n    if (!this.canvas) {\n      this.canvas = kernel.canvas;\n    }\n\n    if (!this.context) {\n      this.context = kernel.context;\n    }\n\n    kernels.push(kernel);\n\n    return kernelRun;\n  }\n\n  createKernelMap() {\n    let fn;\n    let settings;\n    const argument2Type = typeof arguments[arguments.length - 2];\n    if (argument2Type === 'function' || argument2Type === 'string') {\n      fn = arguments[arguments.length - 2];\n      settings = arguments[arguments.length - 1];\n    } else {\n      fn = arguments[arguments.length - 1];\n    }\n\n    if (this.mode !== 'dev') {\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n        }\n      }\n    }\n\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    if (Array.isArray(arguments[0])) {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let i = 0; i < functions.length; i++) {\n        const source = functions[i].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name,\n          source,\n          property: i,\n        });\n      }\n    } else {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let p in functions) {\n        if (!functions.hasOwnProperty(p)) continue;\n        const source = functions[p].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name: name || p,\n          source,\n          property: p,\n        });\n      }\n    }\n    return this.createKernel(fn, settingsCopy);\n  }\n\n  combineKernels() {\n    const firstKernel = arguments[0];\n    const combinedKernel = arguments[arguments.length - 1];\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n    const canvas = arguments[0].canvas;\n    const context = arguments[0].context;\n    const max = arguments.length - 1;\n    for (let i = 0; i < max; i++) {\n      arguments[i]\n        .setCanvas(canvas)\n        .setContext(context)\n        .setPipeline(true);\n    }\n\n    return function() {\n      const texture = combinedKernel.apply(this, arguments);\n      if (texture.toArray) {\n        return texture.toArray();\n      }\n      return texture;\n    };\n  }\n\n  setFunctions(functions) {\n    this.functions = functions;\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    this.nativeFunctions = nativeFunctions;\n    return this;\n  }\n\n  addFunction(source, settings) {\n    this.functions.push({ source, settings });\n    return this;\n  }\n\n  addNativeFunction(name, source, settings) {\n    if (this.kernels.length > 0) {\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n    }\n    this.nativeFunctions.push(Object.assign({ name, source }, settings));\n    return this;\n  }\n\n  injectNative(source) {\n    this.injectedNative = source;\n    return this;\n  }\n\n  destroy() {\n    return new Promise((resolve, reject) => {\n      if (!this.kernels) {\n        resolve();\n      }\n      setTimeout(() => {\n        try {\n          for (let i = 0; i < this.kernels.length; i++) {\n            this.kernels[i].destroy(true); \n          }\n          let firstKernel = this.kernels[0];\n          if (firstKernel) {\n            if (firstKernel.kernel) {\n              firstKernel = firstKernel.kernel;\n            }\n            if (firstKernel.constructor.destroyContext) {\n              firstKernel.constructor.destroyContext(this.context);\n            }\n          }\n        } catch (e) {\n          reject(e);\n        }\n        resolve();\n      }, 0);\n    });\n  }\n}\n\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n  const upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU,\n  kernelOrder,\n  kernelTypes\n};\n},{\"./backend/cpu/kernel\":8,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/kernel\":70,\"./backend/web-gl2/kernel\":105,\"./kernel-run-shortcut\":111,\"./utils\":114,\"gpu-mock.js\":4}],109:[function(require,module,exports){\nconst { GPU } = require('./gpu');\nconst { alias } = require('./alias');\nconst { utils } = require('./utils');\nconst { Input, input } = require('./input');\nconst { Texture } = require('./texture');\nconst { FunctionBuilder } = require('./backend/function-builder');\nconst { FunctionNode } = require('./backend/function-node');\nconst { CPUFunctionNode } = require('./backend/cpu/function-node');\nconst { CPUKernel } = require('./backend/cpu/kernel');\n\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\n\nconst { WebGLFunctionNode } = require('./backend/web-gl/function-node');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelValueMaps: webGLKernelValueMaps } = require('./backend/web-gl/kernel-value-maps');\n\nconst { WebGL2FunctionNode } = require('./backend/web-gl2/function-node');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { kernelValueMaps: webGL2KernelValueMaps } = require('./backend/web-gl2/kernel-value-maps');\n\nconst { GLKernel } = require('./backend/gl/kernel');\n\nconst { Kernel } = require('./backend/kernel');\n\nconst { FunctionTracer } = require('./backend/function-tracer');\n\nconst mathRandom = require('./plugins/math-random-uniformly-distributed');\n\nmodule.exports = {\n  alias,\n  CPUFunctionNode,\n  CPUKernel,\n  GPU,\n  FunctionBuilder,\n  FunctionNode,\n  HeadlessGLKernel,\n  Input,\n  input,\n  Texture,\n  utils,\n\n  WebGL2FunctionNode,\n  WebGL2Kernel,\n  webGL2KernelValueMaps,\n\n  WebGLFunctionNode,\n  WebGLKernel,\n  webGLKernelValueMaps,\n\n  GLKernel,\n  Kernel,\n  FunctionTracer,\n\n  plugins: {\n    mathRandom\n  }\n};\n},{\"./alias\":5,\"./backend/cpu/function-node\":6,\"./backend/cpu/kernel\":8,\"./backend/function-builder\":9,\"./backend/function-node\":10,\"./backend/function-tracer\":11,\"./backend/gl/kernel\":13,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/function-node\":38,\"./backend/web-gl/kernel\":70,\"./backend/web-gl/kernel-value-maps\":39,\"./backend/web-gl2/function-node\":73,\"./backend/web-gl2/kernel\":105,\"./backend/web-gl2/kernel-value-maps\":74,\"./gpu\":108,\"./input\":110,\"./plugins/math-random-uniformly-distributed\":112,\"./texture\":113,\"./utils\":114}],110:[function(require,module,exports){\nclass Input {\n  constructor(value, size) {\n    this.value = value;\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    const [w, h, d] = this.size;\n    if (d) {\n      if (this.value.length !== (w * h * d)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\n      }\n    } else if (h) {\n      if (this.value.length !== (w * h)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\n      }\n    }\n\n  }\n\n  toArray() {\n    const { utils } = require('./utils');\n    const [w, h, d] = this.size;\n    if (d) {\n      return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n    } else if (h) {\n      return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n    } else {\n      return this.value;\n    }\n  }\n}\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n},{\"./utils\":114}],111:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction kernelRunShortcut(kernel) {\n  let run = function() {\n    kernel.build.apply(kernel, arguments);\n    run = function() {\n      let result = kernel.run.apply(kernel, arguments);\n      if (kernel.switchingKernels) {\n        const reasons = kernel.resetSwitchingKernels();\n        const newKernel = kernel.onRequestSwitchKernel(reasons, arguments, kernel);\n        shortcut.kernel = kernel = newKernel;\n        result = newKernel.run.apply(newKernel, arguments);\n      }\n      if (kernel.renderKernels) {\n        return kernel.renderKernels();\n      } else if (kernel.renderOutput) {\n        return kernel.renderOutput();\n      } else {\n        return result;\n      }\n    };\n    return run.apply(kernel, arguments);\n  };\n  const shortcut = function() {\n    return run.apply(kernel, arguments);\n  };\n  shortcut.exec = function() {\n    return new Promise((accept, reject) => {\n      try {\n        accept(run.apply(this, arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  shortcut.replaceKernel = function(replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  if (shortcut.kernel) {\n    shortcut.kernel = kernel;\n    return;\n  }\n  const properties = utils.allPropertiesOf(kernel);\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    if (property[0] === '_' && property[1] === '_') continue;\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function() {\n          shortcut.kernel[property].apply(shortcut.kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        shortcut[property] = function() {\n          return shortcut.kernel[property].apply(shortcut.kernel, arguments);\n        };\n      }\n    } else {\n      shortcut.__defineGetter__(property, () => shortcut.kernel[property]);\n      shortcut.__defineSetter__(property, (value) => {\n        shortcut.kernel[property] = value;\n      });\n    }\n  }\n  shortcut.kernel = kernel;\n}\nmodule.exports = {\n  kernelRunShortcut\n};\n},{\"./utils\":114}],112:[function(require,module,exports){\nconst source = `// https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0,1]\nhighp float randomSeedShift = 1.0;\nhighp float slide = 1.0;\nuniform highp float randomSeed1;\nuniform highp float randomSeed2;\n\nhighp float nrand(highp vec2 n) {\n  highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n  randomSeedShift = result;\n  if (randomSeedShift > 0.5) {\n    slide += 0.00009; \n  } else {\n    slide += 0.0009;\n  }\n  return result;\n}`;\n\nconst name = 'math-random-uniformly-distributed';\n\nconst functionMatch = `Math.random()`;\n\nconst functionReplace = `nrand(vTexCoord)`;\n\nconst functionReturnType = 'Number';\nconst onBeforeRun = (kernel) => {\n  kernel.setUniform1f('randomSeed1', Math.random());\n  kernel.setUniform1f('randomSeed2', Math.random());\n};\n\nconst plugin = {\n  name,\n  onBeforeRun,\n  functionMatch,\n  functionReplace,\n  functionReturnType,\n  source\n};\n\nmodule.exports = plugin;\n},{}],113:[function(require,module,exports){\nclass Texture {\n  constructor(settings) {\n    const {\n      texture,\n      size,\n      dimensions,\n      output,\n      context,\n      type = 'NumberTexture',\n      kernel,\n      internalFormat,\n      textureFormat\n    } = settings;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    if (!texture) throw new Error('settings property \"texture\" required.');\n    if (!kernel) throw new Error('settings property \"kernel\" required.');\n    this.texture = texture;\n    if (texture._refs) {\n      texture._refs++;\n    } else {\n      texture._refs = 1;\n    }\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = kernel;\n    this.type = type;\n    this._deleted = false;\n    this.internalFormat = internalFormat;\n    this.textureFormat = textureFormat;\n  }\n\n  toArray() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clone() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  delete() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clear() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n}\n\nmodule.exports = {\n  Texture\n};\n},{}],114:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { Input } = require('./input');\nconst { Texture } = require('./texture');\n\nconst FUNCTION_NAME = /function ([^(]*)/;\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nconst utils = {\n  systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness() {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  isFunction(funcObj) {\n    return typeof(funcObj) === 'function';\n  },\n\n  isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return (fn\n        .slice(0, 'function'.length)\n        .toLowerCase() === 'function');\n    }\n    return false;\n  },\n\n  getFunctionNameFromString(funcStr) {\n    const result = FUNCTION_NAME.exec(funcStr);\n    if (!result || result.length === 0) return null;\n    return result[1].trim();\n  },\n\n  getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  getArgumentNamesFromString(fn) {\n    const fnStr = fn.replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    if (result === null) {\n      result = [];\n    }\n    return result;\n  },\n\n  clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n    const temp = obj.constructor(); \n\n    for (let key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value.length > 0 && value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n        return 'Float';\n      case Texture:\n        return value.type;\n      case Input:\n        return 'Input';\n    }\n    if ('nodeName' in value) {\n      switch (value.nodeName) {\n        case 'IMG':\n          return 'HTMLImage';\n        case 'CANVAS':\n          return 'HTMLImage';\n        case 'VIDEO':\n          return 'HTMLVideo';\n      }\n    } else if (value.hasOwnProperty('type')) {\n      return value.type;\n    } else if (typeof OffscreenCanvas !== 'undefined' && value instanceof OffscreenCanvas) {\n      return 'OffscreenCanvas';\n    } else if (typeof ImageBitmap !== 'undefined' && value instanceof ImageBitmap) {\n      return 'ImageBitmap';\n    } else if (typeof ImageData !== 'undefined' && value instanceof ImageData) {\n      return 'ImageData';\n    }\n    return 'Unknown';\n  },\n\n  getKernelTextureSize(settings, dimensions) {\n    let [w, h, d] = dimensions;\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    }\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  closestSquareDimensions(length) {\n    const sqrt = Math.sqrt(length);\n    let high = Math.ceil(sqrt);\n    let low = Math.floor(sqrt);\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    const texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    const [w, h, d] = dimensions;\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    const texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n  getDimensions(x, pad) {\n    let ret;\n    if (utils.isArray(x)) {\n      const dim = [];\n      let temp = x;\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(`Unknown dimensions of ${x}`);\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  flatten2dArrayTo(array, target) {\n    let offset = 0;\n    for (let y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  flatten3dArrayTo(array, target) {\n    let offset = 0;\n    for (let z = 0; z < array.length; z++) {\n      for (let y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  flatten4dArrayTo(array, target) {\n    let offset = 0;\n    for (let l = 0; l < array.length; l++) {\n      for (let z = 0; z < array[l].length; z++) {\n        for (let y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  splitArray(array, part) {\n    const result = [];\n    for (let i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n    return result;\n  },\n\n  getAstString(source, ast) {\n    const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    const start = ast.loc.start;\n    const end = ast.loc.end;\n    const result = [];\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n      for (let i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n    return result.join('\\n');\n  },\n\n  allPropertiesOf(obj) {\n    const props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been replaced with \"${ newName }\". Fixing, but please upgrade as it will soon be removed.`);\n    } else {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n    }\n  },\n  flipPixels: (pixels, width, height) => {\n    const halfHeight = height / 2 | 0; \n    const bytesPerRow = width * 4;\n    const temp = new Uint8ClampedArray(width * 4);\n    const result = pixels.slice(0);\n    for (let y = 0; y < halfHeight; ++y) {\n      const topOffset = y * bytesPerRow;\n      const bottomOffset = (height - y - 1) * bytesPerRow;\n\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n      result.set(temp, bottomOffset);\n    }\n    return result;\n  },\n  erectPackedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xStart = y * width;\n      const xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n    return yResults;\n  },\n  erect3DPackedFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xStart = (z * height * width) + y * width;\n        const xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const offset = (z * height * width) + (y * width);\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectFloat: (array, width) => {\n    const xResults = new Float32Array(width);\n    let i = 0;\n    for (let x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n    return xResults;\n  },\n  erect2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Float32Array(width);\n      for (let x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    let i = 0;\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Float32Array(width);\n        for (let x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray2: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n    return xResults;\n  },\n  erect2DArray2: (array, width, height) => {\n    const yResults = new Array(height);\n    const XResultsMax = width * 4;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * XResultsMax;\n      let i = 0;\n      for (let x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray2: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray3: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n    return xResults;\n  },\n  erect2DArray3: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray3: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray4: (array, width) => {\n    const xResults = new Array(array);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n    return xResults;\n  },\n  erect2DArray4: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray4: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n\n  flattenFunctionToString: (source, settings) => {\n    const { findDependency, thisLookup, doNotDefine } = settings;\n    let flattened = settings.flattened;\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n    const ast = acorn.parse(source);\n    const functionDependencies = [];\n    let indent = 0;\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        const results = [];\n        for (let i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n        return results.join('');\n      }\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body) + (ast.body[0].type === 'VariableDeclaration' ? ';' : '');\n        case 'FunctionDeclaration':\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\n        case 'BlockStatement': {\n          const result = [];\n          indent += 2;\n          for (let i = 0; i < ast.body.length; i++) {\n            const flat = flatten(ast.body[i]);\n            if (flat) {\n              result.push(' '.repeat(indent) + flat, ';\\n');\n            }\n          }\n          indent -= 2;\n          return `{\\n${result.join('')}}`;\n        }\n        case 'VariableDeclaration':\n          const declarations = utils.normalizeDeclarations(ast)\n            .map(flatten)\n            .filter(r => r !== null);\n          if (declarations.length < 1) {\n            return '';\n          } else {\n            return `${ast.kind} ${declarations.join(',')}`;\n          }\n          case 'VariableDeclarator':\n            if (ast.init.object && ast.init.object.type === 'ThisExpression') {\n              const lookup = thisLookup(ast.init.property.name, true);\n              if (lookup) {\n                return `${ast.id.name} = ${flatten(ast.init)}`;\n              } else {\n                return null;\n              }\n            } else {\n              return `${ast.id.name} = ${flatten(ast.init)}`;\n            }\n            case 'CallExpression': {\n              if (ast.callee.property.name === 'subarray') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.type === 'ThisExpression') {\n                functionDependencies.push(findDependency('this', ast.callee.property.name));\n                return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else if (ast.callee.object.name) {\n                const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n                if (foundSource === null) {\n                  return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                } else {\n                  functionDependencies.push(foundSource);\n                  return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                }\n              } else if (ast.callee.object.type === 'MemberExpression') {\n                return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else {\n                throw new Error('unknown ast.callee');\n              }\n            }\n            case 'ReturnStatement':\n              return `return ${flatten(ast.argument)}`;\n            case 'BinaryExpression':\n              return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n            case 'UnaryExpression':\n              if (ast.prefix) {\n                return `${ast.operator} ${flatten(ast.argument)}`;\n              } else {\n                return `${flatten(ast.argument)} ${ast.operator}`;\n              }\n              case 'ExpressionStatement':\n                return `${flatten(ast.expression)}`;\n              case 'SequenceExpression':\n                return `(${flatten(ast.expressions)})`;\n              case 'ArrowFunctionExpression':\n                return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n              case 'Literal':\n                return ast.raw;\n              case 'Identifier':\n                return ast.name;\n              case 'MemberExpression':\n                if (ast.object.type === 'ThisExpression') {\n                  return thisLookup(ast.property.name);\n                }\n                if (ast.computed) {\n                  return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n                }\n                return flatten(ast.object) + '.' + flatten(ast.property);\n              case 'ThisExpression':\n                return 'this';\n              case 'NewExpression':\n                return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              case 'ForStatement':\n                return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n              case 'AssignmentExpression':\n                return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n              case 'UpdateExpression':\n                return `${flatten(ast.argument)}${ast.operator}`;\n              case 'IfStatement':\n                return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n              case 'ThrowStatement':\n                return `throw ${flatten(ast.argument)}`;\n              case 'ObjectPattern':\n                return ast.properties.map(flatten).join(', ');\n              case 'ArrayPattern':\n                return ast.elements.map(flatten).join(', ');\n              case 'DebuggerStatement':\n                return 'debugger;';\n              case 'ConditionalExpression':\n                return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n              case 'Property':\n                if (ast.kind === 'init') {\n                  return flatten(ast.key);\n                }\n      }\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\n    }\n    const result = flatten(ast);\n    if (functionDependencies.length > 0) {\n      const flattenedFunctionDependencies = [];\n      for (let i = 0; i < functionDependencies.length; i++) {\n        const functionDependency = functionDependencies[i];\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n        functionDependency ? flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + '\\n') : '';\n      }\n      return flattenedFunctionDependencies.join('') + result;\n    }\n    return result;\n  },\n\n  normalizeDeclarations: (ast) => {\n    if (ast.type !== 'VariableDeclaration') throw new Error('Ast is not of type \"VariableDeclaration\"');\n    const normalizedDeclarations = [];\n    for (let declarationIndex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {\n      const declaration = ast.declarations[declarationIndex];\n      if (declaration.id && declaration.id.type === 'ObjectPattern' && declaration.id.properties) {\n        const { properties } = declaration.id;\n        for (let propertyIndex = 0; propertyIndex < properties.length; propertyIndex++) {\n          const property = properties[propertyIndex];\n          if (property.value.type === 'ObjectPattern' && property.value.properties) {\n            for (let subPropertyIndex = 0; subPropertyIndex < property.value.properties.length; subPropertyIndex++) {\n              const subProperty = property.value.properties[subPropertyIndex];\n              if (subProperty.type === 'Property') {\n                normalizedDeclarations.push({\n                  type: 'VariableDeclarator',\n                  id: {\n                    type: 'Identifier',\n                    name: subProperty.key.name\n                  },\n                  init: {\n                    type: 'MemberExpression',\n                    object: {\n                      type: 'MemberExpression',\n                      object: declaration.init,\n                      property: {\n                        type: 'Identifier',\n                        name: property.key.name\n                      },\n                      computed: false\n                    },\n                    property: {\n                      type: 'Identifier',\n                      name: subProperty.key.name\n                    },\n                    computed: false\n                  }\n                });\n              } else {\n                throw new Error('unexpected state');\n              }\n            }\n          } else if (property.value.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: property.value && property.value.name ? property.value.name : property.key.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Identifier',\n                  name: property.key.name\n                },\n                computed: false\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else if (declaration.id && declaration.id.type === 'ArrayPattern' && declaration.id.elements) {\n        const { elements } = declaration.id;\n        for (let elementIndex = 0; elementIndex < elements.length; elementIndex++) {\n          const element = elements[elementIndex];\n          if (element.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: element.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Literal',\n                  value: elementIndex,\n                  raw: elementIndex.toString(),\n                  start: element.start,\n                  end: element.end\n                },\n                computed: true\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else {\n        normalizedDeclarations.push(declaration);\n      }\n    }\n    return normalizedDeclarations;\n  },\n\n  splitHTMLImageToRGB: (gpu, image) => {\n    const rKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const gKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const bKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const aKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const result = [\n      rKernel(image),\n      gKernel(image),\n      bKernel(image),\n      aKernel(image),\n    ];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  splitRGBAToCanvases: (gpu, rgba, width, height) => {\n    const visualKernelR = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelR(rgba);\n\n    const visualKernelG = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelG(rgba);\n\n    const visualKernelB = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelB(rgba);\n\n    const visualKernelA = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelA(rgba);\n    return [\n      visualKernelR.canvas,\n      visualKernelG.canvas,\n      visualKernelB.canvas,\n      visualKernelA.canvas,\n    ];\n  },\n\n  getMinifySafeName: (fn) => {\n    try {\n      const ast = acorn.parse(`const value = ${fn.toString()}`);\n      const { init } = ast.body[0].declarations[0];\n      return init.body.name || init.body.body[0].argument.name;\n    } catch (e) {\n      throw new Error('Unrecognized function type.  Please use `() => yourFunctionVariableHere` or function() { return yourFunctionVariableHere; }');\n    }\n  },\n  sanitizeName: function(name) {\n    if (dollarSign.test(name)) {\n      name = name.replace(dollarSign, 'S_S');\n    }\n    if (doubleUnderscore.test(name)) {\n      name = name.replace(doubleUnderscore, 'U_U');\n    } else if (singleUnderscore.test(name)) {\n      name = name.replace(singleUnderscore, 'u_u');\n    }\n    return name;\n  }\n};\n\nconst dollarSign = /\\$/;\nconst doubleUnderscore = /__/;\nconst singleUnderscore = /_/;\n\nconst _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils\n};\n},{\"./input\":110,\"./texture\":113,\"acorn\":1}]},{},[107])(107)\n});\n","// https://docs.pytorch.org/docs/stable/notes/broadcasting.html\nexport function _broadcast_shape(a_shape: number[], b_shape: number[]): number[] {\n  const result_length = Math.max(a_shape.length, b_shape.length);\n  const padded_a_shape = [...Array(result_length - a_shape.length).fill(1), ...a_shape];\n  const padded_b_shape = [...Array(result_length - b_shape.length).fill(1), ...b_shape];\n\n  const result_shape: number[] = [];\n\n  for (let i = 0; i < result_length; i++) {\n    if (\n      padded_a_shape[i] !== padded_b_shape[i] &&\n      padded_a_shape[i] !== 1 &&\n      padded_b_shape[i] !== 1\n    ) {\n      throw new Error(`Shape mismatch: ${a_shape} and ${b_shape}`);\n    }\n\n    result_shape.push(Math.max(padded_a_shape[i], padded_b_shape[i]));\n  }\n\n  return result_shape;\n}\n\nexport function _pad_shape(shape: number[], broadcast_shape: number[]): number[] {\n  if (shape.length >= broadcast_shape.length) {\n    return shape;\n  }\n\n  return [...Array(broadcast_shape.length - shape.length).fill(1), ...shape];\n}\n\nexport function _get_original_index(\n  original_shape: number[],\n  new_shape: number[],\n  index: number\n): number {\n  let original_index = 0;\n  let cur_stride = 1;\n  let temp_index = index;\n\n  for (let i = original_shape.length - 1; i >= 0; i--) {\n    if (original_shape[i] > 1) {\n      const dim_index = temp_index % new_shape[i];\n      original_index = original_index + dim_index * cur_stride;\n    }\n    cur_stride *= original_shape[i];\n    temp_index = Math.floor(temp_index / new_shape[i]);\n  }\n  return original_index;\n}\n\nexport function _get_original_index_kernel(\n  original_shape: number[],\n  new_shape: number[],\n  index: number\n): number {\n  let original_index = 0;\n  let cur_stride = 1;\n  let temp_index = index;\n\n  for (let i = this.constants.shape_length - 1; i >= 0; i--) {\n    if (original_shape[i] > 1) {\n      const dim_index = temp_index % new_shape[i];\n      original_index = original_index + dim_index * cur_stride;\n    }\n    cur_stride = cur_stride * original_shape[i];\n    temp_index = Math.floor(temp_index / new_shape[i]);\n  }\n  return original_index;\n}\n\nexport function _get_original_index_from_transposed_index(\n  original_shape: number[],\n  dim0: number,\n  dim1: number,\n  transposed_index: number\n): number {\n  let original_index = 0;\n  let cur_stride = 1;\n  let temp_index = transposed_index;\n\n  let dim0_index = 0;\n  let dim1_index = 0;\n\n  for (let i = this.constants.shape_length - 1; i >= 0; i--) {\n    const dim_index = temp_index % original_shape[i];\n    if (i == dim0) {\n      dim0_index = dim_index;\n    }\n    if (i == dim1) {\n      dim1_index = dim_index;\n    }\n    temp_index = Math.floor(temp_index / original_shape[i]);\n  }\n\n  temp_index = transposed_index;\n\n  for (let j = this.constants.shape_length - 1; j >= 0; j--) {\n    const dim_index = temp_index % original_shape[j];\n    if (j == dim0) {\n      original_index = original_index + dim1_index * cur_stride;\n    } else if (j == dim1) {\n      original_index = original_index + dim0_index * cur_stride;\n    } else {\n      original_index = original_index + dim_index * cur_stride;\n    }\n    cur_stride = cur_stride * original_shape[j];\n    temp_index = Math.floor(temp_index / original_shape[j]);\n  }\n\n  return original_index;\n\n  // return transposed_index;\n}\n","/*\n * TODO:\n * - Probably use Source Academy gpu.js\n */\n\nimport { GPU, Texture } from '@veehz/gpu.js';\nimport {\n  _get_original_index_from_transposed_index,\n  _get_original_index_kernel\n} from './broadcasting';\n\nexport { Texture };\n\n/**\n * Problems with gpu:\n * - source array too large when all the options dynamicoutput dynamicarguments pipeline immutable are true\n * - if pipeline is not used, then the memory transfer is too slow\n * - if dynamicarguments is not used, then the source array is too large error will appear (https://github.com/gpujs/gpu.js/issues/495)\n * - if dynamicoutputs is not used, then loops and broadcasting cannot be used\n * \n * CPU is currently fast enough as well.\n */\nconst gpu = new GPU({ mode: 'cpu' });\n\n// gpu.addFunction(_get_original_index_kernel);\ngpu.addFunction(_get_original_index_kernel, {\n  returnType: 'Integer',\n  argumentTypes: {\n    original_shape: 'Array',\n    new_shape: 'Array',\n    index: 'Integer'\n  }\n});\n\ngpu.addFunction(_get_original_index_from_transposed_index, {\n  returnType: 'Integer',\n  argumentTypes: {\n    original_shape: 'Array',\n    dim0: 'Integer',\n    dim1: 'Integer',\n    transposed_index: 'Integer'\n  }\n});\n\nexport default gpu;\n\n// for debugging purposes\nexport { GPU };\n","import { Operation, OperationConstructor } from './base';\n\n// Only allow registering concrete, constructible Operation classes\nconst operations = new Map<string, OperationConstructor>();\nconst operations_cache = new Map<string, Operation>();\n\nexport function registerOperation(name: string, func: OperationConstructor) {\n  operations.set(name, func);\n}\n\nexport function getOperation(name: string): OperationConstructor {\n  const func = operations.get(name);\n  if (!func) {\n    throw new Error(`Operation '${name}' is not registered.`);\n  }\n  return func;\n}\n\nexport function getOperationCache(name: string): Operation {\n  const operation = operations_cache.get(name);\n  if (!operation) {\n    operations_cache.set(name, new (getOperation(name))());\n    return operations_cache.get(name)!;\n  }\n  return operation;\n}","import { _get_original_index } from './broadcasting';\nimport { Operation } from './operations/base';\nimport { getOperation, getOperationCache } from './operations/registry';\nimport { Texture } from './gpu';\n\n/*\n * TODO:\n * - Add support for Textures to be stored in Tensors\n */\n\ntype TypedArray =\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array;\n\nexport type NestedNumberArray = number | TypedArray | NestedNumberArray[];\n\nfunction _get_shape(data: NestedNumberArray): number[] {\n  if (ArrayBuffer.isView(data)) {\n    return [data.length];\n  }\n\n  const shape = [];\n  while (Array.isArray(data)) {\n    shape.push(data.length);\n    data = data[0];\n  }\n  return shape;\n}\n\nfunction _flatten(data: NestedNumberArray): number[] {\n  if (Array.isArray(data)) {\n    return data.flatMap(item => _flatten(item));\n  } else if (ArrayBuffer.isView(data)) {\n    return Array.from(data);\n  } else {\n    return [data];\n  }\n}\n\nexport class Tensor {\n  data: number[] | Texture;\n  _shape: number[];\n  operation: Operation | null = null;\n  public grad: Tensor | null = null;\n\n  requires_grad: boolean;\n\n  constructor(\n    data: NestedNumberArray | Texture,\n    options: { requires_grad?: boolean } = {},\n    internal_options: { operation?: Operation; shape?: number[] } = {}\n  ) {\n    this.data = data instanceof Texture ? data : _flatten(data);\n    this.requires_grad = options.requires_grad ?? false;\n\n    this._shape = internal_options.shape ?? _get_shape(data instanceof Texture ? data.toArray() : data);\n    this.operation = internal_options.operation ?? null;\n  }\n\n  // TODO: Somehow having a shape of [] will have a weird error:\n  // TypeError: Cannot read properties of undefined (reading 'length')\n  // when running kernel (something to do with constants?)\n  // so a little hack to return [1] when the shape is []\n  get shape(): number[] {\n    return this._shape.length === 0 ? [1] : this._shape;\n    // return this._shape;\n  }\n\n  toArray_(): void {\n    if (this.data instanceof Texture) {\n      this.data = this.data.toArray() as number[];\n    }\n  }\n\n  toArray(): number[] {\n    if (this.data instanceof Texture) {\n      return this.data.toArray() as number[];\n    }\n    return this.data;\n  }\n\n  dataLength(): number {\n    if (this.data instanceof Texture) {\n      return this.shape.reduce((acc, val) => acc * val, 1);\n    }\n    return this.data.length;\n  }\n\n  set shape(shape: number[]) {\n    this._shape = shape;\n  }\n\n  private _executeUnaryOp(opName: string): Tensor {\n    const operation = this.requires_grad ? new (getOperation(opName))() : getOperationCache(opName);\n    return operation.forward(this);\n  }\n\n  private _executeBinaryOp(opName: string, other: Tensor | number): Tensor {\n    if (typeof other == 'number') {\n      other = new Tensor(other);\n    }\n    const operation = this.requires_grad || other.requires_grad ? new (getOperation(opName))() : getOperationCache(opName);\n    return operation.forward(this, other);\n  }\n\n  private _executeOpRaw(opName: string, ...args: any[]): Tensor {\n    const operation = new (getOperation(opName))();\n    return operation.forward(this, ...args);\n  }\n\n  item(): number {\n    if (this.dataLength() !== 1) {\n      throw new Error('Tensor.item() is only valid for scalars');\n    }\n    return this.toArray()[0];\n  }\n\n  detach(): Tensor {\n    return new Tensor(this.data, { requires_grad: false }, { shape: this.shape });\n  }\n\n  detach_(): void {\n    this.requires_grad = false;\n    this.grad = null;\n    this.operation = null;\n  }\n\n  zero_(): void {\n    this.data = Array(this.dataLength()).fill(0);\n  }\n\n  backward(grad?: Tensor | null): void {\n    if (!this.requires_grad) {\n      // If this tensor does not require gradients, stop propagation.\n      // TODO: check pytorch behaviour\n      return;\n    }\n\n    if (!grad) {\n      if (this.dataLength() !== 1) {\n        throw new Error('Gradient is required for non-scalar tensors');\n      }\n      grad = new Tensor(1);\n    } else {\n      grad.toArray_();\n    }\n\n    if (!this.grad) {\n      this.grad = new Tensor(Array(this.dataLength()).fill(0));\n    }\n\n    this.grad.toArray_();\n\n    // Add grad to this.grad\n    for (let i = 0; i < grad.dataLength(); i++) {\n      this.grad.data[_get_original_index(this.shape, grad.shape, i)] += grad.data[i];\n    }\n\n    if (this.operation) {\n      // Propagate only the incoming local gradient, not the accumulated one,\n      // to avoid double-counting when a tensor receives gradients from\n      // multiple downstream paths.\n      // this.operation.backward(grad);\n      this.operation.backward(this.grad);\n    }\n  }\n\n  // operations\n\n  // binary pointwise\n\n  add(other: Tensor | number): Tensor {\n    return this._executeBinaryOp('add', other);\n  }\n\n  sub(other: Tensor | number): Tensor {\n    return this._executeBinaryOp('sub', other);\n  }\n\n  mul(other: Tensor | number): Tensor {\n    return this._executeBinaryOp('mul', other);\n  }\n\n  div(other: Tensor | number): Tensor {\n    return this._executeBinaryOp('div', other);\n  }\n\n  pow(other: Tensor | number): Tensor {\n    if (typeof other == 'number' && other % 1 === 0) {\n      return this._executeOpRaw('powint', other);\n    }\n    return this._executeBinaryOp('pow', other);\n  }\n\n  fmod(other: Tensor | number): Tensor {\n    return this._executeBinaryOp('fmod', other);\n  }\n\n  // unary pointwise\n\n  log(): Tensor {\n    return this._executeUnaryOp('log');\n  }\n\n  sqrt(): Tensor {\n    return this._executeUnaryOp('sqrt');\n  }\n\n  exp(): Tensor {\n    return this._executeUnaryOp('exp');\n  }\n\n  abs(): Tensor {\n    return this._executeUnaryOp('abs');\n  }\n\n  sign(): Tensor {\n    return this._executeUnaryOp('sign');\n  }\n\n  neg(): Tensor {\n    return this._executeUnaryOp('neg');\n  }\n\n  reciprocal(): Tensor {\n    return this._executeUnaryOp('reciprocal');\n  }\n\n  reshape(shape: number[]): Tensor {\n    return this._executeOpRaw('reshape', shape);\n  }\n \n  // trigonometric\n\n  sin(): Tensor {\n    return this._executeUnaryOp('sin');\n  }\n  \n  cos(): Tensor {\n    return this._executeUnaryOp('cos');\n  }\n  \n  tan(): Tensor {\n    return this._executeUnaryOp('tan');\n  }\n\n  // reduction\n\n  sum(): Tensor {\n    return this._executeUnaryOp('sum');\n  }\n\n  mean(): Tensor {\n    return this._executeUnaryOp('mean');\n  }\n\n  // linalg\n\n  transpose(dim0: number, dim1: number): Tensor {\n    return this._executeOpRaw('transpose', dim0, dim1);\n  }\n\n  matmul(other: Tensor): Tensor {\n    return this._executeBinaryOp('matmul', other);\n  }\n\n  // comparison\n\n  lt(other: Tensor | number): Tensor {\n    return this._executeBinaryOp('lt', other);\n  }\n\n  gt(other: Tensor | number): Tensor {\n    return this._executeBinaryOp('gt', other);\n  }\n\n  le(other: Tensor | number): Tensor {\n    return this._executeBinaryOp('le', other);\n  }\n\n  ge(other: Tensor | number): Tensor {\n    return this._executeBinaryOp('ge', other);\n  }\n  \n  eq(other: Tensor | number): Tensor {\n    return this._executeBinaryOp('eq', other);\n  }\n\n  ne(other: Tensor | number): Tensor {\n    return this._executeBinaryOp('ne', other);\n  }\n}\n","import { Tensor } from '../tensor';\n\nabstract class Operation {\n  abstract forward(...args: (Tensor | number | number[])[]): Tensor;\n  abstract backward(dz: Tensor): void;\n}\n\nabstract class UnaryOperation extends Operation {\n  abstract forward(a: Tensor): Tensor;\n  abstract backward(dz: Tensor): void;\n}\n\nabstract class BinaryOperation extends Operation {\n  abstract forward(a: Tensor, b: Tensor): Tensor;\n  abstract backward(dz: Tensor): void;\n}\n\nexport type OperationConstructor = new () => Operation;\nexport type UnaryOperationConstructor = new () => UnaryOperation;\nexport type BinaryOperationConstructor = new () => BinaryOperation;\n\nexport { Operation, UnaryOperation, BinaryOperation };\n","import { Tensor } from '../tensor';\nimport { getOperation } from './registry';\n\nfunction generate_function(opname: string) {\n  return (...args: (Tensor | number)[]) => {\n    const operation = new (getOperation(opname))();\n    return operation.forward(...args);\n  };\n}\n\nfunction generate_unary_function(opname: string) {\n  return (a: Tensor | number) => {\n    if (typeof a == 'number') {\n      a = new Tensor(a);\n    }\n\n    const operation = new (getOperation(opname))();\n    return operation.forward(a);\n  };\n}\n\nfunction generate_binary_function(opname: string) {\n  return (a: Tensor | number, b: Tensor | number) => {\n    if (typeof a == 'number') {\n      a = new Tensor(a);\n    }\n\n    if (typeof b == 'number') {\n      b = new Tensor(b);\n    }\n\n    const operation = new (getOperation(opname))();\n    return operation.forward(a, b);\n  };\n}\n\n// binary pointwise\n\nexport const add = generate_binary_function('add');\nexport const sub = generate_binary_function('sub');\nexport const mul = generate_binary_function('mul');\nexport const div = generate_binary_function('div');\nexport const pow = generate_binary_function('pow');\nexport const fmod = generate_binary_function('fmod');\n\n// unary pointwise\n\nexport const log = generate_unary_function('log');\nexport const sqrt = generate_unary_function('sqrt');\nexport const exp = generate_unary_function('exp');\nexport const abs = generate_unary_function('abs');\nexport const sign = generate_unary_function('sign');\nexport const neg = generate_unary_function('neg');\nexport const reciprocal = generate_unary_function('reciprocal');\nexport const reshape = generate_function('reshape');\n\n// trigonometric\n\nexport const sin = generate_unary_function('sin');\nexport const cos = generate_unary_function('cos');\nexport const tan = generate_unary_function('tan');\n\n// reduction\n\nexport const sum = generate_unary_function('sum');\nexport const mean = generate_unary_function('mean');\n\n// linalg\n\nexport const transpose = generate_function('transpose');\nexport const matmul = generate_binary_function('matmul');\n\n// comparison\n\nexport const lt = generate_binary_function('lt');\nexport const gt = generate_binary_function('gt');\nexport const le = generate_binary_function('le');\nexport const ge = generate_binary_function('ge');\nexport const eq = generate_binary_function('eq');\nexport const ne = generate_binary_function('ne');","// This file is generated by scripts/generate_script.py from src/operations/ops.ts.j2\nimport { Tensor } from '../tensor';\nimport {\n  _broadcast_shape,\n  _get_original_index_from_transposed_index,\n  _get_original_index_kernel,\n  _pad_shape\n} from '../broadcasting';\nimport gpu, { Texture } from '../gpu';\nimport { Operation, BinaryOperation, UnaryOperation } from './base';\nimport * as functional from './functional';\nimport { registerOperation } from './registry';\n\n// binary pointwise\n\nconst _add_kernel = gpu.createKernel(\n  function (a: number[], as: number[], b: number[], bs: number[], bcs: number[]) {\n    const a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n    const b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n    return a[a_index] + b[b_index];\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _add_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  const broadcast_shape = _broadcast_shape(a.shape, b.shape);\n  const padded_a_shape = _pad_shape(a.shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b.shape, broadcast_shape);\n\n  const kernel = _add_kernel;\n  kernel.setConstants({\n    shape_length: broadcast_shape.length\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, padded_a_shape, b.data, padded_b_shape, broadcast_shape) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: broadcast_shape }\n  );\n}\n// class generated from binary_op_class(\"Add\", \"add\", backward_operations)\nexport class Add extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _add_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    a.backward(dz);\n    b.backward(dz);\n  }\n}\nregisterOperation('add', Add);\n\nconst _sub_kernel = gpu.createKernel(\n  function (a: number[], as: number[], b: number[], bs: number[], bcs: number[]) {\n    const a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n    const b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n    return a[a_index] - b[b_index];\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _sub_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  const broadcast_shape = _broadcast_shape(a.shape, b.shape);\n  const padded_a_shape = _pad_shape(a.shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b.shape, broadcast_shape);\n\n  const kernel = _sub_kernel;\n  kernel.setConstants({\n    shape_length: broadcast_shape.length\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, padded_a_shape, b.data, padded_b_shape, broadcast_shape) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: broadcast_shape }\n  );\n}\n// class generated from binary_op_class(\"Sub\", \"sub\", backward_operations)\nexport class Sub extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _sub_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    a.backward(dz);\n    b.backward(dz.mul(new Tensor(-1)));\n  }\n}\nregisterOperation('sub', Sub);\n\nconst _mul_kernel = gpu.createKernel(\n  function (a: number[], as: number[], b: number[], bs: number[], bcs: number[]) {\n    const a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n    const b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n    return a[a_index] * b[b_index];\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _mul_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  const broadcast_shape = _broadcast_shape(a.shape, b.shape);\n  const padded_a_shape = _pad_shape(a.shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b.shape, broadcast_shape);\n\n  const kernel = _mul_kernel;\n  kernel.setConstants({\n    shape_length: broadcast_shape.length\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, padded_a_shape, b.data, padded_b_shape, broadcast_shape) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: broadcast_shape }\n  );\n}\n// class generated from binary_op_class(\"Mul\", \"mul\", backward_operations)\nexport class Mul extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _mul_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.mul(b));\n    b.backward(dz.mul(a));\n  }\n}\nregisterOperation('mul', Mul);\n\nconst _div_kernel = gpu.createKernel(\n  function (a: number[], as: number[], b: number[], bs: number[], bcs: number[]) {\n    const a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n    const b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n    return a[a_index] / b[b_index];\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _div_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  const broadcast_shape = _broadcast_shape(a.shape, b.shape);\n  const padded_a_shape = _pad_shape(a.shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b.shape, broadcast_shape);\n\n  const kernel = _div_kernel;\n  kernel.setConstants({\n    shape_length: broadcast_shape.length\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, padded_a_shape, b.data, padded_b_shape, broadcast_shape) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: broadcast_shape }\n  );\n}\n// class generated from binary_op_class(\"Div\", \"div\", backward_operations)\nexport class Div extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _div_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.div(b));\n    b.backward(dz.mul(a).mul(new Tensor(-1)).div(b).div(b));\n  }\n}\nregisterOperation('div', Div);\n\nconst _pow_kernel = gpu.createKernel(\n  function (a: number[], as: number[], b: number[], bs: number[], bcs: number[]) {\n    const a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n    const b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n    return Math.pow(a[a_index], b[b_index]);\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _pow_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  const broadcast_shape = _broadcast_shape(a.shape, b.shape);\n  const padded_a_shape = _pad_shape(a.shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b.shape, broadcast_shape);\n\n  const kernel = _pow_kernel;\n  kernel.setConstants({\n    shape_length: broadcast_shape.length\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, padded_a_shape, b.data, padded_b_shape, broadcast_shape) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: broadcast_shape }\n  );\n}\n// class generated from binary_op_class(\"Pow\", \"pow\", backward_operations)\nexport class Pow extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _pow_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.mul(b).mul(a.pow(b.sub(new Tensor(1)))));\n    b.backward(dz.mul(a.pow(b)).mul(a.log()));\n  }\n}\nregisterOperation('pow', Pow);\n\nconst _fmod_kernel = gpu.createKernel(\n  function (a: number[], as: number[], b: number[], bs: number[], bcs: number[]) {\n    const a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n    const b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n    return a[a_index] % b[b_index];\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _fmod_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  const broadcast_shape = _broadcast_shape(a.shape, b.shape);\n  const padded_a_shape = _pad_shape(a.shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b.shape, broadcast_shape);\n\n  const kernel = _fmod_kernel;\n  kernel.setConstants({\n    shape_length: broadcast_shape.length\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, padded_a_shape, b.data, padded_b_shape, broadcast_shape) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: broadcast_shape }\n  );\n}\n// class generated from binary_op_class(\"Fmod\", \"fmod\", backward_operations)\nexport class Fmod extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _fmod_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    a.backward(dz);\n  }\n}\nregisterOperation('fmod', Fmod);\n\nfunction _powint_kernel_function(a: number[], n: number) {\n  return Math.pow(a[this.thread.x], n);\n}\n\nconst _powint_kernel = gpu.createKernel(\n  _powint_kernel_function,\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _powint_tensor(a: Tensor, n: number, operation: Operation | null = null): Tensor {\n  const kernel = _powint_kernel;\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, n) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: a.shape }\n  );\n}\n\nexport class PowInt extends Operation {\n  private cache: [Tensor, number];\n  public forward(a: Tensor, n: number): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a, n];\n    }\n\n    return _powint_tensor(a, n, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, n] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.mul(n).mul(a.pow(n - 1)));\n  }\n}\nregisterOperation('powint', PowInt);\n\n// unary pointwise\n\n// function generated from unary_op_base(\"log\", \"Math.log(a[this.thread.x])\")\n\nconst _log_kernel = gpu.createKernel(\n  function (a: number[]) {\n    return Math.log(a[this.thread.x]);\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _log_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  const kernel = _log_kernel;\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: a.shape }\n  );\n}\n// class generated from unary_op_class(\"Log\", \"log\", backward_operations)\nexport class Log extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _log_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    a.backward(new Tensor(1).div(a));\n  }\n}\nregisterOperation('log', Log);\n\n// function generated from unary_op_base(\"sqrt\", \"Math.sqrt(a[this.thread.x])\")\n\nconst _sqrt_kernel = gpu.createKernel(\n  function (a: number[]) {\n    return Math.sqrt(a[this.thread.x]);\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _sqrt_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  const kernel = _sqrt_kernel;\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: a.shape }\n  );\n}\n// class generated from unary_op_class(\"Sqrt\", \"sqrt\", backward_operations)\nexport class Sqrt extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _sqrt_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    a.backward(new Tensor(1).div(a.sqrt()).div(2));\n  }\n}\nregisterOperation('sqrt', Sqrt);\n\n// function generated from unary_op_base(\"exp\", \"Math.exp(a[this.thread.x])\")\n\nconst _exp_kernel = gpu.createKernel(\n  function (a: number[]) {\n    return Math.exp(a[this.thread.x]);\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _exp_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  const kernel = _exp_kernel;\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: a.shape }\n  );\n}\n// class generated from unary_op_class(\"Exp\", \"exp\", backward_operations)\nexport class Exp extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _exp_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.mul(a.exp()));\n  }\n}\nregisterOperation('exp', Exp);\n\n// function generated from unary_op_base(\"abs\", \"Math.abs(a[this.thread.x])\")\n\nconst _abs_kernel = gpu.createKernel(\n  function (a: number[]) {\n    return Math.abs(a[this.thread.x]);\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _abs_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  const kernel = _abs_kernel;\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: a.shape }\n  );\n}\n// class generated from unary_op_class(\"Abs\", \"abs\", backward_operations)\nexport class Abs extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _abs_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.mul(functional.sign(a)));\n  }\n}\nregisterOperation('abs', Abs);\n\n// function generated from unary_op_base(\"sign\", \"Math.sign(a[this.thread.x])\")\n\nconst _sign_kernel = gpu.createKernel(\n  function (a: number[]) {\n    return Math.sign(a[this.thread.x]);\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _sign_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  const kernel = _sign_kernel;\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: a.shape }\n  );\n}\n// class generated from unary_op_class(\"Sign\", \"sign\", backward_operations)\nexport class Sign extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _sign_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    \n  }\n}\nregisterOperation('sign', Sign);\n\n// function generated from unary_op_base(\"neg\", \"Math.sign(a[this.thread.x]) * a[this.thread.x]\")\n\nconst _neg_kernel = gpu.createKernel(\n  function (a: number[]) {\n    return Math.sign(a[this.thread.x]) * a[this.thread.x];\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _neg_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  const kernel = _neg_kernel;\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: a.shape }\n  );\n}\n// class generated from unary_op_class(\"Neg\", \"neg\", backward_operations)\nexport class Neg extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _neg_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.mul(new Tensor(-1)));\n  }\n}\nregisterOperation('neg', Neg);\n\n// function generated from unary_op_base(\"reciprocal\", \"1 / a[this.thread.x]\")\n\nconst _reciprocal_kernel = gpu.createKernel(\n  function (a: number[]) {\n    return 1 / a[this.thread.x];\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _reciprocal_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  const kernel = _reciprocal_kernel;\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: a.shape }\n  );\n}\n// class generated from unary_op_class(\"Reciprocal\", \"reciprocal\", backward_operations)\nexport class Reciprocal extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _reciprocal_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.mul(a.pow(-2)));\n  }\n}\nregisterOperation('reciprocal', Reciprocal);\n\nexport class Reshape extends Operation {\n  private cache: [Tensor];\n  public forward(a: Tensor, shape: number[]) {\n    const previous_length = a.dataLength();\n    const target_length = shape.reduce((acc, val) => acc * val, 1);\n\n    if (previous_length !== target_length) {\n      throw new Error('Shape mismatch: ' + a.shape + ' and ' + shape);\n    }\n\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n\n    return new Tensor(\n      a.data,\n      { requires_grad: a.requires_grad },\n      { operation: a.requires_grad ? this : null, shape }\n    );\n  }\n  public backward(dz: Tensor) {\n    const [a] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.reshape(a.shape));\n  }\n}\nregisterOperation('reshape', Reshape);\n\n// trigonometric\n\n// function generated from unary_op_base(\"sin\", \"Math.sin(a[this.thread.x])\")\n\nconst _sin_kernel = gpu.createKernel(\n  function (a: number[]) {\n    return Math.sin(a[this.thread.x]);\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _sin_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  const kernel = _sin_kernel;\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: a.shape }\n  );\n}\n// class generated from unary_op_class(\"Sin\", \"sin\", backward_operations)\nexport class Sin extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _sin_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.mul(a.cos()));\n  }\n}\nregisterOperation('sin', Sin);\n\n// function generated from unary_op_base(\"cos\", \"Math.cos(a[this.thread.x])\")\n\nconst _cos_kernel = gpu.createKernel(\n  function (a: number[]) {\n    return Math.cos(a[this.thread.x]);\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _cos_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  const kernel = _cos_kernel;\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: a.shape }\n  );\n}\n// class generated from unary_op_class(\"Cos\", \"cos\", backward_operations)\nexport class Cos extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _cos_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.mul(a.sin().neg()));\n  }\n}\nregisterOperation('cos', Cos);\n\n// function generated from unary_op_base(\"tan\", \"Math.tan(a[this.thread.x])\")\n\nconst _tan_kernel = gpu.createKernel(\n  function (a: number[]) {\n    return Math.tan(a[this.thread.x]);\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _tan_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  const kernel = _tan_kernel;\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: a.shape }\n  );\n}\n// class generated from unary_op_class(\"Tan\", \"tan\", backward_operations)\nexport class Tan extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _tan_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.mul(a.cos().pow(-2)));\n  }\n}\nregisterOperation('tan', Tan);\n\n// reduction\n\nfunction _sum_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  return new Tensor(\n    a.toArray().reduce((acc, val) => acc + val, 0),\n    { requires_grad: a.requires_grad },\n    { operation: operation }\n  );\n}\n\n// class generated from unary_op_class(\"Sum\", \"sum\", backward_operations)\nexport class Sum extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _sum_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    const result = new Tensor(Array(a.dataLength()).fill(dz.item()));\n    a.backward(result);\n  }\n}\nregisterOperation('sum', Sum);\n\nfunction _mean_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  return new Tensor(\n    a.toArray().reduce((acc, val) => acc + val, 0) / a.dataLength(),\n    { requires_grad: a.requires_grad },\n    { operation: operation }\n  );\n}\n\n// class generated from unary_op_class(\"Mean\", \"mean\", backward_operations)\nexport class Mean extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _mean_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    const result = new Tensor(Array(a.dataLength()).fill(dz.item() / a.dataLength()));\n    a.backward(result);\n  }\n}\nregisterOperation('mean', Mean);\n\n// linalg\n\nconst _transpose_kernel = gpu.createKernel(\n  function (a: number[], as: number[], dim0: number, dim1: number) {\n    const a_index = _get_original_index_from_transposed_index(as, dim0, dim1, this.thread.x);\n    return a[a_index];\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _transpose_tensor(\n  a: Tensor,\n  dim0: number,\n  dim1: number,\n  operation: Operation | null = null\n): Tensor {\n  const kernel = _transpose_kernel;\n  kernel.setConstants({\n    shape_length: a.shape.length\n  });\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  const swapped_shape = [...a.shape];\n  [swapped_shape[dim0], swapped_shape[dim1]] = [swapped_shape[dim1], swapped_shape[dim0]];\n\n  return new Tensor(\n    kernel(a.data, a.shape, dim0, dim1) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: swapped_shape }\n  );\n}\n\nexport class Transpose extends Operation {\n  cache: [Tensor, number, number];\n  forward(a: Tensor, dim0: number, dim1: number): Tensor {\n    this.cache = [a, dim0, dim1];\n    return _transpose_tensor(a, dim0, dim1, this);\n  }\n  backward(dz: Tensor): void {\n    const [a, dim0, dim1] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.transpose(dim0, dim1));\n  }\n}\nregisterOperation('transpose', Transpose);\n\nfunction _matmul_kernel_function(\n  a: number[],\n  as: number[],\n  b: number[],\n  bs: number[],\n  bcs: number[]\n) {\n  let a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n  let b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n  const l = this.constants.shape_length;\n\n  const tmp1 = bcs[l] * bcs[l + 1];\n  const position = this.thread.x % tmp1;\n\n  a_index = a_index * as[l] * as[l + 1] + Math.floor(position / bcs[l + 1]) * as[l + 1];\n  b_index = b_index * bs[l] * bs[l + 1] + (position % bcs[l + 1]);\n\n  const b_stride = bs[l + 1];\n\n  let sum = 0;\n  for (let i = 0; i < this.constants.lp; i++) {\n    sum = sum + a[a_index] * b[b_index];\n    a_index = a_index + 1;\n    b_index = b_index + b_stride;\n  }\n\n  return sum;\n}\n\nconst _matmul_kernel = gpu.createKernel(_matmul_kernel_function,\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _matmul_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  if (a.shape.length == 1 && b.shape.length == 1) {\n    return a.mul(b).sum();\n  }\n\n  const a_1d = a.shape.length == 1;\n  const b_1d = b.shape.length == 1;\n\n  const a_shape = a_1d ? [1, a.shape[0]] : a.shape;\n  const b_shape = b_1d ? [b.shape[0], 1] : b.shape;\n\n  if (a_shape[a_shape.length - 1] != b_shape[b_shape.length - 2]) {\n    // TODO: check what error pytorch throws\n    throw new Error('Shape mismatch: ' + a.shape + ' and ' + b.shape);\n  }\n\n  const loop_iterations = a_shape[a_shape.length - 1];\n\n  if (loop_iterations > 1000) {\n    // TODO: can try fixing with maxLoopIterations by gpu.js\n    throw new Error('Loop iterations too large: ' + loop_iterations);\n  }\n\n  const broadcast_shape = _broadcast_shape(a_shape.slice(0, -2), b_shape.slice(0, -2)).concat([\n    a_shape[a_shape.length - 2],\n    b_shape[b_shape.length - 1]\n  ]);\n\n  const padded_a_shape = _pad_shape(a_shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b_shape, broadcast_shape);\n\n  const kernel = _matmul_kernel;\n  kernel.setConstants({\n    lp: loop_iterations,\n    // assumes that _get_original_index_kernel reads from the front\n    shape_length: broadcast_shape.length - 2\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  let shape_after_removing_extra_dims = [...broadcast_shape];\n\n  if (a_1d) {\n    shape_after_removing_extra_dims = shape_after_removing_extra_dims\n      .slice(0, -2)\n      .concat([broadcast_shape[broadcast_shape.length - 1]]);\n  }\n\n  if (b_1d) {\n    shape_after_removing_extra_dims = shape_after_removing_extra_dims.slice(0, -1);\n  }\n\n  return new Tensor(\n    kernel(\n      a.data,\n      padded_a_shape,\n      b.data,\n      padded_b_shape,\n      broadcast_shape\n    ) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: shape_after_removing_extra_dims }\n  );\n}\n\n// class generated from binary_op_class(\"Matmul\", \"matmul\", backward_operations)\nexport class Matmul extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _matmul_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    \n  }\n}\nregisterOperation('matmul', Matmul);\n\n// comparison\n\nconst _lt_kernel = gpu.createKernel(\n  function (a: number[], as: number[], b: number[], bs: number[], bcs: number[]) {\n    const a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n    const b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n    return (a[a_index] < b[b_index]) ? 1 : 0;\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _lt_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  const broadcast_shape = _broadcast_shape(a.shape, b.shape);\n  const padded_a_shape = _pad_shape(a.shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b.shape, broadcast_shape);\n\n  const kernel = _lt_kernel;\n  kernel.setConstants({\n    shape_length: broadcast_shape.length\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, padded_a_shape, b.data, padded_b_shape, broadcast_shape) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: broadcast_shape }\n  );\n}\n// class generated from binary_op_class(\"Lt\", \"lt\", backward_operations)\nexport class Lt extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _lt_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    \n  }\n}\nregisterOperation('lt', Lt);\n\nconst _gt_kernel = gpu.createKernel(\n  function (a: number[], as: number[], b: number[], bs: number[], bcs: number[]) {\n    const a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n    const b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n    return (a[a_index] > b[b_index]) ? 1 : 0;\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _gt_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  const broadcast_shape = _broadcast_shape(a.shape, b.shape);\n  const padded_a_shape = _pad_shape(a.shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b.shape, broadcast_shape);\n\n  const kernel = _gt_kernel;\n  kernel.setConstants({\n    shape_length: broadcast_shape.length\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, padded_a_shape, b.data, padded_b_shape, broadcast_shape) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: broadcast_shape }\n  );\n}\n// class generated from binary_op_class(\"Gt\", \"gt\", backward_operations)\nexport class Gt extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _gt_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    \n  }\n}\nregisterOperation('gt', Gt);\n\nconst _le_kernel = gpu.createKernel(\n  function (a: number[], as: number[], b: number[], bs: number[], bcs: number[]) {\n    const a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n    const b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n    return (a[a_index] <= b[b_index]) ? 1 : 0;\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _le_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  const broadcast_shape = _broadcast_shape(a.shape, b.shape);\n  const padded_a_shape = _pad_shape(a.shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b.shape, broadcast_shape);\n\n  const kernel = _le_kernel;\n  kernel.setConstants({\n    shape_length: broadcast_shape.length\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, padded_a_shape, b.data, padded_b_shape, broadcast_shape) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: broadcast_shape }\n  );\n}\n// class generated from binary_op_class(\"Le\", \"le\", backward_operations)\nexport class Le extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _le_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    \n  }\n}\nregisterOperation('le', Le);\n\nconst _ge_kernel = gpu.createKernel(\n  function (a: number[], as: number[], b: number[], bs: number[], bcs: number[]) {\n    const a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n    const b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n    return (a[a_index] >= b[b_index]) ? 1 : 0;\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _ge_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  const broadcast_shape = _broadcast_shape(a.shape, b.shape);\n  const padded_a_shape = _pad_shape(a.shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b.shape, broadcast_shape);\n\n  const kernel = _ge_kernel;\n  kernel.setConstants({\n    shape_length: broadcast_shape.length\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, padded_a_shape, b.data, padded_b_shape, broadcast_shape) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: broadcast_shape }\n  );\n}\n// class generated from binary_op_class(\"Ge\", \"ge\", backward_operations)\nexport class Ge extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _ge_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    \n  }\n}\nregisterOperation('ge', Ge);\n\nconst _eq_kernel = gpu.createKernel(\n  function (a: number[], as: number[], b: number[], bs: number[], bcs: number[]) {\n    const a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n    const b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n    return (a[a_index] == b[b_index]) ? 1 : 0;\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _eq_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  const broadcast_shape = _broadcast_shape(a.shape, b.shape);\n  const padded_a_shape = _pad_shape(a.shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b.shape, broadcast_shape);\n\n  const kernel = _eq_kernel;\n  kernel.setConstants({\n    shape_length: broadcast_shape.length\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, padded_a_shape, b.data, padded_b_shape, broadcast_shape) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: broadcast_shape }\n  );\n}\n// class generated from binary_op_class(\"Eq\", \"eq\", backward_operations)\nexport class Eq extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _eq_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    \n  }\n}\nregisterOperation('eq', Eq);\n\nconst _ne_kernel = gpu.createKernel(\n  function (a: number[], as: number[], b: number[], bs: number[], bcs: number[]) {\n    const a_index = _get_original_index_kernel(as, bcs, this.thread.x);\n    const b_index = _get_original_index_kernel(bs, bcs, this.thread.x);\n\n    return (a[a_index] != b[b_index]) ? 1 : 0;\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _ne_tensor(a: Tensor, b: Tensor, operation: Operation | null = null): Tensor {\n  const broadcast_shape = _broadcast_shape(a.shape, b.shape);\n  const padded_a_shape = _pad_shape(a.shape, broadcast_shape);\n  const padded_b_shape = _pad_shape(b.shape, broadcast_shape);\n\n  const kernel = _ne_kernel;\n  kernel.setConstants({\n    shape_length: broadcast_shape.length\n  });\n  kernel.setOutput([broadcast_shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data, padded_a_shape, b.data, padded_b_shape, broadcast_shape) as number[],\n    { requires_grad: a.requires_grad || b.requires_grad },\n    { operation: operation, shape: broadcast_shape }\n  );\n}\n// class generated from binary_op_class(\"Ne\", \"ne\", backward_operations)\nexport class Ne extends BinaryOperation {\n  private cache: [Tensor, Tensor];\n  public forward(a: Tensor, b: Tensor): Tensor {\n    if (a.requires_grad || b.requires_grad) {\n      this.cache = [a, b];\n    }\n    return _ne_tensor(a, b, a.requires_grad || b.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a, b] = this.cache;\n\n    // backward_operations:\n    \n  }\n}\nregisterOperation('ne', Ne);","import { Tensor } from '../tensor';\n\nexport function linspace(start: number, end: number, steps: number) {\n  const data = [];\n  const step = (end - start) / (steps - 1);\n  for (let i = 0; i < steps - 1; i++) {\n    data.push(start + i * step);\n  }\n  data.push(end);\n  return new Tensor(data);\n}\n\nfunction get_shape_from_args(args: number[] | number[][]): number[] {\n  if (Array.isArray(args[0])) {\n    return args[0];\n  }\n\n  return args as number[];\n}\n\nexport function ones(...args: number[] | number[][]): Tensor {\n  const shape = get_shape_from_args(args);\n  const tensor = new Tensor(Array(shape.reduce((a, b) => a * b, 1)).fill(1));\n  tensor.shape = shape;\n  return tensor;\n}\n\nexport function zeros(...args: number[] | number[][]): Tensor {\n  const shape = get_shape_from_args(args);\n  const tensor = new Tensor(Array(shape.reduce((a, b) => a * b, 1)).fill(0));\n  tensor.shape = shape;\n  return tensor;\n}\n\n/* TODO: use the correct distributions */\n\nexport function randn(...args: number[] | number[][]): Tensor {\n  const shape = get_shape_from_args(args);\n  const tensor = new Tensor(Array(shape.reduce((a, b) => a * b, 1)).fill(Math.random()));\n  tensor.shape = shape;\n  return tensor;\n}\n\nexport function rand(...args: number[] | number[][]): Tensor {\n  const shape = get_shape_from_args(args);\n  const tensor = new Tensor(Array(shape.reduce((a, b) => a * b, 1)).fill(Math.random()));\n  tensor.shape = shape;\n  return tensor;\n}\n\nexport function randint(low: number, high: number, shape: number[]): Tensor {\n  const tensor = new Tensor(\n    Array(shape.reduce((a, b) => a * b, 1)).fill(Math.floor(Math.random() * (high - low) + low))\n  );\n  tensor.shape = shape;\n  return tensor;\n}\n","// This file is generated by scripts/generate_script.py from src/nn/ops.ts.j2\nimport { Tensor } from '../tensor';\nimport {\n  _broadcast_shape,\n  _get_original_index_from_transposed_index,\n  _get_original_index_kernel,\n  _pad_shape\n} from '../broadcasting';\nimport gpu from '../gpu';\nimport { Operation, BinaryOperation, UnaryOperation } from '../operations/base';\nimport { registerOperation } from '../operations/registry';\n\n// function generated from unary_op_base(\"relu\", \"Math.max(a[this.thread.x], 0)\")\n\nconst _relu_kernel = gpu.createKernel(\n  function (a: number[]) {\n    return Math.max(a[this.thread.x], 0);\n  },\n  {\n    dynamicOutput: true,\n    dynamicArguments: true,\n    // pipeline: true,\n    // immutable: true\n  }\n);\n\nfunction _relu_tensor(a: Tensor, operation: Operation | null = null): Tensor {\n  const kernel = _relu_kernel;\n  kernel.setOutput([a.shape.reduce((acc, val) => acc * val, 1)]);\n\n  return new Tensor(\n    kernel(a.data) as number[],\n    { requires_grad: a.requires_grad },\n    { operation: operation, shape: a.shape }\n  );\n}\n// class generated from unary_op_class(\"Relu\", \"relu\", backward_operations)\nexport class Relu extends UnaryOperation {\n  private cache: [Tensor];\n  public forward(a: Tensor): Tensor {\n    if (a.requires_grad) {\n      this.cache = [a];\n    }\n    return _relu_tensor(a, a.requires_grad ? this : null);\n  }\n  public backward(dz: Tensor): void {\n    const [a] = this.cache;\n\n    // backward_operations:\n    a.backward(dz.mul(a.gt(0)));\n  }\n}\nregisterOperation('relu', Relu);","import { Tensor } from \"../tensor\";\nimport { NestedNumberArray } from \"../tensor\";\nimport { Operation } from \"../operations/base\";\nimport { rand } from \"../creation\";\nimport { functional } from \".\";\n\nexport class Parameter extends Tensor {\n  constructor(\n    data: NestedNumberArray | Tensor | Parameter,\n    // Default to requires_grad=true\n    options: { requires_grad?: boolean } = {\n        requires_grad: true,\n    },\n    internal_options: { operation?: Operation; shape?: number[] } = {}\n  ) {\n    if (data instanceof Tensor) {\n      super(data.data, { requires_grad: true }, { shape: data.shape });\n    } else if (data instanceof Parameter) {\n      super(data.data, { requires_grad: true }, { shape: data.shape });\n    } else {\n      super(data, options, internal_options);\n    }\n  }\n}\n\nexport abstract class Module {\n  private _modules: { [key: string]: Module };\n  private _parameters: { [key: string]: Parameter };\n\n  constructor() {\n    this._parameters = {};\n    this._modules = {};\n  }\n\n  private register_parameter(parameter_name: string, parameter: Parameter) {\n    this._parameters[parameter_name] = parameter;\n  }\n\n  private register_module(module_name: string, module: Module) {\n    this._modules[module_name] = module;\n  }\n\n  protected register(name: string, value: Parameter | Module) {\n    if (value instanceof Parameter) {\n      this.register_parameter(name, value);\n    } else {\n      this.register_module(name, value);\n    }\n  }\n\n  public abstract forward(...args: Tensor[]): Tensor;\n\n  public parameters(): Parameter[] {\n    let params: Parameter[] = Object.values(this._parameters);\n    for (const module of Object.values(this._modules)) {\n      params = params.concat(module.parameters());\n    }\n    return params;\n  }\n}\n\nexport class Linear extends Module {\n  private weight: Parameter;\n  private bias: Parameter;\n\n  constructor(in_features: number, out_features: number) {\n    super();\n    const k = Math.sqrt(1 / in_features);\n\n    this.weight = new Parameter(rand([out_features, in_features]).mul(2 * k).sub(k));\n    this.bias = new Parameter(rand([out_features]).mul(2 * k).sub(k));\n\n    this.register(\"weight\", this.weight);\n    this.register(\"bias\", this.bias);\n  }\n\n  forward(input: Tensor) {\n    return input.matmul(this.weight.transpose(0, 1)).add(this.bias);\n  }\n}\n\nexport class ReLU extends Module {\n  constructor() {\n    super();\n  }\n\n  forward(input: Tensor) {\n    return functional.relu(input);\n  }\n}\n","import { Tensor } from \"../tensor\";\nimport { getOperation } from \"../operations/registry\";\n\nfunction generate_function(opname: string) {\n  return (...args: (Tensor | number)[]) => {\n    const operation = new (getOperation(opname))();\n    return operation.forward(...args);\n  };\n}\n\nfunction generate_unary_function(opname: string) {\n  return (a: Tensor | number) => {\n    if (typeof a == 'number') {\n      a = new Tensor(a);\n    }\n\n    const operation = new (getOperation(opname))();\n    return operation.forward(a);\n  };\n}\n\nfunction generate_binary_function(opname: string) {\n  return (a: Tensor | number, b: Tensor | number) => {\n    if (typeof a == 'number') {\n      a = new Tensor(a);\n    }\n\n    if (typeof b == 'number') {\n      b = new Tensor(b);\n    }\n\n    const operation = new (getOperation(opname))();\n    return operation.forward(a, b);\n  };\n}\n\nexport const relu = generate_unary_function('relu');\n","import { Parameter } from \"../nn/module\";\n\nexport abstract class Optimizer {\n  params: Parameter[];\n  defaults: { [key: string]: any };\n\n  constructor(params: Parameter[], defaults: { [key: string]: any }) {\n    this.params = params;\n    this.defaults = defaults;\n  }\n\n  public zero_grad(): void {\n    for (const param of this.params) {\n      param.grad = null;\n    }\n  }\n\n  abstract step(): void;\n}\n","import { Optimizer } from \"./base\";\nimport { Parameter } from \"../nn/module\";\nimport { Tensor } from \"../tensor\";\nimport { zeros } from \"../creation\";\n\nexport class SGD extends Optimizer {\n  private state: Map<Parameter, { velocity: Tensor }> = new Map();\n  private lr: number;\n  private momentum: number;\n  private dampening: number;\n  private weight_decay: number;\n  private nesterov: boolean;\n  private maximize: boolean;\n  \n  constructor(\n    params: Parameter[],\n    lr: number = 0.001,\n    momentum: number = 0.0,\n    dampening: number = 0.0,\n    weight_decay: number = 0.0,\n    nesterov: boolean = false,\n    maximize: boolean = false,\n  ) {\n    super(params, {});\n    this.lr = lr;\n    this.momentum = momentum;\n    this.dampening = dampening;\n    this.weight_decay = weight_decay;\n    this.nesterov = nesterov;\n    this.maximize = maximize;\n  }\n\n  step(): void {\n    for (const param of this.params) {\n      let g = this.maximize ? param.grad.mul(-1) : param.grad;\n      if (this.weight_decay != 0) {\n        g = g.add(param.mul(this.weight_decay));\n      }\n\n      if (this.momentum != 0) {\n        let dampening = this.dampening;\n        if(!this.state.has(param)) {\n          this.state.set(param, { velocity: zeros(param.shape) });\n          dampening = 0;\n        }\n\n        let buf = this.state.get(param)!.velocity;\n        buf = buf.mul(this.momentum)\n        buf = buf.add(g.mul(dampening));\n\n        if (this.nesterov) {\n          g = g.add(buf.mul(this.momentum));\n        } else {\n          g = g.add(buf);\n        }\n\n        this.state.set(param, { velocity: buf });\n      }\n\n      // potentially unsafe?\n      const newParam = param.sub(g.mul(this.lr));\n      param.data = newParam.data;\n    }\n  }\n}"],"names":["module","define","global","exports","i","require","r","n","TokenType","name","Position","SourceLocation","Parser","parse","ref","parseExpressionAt","tokenizer","DestructuringErrors","list","ecmaVersion","value","TokContext","index","Scope","Node","BranchID","self","RegExpValidationState","Token","source","argumentNames","ast","declaration","subKernels","gl","features","Kernel","sqrt","result","gpu","GPU","Texture","generate_function","generate_unary_function","generate_binary_function","functional.sign","sum","functional.relu"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaG,OAAC,SAAS,GAAE;AAAC,YAA8B,MAA4B;AAAC,UAAAA,QAAA,UAAe;QAAG,WAAS,OAAuC;AAACC,mBAAO,IAAG,CAAC;AAAA,QAAC,OAAK;AAAC,cAAI;AAAE,cAAG,OAAO,WAAS,aAAY;AAAC,gBAAE;AAAA,UAAM,WAAS,OAAOC,mBAAS,aAAY;AAAC,gBAAEA;AAAAA,UAAM,WAAS,OAAO,SAAO,aAAY;AAAC,gBAAE;AAAA,UAAI,OAAK;AAAC,gBAAE;AAAA,UAAI;AAAC,YAAE,MAAM,EAAC;AAAA,QAAE;AAAA,MAAC,GAAG,WAAU;AAAC,YAAID,SAAOD,SAAOG;AAAQ,gBAAQ,4BAAU;AAAC,mBAAS,EAAE,GAAE,GAAE,GAAE;AAAC,qBAAS,EAAEC,IAAE,GAAE;AAAC,kBAAG,CAAC,EAAEA,EAAC,GAAE;AAAC,oBAAG,CAAC,EAAEA,EAAC,GAAE;AAAC,sBAAI,IAAE,cAAY,OAAOC,mBAASA;AAAQ,sBAAG,CAAC,KAAG,EAAE,QAAO,EAAED,IAAE,IAAE;AAAE,sBAAG,EAAE,QAAO,EAAEA,IAAE,IAAE;AAAE,sBAAI,IAAE,IAAI,MAAM,yBAAuBA,KAAE,GAAG;AAAE,wBAAM,EAAE,OAAK,oBAAmB;AAAA,gBAAC;AAAC,oBAAI,IAAE,EAAEA,EAAC,IAAE,EAAC,SAAQ,GAAE;AAAE,kBAAEA,EAAC,EAAE,CAAC,EAAE,KAAK,EAAE,SAAQ,SAASE,IAAE;AAAC,sBAAIC,KAAE,EAAEH,EAAC,EAAE,CAAC,EAAEE,EAAC;AAAE,yBAAO,EAAEC,MAAGD,EAAC;AAAA,gBAAC,GAAE,GAAE,EAAE,SAAQ,GAAE,GAAE,GAAE,CAAC;AAAA,cAAC;AAAC,qBAAO,EAAEF,EAAC,EAAE;AAAA,YAAO;AAArU;AAAsU,qBAAQ,IAAE,cAAY,OAAOC,mBAASA,iBAAQ,IAAE,GAAE,IAAE,EAAE,QAAO,IAAI,GAAE,EAAE,CAAC,CAAC;AAAE,mBAAO;AAAA,UAAC;AAAza;AAA0a,iBAAO;AAAA,QAAC,MAAK,EAAC,GAAE,CAAC,SAASA,UAAQL,SAAOG,UAAQ;AAC91B,WAAC,SAAUD,SAAQ,SAAS;AAC1B,mBAAOC,aAAY,YAAY,OAAOH,YAAW,cAAc,QAAQG,QAAO,IAC9E,OAAOF,YAAW,cAAcA,QAAO,MAAMA,QAAO,CAAC,SAAS,GAAG,OAAO,KACvEC,UAAS,OAAO,eAAe,cAAc,aAAaA,WAAU,MAAM,QAAQA,QAAO,QAAQ,CAAA,CAAE;AAAA,UACtG,GAAG,OAAO,SAAUC,UAAS;AAAE;AAE7B,gBAAI,wBAAwB,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,MAAM,GAAG,GAAG,IAAI,OAAO,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,MAAM,GAAG,KAAK,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,MAAM,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,QAAQ,GAAG;AAEzoC,gBAAI,6BAA6B,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,KAAK,MAAM,IAAI,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,OAAO,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,IAAI,MAAM,IAAI,KAAK,MAAM,KAAK,MAAM,MAAM,GAAG,IAAI;AAEnpE,gBAAI,0BAA0B;AAE9B,gBAAI,+BAA+B;AAInC,gBAAI,gBAAgB;AAAA,cAClB,GAAG;AAAA,cACH,GAAG;AAAA,cACH,GAAG;AAAA,cACH,QAAQ;AAAA,cACR,YAAY;AAAA;AAId,gBAAI,uBAAuB;AAE3B,gBAAI,aAAa;AAAA,cACf,GAAG;AAAA,cACH,WAAW,uBAAuB;AAAA,cAClC,GAAG,uBAAuB;AAAA;AAG5B,gBAAI,4BAA4B;AAGhC,gBAAI,0BAA0B,IAAI,OAAO,MAAM,+BAA+B,GAAG;AACjF,gBAAI,qBAAqB,IAAI,OAAO,MAAM,+BAA+B,0BAA0B,GAAG;AAEtG,qBAAS,cAAc,MAAM,KAAK;AAChC,kBAAI,MAAM;AACV,uBAASC,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAAK,GAAG;AACtC,uBAAO,IAAIA,EAAC;AACZ,oBAAI,MAAM,MAAM;AAAE,yBAAO;AAAA,gBAAK;AAC9B,uBAAO,IAAIA,KAAI,CAAC;AAChB,oBAAI,OAAO,MAAM;AAAE,yBAAO;AAAA,gBAAI;AAAA,cACpC;AACI,qBAAO;AAAA,YACX;AATW;AAYT,qBAAS,kBAAkB,MAAM,QAAQ;AACvC,kBAAI,OAAO,IAAI;AAAE,uBAAO,SAAS;AAAA,cAAE;AACnC,kBAAI,OAAO,IAAI;AAAE,uBAAO;AAAA,cAAI;AAC5B,kBAAI,OAAO,IAAI;AAAE,uBAAO,SAAS;AAAA,cAAE;AACnC,kBAAI,OAAO,KAAK;AAAE,uBAAO;AAAA,cAAI;AAC7B,kBAAI,QAAQ,OAAQ;AAAE,uBAAO,QAAQ,OAAQ,wBAAwB,KAAK,OAAO,aAAa,IAAI,CAAC;AAAA,cAAC;AACpG,kBAAI,WAAW,OAAO;AAAE,uBAAO;AAAA,cAAK;AACpC,qBAAO,cAAc,MAAM,0BAA0B;AAAA,YACzD;AARW;AAWT,qBAAS,iBAAiB,MAAM,QAAQ;AACtC,kBAAI,OAAO,IAAI;AAAE,uBAAO,SAAS;AAAA,cAAE;AACnC,kBAAI,OAAO,IAAI;AAAE,uBAAO;AAAA,cAAI;AAC5B,kBAAI,OAAO,IAAI;AAAE,uBAAO;AAAA,cAAK;AAC7B,kBAAI,OAAO,IAAI;AAAE,uBAAO;AAAA,cAAI;AAC5B,kBAAI,OAAO,IAAI;AAAE,uBAAO,SAAS;AAAA,cAAE;AACnC,kBAAI,OAAO,KAAK;AAAE,uBAAO;AAAA,cAAI;AAC7B,kBAAI,QAAQ,OAAQ;AAAE,uBAAO,QAAQ,OAAQ,mBAAmB,KAAK,OAAO,aAAa,IAAI,CAAC;AAAA,cAAC;AAC/F,kBAAI,WAAW,OAAO;AAAE,uBAAO;AAAA,cAAK;AACpC,qBAAO,cAAc,MAAM,0BAA0B,KAAK,cAAc,MAAM,qBAAqB;AAAA,YACvG;AAVW;AAgBT,gBAAI,YAAY,gCAASI,WAAU,OAAO,MAAM;AAC9C,kBAAK,SAAS,OAAS,QAAO,CAAA;AAE9B,mBAAK,QAAQ;AACb,mBAAK,UAAU,KAAK;AACpB,mBAAK,aAAa,CAAC,CAAC,KAAK;AACzB,mBAAK,aAAa,CAAC,CAAC,KAAK;AACzB,mBAAK,SAAS,CAAC,CAAC,KAAK;AACrB,mBAAK,WAAW,CAAC,CAAC,KAAK;AACvB,mBAAK,SAAS,CAAC,CAAC,KAAK;AACrB,mBAAK,UAAU,CAAC,CAAC,KAAK;AACtB,mBAAK,QAAQ,KAAK,SAAS;AAC3B,mBAAK,gBAAgB;AAAA,YACzB,GAbkB;AAehB,qBAAS,MAAMC,OAAM,MAAM;AACzB,qBAAO,IAAI,UAAUA,OAAM,EAAC,YAAY,MAAM,OAAO,KAAI,CAAC;AAAA,YAC9D;AAFW;AAGT,gBAAI,aAAa,EAAC,YAAY,KAAI,GAAG,aAAa,EAAC,YAAY,KAAI;AAGnE,gBAAI,WAAW,CAAA;AAEf,qBAAS,GAAGA,OAAM,SAAS;AACzB,kBAAK,YAAY,OAAS,WAAU,CAAA;AAEpC,sBAAQ,UAAUA;AAClB,qBAAO,SAASA,KAAI,IAAI,IAAI,UAAUA,OAAM,OAAO;AAAA,YACvD;AALW;AAOT,gBAAI,UAAU;AAAA,cACZ,KAAK,IAAI,UAAU,OAAO,UAAU;AAAA,cACpC,QAAQ,IAAI,UAAU,UAAU,UAAU;AAAA,cAC1C,QAAQ,IAAI,UAAU,UAAU,UAAU;AAAA,cAC1C,MAAM,IAAI,UAAU,QAAQ,UAAU;AAAA,cACtC,WAAW,IAAI,UAAU,aAAa,UAAU;AAAA,cAChD,KAAK,IAAI,UAAU,KAAK;AAAA,cAExB,UAAU,IAAI,UAAU,KAAK,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,cACjE,UAAU,IAAI,UAAU,GAAG;AAAA,cAC3B,QAAQ,IAAI,UAAU,KAAK,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,cAC/D,QAAQ,IAAI,UAAU,GAAG;AAAA,cACzB,QAAQ,IAAI,UAAU,KAAK,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,cAC/D,QAAQ,IAAI,UAAU,GAAG;AAAA,cACzB,OAAO,IAAI,UAAU,KAAK,UAAU;AAAA,cACpC,MAAM,IAAI,UAAU,KAAK,UAAU;AAAA,cACnC,OAAO,IAAI,UAAU,KAAK,UAAU;AAAA,cACpC,KAAK,IAAI,UAAU,GAAG;AAAA,cACtB,UAAU,IAAI,UAAU,KAAK,UAAU;AAAA,cACvC,aAAa,IAAI,UAAU,IAAI;AAAA,cAC/B,OAAO,IAAI,UAAU,MAAM,UAAU;AAAA,cACrC,UAAU,IAAI,UAAU,UAAU;AAAA,cAClC,iBAAiB,IAAI,UAAU,iBAAiB;AAAA,cAChD,UAAU,IAAI,UAAU,OAAO,UAAU;AAAA,cACzC,WAAW,IAAI,UAAU,KAAK,UAAU;AAAA,cACxC,cAAc,IAAI,UAAU,MAAM,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,cAGtE,IAAI,IAAI,UAAU,KAAK,EAAC,YAAY,MAAM,UAAU,KAAI,CAAC;AAAA,cACzD,QAAQ,IAAI,UAAU,MAAM,EAAC,YAAY,MAAM,UAAU,KAAI,CAAC;AAAA,cAC9D,QAAQ,IAAI,UAAU,SAAS,EAAC,QAAQ,MAAM,SAAS,MAAM,YAAY,KAAI,CAAC;AAAA,cAC9E,QAAQ,IAAI,UAAU,OAAO,EAAC,YAAY,MAAM,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,cAC/E,WAAW,MAAM,MAAM,CAAC;AAAA,cACxB,YAAY,MAAM,MAAM,CAAC;AAAA,cACzB,WAAW,MAAM,KAAK,CAAC;AAAA,cACvB,YAAY,MAAM,KAAK,CAAC;AAAA,cACxB,YAAY,MAAM,KAAK,CAAC;AAAA,cACxB,UAAU,MAAM,iBAAiB,CAAC;AAAA,cAClC,YAAY,MAAM,aAAa,CAAC;AAAA,cAChC,UAAU,MAAM,aAAa,CAAC;AAAA,cAC9B,SAAS,IAAI,UAAU,OAAO,EAAC,YAAY,MAAM,OAAO,GAAG,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,cAC1F,QAAQ,MAAM,KAAK,EAAE;AAAA,cACrB,MAAM,MAAM,KAAK,EAAE;AAAA,cACnB,OAAO,MAAM,KAAK,EAAE;AAAA,cACpB,UAAU,IAAI,UAAU,MAAM,EAAC,YAAY,KAAI,CAAC;AAAA,cAChD,UAAU,MAAM,MAAM,CAAC;AAAA,cAEvB,QAAQ,GAAG,OAAO;AAAA,cAClB,OAAO,GAAG,QAAQ,UAAU;AAAA,cAC5B,QAAQ,GAAG,OAAO;AAAA,cAClB,WAAW,GAAG,UAAU;AAAA,cACxB,WAAW,GAAG,UAAU;AAAA,cACxB,UAAU,GAAG,WAAW,UAAU;AAAA,cAClC,KAAK,GAAG,MAAM,EAAC,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,cAC9C,OAAO,GAAG,QAAQ,UAAU;AAAA,cAC5B,UAAU,GAAG,SAAS;AAAA,cACtB,MAAM,GAAG,OAAO,EAAC,QAAQ,KAAI,CAAC;AAAA,cAC9B,WAAW,GAAG,YAAY,UAAU;AAAA,cACpC,KAAK,GAAG,IAAI;AAAA,cACZ,SAAS,GAAG,UAAU,UAAU;AAAA,cAChC,SAAS,GAAG,QAAQ;AAAA,cACpB,QAAQ,GAAG,SAAS,UAAU;AAAA,cAC9B,MAAM,GAAG,KAAK;AAAA,cACd,MAAM,GAAG,KAAK;AAAA,cACd,QAAQ,GAAG,OAAO;AAAA,cAClB,QAAQ,GAAG,SAAS,EAAC,QAAQ,KAAI,CAAC;AAAA,cAClC,OAAO,GAAG,MAAM;AAAA,cAChB,MAAM,GAAG,OAAO,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,cACpD,OAAO,GAAG,QAAQ,UAAU;AAAA,cAC5B,QAAQ,GAAG,SAAS,UAAU;AAAA,cAC9B,QAAQ,GAAG,SAAS,UAAU;AAAA,cAC9B,UAAU,GAAG,WAAW,UAAU;AAAA,cAClC,SAAS,GAAG,QAAQ;AAAA,cACpB,SAAS,GAAG,UAAU,UAAU;AAAA,cAChC,OAAO,GAAG,QAAQ,UAAU;AAAA,cAC5B,OAAO,GAAG,QAAQ,UAAU;AAAA,cAC5B,QAAQ,GAAG,SAAS,UAAU;AAAA,cAC9B,KAAK,GAAG,MAAM,EAAC,YAAY,MAAM,OAAO,EAAC,CAAC;AAAA,cAC1C,aAAa,GAAG,cAAc,EAAC,YAAY,MAAM,OAAO,EAAC,CAAC;AAAA,cAC1D,SAAS,GAAG,UAAU,EAAC,YAAY,MAAM,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,cACxE,OAAO,GAAG,QAAQ,EAAC,YAAY,MAAM,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,cACpE,SAAS,GAAG,UAAU,EAAC,YAAY,MAAM,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA;AAI1E,gBAAI,YAAY;AAChB,gBAAI,aAAa,IAAI,OAAO,UAAU,QAAQ,GAAG;AAEjD,qBAAS,UAAU,MAAM;AACvB,qBAAO,SAAS,MAAM,SAAS,MAAM,SAAS,QAAU,SAAS;AAAA,YACrE;AAFW;AAIT,qBAAS,cAAc,MAAM,MAAM,KAAK;AACtC,kBAAK,QAAQ,OAAS,OAAM,KAAK;AAEjC,uBAASL,KAAI,MAAMA,KAAI,KAAKA,MAAK;AAC/B,oBAAI,OAAO,KAAK,WAAWA,EAAC;AAC5B,oBAAI,UAAU,IAAI,GAChB;AAAE,yBAAOA,KAAI,MAAM,KAAK,SAAS,MAAM,KAAK,WAAWA,KAAI,CAAC,MAAM,KAAKA,KAAI,IAAIA,KAAI;AAAA,gBAAC;AAAA,cAC5F;AACI,qBAAO;AAAA,YACX;AATW;AAWT,gBAAI,qBAAqB;AAEzB,gBAAI,iBAAiB;AAErB,gBAAI,MAAM,OAAO;AACjB,gBAAI,iBAAiB,IAAI;AACzB,gBAAI,WAAW,IAAI;AAEnB,gBAAI,SAAS,OAAO,WAAW,SAAU,KAAK,UAAU;AAAE,qBACxD,eAAe,KAAK,KAAK,QAAQ;AAAA;AAGnC,gBAAI,UAAU,MAAM,YAAY,SAAU,KAAK;AAAE,qBAC/C,SAAS,KAAK,GAAG,MAAM;AAAA;AAGzB,gBAAI,cAAc,uBAAO,OAAO,IAAI;AAEpC,qBAAS,YAAY,OAAO;AAC1B,qBAAO,YAAY,KAAK,MAAM,YAAY,KAAK,IAAI,IAAI,OAAO,SAAS,MAAM,QAAQ,MAAM,GAAG,IAAI,IAAI;AAAA,YAC1G;AAFW;AAIT,qBAAS,kBAAkB,MAAM;AAC/B,kBAAI,QAAQ,OAAQ;AAAE,uBAAO,OAAO,aAAa,IAAI;AAAA,cAAC;AACtD,sBAAQ;AACR,qBAAO,OAAO,cAAc,QAAQ,MAAM,QAAS,OAAO,QAAQ,KAAM;AAAA,YAC5E;AAJW;AAMT,gBAAI,gBAAgB;AAGpB,gBAAI,WAAW,gCAASM,UAAS,MAAM,KAAK;AAC1C,mBAAK,OAAO;AACZ,mBAAK,SAAS;AAAA,YAClB,GAHiB;AAKf,qBAAS,UAAU,SAAS,gCAAS,OAAQ,GAAG;AAC9C,qBAAO,IAAI,SAAS,KAAK,MAAM,KAAK,SAAS,CAAC;AAAA,YAClD,GAF8B;AAI5B,gBAAI,iBAAiB,gCAASC,gBAAe,GAAG,OAAO,KAAK;AAC1D,mBAAK,QAAQ;AACb,mBAAK,MAAM;AACX,kBAAI,EAAE,eAAe,MAAM;AAAE,qBAAK,SAAS,EAAE;AAAA,cAAW;AAAA,YAC5D,GAJuB;AAOrB,qBAAS,YAAY,OAAO,QAAQ;AAClC,uBAAS,OAAO,GAAG,MAAM,OAAK;AAC5B,oBAAI,YAAY,cAAc,OAAO,KAAK,MAAM;AAChD,oBAAI,YAAY,GAAG;AAAE,yBAAO,IAAI,SAAS,MAAM,SAAS,GAAG;AAAA,gBAAC;AAC5D,kBAAE;AACF,sBAAM;AAAA,cACZ;AAAA,YACA;AAPW;AAUT,gBAAI,iBAAiB;AAAA,cACnB,aAAa;AAAA,cACb,YAAY;AAAA,cACZ,qBAAqB;AAAA,cACrB,iBAAiB;AAAA,cACjB,eAAe;AAAA,cACf,4BAA4B;AAAA,cAC5B,6BAA6B;AAAA,cAC7B,2BAA2B;AAAA,cAC3B,yBAAyB;AAAA,cACzB,eAAe;AAAA,cACf,oBAAoB;AAAA,cACpB,WAAW;AAAA,cACX,SAAS;AAAA,cACT,WAAW;AAAA,cACX,QAAQ;AAAA,cACR,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,kBAAkB;AAAA,cAClB,gBAAgB;AAAA;AAIlB,gBAAI,yBAAyB;AAE7B,qBAAS,WAAW,MAAM;AACxB,kBAAI,UAAU,CAAA;AAEd,uBAAS,OAAO,gBACd;AAAE,wBAAQ,GAAG,IAAI,QAAQ,OAAO,MAAM,GAAG,IAAI,KAAK,GAAG,IAAI,eAAe,GAAG;AAAA,cAAE;AAE/E,kBAAI,QAAQ,gBAAgB,UAAU;AACpC,wBAAQ,cAAc;AAAA,cAC5B,WAAe,QAAQ,eAAe,MAAM;AACtC,oBAAI,CAAC,0BAA0B,OAAO,YAAY,YAAY,QAAQ,MAAM;AAC1E,2CAAyB;AACzB,0BAAQ,KAAK,oHAAoH;AAAA,gBACzI;AACM,wBAAQ,cAAc;AAAA,cAC5B,WAAe,QAAQ,eAAe,MAAM;AACtC,wBAAQ,eAAe;AAAA,cAC7B;AAEI,kBAAI,QAAQ,iBAAiB,MAC3B;AAAE,wBAAQ,gBAAgB,QAAQ,cAAc;AAAA,cAAE;AAEpD,kBAAI,CAAC,QAAQ,KAAK,iBAAiB,MACjC;AAAE,wBAAQ,gBAAgB,QAAQ,eAAe;AAAA,cAAG;AAEtD,kBAAI,QAAQ,QAAQ,OAAO,GAAG;AAC5B,oBAAI,SAAS,QAAQ;AACrB,wBAAQ,UAAU,SAAU,OAAO;AAAE,yBAAO,OAAO,KAAK,KAAK;AAAA,gBAAE;AAAA,cACrE;AACI,kBAAI,QAAQ,QAAQ,SAAS,GAC3B;AAAE,wBAAQ,YAAY,YAAY,SAAS,QAAQ,SAAS;AAAA,cAAE;AAEhE,qBAAO;AAAA,YACX;AAhCW;AAkCT,qBAAS,YAAY,SAAS,OAAO;AACnC,qBAAO,SAAS,OAAO,MAAM,OAAO,KAAK,UAAU,QAAQ;AACzD,oBAAI,UAAU;AAAA,kBACZ,MAAM,QAAQ,UAAU;AAAA,kBACxB,OAAO;AAAA,kBACP;AAAA,kBACA;AAAA;AAEF,oBAAI,QAAQ,WACV;AAAE,0BAAQ,MAAM,IAAI,eAAe,MAAM,UAAU,MAAM;AAAA,gBAAE;AAC7D,oBAAI,QAAQ,QACV;AAAE,0BAAQ,QAAQ,CAAC,OAAO,GAAG;AAAA,gBAAE;AACjC,sBAAM,KAAK,OAAO;AAAA,cACxB;AAAA,YACA;AAdW;AAgBT,gBACI,YAAY,GACZ,iBAAiB,GACjB,cAAc,GACd,kBAAkB,GAClB,cAAc,IACd,qBAAqB,IACrB,cAAc,IACd,qBAAqB,KACrB,2BAA2B,KAC3B,YAAY,YAAY,iBAAiB;AAE7C,qBAAS,cAAc,OAAO,WAAW;AACvC,qBAAO,kBAAkB,QAAQ,cAAc,MAAM,YAAY,kBAAkB;AAAA,YACvF;AAFW;AAIT,gBACI,YAAY,GACZ,WAAW,GACX,eAAe,GACf,gBAAgB,GAChB,oBAAoB,GACpB,eAAe;AAEnB,gBAAI,SAAS,gCAASC,QAAO,SAAS,OAAO,UAAU;AACrD,mBAAK,UAAU,UAAU,WAAW,OAAO;AAC3C,mBAAK,aAAa,QAAQ;AAC1B,mBAAK,WAAW,YAAY,WAAW,QAAQ,eAAe,IAAI,IAAI,QAAQ,eAAe,WAAW,YAAY,CAAC,CAAC;AACtH,kBAAI,WAAW;AACf,kBAAI,QAAQ,kBAAkB,MAAM;AAClC,2BAAW,cAAc,QAAQ,eAAe,IAAI,IAAI,QAAQ,gBAAgB,IAAI,IAAI,CAAC;AACzF,oBAAI,QAAQ,eAAe,UAAU;AAAE,8BAAY;AAAA,gBAAS;AAAA,cAClE;AACI,mBAAK,gBAAgB,YAAY,QAAQ;AACzC,kBAAI,kBAAkB,WAAW,WAAW,MAAM,MAAM,cAAc;AACtE,mBAAK,sBAAsB,YAAY,cAAc;AACrD,mBAAK,0BAA0B,YAAY,iBAAiB,MAAM,cAAc,UAAU;AAC1F,mBAAK,QAAQ,OAAO,KAAK;AAEzB,mBAAK,cAAc;AAGnB,kBAAI,UAAU;AACZ,qBAAK,MAAM;AACX,qBAAK,YAAY,KAAK,MAAM,YAAY,MAAM,WAAW,CAAC,IAAI;AAC9D,qBAAK,UAAU,KAAK,MAAM,MAAM,GAAG,KAAK,SAAS,EAAE,MAAM,SAAS,EAAE;AAAA,cAC1E,OAAW;AACL,qBAAK,MAAM,KAAK,YAAY;AAC5B,qBAAK,UAAU;AAAA,cACrB;AAEI,mBAAK,OAAO,QAAQ;AACpB,mBAAK,QAAQ;AACb,mBAAK,QAAQ,KAAK,MAAM,KAAK;AAC7B,mBAAK,WAAW,KAAK,SAAS,KAAK,YAAW;AAE9C,mBAAK,gBAAgB,KAAK,kBAAkB;AAC5C,mBAAK,eAAe,KAAK,aAAa,KAAK;AAE3C,mBAAK,UAAU,KAAK,eAAc;AAClC,mBAAK,cAAc;AAEnB,mBAAK,WAAW,QAAQ,eAAe;AACvC,mBAAK,SAAS,KAAK,YAAY,KAAK,gBAAgB,KAAK,GAAG;AAE5D,mBAAK,mBAAmB;AACxB,mBAAK,2BAA2B;AAEhC,mBAAK,WAAW,KAAK,WAAW,KAAK,gBAAgB;AACrD,mBAAK,SAAS,CAAA;AACd,mBAAK,mBAAmB,uBAAO,OAAO,IAAI;AAE1C,kBAAI,KAAK,QAAQ,KAAK,QAAQ,iBAAiB,KAAK,MAAM,MAAM,GAAG,CAAC,MAAM,MACxE;AAAE,qBAAK,gBAAgB,CAAC;AAAA,cAAE;AAE5B,mBAAK,aAAa,CAAA;AAClB,mBAAK,WAAW,SAAS;AAEzB,mBAAK,cAAc;AAEnB,mBAAK,mBAAmB,CAAA;AAAA,YAC5B,GAzDe;AA2Db,gBAAI,qBAAqB,EAAE,YAAY,EAAE,cAAc,KAAI,GAAG,aAAa,EAAE,cAAc,KAAI,GAAG,SAAS,EAAE,cAAc,KAAI,GAAG,UAAU,EAAE,cAAc,QAAO,YAAY,EAAE,cAAc,KAAI,GAAG,kBAAkB,EAAE,cAAc,KAAI,GAAG,qBAAqB,EAAE,cAAc,KAAI,GAAG,mBAAmB,EAAE,cAAc,KAAI,GAAG,oBAAoB,EAAE,cAAc,OAAM;AAE/W,mBAAO,UAAU,QAAQ,gCAASC,SAAS;AACzC,kBAAI,OAAO,KAAK,QAAQ,WAAW,KAAK,UAAS;AACjD,mBAAK,UAAS;AACd,qBAAO,KAAK,cAAc,IAAI;AAAA,YAClC,GAJ2B;AAMzB,+BAAmB,WAAW,MAAM,WAAY;AAAE,sBAAQ,KAAK,kBAAkB,QAAQ,kBAAkB;AAAA,YAAC;AAE5G,+BAAmB,YAAY,MAAM,WAAY;AAAE,sBAAQ,KAAK,gBAAe,EAAG,QAAQ,mBAAmB,KAAK,CAAC,KAAK,gBAAe,EAAG;AAAA,YAAgB;AAE1J,+BAAmB,QAAQ,MAAM,WAAY;AAAE,sBAAQ,KAAK,gBAAe,EAAG,QAAQ,eAAe,KAAK,CAAC,KAAK,gBAAe,EAAG;AAAA,YAAgB;AAElJ,+BAAmB,SAAS,MAAM,WAAY;AAC5C,uBAAST,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAGA,MAAK;AACpD,oBAAI,QAAQ,KAAK,WAAWA,EAAC;AAC7B,oBAAI,MAAM,oBAAoB,MAAM,QAAQ,0BAA0B;AAAE,yBAAO;AAAA,gBAAK;AACpF,oBAAI,MAAM,QAAQ,gBAAgB;AAAE,0BAAQ,MAAM,QAAQ,eAAe;AAAA,gBAAC;AAAA,cAChF;AACI,qBAAQ,KAAK,YAAY,KAAK,QAAQ,eAAe,MAAO,KAAK,QAAQ;AAAA,YAC7E;AAEE,+BAAmB,WAAW,MAAM,WAAY;AAC9C,kBAAIU,OAAM,KAAK,iBAAgB;AAC7B,kBAAI,QAAQA,KAAI;AAChB,kBAAI,mBAAmBA,KAAI;AAC7B,sBAAQ,QAAQ,eAAe,KAAK,oBAAoB,KAAK,QAAQ;AAAA,YACzE;AAEE,+BAAmB,iBAAiB,MAAM,WAAY;AAAE,sBAAQ,KAAK,mBAAmB,QAAQ,sBAAsB;AAAA,YAAC;AAEvH,+BAAmB,oBAAoB,MAAM,WAAY;AAAE,qBAAO,KAAK,2BAA2B,KAAK,aAAY,CAAE;AAAA,YAAC;AAEtH,+BAAmB,kBAAkB,MAAM,WAAY;AACrD,kBAAIA,OAAM,KAAK,iBAAgB;AAC7B,kBAAI,QAAQA,KAAI;AAChB,kBAAI,mBAAmBA,KAAI;AAC7B,sBAAQ,SAAS,iBAAiB,6BAA6B,KAAK;AAAA,YACxE;AAEE,+BAAmB,mBAAmB,MAAM,WAAY;AACtD,sBAAQ,KAAK,kBAAkB,QAAQ,4BAA4B;AAAA,YACvE;AAEE,mBAAO,SAAS,gCAAS,SAAU;AAC/B,kBAAI,UAAU,CAAA,GAAI,MAAM,UAAU;AAClC,qBAAQ,MAAQ,SAAS,GAAG,IAAK,UAAW,GAAG;AAEjD,kBAAI,MAAM;AACV,uBAASV,KAAI,GAAGA,KAAI,QAAQ,QAAQA,MAAK;AAAE,sBAAM,QAAQA,EAAC,EAAE,GAAG;AAAA,cAAE;AACjE,qBAAO;AAAA,YACX,GAPkB;AAShB,mBAAO,QAAQ,gCAASS,OAAO,OAAO,SAAS;AAC7C,qBAAO,IAAI,KAAK,SAAS,KAAK,EAAE,MAAK;AAAA,YACzC,GAFiB;AAIf,mBAAO,oBAAoB,gCAASE,mBAAmB,OAAO,KAAK,SAAS;AAC1E,kBAAI,SAAS,IAAI,KAAK,SAAS,OAAO,GAAG;AACzC,qBAAO,UAAS;AAChB,qBAAO,OAAO,gBAAe;AAAA,YACjC,GAJ6B;AAM3B,mBAAO,YAAY,gCAASC,WAAW,OAAO,SAAS;AACrD,qBAAO,IAAI,KAAK,SAAS,KAAK;AAAA,YAClC,GAFqB;AAInB,mBAAO,iBAAkB,OAAO,WAAW,kBAAkB;AAE7D,gBAAI,OAAO,OAAO;AAGlB,gBAAI,UAAU;AACd,iBAAK,kBAAkB,SAAS,OAAO;AACrC,kBAAI,KAAK,QAAQ,cAAc,GAAG;AAAE,uBAAO;AAAA,cAAK;AAChD,yBAAS;AACP,+BAAe,YAAY;AAC3B,yBAAS,eAAe,KAAK,KAAK,KAAK,EAAE,CAAC,EAAE;AAC5C,oBAAI,QAAQ,QAAQ,KAAK,KAAK,MAAM,MAAM,KAAK,CAAC;AAChD,oBAAI,CAAC,OAAO;AAAE,yBAAO;AAAA,gBAAK;AAC1B,qBAAK,MAAM,CAAC,KAAK,MAAM,CAAC,OAAO,cAAc;AAC3C,iCAAe,YAAY,QAAQ,MAAM,CAAC,EAAE;AAC5C,sBAAI,aAAa,eAAe,KAAK,KAAK,KAAK,GAAG,MAAM,WAAW,QAAQ,WAAW,CAAC,EAAE;AACzF,sBAAI,OAAO,KAAK,MAAM,OAAO,GAAG;AAChC,yBAAO,SAAS,OAAO,SAAS,OAC7B,UAAU,KAAK,WAAW,CAAC,CAAC,KAC5B,EAAE,sBAAsB,KAAK,IAAI,KAAK,SAAS,OAAO,KAAK,MAAM,OAAO,MAAM,CAAC,MAAM;AAAA,gBAChG;AACM,yBAAS,MAAM,CAAC,EAAE;AAElB,+BAAe,YAAY;AAC3B,yBAAS,eAAe,KAAK,KAAK,KAAK,EAAE,CAAC,EAAE;AAC5C,oBAAI,KAAK,MAAM,KAAK,MAAM,KACxB;AAAE;AAAA,gBAAQ;AAAA,cAClB;AAAA,YACA;AAGE,iBAAK,MAAM,SAAS,MAAM;AACxB,kBAAI,KAAK,SAAS,MAAM;AACtB,qBAAK,KAAI;AACT,uBAAO;AAAA,cACb,OAAW;AACL,uBAAO;AAAA,cACb;AAAA,YACA;AAGE,iBAAK,eAAe,SAASP,OAAM;AACjC,qBAAO,KAAK,SAAS,QAAQ,QAAQ,KAAK,UAAUA,SAAQ,CAAC,KAAK;AAAA,YACtE;AAGE,iBAAK,gBAAgB,SAASA,OAAM;AAClC,kBAAI,CAAC,KAAK,aAAaA,KAAI,GAAG;AAAE,uBAAO;AAAA,cAAK;AAC5C,mBAAK,KAAI;AACT,qBAAO;AAAA,YACX;AAGE,iBAAK,mBAAmB,SAASA,OAAM;AACrC,kBAAI,CAAC,KAAK,cAAcA,KAAI,GAAG;AAAE,qBAAK,WAAU;AAAA,cAAG;AAAA,YACvD;AAGE,iBAAK,qBAAqB,WAAW;AACnC,qBAAO,KAAK,SAAS,QAAQ,OAC3B,KAAK,SAAS,QAAQ,UACtB,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC;AAAA,YAClE;AAEE,iBAAK,kBAAkB,WAAW;AAChC,kBAAI,KAAK,sBAAsB;AAC7B,oBAAI,KAAK,QAAQ,qBACf;AAAE,uBAAK,QAAQ,oBAAoB,KAAK,YAAY,KAAK,aAAa;AAAA,gBAAE;AAC1E,uBAAO;AAAA,cACb;AAAA,YACA;AAGE,iBAAK,YAAY,WAAW;AAC1B,kBAAI,CAAC,KAAK,IAAI,QAAQ,IAAI,KAAK,CAAC,KAAK,gBAAe,GAAI;AAAE,qBAAK,WAAU;AAAA,cAAG;AAAA,YAChF;AAEE,iBAAK,qBAAqB,SAAS,SAAS,SAAS;AACnD,kBAAI,KAAK,SAAS,SAAS;AACzB,oBAAI,KAAK,QAAQ,iBACf;AAAE,uBAAK,QAAQ,gBAAgB,KAAK,cAAc,KAAK,eAAe;AAAA,gBAAE;AAC1E,oBAAI,CAAC,SACH;AAAE,uBAAK,KAAI;AAAA,gBAAG;AAChB,uBAAO;AAAA,cACb;AAAA,YACA;AAGE,iBAAK,SAAS,SAAS,MAAM;AAC3B,mBAAK,IAAI,IAAI,KAAK,KAAK,WAAU;AAAA,YACrC;AAGE,iBAAK,aAAa,SAAS,KAAK;AAC9B,mBAAK,MAAM,OAAO,OAAO,MAAM,KAAK,OAAO,kBAAkB;AAAA,YACjE;AAEE,gBAAI,sBAAsB,gCAASQ,uBAAsB;AACvD,mBAAK,kBACL,KAAK,gBACL,KAAK,sBACL,KAAK,oBACL,KAAK,cACH;AAAA,YACN,GAP4B;AAS1B,iBAAK,qBAAqB,SAAS,wBAAwB,UAAU;AACnE,kBAAI,CAAC,wBAAwB;AAAE;AAAA,cAAM;AACrC,kBAAI,uBAAuB,gBAAgB,IACzC;AAAE,qBAAK,iBAAiB,uBAAuB,eAAe,+CAA+C;AAAA,cAAE;AACjH,kBAAI,SAAS,WAAW,uBAAuB,sBAAsB,uBAAuB;AAC5F,kBAAI,SAAS,IAAI;AAAE,qBAAK,iBAAiB,QAAQ,WAAW,wBAAwB,uBAAuB;AAAA,cAAE;AAAA,YACjH;AAEE,iBAAK,wBAAwB,SAAS,wBAAwB,UAAU;AACtE,kBAAI,CAAC,wBAAwB;AAAE,uBAAO;AAAA,cAAK;AAC3C,kBAAI,kBAAkB,uBAAuB;AAC7C,kBAAI,cAAc,uBAAuB;AACzC,kBAAI,CAAC,UAAU;AAAE,uBAAO,mBAAmB,KAAK,eAAe;AAAA,cAAC;AAChE,kBAAI,mBAAmB,GACrB;AAAE,qBAAK,MAAM,iBAAiB,yEAAyE;AAAA,cAAE;AAC3G,kBAAI,eAAe,GACjB;AAAE,qBAAK,iBAAiB,aAAa,oCAAoC;AAAA,cAAE;AAAA,YACjF;AAEE,iBAAK,iCAAiC,WAAW;AAC/C,kBAAI,KAAK,aAAa,CAAC,KAAK,YAAY,KAAK,WAAW,KAAK,WAC3D;AAAE,qBAAK,MAAM,KAAK,UAAU,4CAA4C;AAAA,cAAE;AAC5E,kBAAI,KAAK,UACP;AAAE,qBAAK,MAAM,KAAK,UAAU,4CAA4C;AAAA,cAAE;AAAA,YAChF;AAEE,iBAAK,uBAAuB,SAAS,MAAM;AACzC,kBAAI,KAAK,SAAS,2BAChB;AAAE,uBAAO,KAAK,qBAAqB,KAAK,UAAU;AAAA,cAAC;AACrD,qBAAO,KAAK,SAAS,gBAAgB,KAAK,SAAS;AAAA,YACvD;AAEE,gBAAI,OAAO,OAAO;AAIlB,iBAAK,gBAAgB,SAAS,MAAM;AAClC,kBAAId,WAAU,uBAAO,OAAO,IAAI;AAChC,kBAAI,CAAC,KAAK,MAAM;AAAE,qBAAK,OAAO,CAAA;AAAA,cAAG;AACjC,qBAAO,KAAK,SAAS,QAAQ,KAAK;AAChC,oBAAI,OAAO,KAAK,eAAe,MAAM,MAAMA,QAAO;AAClD,qBAAK,KAAK,KAAK,IAAI;AAAA,cACzB;AACI,kBAAI,KAAK,UACP;AAAE,yBAASC,KAAI,GAAGc,QAAO,OAAO,KAAK,KAAK,gBAAgB,GAAGd,KAAIc,MAAK,QAAQd,MAAK,GACjF;AACE,sBAAIK,QAAOS,MAAKd,EAAC;AAEjB,uBAAK,iBAAiB,KAAK,iBAAiBK,KAAI,EAAE,OAAQ,aAAaA,QAAO,kBAAkB;AAAA,gBAC1G;AAAA,cAAS;AACL,mBAAK,uBAAuB,KAAK,IAAI;AACrC,mBAAK,KAAI;AACT,mBAAK,aAAa,KAAK,QAAQ;AAC/B,qBAAO,KAAK,WAAW,MAAM,SAAS;AAAA,YAC1C;AAEE,gBAAI,YAAY,EAAC,MAAM,OAAM,GAAG,cAAc,EAAC,MAAM,SAAQ;AAE7D,iBAAK,QAAQ,SAAS,SAAS;AAC7B,kBAAI,KAAK,QAAQ,cAAc,KAAK,CAAC,KAAK,aAAa,KAAK,GAAG;AAAE,uBAAO;AAAA,cAAK;AAC7E,6BAAe,YAAY,KAAK;AAChC,kBAAI,OAAO,eAAe,KAAK,KAAK,KAAK;AACzC,kBAAI,OAAO,KAAK,MAAM,KAAK,CAAC,EAAE,QAAQ,SAAS,KAAK,MAAM,WAAW,IAAI;AACzE,kBAAI,WAAW,MAAM,WAAW,IAAI;AAAE,uBAAO;AAAA,cAAI;AACjD,kBAAI,SAAS;AAAE,uBAAO;AAAA,cAAK;AAE3B,kBAAI,WAAW,OAAO,SAAS,SAAU,SAAS,OAAQ;AAAE,uBAAO;AAAA,cAAI;AACvE,kBAAI,kBAAkB,QAAQ,IAAI,GAAG;AACnC,oBAAI,MAAM,OAAO;AACjB,uBAAO,iBAAiB,SAAS,KAAK,MAAM,WAAW,GAAG,GAAG,IAAI,GAAG;AAAE,oBAAE;AAAA,gBAAI;AAC5E,oBAAI,WAAW,MAAM,SAAS,SAAU,SAAS,OAAQ;AAAE,yBAAO;AAAA,gBAAI;AACtE,oBAAI,QAAQ,KAAK,MAAM,MAAM,MAAM,GAAG;AACtC,oBAAI,CAAC,0BAA0B,KAAK,KAAK,GAAG;AAAE,yBAAO;AAAA,gBAAI;AAAA,cAC/D;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,kBAAkB,WAAW;AAChC,kBAAI,KAAK,QAAQ,cAAc,KAAK,CAAC,KAAK,aAAa,OAAO,GAC5D;AAAE,uBAAO;AAAA,cAAK;AAEhB,6BAAe,YAAY,KAAK;AAChC,kBAAI,OAAO,eAAe,KAAK,KAAK,KAAK;AACzC,kBAAI,OAAO,KAAK,MAAM,KAAK,CAAC,EAAE,QAAQ;AACtC,qBAAO,CAAC,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,IAAI,CAAC,KACrD,KAAK,MAAM,MAAM,MAAM,OAAO,CAAC,MAAM,eACpC,OAAO,MAAM,KAAK,MAAM,UACxB,EAAE,iBAAiB,QAAQ,KAAK,MAAM,WAAW,OAAO,CAAC,CAAC,KAAK,QAAQ,SAAU,QAAQ;AAAA,YAChG;AAGE,iBAAK,iBAAiB,SAAS,SAAS,UAAUN,UAAS;AACzD,kBAAI,YAAY,KAAK,MAAM,OAAO,KAAK,UAAS,GAAI;AAEpD,kBAAI,KAAK,MAAM,OAAO,GAAG;AACvB,4BAAY,QAAQ;AACpB,uBAAO;AAAA,cACb;AAGI,sBAAQ,WAAS;AAAA,gBACjB,KAAK,QAAQ;AAAA,gBAAQ,KAAK,QAAQ;AAAW,yBAAO,KAAK,4BAA4B,MAAM,UAAU,OAAO;AAAA,gBAC5G,KAAK,QAAQ;AAAW,yBAAO,KAAK,uBAAuB,IAAI;AAAA,gBAC/D,KAAK,QAAQ;AAAK,yBAAO,KAAK,iBAAiB,IAAI;AAAA,gBACnD,KAAK,QAAQ;AAAM,yBAAO,KAAK,kBAAkB,IAAI;AAAA,gBACrD,KAAK,QAAQ;AACX,sBAAK,YAAY,KAAK,UAAU,YAAY,QAAQ,YAAY,YAAa,KAAK,QAAQ,eAAe,GAAG;AAAE,yBAAK,WAAU;AAAA,kBAAG;AAChI,yBAAO,KAAK,uBAAuB,MAAM,OAAO,CAAC,OAAO;AAAA,gBAC1D,KAAK,QAAQ;AACX,sBAAI,SAAS;AAAE,yBAAK,WAAU;AAAA,kBAAG;AACjC,yBAAO,KAAK,WAAW,MAAM,IAAI;AAAA,gBACnC,KAAK,QAAQ;AAAK,yBAAO,KAAK,iBAAiB,IAAI;AAAA,gBACnD,KAAK,QAAQ;AAAS,yBAAO,KAAK,qBAAqB,IAAI;AAAA,gBAC3D,KAAK,QAAQ;AAAS,yBAAO,KAAK,qBAAqB,IAAI;AAAA,gBAC3D,KAAK,QAAQ;AAAQ,yBAAO,KAAK,oBAAoB,IAAI;AAAA,gBACzD,KAAK,QAAQ;AAAM,yBAAO,KAAK,kBAAkB,IAAI;AAAA,gBACrD,KAAK,QAAQ;AAAA,gBAAQ,KAAK,QAAQ;AAChC,yBAAO,QAAQ,KAAK;AACpB,sBAAI,WAAW,SAAS,OAAO;AAAE,yBAAK,WAAU;AAAA,kBAAG;AACnD,yBAAO,KAAK,kBAAkB,MAAM,IAAI;AAAA,gBAC1C,KAAK,QAAQ;AAAQ,yBAAO,KAAK,oBAAoB,IAAI;AAAA,gBACzD,KAAK,QAAQ;AAAO,yBAAO,KAAK,mBAAmB,IAAI;AAAA,gBACvD,KAAK,QAAQ;AAAQ,yBAAO,KAAK,WAAW,MAAM,IAAI;AAAA,gBACtD,KAAK,QAAQ;AAAM,yBAAO,KAAK,oBAAoB,IAAI;AAAA,gBACvD,KAAK,QAAQ;AAAA,gBACb,KAAK,QAAQ;AACX,sBAAI,KAAK,QAAQ,cAAc,MAAM,cAAc,QAAQ,SAAS;AAClE,mCAAe,YAAY,KAAK;AAChC,wBAAI,OAAO,eAAe,KAAK,KAAK,KAAK;AACzC,wBAAI,OAAO,KAAK,MAAM,KAAK,CAAC,EAAE,QAAQ,SAAS,KAAK,MAAM,WAAW,IAAI;AACzE,wBAAI,WAAW,MAAM,WAAW,IAC9B;AAAE,6BAAO,KAAK,yBAAyB,MAAM,KAAK,gBAAe,CAAE;AAAA,oBAAC;AAAA,kBAC9E;AAEM,sBAAI,CAAC,KAAK,QAAQ,6BAA6B;AAC7C,wBAAI,CAAC,UACH;AAAE,2BAAK,MAAM,KAAK,OAAO,wDAAwD;AAAA,oBAAE;AACrF,wBAAI,CAAC,KAAK,UACR;AAAE,2BAAK,MAAM,KAAK,OAAO,iEAAiE;AAAA,oBAAE;AAAA,kBACtG;AACM,yBAAO,cAAc,QAAQ,UAAU,KAAK,YAAY,IAAI,IAAI,KAAK,YAAY,MAAMA,QAAO;AAAA,gBAEhG;AACE,sBAAI,KAAK,mBAAmB;AAC1B,wBAAI,SAAS;AAAE,2BAAK,WAAU;AAAA,oBAAG;AACjC,yBAAK,KAAI;AACT,2BAAO,KAAK,uBAAuB,MAAM,MAAM,CAAC,OAAO;AAAA,kBAC/D;AAEM,sBAAI,YAAY,KAAK,OAAO,OAAO,KAAK,gBAAe;AACvD,sBAAI,cAAc,QAAQ,QAAQ,KAAK,SAAS,gBAAgB,KAAK,IAAI,QAAQ,KAAK,GACpF;AAAE,2BAAO,KAAK,sBAAsB,MAAM,WAAW,MAAM,OAAO;AAAA,kBAAC,OAChE;AAAE,2BAAO,KAAK,yBAAyB,MAAM,IAAI;AAAA,kBAAC;AAAA,cAC7D;AAAA,YACA;AAEE,iBAAK,8BAA8B,SAAS,MAAM,SAAS;AACzD,kBAAI,UAAU,YAAY;AAC1B,mBAAK,KAAI;AACT,kBAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,gBAAe,GAAI;AAAE,qBAAK,QAAQ;AAAA,cAAK,WACjE,KAAK,SAAS,QAAQ,MAAM;AAAE,qBAAK,WAAU;AAAA,cAAG,OACpD;AACH,qBAAK,QAAQ,KAAK,WAAU;AAC5B,qBAAK,UAAS;AAAA,cACpB;AAEI,kBAAIC,KAAI;AACR,qBAAOA,KAAI,KAAK,OAAO,QAAQ,EAAEA,IAAG;AAClC,oBAAI,MAAM,KAAK,OAAOA,EAAC;AACvB,oBAAI,KAAK,SAAS,QAAQ,IAAI,SAAS,KAAK,MAAM,MAAM;AACtD,sBAAI,IAAI,QAAQ,SAAS,WAAW,IAAI,SAAS,SAAS;AAAE;AAAA,kBAAK;AACjE,sBAAI,KAAK,SAAS,SAAS;AAAE;AAAA,kBAAK;AAAA,gBAC1C;AAAA,cACA;AACI,kBAAIA,OAAM,KAAK,OAAO,QAAQ;AAAE,qBAAK,MAAM,KAAK,OAAO,iBAAiB,OAAO;AAAA,cAAE;AACjF,qBAAO,KAAK,WAAW,MAAM,UAAU,mBAAmB,mBAAmB;AAAA,YACjF;AAEE,iBAAK,yBAAyB,SAAS,MAAM;AAC3C,mBAAK,KAAI;AACT,mBAAK,UAAS;AACd,qBAAO,KAAK,WAAW,MAAM,mBAAmB;AAAA,YACpD;AAEE,iBAAK,mBAAmB,SAAS,MAAM;AACrC,mBAAK,KAAI;AACT,mBAAK,OAAO,KAAK,SAAS;AAC1B,mBAAK,OAAO,KAAK,eAAe,IAAI;AACpC,mBAAK,OAAO,IAAG;AACf,mBAAK,OAAO,QAAQ,MAAM;AAC1B,mBAAK,OAAO,KAAK,qBAAoB;AACrC,kBAAI,KAAK,QAAQ,eAAe,GAC9B;AAAE,qBAAK,IAAI,QAAQ,IAAI;AAAA,cAAE,OAEzB;AAAE,qBAAK,UAAS;AAAA,cAAG;AACrB,qBAAO,KAAK,WAAW,MAAM,kBAAkB;AAAA,YACnD;AAGE,iBAAK,oBAAoB,SAAS,MAAM;AACtC,mBAAK,KAAI;AACT,kBAAI,UAAW,KAAK,QAAQ,eAAe,KAAK,KAAK,YAAY,KAAK,cAAc,OAAO,IAAK,KAAK,eAAe;AACpH,mBAAK,OAAO,KAAK,SAAS;AAC1B,mBAAK,WAAW,CAAC;AACjB,mBAAK,OAAO,QAAQ,MAAM;AAC1B,kBAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,oBAAI,UAAU,IAAI;AAAE,uBAAK,WAAW,OAAO;AAAA,gBAAE;AAC7C,uBAAO,KAAK,SAAS,MAAM,IAAI;AAAA,cACrC;AACI,kBAAI,QAAQ,KAAK,MAAK;AACtB,kBAAI,KAAK,SAAS,QAAQ,QAAQ,KAAK,SAAS,QAAQ,UAAU,OAAO;AACvE,oBAAI,SAAS,KAAK,UAAS,GAAI,OAAO,QAAQ,QAAQ,KAAK;AAC3D,qBAAK,KAAI;AACT,qBAAK,SAAS,QAAQ,MAAM,IAAI;AAChC,qBAAK,WAAW,QAAQ,qBAAqB;AAC7C,qBAAK,KAAK,SAAS,QAAQ,OAAQ,KAAK,QAAQ,eAAe,KAAK,KAAK,aAAa,IAAI,MAAO,OAAO,aAAa,WAAW,GAAG;AACjI,sBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,wBAAI,KAAK,SAAS,QAAQ,KAAK;AAC7B,0BAAI,UAAU,IAAI;AAAE,6BAAK,WAAW,OAAO;AAAA,sBAAE;AAAA,oBACzD,OAAiB;AAAE,2BAAK,QAAQ,UAAU;AAAA,oBAAG;AAAA,kBAC7C;AACQ,yBAAO,KAAK,WAAW,MAAM,MAAM;AAAA,gBAC3C;AACM,oBAAI,UAAU,IAAI;AAAE,uBAAK,WAAW,OAAO;AAAA,gBAAE;AAC7C,uBAAO,KAAK,SAAS,MAAM,MAAM;AAAA,cACvC;AACI,kBAAI,gBAAgB,KAAK,aAAa,KAAK,GAAG,UAAU;AACxD,kBAAI,cAAc,KAAK;AACvB,kBAAI,yBAAyB,IAAI;AACjC,kBAAI,UAAU,KAAK;AACnB,kBAAI,OAAO,UAAU,KACjB,KAAK,oBAAoB,wBAAwB,OAAO,IACxD,KAAK,gBAAgB,MAAM,sBAAsB;AACrD,kBAAI,KAAK,SAAS,QAAQ,QAAQ,UAAU,KAAK,QAAQ,eAAe,KAAK,KAAK,aAAa,IAAI,IAAI;AACrG,oBAAI,UAAU,IAAI;AAChB,sBAAI,KAAK,SAAS,QAAQ,KAAK;AAAE,yBAAK,WAAW,OAAO;AAAA,kBAAE;AAC1D,uBAAK,QAAQ;AAAA,gBACrB,WAAiB,WAAW,KAAK,QAAQ,eAAe,GAAG;AACnD,sBAAI,KAAK,UAAU,WAAW,CAAC,eAAe,KAAK,SAAS,gBAAgB,KAAK,SAAS,SAAS;AAAE,yBAAK,WAAU;AAAA,kBAAG,WAC9G,KAAK,QAAQ,eAAe,GAAG;AAAE,yBAAK,QAAQ;AAAA,kBAAM;AAAA,gBACrE;AACM,oBAAI,iBAAiB,SAAS;AAAE,uBAAK,MAAM,KAAK,OAAO,+DAA+D;AAAA,gBAAE;AACxH,qBAAK,aAAa,MAAM,OAAO,sBAAsB;AACrD,qBAAK,iBAAiB,IAAI;AAC1B,uBAAO,KAAK,WAAW,MAAM,IAAI;AAAA,cACvC,OAAW;AACL,qBAAK,sBAAsB,wBAAwB,IAAI;AAAA,cAC7D;AACI,kBAAI,UAAU,IAAI;AAAE,qBAAK,WAAW,OAAO;AAAA,cAAE;AAC7C,qBAAO,KAAK,SAAS,MAAM,IAAI;AAAA,YACnC;AAEE,iBAAK,yBAAyB,SAAS,MAAM,SAAS,qBAAqB;AACzE,mBAAK,KAAI;AACT,qBAAO,KAAK,cAAc,MAAM,kBAAkB,sBAAsB,IAAI,yBAAyB,OAAO,OAAO;AAAA,YACvH;AAEE,iBAAK,mBAAmB,SAAS,MAAM;AACrC,mBAAK,KAAI;AACT,mBAAK,OAAO,KAAK,qBAAoB;AACrC,mBAAK,aAAa,KAAK,eAAe,IAAI;AAC1C,mBAAK,YAAY,KAAK,IAAI,QAAQ,KAAK,IAAI,KAAK,eAAe,IAAI,IAAI;AACvE,qBAAO,KAAK,WAAW,MAAM,aAAa;AAAA,YAC9C;AAEE,iBAAK,uBAAuB,SAAS,MAAM;AACzC,kBAAI,CAAC,KAAK,cAAc,CAAC,KAAK,QAAQ,4BACpC;AAAE,qBAAK,MAAM,KAAK,OAAO,8BAA8B;AAAA,cAAE;AAC3D,mBAAK,KAAI;AAGT,kBAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,gBAAe,GAAI;AAAE,qBAAK,WAAW;AAAA,cAAK,OACxE;AAAE,qBAAK,WAAW,KAAK,gBAAe;AAAI,qBAAK,UAAS;AAAA,cAAG;AAChE,qBAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,YAClD;AAEE,iBAAK,uBAAuB,SAAS,MAAM;AACzC,mBAAK,KAAI;AACT,mBAAK,eAAe,KAAK,qBAAoB;AAC7C,mBAAK,QAAQ,CAAA;AACb,mBAAK,OAAO,QAAQ,MAAM;AAC1B,mBAAK,OAAO,KAAK,WAAW;AAC5B,mBAAK,WAAW,CAAC;AAGjB,kBAAI;AACJ,uBAAS,aAAa,OAAO,KAAK,SAAS,QAAQ,UAAS;AAC1D,oBAAI,KAAK,SAAS,QAAQ,SAAS,KAAK,SAAS,QAAQ,UAAU;AACjE,sBAAI,SAAS,KAAK,SAAS,QAAQ;AACnC,sBAAI,KAAK;AAAE,yBAAK,WAAW,KAAK,YAAY;AAAA,kBAAE;AAC9C,uBAAK,MAAM,KAAK,MAAM,KAAK,UAAS,CAAE;AACtC,sBAAI,aAAa,CAAA;AACjB,uBAAK,KAAI;AACT,sBAAI,QAAQ;AACV,wBAAI,OAAO,KAAK,gBAAe;AAAA,kBACzC,OAAe;AACL,wBAAI,YAAY;AAAE,2BAAK,iBAAiB,KAAK,cAAc,0BAA0B;AAAA,oBAAE;AACvF,iCAAa;AACb,wBAAI,OAAO;AAAA,kBACrB;AACQ,uBAAK,OAAO,QAAQ,KAAK;AAAA,gBACjC,OAAa;AACL,sBAAI,CAAC,KAAK;AAAE,yBAAK,WAAU;AAAA,kBAAG;AAC9B,sBAAI,WAAW,KAAK,KAAK,eAAe,IAAI,CAAC;AAAA,gBACrD;AAAA,cACA;AACI,mBAAK,UAAS;AACd,kBAAI,KAAK;AAAE,qBAAK,WAAW,KAAK,YAAY;AAAA,cAAE;AAC9C,mBAAK,KAAI;AACT,mBAAK,OAAO,IAAG;AACf,qBAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,YAClD;AAEE,iBAAK,sBAAsB,SAAS,MAAM;AACxC,mBAAK,KAAI;AACT,kBAAI,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC,GAC9D;AAAE,qBAAK,MAAM,KAAK,YAAY,6BAA6B;AAAA,cAAE;AAC/D,mBAAK,WAAW,KAAK,gBAAe;AACpC,mBAAK,UAAS;AACd,qBAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,YACjD;AAGE,gBAAI,UAAU,CAAA;AAEd,iBAAK,wBAAwB,WAAW;AACtC,kBAAI,QAAQ,KAAK,iBAAgB;AACjC,kBAAI,SAAS,MAAM,SAAS;AAC5B,mBAAK,WAAW,SAAS,qBAAqB,CAAC;AAC/C,mBAAK,iBAAiB,OAAO,SAAS,oBAAoB,YAAY;AACtE,mBAAK,OAAO,QAAQ,MAAM;AAE1B,qBAAO;AAAA,YACX;AAEE,iBAAK,oBAAoB,SAAS,MAAM;AACtC,mBAAK,KAAI;AACT,mBAAK,QAAQ,KAAK,WAAU;AAC5B,mBAAK,UAAU;AACf,kBAAI,KAAK,SAAS,QAAQ,QAAQ;AAChC,oBAAI,SAAS,KAAK,UAAS;AAC3B,qBAAK,KAAI;AACT,oBAAI,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC5B,yBAAO,QAAQ,KAAK,sBAAqB;AAAA,gBACjD,OAAa;AACL,sBAAI,KAAK,QAAQ,cAAc,IAAI;AAAE,yBAAK,WAAU;AAAA,kBAAG;AACvD,yBAAO,QAAQ;AACf,uBAAK,WAAW,CAAC;AAAA,gBACzB;AACM,uBAAO,OAAO,KAAK,WAAW,KAAK;AACnC,qBAAK,UAAS;AACd,qBAAK,UAAU,KAAK,WAAW,QAAQ,aAAa;AAAA,cAC1D;AACI,mBAAK,YAAY,KAAK,IAAI,QAAQ,QAAQ,IAAI,KAAK,WAAU,IAAK;AAClE,kBAAI,CAAC,KAAK,WAAW,CAAC,KAAK,WACzB;AAAE,qBAAK,MAAM,KAAK,OAAO,iCAAiC;AAAA,cAAE;AAC9D,qBAAO,KAAK,WAAW,MAAM,cAAc;AAAA,YAC/C;AAEE,iBAAK,oBAAoB,SAAS,MAAM,MAAM,yBAAyB;AACrE,mBAAK,KAAI;AACT,mBAAK,SAAS,MAAM,OAAO,MAAM,uBAAuB;AACxD,mBAAK,UAAS;AACd,qBAAO,KAAK,WAAW,MAAM,qBAAqB;AAAA,YACtD;AAEE,iBAAK,sBAAsB,SAAS,MAAM;AACxC,mBAAK,KAAI;AACT,mBAAK,OAAO,KAAK,qBAAoB;AACrC,mBAAK,OAAO,KAAK,SAAS;AAC1B,mBAAK,OAAO,KAAK,eAAe,OAAO;AACvC,mBAAK,OAAO,IAAG;AACf,qBAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,YACjD;AAEE,iBAAK,qBAAqB,SAAS,MAAM;AACvC,kBAAI,KAAK,QAAQ;AAAE,qBAAK,MAAM,KAAK,OAAO,uBAAuB;AAAA,cAAE;AACnE,mBAAK,KAAI;AACT,mBAAK,SAAS,KAAK,qBAAoB;AACvC,mBAAK,OAAO,KAAK,eAAe,MAAM;AACtC,qBAAO,KAAK,WAAW,MAAM,eAAe;AAAA,YAChD;AAEE,iBAAK,sBAAsB,SAAS,MAAM;AACxC,mBAAK,KAAI;AACT,qBAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,YACjD;AAEE,iBAAK,wBAAwB,SAAS,MAAM,WAAW,MAAM,SAAS;AACpE,uBAAS,MAAM,GAAGc,QAAO,KAAK,QAAQ,MAAMA,MAAK,QAAQ,OAAO,GAC9D;AACA,oBAAI,QAAQA,MAAK,GAAG;AAEpB,oBAAI,MAAM,SAAS,WACjB;AAAE,uBAAK,MAAM,KAAK,OAAO,YAAY,YAAY,uBAAuB;AAAA,gBAChF;AAAA,cAAK;AACD,kBAAI,OAAO,KAAK,KAAK,SAAS,SAAS,KAAK,SAAS,QAAQ,UAAU,WAAW;AAClF,uBAASd,KAAI,KAAK,OAAO,SAAS,GAAGA,MAAK,GAAGA,MAAK;AAChD,oBAAI,UAAU,KAAK,OAAOA,EAAC;AAC3B,oBAAI,QAAQ,mBAAmB,KAAK,OAAO;AACzC,0BAAQ,iBAAiB,KAAK;AAC9B,0BAAQ,OAAO;AAAA,gBACvB,OAAa;AAAE;AAAA,gBAAK;AAAA,cACpB;AACI,mBAAK,OAAO,KAAK,EAAC,MAAM,WAAW,MAAY,gBAAgB,KAAK,MAAK,CAAC;AAC1E,mBAAK,OAAO,KAAK,eAAe,UAAU,QAAQ,QAAQ,OAAO,MAAM,KAAK,UAAU,UAAU,UAAU,OAAO;AACjH,mBAAK,OAAO,IAAG;AACf,mBAAK,QAAQ;AACb,qBAAO,KAAK,WAAW,MAAM,kBAAkB;AAAA,YACnD;AAEE,iBAAK,2BAA2B,SAAS,MAAM,MAAM;AACnD,mBAAK,aAAa;AAClB,mBAAK,UAAS;AACd,qBAAO,KAAK,WAAW,MAAM,qBAAqB;AAAA,YACtD;AAGE,iBAAK,aAAa,SAAS,uBAAuB,MAAM,YAAY;AAClE,kBAAK,0BAA0B,OAAS,yBAAwB;AAChE,kBAAK,SAAS,OAAS,QAAO,KAAK,UAAS;AAE5C,mBAAK,OAAO,CAAA;AACZ,mBAAK,OAAO,QAAQ,MAAM;AAC1B,kBAAI,uBAAuB;AAAE,qBAAK,WAAW,CAAC;AAAA,cAAE;AAChD,qBAAO,KAAK,SAAS,QAAQ,QAAQ;AACnC,oBAAI,OAAO,KAAK,eAAe,IAAI;AACnC,qBAAK,KAAK,KAAK,IAAI;AAAA,cACzB;AACI,kBAAI,YAAY;AAAE,qBAAK,SAAS;AAAA,cAAM;AACtC,mBAAK,KAAI;AACT,kBAAI,uBAAuB;AAAE,qBAAK,UAAS;AAAA,cAAG;AAC9C,qBAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,YACjD;AAGE,iBAAK,WAAW,SAAS,MAAM,MAAM;AACnC,mBAAK,OAAO;AACZ,mBAAK,OAAO,QAAQ,IAAI;AACxB,mBAAK,OAAO,KAAK,SAAS,QAAQ,OAAO,OAAO,KAAK,gBAAe;AACpE,mBAAK,OAAO,QAAQ,IAAI;AACxB,mBAAK,SAAS,KAAK,SAAS,QAAQ,SAAS,OAAO,KAAK,gBAAe;AACxE,mBAAK,OAAO,QAAQ,MAAM;AAC1B,mBAAK,OAAO,KAAK,eAAe,KAAK;AACrC,mBAAK,UAAS;AACd,mBAAK,OAAO,IAAG;AACf,qBAAO,KAAK,WAAW,MAAM,cAAc;AAAA,YAC/C;AAGE,iBAAK,aAAa,SAAS,MAAM,MAAM;AACrC,kBAAI,UAAU,KAAK,SAAS,QAAQ;AACpC,mBAAK,KAAI;AAET,kBACE,KAAK,SAAS,yBACd,KAAK,aAAa,CAAC,EAAE,QAAQ,SAE3B,CAAC,WACD,KAAK,QAAQ,cAAc,KAC3B,KAAK,UACL,KAAK,SAAS,SACd,KAAK,aAAa,CAAC,EAAE,GAAG,SAAS,eAEnC;AACA,qBAAK;AAAA,kBACH,KAAK;AAAA,mBACH,UAAU,WAAW,YAAY;AAAA;cAE3C;AACI,mBAAK,OAAO;AACZ,mBAAK,QAAQ,UAAU,KAAK,gBAAe,IAAK,KAAK,iBAAgB;AACrE,mBAAK,OAAO,QAAQ,MAAM;AAC1B,mBAAK,OAAO,KAAK,eAAe,KAAK;AACrC,mBAAK,UAAS;AACd,mBAAK,OAAO,IAAG;AACf,qBAAO,KAAK,WAAW,MAAM,UAAU,mBAAmB,gBAAgB;AAAA,YAC9E;AAGE,iBAAK,WAAW,SAAS,MAAM,OAAO,MAAM,yBAAyB;AACnE,mBAAK,eAAe,CAAA;AACpB,mBAAK,OAAO;AACZ,yBAAS;AACP,oBAAI,OAAO,KAAK,UAAS;AACzB,qBAAK,WAAW,MAAM,IAAI;AAC1B,oBAAI,KAAK,IAAI,QAAQ,EAAE,GAAG;AACxB,uBAAK,OAAO,KAAK,iBAAiB,KAAK;AAAA,gBAC/C,WAAiB,CAAC,2BAA2B,SAAS,WAAW,EAAE,KAAK,SAAS,QAAQ,OAAQ,KAAK,QAAQ,eAAe,KAAK,KAAK,aAAa,IAAI,IAAK;AACrJ,uBAAK,WAAU;AAAA,gBACvB,WAAiB,CAAC,2BAA2B,KAAK,GAAG,SAAS,gBAAgB,EAAE,UAAU,KAAK,SAAS,QAAQ,OAAO,KAAK,aAAa,IAAI,KAAK;AAC1I,uBAAK,MAAM,KAAK,YAAY,0DAA0D;AAAA,gBAC9F,OAAa;AACL,uBAAK,OAAO;AAAA,gBACpB;AACM,qBAAK,aAAa,KAAK,KAAK,WAAW,MAAM,oBAAoB,CAAC;AAClE,oBAAI,CAAC,KAAK,IAAI,QAAQ,KAAK,GAAG;AAAE;AAAA,gBAAK;AAAA,cAC3C;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,aAAa,SAAS,MAAM,MAAM;AACrC,mBAAK,KAAK,KAAK,iBAAgB;AAC/B,mBAAK,iBAAiB,KAAK,IAAI,SAAS,QAAQ,WAAW,cAAc,KAAK;AAAA,YAClF;AAEE,gBAAI,iBAAiB,GAAG,yBAAyB,GAAG,mBAAmB;AAGvE,iBAAK,gBAAgB,SAAS,MAAM,WAAW,qBAAqB,SAAS,SAAS;AACpF,mBAAK,aAAa,IAAI;AACtB,kBAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,QAAQ,eAAe,KAAK,CAAC,SAAS;AAC9E,oBAAI,KAAK,SAAS,QAAQ,QAAS,YAAY,wBAC7C;AAAE,uBAAK,WAAU;AAAA,gBAAG;AACtB,qBAAK,YAAY,KAAK,IAAI,QAAQ,IAAI;AAAA,cAC5C;AACI,kBAAI,KAAK,QAAQ,eAAe,GAC9B;AAAE,qBAAK,QAAQ,CAAC,CAAC;AAAA,cAAQ;AAE3B,kBAAI,YAAY,gBAAgB;AAC9B,qBAAK,KAAM,YAAY,oBAAqB,KAAK,SAAS,QAAQ,OAAO,OAAO,KAAK,WAAU;AAC/F,oBAAI,KAAK,MAAM,EAAE,YAAY,yBAC3B;AAAE,uBAAK,gBAAgB,KAAK,IAAK,KAAK,UAAU,KAAK,aAAa,KAAK,QAAS,KAAK,sBAAsB,WAAW,eAAe,aAAa;AAAA,gBAAE;AAAA,cAC5J;AAEI,kBAAI,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU,mBAAmB,KAAK;AACtF,mBAAK,WAAW;AAChB,mBAAK,WAAW;AAChB,mBAAK,gBAAgB;AACrB,mBAAK,WAAW,cAAc,KAAK,OAAO,KAAK,SAAS,CAAC;AAEzD,kBAAI,EAAE,YAAY,iBAChB;AAAE,qBAAK,KAAK,KAAK,SAAS,QAAQ,OAAO,KAAK,eAAe;AAAA,cAAK;AAEpE,mBAAK,oBAAoB,IAAI;AAC7B,mBAAK,kBAAkB,MAAM,qBAAqB,OAAO,OAAO;AAEhE,mBAAK,WAAW;AAChB,mBAAK,WAAW;AAChB,mBAAK,gBAAgB;AACrB,qBAAO,KAAK,WAAW,MAAO,YAAY,iBAAkB,wBAAwB,oBAAoB;AAAA,YAC5G;AAEE,iBAAK,sBAAsB,SAAS,MAAM;AACxC,mBAAK,OAAO,QAAQ,MAAM;AAC1B,mBAAK,SAAS,KAAK,iBAAiB,QAAQ,QAAQ,OAAO,KAAK,QAAQ,eAAe,CAAC;AACxF,mBAAK,+BAA8B;AAAA,YACvC;AAGE,iBAAK,aAAa,SAAS,MAAM,aAAa;AAC5C,mBAAK,KAAI;AAET,kBAAI,YAAY,KAAK;AACrB,mBAAK,SAAS;AAEd,mBAAK,aAAa,MAAM,WAAW;AACnC,mBAAK,gBAAgB,IAAI;AACzB,kBAAI,iBAAiB,KAAK,eAAc;AACxC,kBAAI,YAAY,KAAK,UAAS;AAC9B,kBAAI,iBAAiB;AACrB,wBAAU,OAAO,CAAA;AACjB,mBAAK,OAAO,QAAQ,MAAM;AAC1B,qBAAO,KAAK,SAAS,QAAQ,QAAQ;AACnC,oBAAI,UAAU,KAAK,kBAAkB,KAAK,eAAe,IAAI;AAC7D,oBAAI,SAAS;AACX,4BAAU,KAAK,KAAK,OAAO;AAC3B,sBAAI,QAAQ,SAAS,sBAAsB,QAAQ,SAAS,eAAe;AACzE,wBAAI,gBAAgB;AAAE,2BAAK,iBAAiB,QAAQ,OAAO,yCAAyC;AAAA,oBAAE;AACtG,qCAAiB;AAAA,kBAC3B,WAAmB,QAAQ,OAAO,QAAQ,IAAI,SAAS,uBAAuB,wBAAwB,gBAAgB,OAAO,GAAG;AACtH,yBAAK,iBAAiB,QAAQ,IAAI,OAAQ,kBAAmB,QAAQ,IAAI,OAAQ,6BAA6B;AAAA,kBACxH;AAAA,gBACA;AAAA,cACA;AACI,mBAAK,SAAS;AACd,mBAAK,KAAI;AACT,mBAAK,OAAO,KAAK,WAAW,WAAW,WAAW;AAClD,mBAAK,cAAa;AAClB,qBAAO,KAAK,WAAW,MAAM,cAAc,qBAAqB,iBAAiB;AAAA,YACrF;AAEE,iBAAK,oBAAoB,SAAS,wBAAwB;AACxD,kBAAI,KAAK,IAAI,QAAQ,IAAI,GAAG;AAAE,uBAAO;AAAA,cAAI;AAEzC,kBAAIe,eAAc,KAAK,QAAQ;AAC/B,kBAAI,OAAO,KAAK,UAAS;AACzB,kBAAI,UAAU;AACd,kBAAI,cAAc;AAClB,kBAAI,UAAU;AACd,kBAAI,OAAO;AACX,kBAAI,WAAW;AAEf,kBAAI,KAAK,cAAc,QAAQ,GAAG;AAChC,oBAAIA,gBAAe,MAAM,KAAK,IAAI,QAAQ,MAAM,GAAG;AACjD,uBAAK,sBAAsB,IAAI;AAC/B,yBAAO;AAAA,gBACf;AACM,oBAAI,KAAK,wBAAuB,KAAM,KAAK,SAAS,QAAQ,MAAM;AAChE,6BAAW;AAAA,gBACnB,OAAa;AACL,4BAAU;AAAA,gBAClB;AAAA,cACA;AACI,mBAAK,SAAS;AACd,kBAAI,CAAC,WAAWA,gBAAe,KAAK,KAAK,cAAc,OAAO,GAAG;AAC/D,qBAAK,KAAK,wBAAuB,KAAM,KAAK,SAAS,QAAQ,SAAS,CAAC,KAAK,sBAAsB;AAChG,4BAAU;AAAA,gBAClB,OAAa;AACL,4BAAU;AAAA,gBAClB;AAAA,cACA;AACI,kBAAI,CAAC,YAAYA,gBAAe,KAAK,CAAC,YAAY,KAAK,IAAI,QAAQ,IAAI,GAAG;AACxE,8BAAc;AAAA,cACpB;AACI,kBAAI,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa;AACxC,oBAAI,YAAY,KAAK;AACrB,oBAAI,KAAK,cAAc,KAAK,KAAK,KAAK,cAAc,KAAK,GAAG;AAC1D,sBAAI,KAAK,2BAA2B;AAClC,2BAAO;AAAA,kBACjB,OAAe;AACL,8BAAU;AAAA,kBACpB;AAAA,gBACA;AAAA,cACA;AAEI,kBAAI,SAAS;AACX,qBAAK,WAAW;AAChB,qBAAK,MAAM,KAAK,YAAY,KAAK,cAAc,KAAK,eAAe;AACnE,qBAAK,IAAI,OAAO;AAChB,qBAAK,WAAW,KAAK,KAAK,YAAY;AAAA,cAC5C,OAAW;AACL,qBAAK,sBAAsB,IAAI;AAAA,cACrC;AAEI,kBAAIA,eAAc,MAAM,KAAK,SAAS,QAAQ,UAAU,SAAS,YAAY,eAAe,SAAS;AACnG,oBAAI,gBAAgB,CAAC,KAAK,UAAU,aAAa,MAAM,aAAa;AACpE,oBAAI,oBAAoB,iBAAiB;AACzC,oBAAI,iBAAiB,SAAS,UAAU;AAAE,uBAAK,MAAM,KAAK,IAAI,OAAO,yCAAyC;AAAA,gBAAE;AAChH,qBAAK,OAAO,gBAAgB,gBAAgB;AAC5C,qBAAK,iBAAiB,MAAM,aAAa,SAAS,iBAAiB;AAAA,cACzE,OAAW;AACL,qBAAK,gBAAgB,IAAI;AAAA,cAC/B;AAEI,qBAAO;AAAA,YACX;AAEE,iBAAK,0BAA0B,WAAW;AACxC,qBACE,KAAK,SAAS,QAAQ,QACtB,KAAK,SAAS,QAAQ,aACtB,KAAK,SAAS,QAAQ,OACtB,KAAK,SAAS,QAAQ,UACtB,KAAK,SAAS,QAAQ,YACtB,KAAK,KAAK;AAAA,YAEhB;AAEE,iBAAK,wBAAwB,SAAS,SAAS;AAC7C,kBAAI,KAAK,SAAS,QAAQ,WAAW;AACnC,oBAAI,KAAK,UAAU,eAAe;AAChC,uBAAK,MAAM,KAAK,OAAO,oDAAoD;AAAA,gBACnF;AACM,wBAAQ,WAAW;AACnB,wBAAQ,MAAM,KAAK,kBAAiB;AAAA,cAC1C,OAAW;AACL,qBAAK,kBAAkB,OAAO;AAAA,cACpC;AAAA,YACA;AAEE,iBAAK,mBAAmB,SAAS,QAAQ,aAAa,SAAS,mBAAmB;AAChF,kBAAI,MAAM,OAAO;AACjB,kBAAI,OAAO,SAAS,eAAe;AACjC,oBAAI,aAAa;AAAE,uBAAK,MAAM,IAAI,OAAO,kCAAkC;AAAA,gBAAE;AAC7E,oBAAI,SAAS;AAAE,uBAAK,MAAM,IAAI,OAAO,sCAAsC;AAAA,gBAAE;AAAA,cACnF,WAAe,OAAO,UAAU,aAAa,QAAQ,WAAW,GAAG;AAC7D,qBAAK,MAAM,IAAI,OAAO,wDAAwD;AAAA,cACpF;AAEI,kBAAIC,SAAQ,OAAO,QAAQ,KAAK,YAAY,aAAa,SAAS,iBAAiB;AAEnF,kBAAI,OAAO,SAAS,SAASA,OAAM,OAAO,WAAW,GACnD;AAAE,qBAAK,iBAAiBA,OAAM,OAAO,8BAA8B;AAAA,cAAE;AACvE,kBAAI,OAAO,SAAS,SAASA,OAAM,OAAO,WAAW,GACnD;AAAE,qBAAK,iBAAiBA,OAAM,OAAO,sCAAsC;AAAA,cAAE;AAC/E,kBAAI,OAAO,SAAS,SAASA,OAAM,OAAO,CAAC,EAAE,SAAS,eACpD;AAAE,qBAAK,iBAAiBA,OAAM,OAAO,CAAC,EAAE,OAAO,+BAA+B;AAAA,cAAE;AAElF,qBAAO,KAAK,WAAW,QAAQ,kBAAkB;AAAA,YACrD;AAEE,iBAAK,kBAAkB,SAAS,OAAO;AACrC,kBAAI,aAAa,OAAO,aAAa,GAAG;AACtC,qBAAK,MAAM,MAAM,IAAI,OAAO,gDAAgD;AAAA,cAClF,WAAe,MAAM,UAAU,aAAa,OAAO,WAAW,GAAG;AAC3D,qBAAK,MAAM,MAAM,IAAI,OAAO,qDAAqD;AAAA,cACvF;AAEI,kBAAI,KAAK,IAAI,QAAQ,EAAE,GAAG;AACxB,oBAAI,QAAQ,KAAK,iBAAgB;AACjC,oBAAI,mBAAmB,MAAM;AAC7B,sBAAM,mBAAmB;AACzB,sBAAM,QAAQ,KAAK,iBAAgB;AACnC,sBAAM,mBAAmB;AAAA,cAC/B,OAAW;AACL,sBAAM,QAAQ;AAAA,cACpB;AACI,mBAAK,UAAS;AAEd,qBAAO,KAAK,WAAW,OAAO,oBAAoB;AAAA,YACtD;AAEE,iBAAK,wBAAwB,SAAS,MAAM;AAC1C,mBAAK,OAAO,CAAA;AAEZ,kBAAI,YAAY,KAAK;AACrB,mBAAK,SAAS,CAAA;AACd,mBAAK,WAAW,2BAA2B,WAAW;AACtD,qBAAO,KAAK,SAAS,QAAQ,QAAQ;AACnC,oBAAI,OAAO,KAAK,eAAe,IAAI;AACnC,qBAAK,KAAK,KAAK,IAAI;AAAA,cACzB;AACI,mBAAK,KAAI;AACT,mBAAK,UAAS;AACd,mBAAK,SAAS;AAEd,qBAAO,KAAK,WAAW,MAAM,aAAa;AAAA,YAC9C;AAEE,iBAAK,eAAe,SAAS,MAAM,aAAa;AAC9C,kBAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,qBAAK,KAAK,KAAK,WAAU;AACzB,oBAAI,aACF;AAAE,uBAAK,gBAAgB,KAAK,IAAI,cAAc,KAAK;AAAA,gBAAE;AAAA,cAC7D,OAAW;AACL,oBAAI,gBAAgB,MAClB;AAAE,uBAAK,WAAU;AAAA,gBAAG;AACtB,qBAAK,KAAK;AAAA,cAChB;AAAA,YACA;AAEE,iBAAK,kBAAkB,SAAS,MAAM;AACpC,mBAAK,aAAa,KAAK,IAAI,QAAQ,QAAQ,IAAI,KAAK,oBAAoB,MAAM,KAAK,IAAI;AAAA,YAC3F;AAEE,iBAAK,iBAAiB,WAAW;AAC/B,kBAAI,UAAU,EAAC,UAAU,uBAAO,OAAO,IAAI,GAAG,MAAM,GAAE;AACtD,mBAAK,iBAAiB,KAAK,OAAO;AAClC,qBAAO,QAAQ;AAAA,YACnB;AAEE,iBAAK,gBAAgB,WAAW;AAC9B,kBAAIN,OAAM,KAAK,iBAAiB,IAAG;AACnC,kBAAI,WAAWA,KAAI;AACnB,kBAAI,OAAOA,KAAI;AACf,kBAAI,CAAC,KAAK,QAAQ,oBAAoB;AAAE;AAAA,cAAM;AAC9C,kBAAI,MAAM,KAAK,iBAAiB;AAChC,kBAAI,SAAS,QAAQ,IAAI,OAAO,KAAK,iBAAiB,MAAM,CAAC;AAC7D,uBAASV,KAAI,GAAGA,KAAI,KAAK,QAAQ,EAAEA,IAAG;AACpC,oBAAI,KAAK,KAAKA,EAAC;AACf,oBAAI,CAAC,OAAO,UAAU,GAAG,IAAI,GAAG;AAC9B,sBAAI,QAAQ;AACV,2BAAO,KAAK,KAAK,EAAE;AAAA,kBAC7B,OAAe;AACL,yBAAK,iBAAiB,GAAG,OAAQ,qBAAsB,GAAG,OAAQ,0CAA0C;AAAA,kBACtH;AAAA,gBACA;AAAA,cACA;AAAA,YACA;AAEE,qBAAS,wBAAwB,gBAAgB,SAAS;AACxD,kBAAIK,QAAO,QAAQ,IAAI;AACvB,kBAAI,OAAO,eAAeA,KAAI;AAE9B,kBAAI,OAAO;AACX,kBAAI,QAAQ,SAAS,uBAAuB,QAAQ,SAAS,SAAS,QAAQ,SAAS,QAAQ;AAC7F,wBAAQ,QAAQ,SAAS,MAAM,OAAO,QAAQ;AAAA,cACpD;AAEI,kBACE,SAAS,UAAU,SAAS,UAC5B,SAAS,UAAU,SAAS,UAC5B,SAAS,UAAU,SAAS,UAC5B,SAAS,UAAU,SAAS,QAC5B;AACA,+BAAeA,KAAI,IAAI;AACvB,uBAAO;AAAA,cACb,WAAe,CAAC,MAAM;AAChB,+BAAeA,KAAI,IAAI;AACvB,uBAAO;AAAA,cACb,OAAW;AACL,uBAAO;AAAA,cACb;AAAA,YACA;AAvBW;AAyBT,qBAAS,aAAa,MAAMA,OAAM;AAChC,kBAAI,WAAW,KAAK;AACpB,kBAAI,MAAM,KAAK;AACf,qBAAO,CAAC,aACN,IAAI,SAAS,gBAAgB,IAAI,SAASA,SAC1C,IAAI,SAAS,aAAa,IAAI,UAAUA;AAAA,YAE9C;AAPW;AAUT,iBAAK,4BAA4B,SAAS,MAAMN,UAAS;AACvD,kBAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,oBAAI,KAAK,cAAc,IAAI,GAAG;AAC5B,uBAAK,WAAW,KAAK,sBAAqB;AAC1C,uBAAK,YAAYA,UAAS,KAAK,UAAU,KAAK,YAAY;AAAA,gBAClE,OAAa;AACL,uBAAK,WAAW;AAAA,gBACxB;AAAA,cACA;AACI,mBAAK,iBAAiB,MAAM;AAC5B,kBAAI,KAAK,SAAS,QAAQ,QAAQ;AAAE,qBAAK,WAAU;AAAA,cAAG;AACtD,mBAAK,SAAS,KAAK,cAAa;AAChC,kBAAI,KAAK,QAAQ,eAAe,IAC9B;AAAE,qBAAK,aAAa,KAAK,gBAAe;AAAA,cAAG;AAC7C,mBAAK,UAAS;AACd,qBAAO,KAAK,WAAW,MAAM,sBAAsB;AAAA,YACvD;AAEE,iBAAK,cAAc,SAAS,MAAMA,UAAS;AACzC,mBAAK,KAAI;AACT,kBAAI,KAAK,IAAI,QAAQ,IAAI,GAAG;AAC1B,uBAAO,KAAK,0BAA0B,MAAMA,QAAO;AAAA,cACzD;AACI,kBAAI,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAC9B,qBAAK,YAAYA,UAAS,WAAW,KAAK,YAAY;AACtD,qBAAK,cAAc,KAAK,8BAA6B;AACrD,uBAAO,KAAK,WAAW,MAAM,0BAA0B;AAAA,cAC7D;AACI,kBAAI,KAAK,8BAA8B;AACrC,qBAAK,cAAc,KAAK,uBAAuB,IAAI;AACnD,oBAAI,KAAK,YAAY,SAAS,uBAC5B;AAAE,uBAAK,oBAAoBA,UAAS,KAAK,YAAY,YAAY;AAAA,gBAAE,OAEnE;AAAE,uBAAK,YAAYA,UAAS,KAAK,YAAY,IAAI,KAAK,YAAY,GAAG,KAAK;AAAA,gBAAE;AAC9E,qBAAK,aAAa,CAAA;AAClB,qBAAK,SAAS;AAAA,cACpB,OAAW;AACL,qBAAK,cAAc;AACnB,qBAAK,aAAa,KAAK,sBAAsBA,QAAO;AACpD,oBAAI,KAAK,cAAc,MAAM,GAAG;AAC9B,sBAAI,KAAK,SAAS,QAAQ,QAAQ;AAAE,yBAAK,WAAU;AAAA,kBAAG;AACtD,uBAAK,SAAS,KAAK,cAAa;AAChC,sBAAI,KAAK,QAAQ,eAAe,IAC9B;AAAE,yBAAK,aAAa,KAAK,gBAAe;AAAA,kBAAG;AAAA,gBACrD,OAAa;AACL,2BAASC,KAAI,GAAGc,QAAO,KAAK,YAAYd,KAAIc,MAAK,QAAQd,MAAK,GAAG;AAC/D,wBAAI,OAAOc,MAAKd,EAAC;AAEjB,yBAAK,gBAAgB,KAAK,KAAK;AAC/B,yBAAK,iBAAiB,KAAK,KAAK;AAEhC,wBAAI,KAAK,MAAM,SAAS,WAAW;AACjC,2BAAK,MAAM,KAAK,MAAM,OAAO,wEAAwE;AAAA,oBACjH;AAAA,kBACA;AAEQ,uBAAK,SAAS;AAAA,gBACtB;AACM,qBAAK,UAAS;AAAA,cACpB;AACI,qBAAO,KAAK,WAAW,MAAM,wBAAwB;AAAA,YACzD;AAEE,iBAAK,yBAAyB,SAAS,MAAM;AAC3C,qBAAO,KAAK,eAAe,IAAI;AAAA,YACnC;AAEE,iBAAK,gCAAgC,WAAW;AAC9C,kBAAI;AACJ,kBAAI,KAAK,SAAS,QAAQ,cAAc,UAAU,KAAK,gBAAe,IAAK;AACzE,oBAAI,QAAQ,KAAK,UAAS;AAC1B,qBAAK,KAAI;AACT,oBAAI,SAAS;AAAE,uBAAK,KAAI;AAAA,gBAAG;AAC3B,uBAAO,KAAK,cAAc,OAAO,iBAAiB,kBAAkB,OAAO,OAAO;AAAA,cACxF,WAAe,KAAK,SAAS,QAAQ,QAAQ;AACvC,oBAAI,QAAQ,KAAK,UAAS;AAC1B,uBAAO,KAAK,WAAW,OAAO,YAAY;AAAA,cAChD,OAAW;AACL,oBAAI,cAAc,KAAK,iBAAgB;AACvC,qBAAK,UAAS;AACd,uBAAO;AAAA,cACb;AAAA,YACA;AAEE,iBAAK,cAAc,SAASD,UAASM,OAAM,KAAK;AAC9C,kBAAI,CAACN,UAAS;AAAE;AAAA,cAAM;AACtB,kBAAI,OAAOM,UAAS,UAClB;AAAE,gBAAAA,QAAOA,MAAK,SAAS,eAAeA,MAAK,OAAOA,MAAK;AAAA,cAAM;AAC/D,kBAAI,OAAON,UAASM,KAAI,GACtB;AAAE,qBAAK,iBAAiB,KAAK,uBAAuBA,QAAO,GAAG;AAAA,cAAE;AAClE,cAAAN,SAAQM,KAAI,IAAI;AAAA,YACpB;AAEE,iBAAK,qBAAqB,SAASN,UAAS,KAAK;AAC/C,kBAAI,OAAO,IAAI;AACf,kBAAI,SAAS,cACX;AAAE,qBAAK,YAAYA,UAAS,KAAK,IAAI,KAAK;AAAA,cAAE,WACrC,SAAS,iBAChB;AAAE,yBAASC,KAAI,GAAGc,QAAO,IAAI,YAAYd,KAAIc,MAAK,QAAQd,MAAK,GAC7D;AACE,sBAAI,OAAOc,MAAKd,EAAC;AAEjB,uBAAK,mBAAmBD,UAAS,IAAI;AAAA,gBAC/C;AAAA,cAAS,WACI,SAAS,gBAChB;AAAE,yBAAS,MAAM,GAAG,SAAS,IAAI,UAAU,MAAM,OAAO,QAAQ,OAAO,GAAG;AACxE,sBAAI,MAAM,OAAO,GAAG;AAElB,sBAAI,KAAK;AAAE,yBAAK,mBAAmBA,UAAS,GAAG;AAAA,kBAAE;AAAA,gBAC3D;AAAA,cAAO,WACM,SAAS,YAChB;AAAE,qBAAK,mBAAmBA,UAAS,IAAI,KAAK;AAAA,cAAE,WACvC,SAAS,qBAChB;AAAE,qBAAK,mBAAmBA,UAAS,IAAI,IAAI;AAAA,cAAE,WACtC,SAAS,eAChB;AAAE,qBAAK,mBAAmBA,UAAS,IAAI,QAAQ;AAAA,cAAE;AAAA,YACvD;AAEE,iBAAK,sBAAsB,SAASA,UAAS,OAAO;AAClD,kBAAI,CAACA,UAAS;AAAE;AAAA,cAAM;AACtB,uBAASC,KAAI,GAAGc,QAAO,OAAOd,KAAIc,MAAK,QAAQd,MAAK,GAClD;AACA,oBAAI,OAAOc,MAAKd,EAAC;AAEjB,qBAAK,mBAAmBD,UAAS,KAAK,EAAE;AAAA,cAC9C;AAAA,YACA;AAEE,iBAAK,6BAA6B,WAAW;AAC3C,qBAAO,KAAK,KAAK,YAAY,SAC3B,KAAK,KAAK,YAAY,WACtB,KAAK,KAAK,YAAY,WACtB,KAAK,KAAK,YAAY,cACtB,KAAK,MAAK,KACV,KAAK,gBAAe;AAAA,YAC1B;AAGE,iBAAK,uBAAuB,SAASA,UAAS;AAC5C,kBAAI,OAAO,KAAK,UAAS;AACzB,mBAAK,QAAQ,KAAK,sBAAqB;AAEvC,mBAAK,WAAW,KAAK,cAAc,IAAI,IAAI,KAAK,0BAA0B,KAAK;AAC/E,mBAAK;AAAA,gBACHA;AAAA,gBACA,KAAK;AAAA,gBACL,KAAK,SAAS;AAAA;AAGhB,qBAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,YAClD;AAEE,iBAAK,wBAAwB,SAASA,UAAS;AAC7C,kBAAI,QAAQ,IAAI,QAAQ;AACxB,mBAAK,OAAO,QAAQ,MAAM;AAC1B,qBAAO,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAChC,oBAAI,CAAC,OAAO;AACV,uBAAK,OAAO,QAAQ,KAAK;AACzB,sBAAI,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAAE;AAAA,kBAAK;AAAA,gBAC5D,OAAa;AAAE,0BAAQ;AAAA,gBAAM;AAEvB,sBAAM,KAAK,KAAK,qBAAqBA,QAAO,CAAC;AAAA,cACnD;AACI,qBAAO;AAAA,YACX;AAGE,iBAAK,cAAc,SAAS,MAAM;AAChC,mBAAK,KAAI;AAET,kBAAI,KAAK,SAAS,QAAQ,QAAQ;AAChC,qBAAK,aAAa;AAClB,qBAAK,SAAS,KAAK,cAAa;AAAA,cACtC,OAAW;AACL,qBAAK,aAAa,KAAK,sBAAqB;AAC5C,qBAAK,iBAAiB,MAAM;AAC5B,qBAAK,SAAS,KAAK,SAAS,QAAQ,SAAS,KAAK,cAAa,IAAK,KAAK,WAAU;AAAA,cACzF;AACI,kBAAI,KAAK,QAAQ,eAAe,IAC9B;AAAE,qBAAK,aAAa,KAAK,gBAAe;AAAA,cAAG;AAC7C,mBAAK,UAAS;AACd,qBAAO,KAAK,WAAW,MAAM,mBAAmB;AAAA,YACpD;AAGE,iBAAK,uBAAuB,WAAW;AACrC,kBAAI,OAAO,KAAK,UAAS;AACzB,mBAAK,WAAW,KAAK,sBAAqB;AAE1C,kBAAI,KAAK,cAAc,IAAI,GAAG;AAC5B,qBAAK,QAAQ,KAAK,WAAU;AAAA,cAClC,OAAW;AACL,qBAAK,gBAAgB,KAAK,QAAQ;AAClC,qBAAK,QAAQ,KAAK;AAAA,cACxB;AACI,mBAAK,gBAAgB,KAAK,OAAO,YAAY;AAE7C,qBAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,YAClD;AAEE,iBAAK,8BAA8B,WAAW;AAC5C,kBAAI,OAAO,KAAK,UAAS;AACzB,mBAAK,QAAQ,KAAK,WAAU;AAC5B,mBAAK,gBAAgB,KAAK,OAAO,YAAY;AAC7C,qBAAO,KAAK,WAAW,MAAM,wBAAwB;AAAA,YACzD;AAEE,iBAAK,gCAAgC,WAAW;AAC9C,kBAAI,OAAO,KAAK,UAAS;AACzB,mBAAK,KAAI;AACT,mBAAK,iBAAiB,IAAI;AAC1B,mBAAK,QAAQ,KAAK,WAAU;AAC5B,mBAAK,gBAAgB,KAAK,OAAO,YAAY;AAC7C,qBAAO,KAAK,WAAW,MAAM,0BAA0B;AAAA,YAC3D;AAEE,iBAAK,wBAAwB,WAAW;AACtC,kBAAI,QAAQ,IAAI,QAAQ;AACxB,kBAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,sBAAM,KAAK,KAAK,6BAA6B;AAC7C,oBAAI,CAAC,KAAK,IAAI,QAAQ,KAAK,GAAG;AAAE,yBAAO;AAAA,gBAAK;AAAA,cAClD;AACI,kBAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,sBAAM,KAAK,KAAK,+BAA+B;AAC/C,uBAAO;AAAA,cACb;AACI,mBAAK,OAAO,QAAQ,MAAM;AAC1B,qBAAO,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAChC,oBAAI,CAAC,OAAO;AACV,uBAAK,OAAO,QAAQ,KAAK;AACzB,sBAAI,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAAE;AAAA,kBAAK;AAAA,gBAC5D,OAAa;AAAE,0BAAQ;AAAA,gBAAM;AAEvB,sBAAM,KAAK,KAAK,sBAAsB;AAAA,cAC5C;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,kBAAkB,WAAW;AAChC,kBAAI,QAAQ,CAAA;AACZ,kBAAI,CAAC,KAAK,IAAI,QAAQ,KAAK,GAAG;AAC5B,uBAAO;AAAA,cACb;AACI,mBAAK,OAAO,QAAQ,MAAM;AAC1B,kBAAI,gBAAgB,CAAA;AACpB,kBAAI,QAAQ;AACZ,qBAAO,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAChC,oBAAI,CAAC,OAAO;AACV,uBAAK,OAAO,QAAQ,KAAK;AACzB,sBAAI,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAAE;AAAA,kBAAK;AAAA,gBAC5D,OAAa;AAAE,0BAAQ;AAAA,gBAAM;AAEvB,oBAAI,OAAO,KAAK,qBAAoB;AACpC,oBAAI,UAAU,KAAK,IAAI,SAAS,eAAe,KAAK,IAAI,OAAO,KAAK,IAAI;AACxE,oBAAI,OAAO,eAAe,OAAO,GAC/B;AAAE,uBAAK,iBAAiB,KAAK,IAAI,OAAO,8BAA8B,UAAU,GAAG;AAAA,gBAAE;AACvF,8BAAc,OAAO,IAAI;AACzB,sBAAM,KAAK,IAAI;AAAA,cACrB;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,uBAAuB,WAAW;AACrC,kBAAI,OAAO,KAAK,UAAS;AACzB,mBAAK,MAAM,KAAK,SAAS,QAAQ,SAAS,KAAK,cAAa,IAAK,KAAK,WAAW,KAAK,QAAQ,kBAAkB,OAAO;AACvH,mBAAK,OAAO,QAAQ,KAAK;AACzB,kBAAI,KAAK,SAAS,QAAQ,QAAQ;AAChC,qBAAK,WAAU;AAAA,cACrB;AACI,mBAAK,QAAQ,KAAK,cAAa;AAC/B,qBAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,YAClD;AAEE,iBAAK,wBAAwB,WAAW;AACtC,kBAAI,KAAK,QAAQ,eAAe,MAAM,KAAK,SAAS,QAAQ,QAAQ;AAClE,oBAAI,gBAAgB,KAAK,aAAa,KAAK,KAAK;AAChD,oBAAI,cAAc,KAAK,cAAc,KAAK,GAAG;AAC3C,uBAAK,MAAM,cAAc,OAAO,iDAAiD;AAAA,gBACzF;AACM,uBAAO;AAAA,cACb;AACI,qBAAO,KAAK,WAAW,IAAI;AAAA,YAC/B;AAEE,iBAAK,yBAAyB,SAAS,YAAY;AACjD,uBAASC,KAAI,GAAGA,KAAI,WAAW,UAAU,KAAK,qBAAqB,WAAWA,EAAC,CAAC,GAAG,EAAEA,IAAG;AACtF,2BAAWA,EAAC,EAAE,YAAY,WAAWA,EAAC,EAAE,WAAW,IAAI,MAAM,GAAG,EAAE;AAAA,cACxE;AAAA,YACA;AACE,iBAAK,uBAAuB,SAAS,WAAW;AAC9C,qBACE,KAAK,QAAQ,eAAe,KAC5B,UAAU,SAAS,yBACnB,UAAU,WAAW,SAAS,aAC9B,OAAO,UAAU,WAAW,UAAU,aACrC,KAAK,MAAM,UAAU,KAAK,MAAM,OAAQ,KAAK,MAAM,UAAU,KAAK,MAAM;AAAA,YAE/E;AAEE,gBAAI,OAAO,OAAO;AAGlB,iBAAK,eAAe,SAAS,MAAM,WAAW,wBAAwB;AACpE,kBAAI,KAAK,QAAQ,eAAe,KAAK,MAAM;AACzC,wBAAQ,KAAK,MAAI;AAAA,kBACjB,KAAK;AACH,wBAAI,KAAK,WAAW,KAAK,SAAS,SAChC;AAAE,2BAAK,MAAM,KAAK,OAAO,2DAA2D;AAAA,oBAAE;AACxF;AAAA,kBAEF,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACH;AAAA,kBAEF,KAAK;AACH,yBAAK,OAAO;AACZ,wBAAI,wBAAwB;AAAE,2BAAK,mBAAmB,wBAAwB,IAAI;AAAA,oBAAE;AACpF,6BAASA,KAAI,GAAGc,QAAO,KAAK,YAAYd,KAAIc,MAAK,QAAQd,MAAK,GAAG;AAC/D,0BAAI,OAAOc,MAAKd,EAAC;AAEnB,2BAAK,aAAa,MAAM,SAAS;AAC/B,0BACE,KAAK,SAAS,kBACb,KAAK,SAAS,SAAS,kBAAkB,KAAK,SAAS,SAAS,kBACjE;AACA,6BAAK,MAAM,KAAK,SAAS,OAAO,kBAAkB;AAAA,sBAC9D;AAAA,oBACA;AACQ;AAAA,kBAEF,KAAK;AACH,wBAAI,KAAK,SAAS,QAAQ;AAAE,2BAAK,MAAM,KAAK,IAAI,OAAO,+CAA+C;AAAA,oBAAE;AACxG,yBAAK,aAAa,KAAK,OAAO,SAAS;AACvC;AAAA,kBAEF,KAAK;AACH,yBAAK,OAAO;AACZ,wBAAI,wBAAwB;AAAE,2BAAK,mBAAmB,wBAAwB,IAAI;AAAA,oBAAE;AACpF,yBAAK,iBAAiB,KAAK,UAAU,SAAS;AAC9C;AAAA,kBAEF,KAAK;AACH,yBAAK,OAAO;AACZ,yBAAK,aAAa,KAAK,UAAU,SAAS;AAC1C,wBAAI,KAAK,SAAS,SAAS,qBACzB;AAAE,2BAAK,MAAM,KAAK,SAAS,OAAO,2CAA2C;AAAA,oBAAE;AACjF;AAAA,kBAEF,KAAK;AACH,wBAAI,KAAK,aAAa,KAAK;AAAE,2BAAK,MAAM,KAAK,KAAK,KAAK,6DAA6D;AAAA,oBAAE;AACtH,yBAAK,OAAO;AACZ,2BAAO,KAAK;AACZ,yBAAK,aAAa,KAAK,MAAM,SAAS;AACtC;AAAA,kBAEF,KAAK;AACH,yBAAK,aAAa,KAAK,YAAY,WAAW,sBAAsB;AACpE;AAAA,kBAEF,KAAK;AACH,yBAAK,iBAAiB,KAAK,OAAO,mDAAmD;AACrF;AAAA,kBAEF,KAAK;AACH,wBAAI,CAAC,WAAW;AAAE;AAAA,oBAAK;AAAA,kBAEzB;AACE,yBAAK,MAAM,KAAK,OAAO,qBAAqB;AAAA,gBACpD;AAAA,cACA,WAAe,wBAAwB;AAAE,qBAAK,mBAAmB,wBAAwB,IAAI;AAAA,cAAE;AAC3F,qBAAO;AAAA,YACX;AAGE,iBAAK,mBAAmB,SAAS,UAAU,WAAW;AACpD,kBAAI,MAAM,SAAS;AACnB,uBAASA,KAAI,GAAGA,KAAI,KAAKA,MAAK;AAC5B,oBAAI,MAAM,SAASA,EAAC;AACpB,oBAAI,KAAK;AAAE,uBAAK,aAAa,KAAK,SAAS;AAAA,gBAAE;AAAA,cACnD;AACI,kBAAI,KAAK;AACP,oBAAI,OAAO,SAAS,MAAM,CAAC;AAC3B,oBAAI,KAAK,QAAQ,gBAAgB,KAAK,aAAa,QAAQ,KAAK,SAAS,iBAAiB,KAAK,SAAS,SAAS,cAC/G;AAAE,uBAAK,WAAW,KAAK,SAAS,KAAK;AAAA,gBAAE;AAAA,cAC/C;AACI,qBAAO;AAAA,YACX;AAGE,iBAAK,cAAc,SAAS,wBAAwB;AAClD,kBAAI,OAAO,KAAK,UAAS;AACzB,mBAAK,KAAI;AACT,mBAAK,WAAW,KAAK,iBAAiB,OAAO,sBAAsB;AACnE,qBAAO,KAAK,WAAW,MAAM,eAAe;AAAA,YAChD;AAEE,iBAAK,mBAAmB,WAAW;AACjC,kBAAI,OAAO,KAAK,UAAS;AACzB,mBAAK,KAAI;AAET,kBAAI,KAAK,QAAQ,gBAAgB,KAAK,KAAK,SAAS,QAAQ,MAC1D;AAAE,qBAAK,WAAU;AAAA,cAAG;AAEtB,mBAAK,WAAW,KAAK,iBAAgB;AAErC,qBAAO,KAAK,WAAW,MAAM,aAAa;AAAA,YAC9C;AAGE,iBAAK,mBAAmB,WAAW;AACjC,kBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,wBAAQ,KAAK,MAAI;AAAA,kBACjB,KAAK,QAAQ;AACX,wBAAI,OAAO,KAAK,UAAS;AACzB,yBAAK,KAAI;AACT,yBAAK,WAAW,KAAK,iBAAiB,QAAQ,UAAU,MAAM,IAAI;AAClE,2BAAO,KAAK,WAAW,MAAM,cAAc;AAAA,kBAE7C,KAAK,QAAQ;AACX,2BAAO,KAAK,SAAS,IAAI;AAAA,gBACjC;AAAA,cACA;AACI,qBAAO,KAAK,WAAU;AAAA,YAC1B;AAEE,iBAAK,mBAAmB,SAAS,OAAO,YAAY,oBAAoB,gBAAgB;AACtF,kBAAI,OAAO,IAAI,QAAQ;AACvB,qBAAO,CAAC,KAAK,IAAI,KAAK,GAAG;AACvB,oBAAI,OAAO;AAAE,0BAAQ;AAAA,gBAAM,OACtB;AAAE,uBAAK,OAAO,QAAQ,KAAK;AAAA,gBAAE;AAClC,oBAAI,cAAc,KAAK,SAAS,QAAQ,OAAO;AAC7C,uBAAK,KAAK,IAAI;AAAA,gBACtB,WAAiB,sBAAsB,KAAK,mBAAmB,KAAK,GAAG;AAC/D;AAAA,gBACR,WAAiB,KAAK,SAAS,QAAQ,UAAU;AACzC,sBAAI,OAAO,KAAK,iBAAgB;AAChC,uBAAK,qBAAqB,IAAI;AAC9B,uBAAK,KAAK,IAAI;AACd,sBAAI,KAAK,SAAS,QAAQ,OAAO;AAAE,yBAAK,iBAAiB,KAAK,OAAO,+CAA+C;AAAA,kBAAE;AACtH,uBAAK,OAAO,KAAK;AACjB;AAAA,gBACR,OAAa;AACL,uBAAK,KAAK,KAAK,wBAAwB,cAAc,CAAC;AAAA,gBAC9D;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,0BAA0B,SAAS,gBAAgB;AACtD,kBAAI,OAAO,KAAK,kBAAkB,KAAK,OAAO,KAAK,QAAQ;AAC3D,mBAAK,qBAAqB,IAAI;AAC9B,qBAAO;AAAA,YACX;AAEE,iBAAK,uBAAuB,SAAS,OAAO;AAC1C,qBAAO;AAAA,YACX;AAGE,iBAAK,oBAAoB,SAAS,UAAU,UAAU,MAAM;AAC1D,qBAAO,QAAQ,KAAK,iBAAgB;AACpC,kBAAI,KAAK,QAAQ,cAAc,KAAK,CAAC,KAAK,IAAI,QAAQ,EAAE,GAAG;AAAE,uBAAO;AAAA,cAAI;AACxE,kBAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,mBAAK,OAAO;AACZ,mBAAK,QAAQ,KAAK,iBAAgB;AAClC,qBAAO,KAAK,WAAW,MAAM,mBAAmB;AAAA,YACpD;AAGE,iBAAK,kBAAkB,SAAS,MAAM,aAAa,cAAc;AAC/D,kBAAK,gBAAgB,OAAS,eAAc;AAE5C,kBAAI,SAAS,gBAAgB;AAE7B,sBAAQ,KAAK,MAAI;AAAA,gBACjB,KAAK;AACH,sBAAI,KAAK,UAAU,KAAK,wBAAwB,KAAK,KAAK,IAAI,GAC5D;AAAE,yBAAK,iBAAiB,KAAK,QAAQ,SAAS,aAAa,mBAAmB,KAAK,OAAO,iBAAiB;AAAA,kBAAE;AAC/G,sBAAI,QAAQ;AACV,wBAAI,gBAAgB,gBAAgB,KAAK,SAAS,OAChD;AAAE,2BAAK,iBAAiB,KAAK,OAAO,6CAA6C;AAAA,oBAAE;AACrF,wBAAI,cAAc;AAChB,0BAAI,OAAO,cAAc,KAAK,IAAI,GAChC;AAAE,6BAAK,iBAAiB,KAAK,OAAO,qBAAqB;AAAA,sBAAE;AAC7D,mCAAa,KAAK,IAAI,IAAI;AAAA,oBACpC;AACQ,wBAAI,gBAAgB,cAAc;AAAE,2BAAK,YAAY,KAAK,MAAM,aAAa,KAAK,KAAK;AAAA,oBAAE;AAAA,kBACjG;AACM;AAAA,gBAEF,KAAK;AACH,uBAAK,iBAAiB,KAAK,OAAO,mDAAmD;AACrF;AAAA,gBAEF,KAAK;AACH,sBAAI,QAAQ;AAAE,yBAAK,iBAAiB,KAAK,OAAO,2BAA2B;AAAA,kBAAE;AAC7E;AAAA,gBAEF,KAAK;AACH,sBAAI,QAAQ;AAAE,yBAAK,iBAAiB,KAAK,OAAO,kCAAkC;AAAA,kBAAE;AACpF,yBAAO,KAAK,gBAAgB,KAAK,YAAY,aAAa,YAAY;AAAA,gBAExE;AACE,uBAAK,MAAM,KAAK,QAAQ,SAAS,YAAY,kBAAkB,SAAS;AAAA,cAC9E;AAAA,YACA;AAEE,iBAAK,mBAAmB,SAAS,MAAM,aAAa,cAAc;AAChE,kBAAK,gBAAgB,OAAS,eAAc;AAE5C,sBAAQ,KAAK,MAAI;AAAA,gBACjB,KAAK;AACH,2BAASA,KAAI,GAAGc,QAAO,KAAK,YAAYd,KAAIc,MAAK,QAAQd,MAAK,GAAG;AAC/D,wBAAI,OAAOc,MAAKd,EAAC;AAEnB,yBAAK,sBAAsB,MAAM,aAAa,YAAY;AAAA,kBAChE;AACM;AAAA,gBAEF,KAAK;AACH,2BAAS,MAAM,GAAG,SAAS,KAAK,UAAU,MAAM,OAAO,QAAQ,OAAO,GAAG;AACvE,wBAAI,OAAO,OAAO,GAAG;AAEvB,wBAAI,MAAM;AAAE,2BAAK,sBAAsB,MAAM,aAAa,YAAY;AAAA,oBAAE;AAAA,kBAC9E;AACM;AAAA,gBAEF;AACE,uBAAK,gBAAgB,MAAM,aAAa,YAAY;AAAA,cAC1D;AAAA,YACA;AAEE,iBAAK,wBAAwB,SAAS,MAAM,aAAa,cAAc;AACrE,kBAAK,gBAAgB,OAAS,eAAc;AAE5C,sBAAQ,KAAK,MAAI;AAAA,gBACjB,KAAK;AACH,uBAAK,sBAAsB,KAAK,OAAO,aAAa,YAAY;AAChE;AAAA,gBAEF,KAAK;AACH,uBAAK,iBAAiB,KAAK,MAAM,aAAa,YAAY;AAC1D;AAAA,gBAEF,KAAK;AACH,uBAAK,iBAAiB,KAAK,UAAU,aAAa,YAAY;AAC9D;AAAA,gBAEF;AACE,uBAAK,iBAAiB,MAAM,aAAa,YAAY;AAAA,cAC3D;AAAA,YACA;AAIE,gBAAI,aAAa,gCAASiB,YAAW,OAAO,QAAQ,eAAe,UAAU,WAAW;AACtF,mBAAK,QAAQ;AACb,mBAAK,SAAS,CAAC,CAAC;AAChB,mBAAK,gBAAgB,CAAC,CAAC;AACvB,mBAAK,WAAW;AAChB,mBAAK,YAAY,CAAC,CAAC;AAAA,YACvB,GANmB;AAQjB,gBAAI,QAAQ;AAAA,cACV,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,cACjC,QAAQ,IAAI,WAAW,KAAK,IAAI;AAAA,cAChC,QAAQ,IAAI,WAAW,MAAM,KAAK;AAAA,cAClC,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,cACjC,QAAQ,IAAI,WAAW,KAAK,IAAI;AAAA,cAChC,QAAQ,IAAI,WAAW,KAAK,MAAM,MAAM,SAAU,GAAG;AAAE,uBAAO,EAAE,qBAAoB;AAAA,cAAG,CAAE;AAAA,cACzF,QAAQ,IAAI,WAAW,YAAY,KAAK;AAAA,cACxC,QAAQ,IAAI,WAAW,YAAY,IAAI;AAAA,cACvC,YAAY,IAAI,WAAW,YAAY,MAAM,OAAO,MAAM,IAAI;AAAA,cAC9D,OAAO,IAAI,WAAW,YAAY,OAAO,OAAO,MAAM,IAAI;AAAA;AAG5D,gBAAI,OAAO,OAAO;AAElB,iBAAK,iBAAiB,WAAW;AAC/B,qBAAO,CAAC,MAAM,MAAM;AAAA,YACxB;AAEE,iBAAK,aAAa,WAAW;AAC3B,qBAAO,KAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC;AAAA,YAC/C;AAEE,iBAAK,eAAe,SAAS,UAAU;AACrC,kBAAI,SAAS,KAAK,WAAU;AAC5B,kBAAI,WAAW,MAAM,UAAU,WAAW,MAAM,QAC9C;AAAE,uBAAO;AAAA,cAAI;AACf,kBAAI,aAAa,QAAQ,UAAU,WAAW,MAAM,UAAU,WAAW,MAAM,SAC7E;AAAE,uBAAO,CAAC,OAAO;AAAA,cAAM;AAEzB,kBAAI,aAAa,QAAQ,WAAW,aAAa,QAAQ,QAAQ,KAAK,aACpE;AAAE,uBAAO,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC;AAAA,cAAC;AACxE,kBAAI,aAAa,QAAQ,SAAS,aAAa,QAAQ,QAAQ,aAAa,QAAQ,OAAO,aAAa,QAAQ,UAAU,aAAa,QAAQ,OAC7I;AAAE,uBAAO;AAAA,cAAI;AACf,kBAAI,aAAa,QAAQ,QACvB;AAAE,uBAAO,WAAW,MAAM;AAAA,cAAM;AAClC,kBAAI,aAAa,QAAQ,QAAQ,aAAa,QAAQ,UAAU,aAAa,QAAQ,MACnF;AAAE,uBAAO;AAAA,cAAK;AAChB,qBAAO,CAAC,KAAK;AAAA,YACjB;AAEE,iBAAK,qBAAqB,WAAW;AACnC,uBAASjB,KAAI,KAAK,QAAQ,SAAS,GAAGA,MAAK,GAAGA,MAAK;AACjD,oBAAI,UAAU,KAAK,QAAQA,EAAC;AAC5B,oBAAI,QAAQ,UAAU,YACpB;AAAE,yBAAO,QAAQ;AAAA,gBAAS;AAAA,cAClC;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,gBAAgB,SAAS,UAAU;AACtC,kBAAI,QAAQ,OAAO,KAAK;AACxB,kBAAI,KAAK,WAAW,aAAa,QAAQ,KACvC;AAAE,qBAAK,cAAc;AAAA,cAAM,WACpB,SAAS,KAAK,eACrB;AAAE,uBAAO,KAAK,MAAM,QAAQ;AAAA,cAAE,OAE9B;AAAE,qBAAK,cAAc,KAAK;AAAA,cAAW;AAAA,YAC3C;AAGE,iBAAK,kBAAkB,SAAS,UAAU;AACxC,kBAAI,KAAK,WAAU,MAAO,UAAU;AAClC,qBAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC,IAAI;AAAA,cAC9C;AAAA,YACA;AAGE,oBAAQ,OAAO,gBAAgB,QAAQ,OAAO,gBAAgB,WAAW;AACvE,kBAAI,KAAK,QAAQ,WAAW,GAAG;AAC7B,qBAAK,cAAc;AACnB;AAAA,cACN;AACI,kBAAI,MAAM,KAAK,QAAQ,IAAG;AAC1B,kBAAI,QAAQ,MAAM,UAAU,KAAK,WAAU,EAAG,UAAU,YAAY;AAClE,sBAAM,KAAK,QAAQ,IAAG;AAAA,cAC5B;AACI,mBAAK,cAAc,CAAC,IAAI;AAAA,YAC5B;AAEE,oBAAQ,OAAO,gBAAgB,SAAS,UAAU;AAChD,mBAAK,QAAQ,KAAK,KAAK,aAAa,QAAQ,IAAI,MAAM,SAAS,MAAM,MAAM;AAC3E,mBAAK,cAAc;AAAA,YACvB;AAEE,oBAAQ,aAAa,gBAAgB,WAAW;AAC9C,mBAAK,QAAQ,KAAK,MAAM,MAAM;AAC9B,mBAAK,cAAc;AAAA,YACvB;AAEE,oBAAQ,OAAO,gBAAgB,SAAS,UAAU;AAChD,kBAAI,kBAAkB,aAAa,QAAQ,OAAO,aAAa,QAAQ,QAAQ,aAAa,QAAQ,SAAS,aAAa,QAAQ;AAClI,mBAAK,QAAQ,KAAK,kBAAkB,MAAM,SAAS,MAAM,MAAM;AAC/D,mBAAK,cAAc;AAAA,YACvB;AAEE,oBAAQ,OAAO,gBAAgB,WAAW;AAAA,YAC5C;AAEE,oBAAQ,UAAU,gBAAgB,QAAQ,OAAO,gBAAgB,SAAS,UAAU;AAClF,kBAAI,SAAS,cAAc,aAAa,QAAQ,SAC5C,EAAE,aAAa,QAAQ,QAAQ,KAAK,WAAU,MAAO,MAAM,WAC3D,EAAE,aAAa,QAAQ,WAAW,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC,MAC9F,GAAG,aAAa,QAAQ,SAAS,aAAa,QAAQ,WAAW,KAAK,iBAAiB,MAAM,SAC/F;AAAE,qBAAK,QAAQ,KAAK,MAAM,MAAM;AAAA,cAAE,OAElC;AAAE,qBAAK,QAAQ,KAAK,MAAM,MAAM;AAAA,cAAE;AACpC,mBAAK,cAAc;AAAA,YACvB;AAEE,oBAAQ,MAAM,gBAAgB,WAAW;AACvC,kBAAI,KAAK,WAAU,EAAG,UAAU,YAAY;AAAE,qBAAK,QAAQ,IAAG;AAAA,cAAG;AACjE,mBAAK,cAAc;AAAA,YACvB;AAEE,oBAAQ,UAAU,gBAAgB,WAAW;AAC3C,kBAAI,KAAK,iBAAiB,MAAM,QAC9B;AAAE,qBAAK,QAAQ,IAAG;AAAA,cAAG,OAErB;AAAE,qBAAK,QAAQ,KAAK,MAAM,MAAM;AAAA,cAAE;AACpC,mBAAK,cAAc;AAAA,YACvB;AAEE,oBAAQ,KAAK,gBAAgB,SAAS,UAAU;AAC9C,kBAAI,aAAa,QAAQ,WAAW;AAClC,oBAAIkB,SAAQ,KAAK,QAAQ,SAAS;AAClC,oBAAI,KAAK,QAAQA,MAAK,MAAM,MAAM,QAChC;AAAE,uBAAK,QAAQA,MAAK,IAAI,MAAM;AAAA,gBAAW,OAEzC;AAAE,uBAAK,QAAQA,MAAK,IAAI,MAAM;AAAA,gBAAM;AAAA,cAC5C;AACI,mBAAK,cAAc;AAAA,YACvB;AAEE,oBAAQ,KAAK,gBAAgB,SAAS,UAAU;AAC9C,kBAAI,UAAU;AACd,kBAAI,KAAK,QAAQ,eAAe,KAAK,aAAa,QAAQ,KAAK;AAC7D,oBAAI,KAAK,UAAU,QAAQ,CAAC,KAAK,eAC7B,KAAK,UAAU,WAAW,KAAK,mBAAkB,GACnD;AAAE,4BAAU;AAAA,gBAAK;AAAA,cACzB;AACI,mBAAK,cAAc;AAAA,YACvB;AAIE,gBAAI,OAAO,OAAO;AAGlB,iBAAK,iBAAiB,SAAS,MAAM,UAAU,wBAAwB;AACrE,kBAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,iBACjD;AAAE;AAAA,cAAM;AACV,kBAAI,KAAK,QAAQ,eAAe,MAAM,KAAK,YAAY,KAAK,UAAU,KAAK,YACzE;AAAE;AAAA,cAAM;AACV,kBAAI,MAAM,KAAK;AACf,kBAAIb;AACJ,sBAAQ,IAAI,MAAI;AAAA,gBAChB,KAAK;AAAc,kBAAAA,QAAO,IAAI;AAAM;AAAA,gBACpC,KAAK;AAAW,kBAAAA,QAAO,OAAO,IAAI,KAAK;AAAG;AAAA,gBAC1C;AAAS;AAAA,cACb;AACI,kBAAI,OAAO,KAAK;AAChB,kBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,oBAAIA,UAAS,eAAe,SAAS,QAAQ;AAC3C,sBAAI,SAAS,OAAO;AAClB,wBAAI,wBAAwB;AAC1B,0BAAI,uBAAuB,cAAc,GAAG;AAC1C,+CAAuB,cAAc,IAAI;AAAA,sBACvD;AAAA,oBACA,OAAiB;AACL,2BAAK,iBAAiB,IAAI,OAAO,oCAAoC;AAAA,oBACjF;AAAA,kBACA;AACQ,2BAAS,QAAQ;AAAA,gBACzB;AACM;AAAA,cACN;AACI,cAAAA,QAAO,MAAMA;AACb,kBAAI,QAAQ,SAASA,KAAI;AACzB,kBAAI,OAAO;AACT,oBAAI;AACJ,oBAAI,SAAS,QAAQ;AACnB,iCAAe,KAAK,UAAU,MAAM,QAAQ,MAAM,OAAO,MAAM;AAAA,gBACvE,OAAa;AACL,iCAAe,MAAM,QAAQ,MAAM,IAAI;AAAA,gBAC/C;AACM,oBAAI,cACF;AAAE,uBAAK,iBAAiB,IAAI,OAAO,0BAA0B;AAAA,gBAAE;AAAA,cACvE,OAAW;AACL,wBAAQ,SAASA,KAAI,IAAI;AAAA,kBACvB,MAAM;AAAA,kBACN,KAAK;AAAA,kBACL,KAAK;AAAA;cAEb;AACI,oBAAM,IAAI,IAAI;AAAA,YAClB;AAKE,iBAAK,kBAAkB,SAAS,SAAS,wBAAwB;AAC/D,kBAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,kBAAI,OAAO,KAAK,iBAAiB,SAAS,sBAAsB;AAChE,kBAAI,KAAK,SAAS,QAAQ,OAAO;AAC/B,oBAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,qBAAK,cAAc,CAAC,IAAI;AACxB,uBAAO,KAAK,IAAI,QAAQ,KAAK,GAAG;AAAE,uBAAK,YAAY,KAAK,KAAK,iBAAiB,SAAS,sBAAsB,CAAC;AAAA,gBAAE;AAChH,uBAAO,KAAK,WAAW,MAAM,oBAAoB;AAAA,cACvD;AACI,qBAAO;AAAA,YACX;AAGE,iBAAK,mBAAmB,SAAS,SAAS,wBAAwB,gBAAgB;AAChF,kBAAI,KAAK,aAAa,OAAO,GAAG;AAC9B,oBAAI,KAAK,aAAa;AAAE,yBAAO,KAAK,WAAW,OAAO;AAAA,gBAAC,OAClD;AAAE,uBAAK,cAAc;AAAA,gBAAM;AAAA,cACtC;AAEI,kBAAI,yBAAyB,OAAO,iBAAiB,IAAI,mBAAmB,IAAI,iBAAiB;AACjG,kBAAI,wBAAwB;AAC1B,iCAAiB,uBAAuB;AACxC,mCAAmB,uBAAuB;AAC1C,iCAAiB,uBAAuB;AACxC,uCAAuB,sBAAsB,uBAAuB,gBAAgB;AAAA,cAC1F,OAAW;AACL,yCAAyB,IAAI;AAC7B,yCAAyB;AAAA,cAC/B;AAEI,kBAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,kBAAI,KAAK,SAAS,QAAQ,UAAU,KAAK,SAAS,QAAQ,MAAM;AAC9D,qBAAK,mBAAmB,KAAK;AAC7B,qBAAK,2BAA2B,YAAY;AAAA,cAClD;AACI,kBAAI,OAAO,KAAK,sBAAsB,SAAS,sBAAsB;AACrE,kBAAI,gBAAgB;AAAE,uBAAO,eAAe,KAAK,MAAM,MAAM,UAAU,QAAQ;AAAA,cAAE;AACjF,kBAAI,KAAK,KAAK,UAAU;AACtB,oBAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,qBAAK,WAAW,KAAK;AACrB,oBAAI,KAAK,SAAS,QAAQ,IACxB;AAAE,yBAAO,KAAK,aAAa,MAAM,OAAO,sBAAsB;AAAA,gBAAE;AAClE,oBAAI,CAAC,wBAAwB;AAC3B,yCAAuB,sBAAsB,uBAAuB,gBAAgB,uBAAuB,cAAc;AAAA,gBACjI;AACM,oBAAI,uBAAuB,mBAAmB,KAAK,OACjD;AAAE,yCAAuB,kBAAkB;AAAA,gBAAG;AAChD,oBAAI,KAAK,SAAS,QAAQ,IACxB;AAAE,uBAAK,iBAAiB,IAAI;AAAA,gBAAE,OAE9B;AAAE,uBAAK,gBAAgB,IAAI;AAAA,gBAAE;AAC/B,qBAAK,OAAO;AACZ,qBAAK,KAAI;AACT,qBAAK,QAAQ,KAAK,iBAAiB,OAAO;AAC1C,oBAAI,iBAAiB,IAAI;AAAE,yCAAuB,cAAc;AAAA,gBAAe;AAC/E,uBAAO,KAAK,WAAW,MAAM,sBAAsB;AAAA,cACzD,OAAW;AACL,oBAAI,wBAAwB;AAAE,uBAAK,sBAAsB,wBAAwB,IAAI;AAAA,gBAAE;AAAA,cAC7F;AACI,kBAAI,iBAAiB,IAAI;AAAE,uCAAuB,sBAAsB;AAAA,cAAe;AACvF,kBAAI,mBAAmB,IAAI;AAAE,uCAAuB,gBAAgB;AAAA,cAAiB;AACrF,qBAAO;AAAA,YACX;AAGE,iBAAK,wBAAwB,SAAS,SAAS,wBAAwB;AACrE,kBAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,kBAAI,OAAO,KAAK,aAAa,SAAS,sBAAsB;AAC5D,kBAAI,KAAK,sBAAsB,sBAAsB,GAAG;AAAE,uBAAO;AAAA,cAAI;AACrE,kBAAI,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAC9B,oBAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,qBAAK,OAAO;AACZ,qBAAK,aAAa,KAAK,iBAAgB;AACvC,qBAAK,OAAO,QAAQ,KAAK;AACzB,qBAAK,YAAY,KAAK,iBAAiB,OAAO;AAC9C,uBAAO,KAAK,WAAW,MAAM,uBAAuB;AAAA,cAC1D;AACI,qBAAO;AAAA,YACX;AAGE,iBAAK,eAAe,SAAS,SAAS,wBAAwB;AAC5D,kBAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,kBAAI,OAAO,KAAK,gBAAgB,wBAAwB,OAAO,OAAO,OAAO;AAC7E,kBAAI,KAAK,sBAAsB,sBAAsB,GAAG;AAAE,uBAAO;AAAA,cAAI;AACrE,qBAAO,KAAK,UAAU,YAAY,KAAK,SAAS,4BAA4B,OAAO,KAAK,YAAY,MAAM,UAAU,UAAU,IAAI,OAAO;AAAA,YAC7I;AAGE,iBAAK,cAAc,SAAS,MAAM,cAAc,cAAc,SAAS,SAAS;AAC9E,kBAAI,OAAO,KAAK,KAAK;AACrB,kBAAI,QAAQ,SAAS,CAAC,WAAW,KAAK,SAAS,QAAQ,MAAM;AAC3D,oBAAI,OAAO,SAAS;AAClB,sBAAI,UAAU,KAAK,SAAS,QAAQ,aAAa,KAAK,SAAS,QAAQ;AACvE,sBAAI,WAAW,KAAK,SAAS,QAAQ;AACrC,sBAAI,UAAU;AACZ,2BAAO,QAAQ,WAAW;AAAA,kBACpC;AACQ,sBAAI,KAAK,KAAK;AACd,uBAAK,KAAI;AACT,sBAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,sBAAI,QAAQ,KAAK,YAAY,KAAK,gBAAgB,MAAM,OAAO,OAAO,OAAO,GAAG,UAAU,UAAU,MAAM,OAAO;AACjH,sBAAI,OAAO,KAAK,YAAY,cAAc,cAAc,MAAM,OAAO,IAAI,WAAW,QAAQ;AAC5F,sBAAK,WAAW,KAAK,SAAS,QAAQ,YAAc,aAAa,KAAK,SAAS,QAAQ,aAAa,KAAK,SAAS,QAAQ,aAAc;AACtI,yBAAK,iBAAiB,KAAK,OAAO,0FAA0F;AAAA,kBACtI;AACQ,yBAAO,KAAK,YAAY,MAAM,cAAc,cAAc,SAAS,OAAO;AAAA,gBAClF;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,cAAc,SAAS,UAAU,UAAU,MAAM,OAAO,IAAI,SAAS;AACxE,kBAAI,MAAM,SAAS,qBAAqB;AAAE,qBAAK,MAAM,MAAM,OAAO,+DAA+D;AAAA,cAAE;AACnI,kBAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,mBAAK,OAAO;AACZ,mBAAK,WAAW;AAChB,mBAAK,QAAQ;AACb,qBAAO,KAAK,WAAW,MAAM,UAAU,sBAAsB,kBAAkB;AAAA,YACnF;AAGE,iBAAK,kBAAkB,SAAS,wBAAwB,UAAU,QAAQ,SAAS;AACjF,kBAAI,WAAW,KAAK,OAAO,WAAW,KAAK,UAAU;AACrD,kBAAI,KAAK,aAAa,OAAO,KAAK,KAAK,UAAU;AAC/C,uBAAO,KAAK,WAAW,OAAO;AAC9B,2BAAW;AAAA,cACjB,WAAe,KAAK,KAAK,QAAQ;AAC3B,oBAAI,OAAO,KAAK,UAAS,GAAI,SAAS,KAAK,SAAS,QAAQ;AAC5D,qBAAK,WAAW,KAAK;AACrB,qBAAK,SAAS;AACd,qBAAK,KAAI;AACT,qBAAK,WAAW,KAAK,gBAAgB,MAAM,MAAM,QAAQ,OAAO;AAChE,qBAAK,sBAAsB,wBAAwB,IAAI;AACvD,oBAAI,QAAQ;AAAE,uBAAK,gBAAgB,KAAK,QAAQ;AAAA,gBAAE,WACzC,KAAK,UAAU,KAAK,aAAa,YAAY,sBAAsB,KAAK,QAAQ,GACvF;AAAE,uBAAK,iBAAiB,KAAK,OAAO,wCAAwC;AAAA,gBAAE,WACvE,KAAK,aAAa,YAAY,qBAAqB,KAAK,QAAQ,GACvE;AAAE,uBAAK,iBAAiB,KAAK,OAAO,mCAAmC;AAAA,gBAAE,OACtE;AAAE,6BAAW;AAAA,gBAAK;AACvB,uBAAO,KAAK,WAAW,MAAM,SAAS,qBAAqB,iBAAiB;AAAA,cAClF,WAAe,CAAC,YAAY,KAAK,SAAS,QAAQ,WAAW;AACvD,qBAAK,WAAW,KAAK,iBAAiB,WAAW,MAAM,KAAK,QAAQ,oBAAoB;AAAE,uBAAK,WAAU;AAAA,gBAAG;AAC5G,uBAAO,KAAK,kBAAiB;AAC7B,oBAAI,KAAK,SAAS,QAAQ,KAAK;AAAE,uBAAK,WAAU;AAAA,gBAAG;AAAA,cACzD,OAAW;AACL,uBAAO,KAAK,oBAAoB,wBAAwB,OAAO;AAC/D,oBAAI,KAAK,sBAAsB,sBAAsB,GAAG;AAAE,yBAAO;AAAA,gBAAI;AACrE,uBAAO,KAAK,KAAK,WAAW,CAAC,KAAK,mBAAkB,GAAI;AACtD,sBAAI,SAAS,KAAK,YAAY,UAAU,QAAQ;AAChD,yBAAO,WAAW,KAAK;AACvB,yBAAO,SAAS;AAChB,yBAAO,WAAW;AAClB,uBAAK,gBAAgB,IAAI;AACzB,uBAAK,KAAI;AACT,yBAAO,KAAK,WAAW,QAAQ,kBAAkB;AAAA,gBACzD;AAAA,cACA;AAEI,kBAAI,CAAC,UAAU,KAAK,IAAI,QAAQ,QAAQ,GAAG;AACzC,oBAAI,UACF;AAAE,uBAAK,WAAW,KAAK,YAAY;AAAA,gBAAE,OAErC;AAAE,yBAAO,KAAK,YAAY,UAAU,UAAU,MAAM,KAAK,gBAAgB,MAAM,OAAO,OAAO,OAAO,GAAG,MAAM,KAAK;AAAA,gBAAC;AAAA,cAC3H,OAAW;AACL,uBAAO;AAAA,cACb;AAAA,YACA;AAEE,qBAAS,sBAAsB,MAAM;AACnC,qBACE,KAAK,SAAS,gBACd,KAAK,SAAS,6BAA6B,sBAAsB,KAAK,UAAU;AAAA,YAEtF;AALW;AAOT,qBAAS,qBAAqB,MAAM;AAClC,qBACE,KAAK,SAAS,sBAAsB,KAAK,SAAS,SAAS,uBAC3D,KAAK,SAAS,qBAAqB,qBAAqB,KAAK,UAAU,KACvE,KAAK,SAAS,6BAA6B,qBAAqB,KAAK,UAAU;AAAA,YAErF;AANW;AAST,iBAAK,sBAAsB,SAAS,wBAAwB,SAAS;AACnE,kBAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,kBAAI,OAAO,KAAK,cAAc,wBAAwB,OAAO;AAC7D,kBAAI,KAAK,SAAS,6BAA6B,KAAK,MAAM,MAAM,KAAK,cAAc,KAAK,UAAU,MAAM,KACtG;AAAE,uBAAO;AAAA,cAAI;AACf,kBAAI,SAAS,KAAK,gBAAgB,MAAM,UAAU,UAAU,OAAO,OAAO;AAC1E,kBAAI,0BAA0B,OAAO,SAAS,oBAAoB;AAChE,oBAAI,uBAAuB,uBAAuB,OAAO,OAAO;AAAE,yCAAuB,sBAAsB;AAAA,gBAAG;AAClH,oBAAI,uBAAuB,qBAAqB,OAAO,OAAO;AAAE,yCAAuB,oBAAoB;AAAA,gBAAG;AAC9G,oBAAI,uBAAuB,iBAAiB,OAAO,OAAO;AAAE,yCAAuB,gBAAgB;AAAA,gBAAG;AAAA,cAC5G;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,kBAAkB,SAAS,MAAM,UAAU,UAAU,SAAS,SAAS;AAC1E,kBAAI,kBAAkB,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,gBAAgB,KAAK,SAAS,WAC/F,KAAK,eAAe,KAAK,OAAO,CAAC,KAAK,mBAAkB,KAAM,KAAK,MAAM,KAAK,UAAU,KACxF,KAAK,qBAAqB,KAAK;AACnC,kBAAI,kBAAkB;AAEtB,qBAAO,MAAM;AACX,oBAAI,UAAU,KAAK,eAAe,MAAM,UAAU,UAAU,SAAS,iBAAiB,iBAAiB,OAAO;AAE9G,oBAAI,QAAQ,UAAU;AAAE,oCAAkB;AAAA,gBAAK;AAC/C,oBAAI,YAAY,QAAQ,QAAQ,SAAS,2BAA2B;AAClE,sBAAI,iBAAiB;AACnB,wBAAI,YAAY,KAAK,YAAY,UAAU,QAAQ;AACnD,8BAAU,aAAa;AACvB,8BAAU,KAAK,WAAW,WAAW,iBAAiB;AAAA,kBAChE;AACQ,yBAAO;AAAA,gBACf;AAEM,uBAAO;AAAA,cACb;AAAA,YACA;AAEE,iBAAK,wBAAwB,WAAW;AACtC,qBAAO,CAAC,KAAK,mBAAkB,KAAM,KAAK,IAAI,QAAQ,KAAK;AAAA,YAC/D;AAEE,iBAAK,2BAA2B,SAAS,UAAU,UAAU,UAAU,SAAS;AAC9E,qBAAO,KAAK,qBAAqB,KAAK,YAAY,UAAU,QAAQ,GAAG,UAAU,MAAM,OAAO;AAAA,YAClG;AAEE,iBAAK,iBAAiB,SAAS,MAAM,UAAU,UAAU,SAAS,iBAAiB,iBAAiB,SAAS;AAC3G,kBAAI,oBAAoB,KAAK,QAAQ,eAAe;AACpD,kBAAI,WAAW,qBAAqB,KAAK,IAAI,QAAQ,WAAW;AAChE,kBAAI,WAAW,UAAU;AAAE,qBAAK,MAAM,KAAK,cAAc,kEAAkE;AAAA,cAAE;AAE7H,kBAAI,WAAW,KAAK,IAAI,QAAQ,QAAQ;AACxC,kBAAI,YAAa,YAAY,KAAK,SAAS,QAAQ,UAAU,KAAK,SAAS,QAAQ,aAAc,KAAK,IAAI,QAAQ,GAAG,GAAG;AACtH,oBAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,qBAAK,SAAS;AACd,oBAAI,UAAU;AACZ,uBAAK,WAAW,KAAK,gBAAe;AACpC,uBAAK,OAAO,QAAQ,QAAQ;AAAA,gBACpC,WAAiB,KAAK,SAAS,QAAQ,aAAa,KAAK,SAAS,SAAS;AACnE,uBAAK,WAAW,KAAK,kBAAiB;AAAA,gBAC9C,OAAa;AACL,uBAAK,WAAW,KAAK,WAAW,KAAK,QAAQ,kBAAkB,OAAO;AAAA,gBAC9E;AACM,qBAAK,WAAW,CAAC,CAAC;AAClB,oBAAI,mBAAmB;AACrB,uBAAK,WAAW;AAAA,gBACxB;AACM,uBAAO,KAAK,WAAW,MAAM,kBAAkB;AAAA,cACrD,WAAe,CAAC,WAAW,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC/C,oBAAI,yBAAyB,IAAI,uBAAqB,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU,mBAAmB,KAAK;AACxI,qBAAK,WAAW;AAChB,qBAAK,WAAW;AAChB,qBAAK,gBAAgB;AACrB,oBAAI,WAAW,KAAK,cAAc,QAAQ,QAAQ,KAAK,QAAQ,eAAe,GAAG,OAAO,sBAAsB;AAC9G,oBAAI,mBAAmB,CAAC,YAAY,KAAK,sBAAqB,GAAI;AAChE,uBAAK,mBAAmB,wBAAwB,KAAK;AACrD,uBAAK,+BAA8B;AACnC,sBAAI,KAAK,gBAAgB,GACvB;AAAE,yBAAK,MAAM,KAAK,eAAe,2DAA2D;AAAA,kBAAE;AAChG,uBAAK,WAAW;AAChB,uBAAK,WAAW;AAChB,uBAAK,gBAAgB;AACrB,yBAAO,KAAK,yBAAyB,UAAU,UAAU,UAAU,OAAO;AAAA,gBAClF;AACM,qBAAK,sBAAsB,wBAAwB,IAAI;AACvD,qBAAK,WAAW,eAAe,KAAK;AACpC,qBAAK,WAAW,eAAe,KAAK;AACpC,qBAAK,gBAAgB,oBAAoB,KAAK;AAC9C,oBAAI,SAAS,KAAK,YAAY,UAAU,QAAQ;AAChD,uBAAO,SAAS;AAChB,uBAAO,YAAY;AACnB,oBAAI,mBAAmB;AACrB,yBAAO,WAAW;AAAA,gBAC1B;AACM,uBAAO,KAAK,WAAW,QAAQ,gBAAgB;AAAA,cACrD,WAAe,KAAK,SAAS,QAAQ,WAAW;AAC1C,oBAAI,YAAY,iBAAiB;AAC/B,uBAAK,MAAM,KAAK,OAAO,2EAA2E;AAAA,gBAC1G;AACM,oBAAI,SAAS,KAAK,YAAY,UAAU,QAAQ;AAChD,uBAAO,MAAM;AACb,uBAAO,QAAQ,KAAK,cAAc,EAAC,UAAU,KAAI,CAAC;AAClD,uBAAO,KAAK,WAAW,QAAQ,0BAA0B;AAAA,cAC/D;AACI,qBAAO;AAAA,YACX;AAGE,iBAAK,gBAAgB,SAAS,wBAAwB,SAAS,QAAQ;AACrE,kBAAI,KAAK,SAAS,QAAQ,OAAO;AAAE,qBAAK,WAAU;AAAA,cAAG;AAErD,kBAAI,MAAM,aAAa,KAAK,qBAAqB,KAAK;AACtD,sBAAQ,KAAK,MAAI;AAAA,gBACjB,KAAK,QAAQ;AACX,sBAAI,CAAC,KAAK,YACR;AAAE,yBAAK,MAAM,KAAK,OAAO,kCAAkC;AAAA,kBAAE;AAC/D,yBAAO,KAAK,UAAS;AACrB,uBAAK,KAAI;AACT,sBAAI,KAAK,SAAS,QAAQ,UAAU,CAAC,KAAK,kBACxC;AAAE,yBAAK,MAAM,KAAK,OAAO,gDAAgD;AAAA,kBAAE;AAC7E,sBAAI,KAAK,SAAS,QAAQ,OAAO,KAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,QAAQ,QACvF;AAAE,yBAAK,WAAU;AAAA,kBAAG;AACtB,yBAAO,KAAK,WAAW,MAAM,OAAO;AAAA,gBAEtC,KAAK,QAAQ;AACX,yBAAO,KAAK,UAAS;AACrB,uBAAK,KAAI;AACT,yBAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,gBAE/C,KAAK,QAAQ;AACX,sBAAI,WAAW,KAAK,OAAO,WAAW,KAAK,UAAU,cAAc,KAAK;AACxE,sBAAI,KAAK,KAAK,WAAW,KAAK;AAC9B,sBAAI,KAAK,QAAQ,eAAe,KAAK,CAAC,eAAe,GAAG,SAAS,WAAW,CAAC,KAAK,wBAAwB,KAAK,IAAI,QAAQ,SAAS,GAAG;AACrI,yBAAK,gBAAgB,MAAM,MAAM;AACjC,2BAAO,KAAK,cAAc,KAAK,YAAY,UAAU,QAAQ,GAAG,GAAG,OAAO,MAAM,OAAO;AAAA,kBAC/F;AACM,sBAAI,cAAc,CAAC,KAAK,sBAAsB;AAC5C,wBAAI,KAAK,IAAI,QAAQ,KAAK,GACxB;AAAE,6BAAO,KAAK,qBAAqB,KAAK,YAAY,UAAU,QAAQ,GAAG,CAAC,EAAE,GAAG,OAAO,OAAO;AAAA,oBAAC;AAChG,wBAAI,KAAK,QAAQ,eAAe,KAAK,GAAG,SAAS,WAAW,KAAK,SAAS,QAAQ,QAAQ,CAAC,gBACtF,CAAC,KAAK,4BAA4B,KAAK,UAAU,QAAQ,KAAK,cAAc;AAC/E,2BAAK,KAAK,WAAW,KAAK;AAC1B,0BAAI,KAAK,wBAAwB,CAAC,KAAK,IAAI,QAAQ,KAAK,GACtD;AAAE,6BAAK,WAAU;AAAA,sBAAG;AACtB,6BAAO,KAAK,qBAAqB,KAAK,YAAY,UAAU,QAAQ,GAAG,CAAC,EAAE,GAAG,MAAM,OAAO;AAAA,oBACpG;AAAA,kBACA;AACM,yBAAO;AAAA,gBAET,KAAK,QAAQ;AACX,sBAAIW,SAAQ,KAAK;AACjB,yBAAO,KAAK,aAAaA,OAAM,KAAK;AACpC,uBAAK,QAAQ,EAAC,SAASA,OAAM,SAAS,OAAOA,OAAM,MAAK;AACxD,yBAAO;AAAA,gBAET,KAAK,QAAQ;AAAA,gBAAK,KAAK,QAAQ;AAC7B,yBAAO,KAAK,aAAa,KAAK,KAAK;AAAA,gBAErC,KAAK,QAAQ;AAAA,gBAAO,KAAK,QAAQ;AAAA,gBAAO,KAAK,QAAQ;AACnD,yBAAO,KAAK,UAAS;AACrB,uBAAK,QAAQ,KAAK,SAAS,QAAQ,QAAQ,OAAO,KAAK,SAAS,QAAQ;AACxE,uBAAK,MAAM,KAAK,KAAK;AACrB,uBAAK,KAAI;AACT,yBAAO,KAAK,WAAW,MAAM,SAAS;AAAA,gBAExC,KAAK,QAAQ;AACX,sBAAI,QAAQ,KAAK,OAAO,OAAO,KAAK,mCAAmC,YAAY,OAAO;AAC1F,sBAAI,wBAAwB;AAC1B,wBAAI,uBAAuB,sBAAsB,KAAK,CAAC,KAAK,qBAAqB,IAAI,GACnF;AAAE,6CAAuB,sBAAsB;AAAA,oBAAM;AACvD,wBAAI,uBAAuB,oBAAoB,GAC7C;AAAE,6CAAuB,oBAAoB;AAAA,oBAAM;AAAA,kBAC7D;AACM,yBAAO;AAAA,gBAET,KAAK,QAAQ;AACX,yBAAO,KAAK,UAAS;AACrB,uBAAK,KAAI;AACT,uBAAK,WAAW,KAAK,cAAc,QAAQ,UAAU,MAAM,MAAM,sBAAsB;AACvF,yBAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,gBAEhD,KAAK,QAAQ;AACX,uBAAK,gBAAgB,MAAM,MAAM;AACjC,yBAAO,KAAK,SAAS,OAAO,sBAAsB;AAAA,gBAEpD,KAAK,QAAQ;AACX,yBAAO,KAAK,UAAS;AACrB,uBAAK,KAAI;AACT,yBAAO,KAAK,cAAc,MAAM,CAAC;AAAA,gBAEnC,KAAK,QAAQ;AACX,yBAAO,KAAK,WAAW,KAAK,UAAS,GAAI,KAAK;AAAA,gBAEhD,KAAK,QAAQ;AACX,yBAAO,KAAK,SAAQ;AAAA,gBAEtB,KAAK,QAAQ;AACX,yBAAO,KAAK,cAAa;AAAA,gBAE3B,KAAK,QAAQ;AACX,sBAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,2BAAO,KAAK,gBAAgB,MAAM;AAAA,kBAC1C,OAAa;AACL,2BAAO,KAAK,WAAU;AAAA,kBAC9B;AAAA,gBAEI;AACE,yBAAO,KAAK,qBAAoB;AAAA,cACtC;AAAA,YACA;AAEE,iBAAK,uBAAuB,WAAW;AACrC,mBAAK,WAAU;AAAA,YACnB;AAEE,iBAAK,kBAAkB,SAAS,QAAQ;AACtC,kBAAI,OAAO,KAAK,UAAS;AAEzB,kBAAI,KAAK,aAAa;AAAE,qBAAK,iBAAiB,KAAK,OAAO,mCAAmC;AAAA,cAAE;AAC/F,mBAAK,KAAI;AAET,kBAAI,KAAK,SAAS,QAAQ,UAAU,CAAC,QAAQ;AAC3C,uBAAO,KAAK,mBAAmB,IAAI;AAAA,cACzC,WAAe,KAAK,SAAS,QAAQ,KAAK;AACpC,oBAAI,OAAO,KAAK,YAAY,KAAK,OAAO,KAAK,OAAO,KAAK,IAAI,KAAK;AAClE,qBAAK,OAAO;AACZ,qBAAK,OAAO,KAAK,WAAW,MAAM,YAAY;AAC9C,uBAAO,KAAK,gBAAgB,IAAI;AAAA,cACtC,OAAW;AACL,qBAAK,WAAU;AAAA,cACrB;AAAA,YACA;AAEE,iBAAK,qBAAqB,SAAS,MAAM;AACvC,mBAAK,KAAI;AAET,mBAAK,SAAS,KAAK,iBAAgB;AAEnC,kBAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,oBAAI,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC7B,uBAAK,OAAO,QAAQ,KAAK;AACzB,sBAAI,CAAC,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAC5C,yBAAK,UAAU,KAAK,iBAAgB;AACpC,wBAAI,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC7B,2BAAK,OAAO,QAAQ,KAAK;AACzB,0BAAI,CAAC,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAC5C,6BAAK,WAAU;AAAA,sBAC7B;AAAA,oBACA;AAAA,kBACA,OAAe;AACL,yBAAK,UAAU;AAAA,kBACzB;AAAA,gBACA,OAAa;AACL,uBAAK,UAAU;AAAA,gBACvB;AAAA,cACA,OAAW;AACL,oBAAI,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC7B,sBAAI,WAAW,KAAK;AACpB,sBAAI,KAAK,IAAI,QAAQ,KAAK,KAAK,KAAK,IAAI,QAAQ,MAAM,GAAG;AACvD,yBAAK,iBAAiB,UAAU,2CAA2C;AAAA,kBACrF,OAAe;AACL,yBAAK,WAAW,QAAQ;AAAA,kBAClC;AAAA,gBACA;AAAA,cACA;AAEI,qBAAO,KAAK,WAAW,MAAM,kBAAkB;AAAA,YACnD;AAEE,iBAAK,kBAAkB,SAAS,MAAM;AACpC,mBAAK,KAAI;AAET,kBAAI,cAAc,KAAK;AACvB,mBAAK,WAAW,KAAK,WAAW,IAAI;AAEpC,kBAAI,KAAK,SAAS,SAAS,QACzB;AAAE,qBAAK,iBAAiB,KAAK,SAAS,OAAO,0DAA0D;AAAA,cAAE;AAC3G,kBAAI,aACF;AAAE,qBAAK,iBAAiB,KAAK,OAAO,mDAAmD;AAAA,cAAE;AAC3F,kBAAI,KAAK,QAAQ,eAAe,YAAY,CAAC,KAAK,QAAQ,6BACxD;AAAE,qBAAK,iBAAiB,KAAK,OAAO,2CAA2C;AAAA,cAAE;AAEnF,qBAAO,KAAK,WAAW,MAAM,cAAc;AAAA,YAC/C;AAEE,iBAAK,eAAe,SAASA,QAAO;AAClC,kBAAI,OAAO,KAAK,UAAS;AACzB,mBAAK,QAAQA;AACb,mBAAK,MAAM,KAAK,MAAM,MAAM,KAAK,OAAO,KAAK,GAAG;AAChD,kBAAI,KAAK,IAAI,WAAW,KAAK,IAAI,SAAS,CAAC,MAAM,KAAK;AAAE,qBAAK,SAAS,KAAK,IAAI,MAAM,GAAG,EAAE,EAAE,QAAQ,MAAM,EAAE;AAAA,cAAE;AAC9G,mBAAK,KAAI;AACT,qBAAO,KAAK,WAAW,MAAM,SAAS;AAAA,YAC1C;AAEE,iBAAK,uBAAuB,WAAW;AACrC,mBAAK,OAAO,QAAQ,MAAM;AAC1B,kBAAI,MAAM,KAAK,gBAAe;AAC9B,mBAAK,OAAO,QAAQ,MAAM;AAC1B,qBAAO;AAAA,YACX;AAEE,iBAAK,mBAAmB,SAAS,UAAU;AACzC,qBAAO,CAAC,KAAK,mBAAkB;AAAA,YACnC;AAEE,iBAAK,qCAAqC,SAAS,YAAY,SAAS;AACtE,kBAAI,WAAW,KAAK,OAAO,WAAW,KAAK,UAAU,KAAK,qBAAqB,KAAK,QAAQ,eAAe;AAC3G,kBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,qBAAK,KAAI;AAET,oBAAI,gBAAgB,KAAK,OAAO,gBAAgB,KAAK;AACrD,oBAAI,WAAW,CAAA,GAAI,QAAQ,MAAM,cAAc;AAC/C,oBAAI,yBAAyB,IAAI,uBAAqB,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU;AAChH,qBAAK,WAAW;AAChB,qBAAK,WAAW;AAChB,uBAAO,KAAK,SAAS,QAAQ,QAAQ;AACnC,0BAAQ,QAAQ,QAAQ,KAAK,OAAO,QAAQ,KAAK;AACjD,sBAAI,sBAAsB,KAAK,mBAAmB,QAAQ,QAAQ,IAAI,GAAG;AACvE,kCAAc;AACd;AAAA,kBACV,WAAmB,KAAK,SAAS,QAAQ,UAAU;AACzC,kCAAc,KAAK;AACnB,6BAAS,KAAK,KAAK,eAAe,KAAK,iBAAgB,CAAE,CAAC;AAC1D,wBAAI,KAAK,SAAS,QAAQ,OAAO;AAC/B,2BAAK;AAAA,wBACH,KAAK;AAAA,wBACL;AAAA;oBAEd;AACU;AAAA,kBACV,OAAe;AACL,6BAAS,KAAK,KAAK,iBAAiB,OAAO,wBAAwB,KAAK,cAAc,CAAC;AAAA,kBACjG;AAAA,gBACA;AACM,oBAAI,cAAc,KAAK,YAAY,cAAc,KAAK;AACtD,qBAAK,OAAO,QAAQ,MAAM;AAE1B,oBAAI,cAAc,KAAK,iBAAiB,QAAQ,KAAK,KAAK,IAAI,QAAQ,KAAK,GAAG;AAC5E,uBAAK,mBAAmB,wBAAwB,KAAK;AACrD,uBAAK,+BAA8B;AACnC,uBAAK,WAAW;AAChB,uBAAK,WAAW;AAChB,yBAAO,KAAK,oBAAoB,UAAU,UAAU,UAAU,OAAO;AAAA,gBAC7E;AAEM,oBAAI,CAAC,SAAS,UAAU,aAAa;AAAE,uBAAK,WAAW,KAAK,YAAY;AAAA,gBAAE;AAC1E,oBAAI,aAAa;AAAE,uBAAK,WAAW,WAAW;AAAA,gBAAE;AAChD,qBAAK,sBAAsB,wBAAwB,IAAI;AACvD,qBAAK,WAAW,eAAe,KAAK;AACpC,qBAAK,WAAW,eAAe,KAAK;AAEpC,oBAAI,SAAS,SAAS,GAAG;AACvB,wBAAM,KAAK,YAAY,eAAe,aAAa;AACnD,sBAAI,cAAc;AAClB,uBAAK,aAAa,KAAK,sBAAsB,aAAa,WAAW;AAAA,gBAC7E,OAAa;AACL,wBAAM,SAAS,CAAC;AAAA,gBACxB;AAAA,cACA,OAAW;AACL,sBAAM,KAAK,qBAAoB;AAAA,cACrC;AAEI,kBAAI,KAAK,QAAQ,gBAAgB;AAC/B,oBAAI,MAAM,KAAK,YAAY,UAAU,QAAQ;AAC7C,oBAAI,aAAa;AACjB,uBAAO,KAAK,WAAW,KAAK,yBAAyB;AAAA,cAC3D,OAAW;AACL,uBAAO;AAAA,cACb;AAAA,YACA;AAEE,iBAAK,iBAAiB,SAAS,MAAM;AACnC,qBAAO;AAAA,YACX;AAEE,iBAAK,sBAAsB,SAAS,UAAU,UAAU,UAAU,SAAS;AACzE,qBAAO,KAAK,qBAAqB,KAAK,YAAY,UAAU,QAAQ,GAAG,UAAU,OAAO,OAAO;AAAA,YACnG;AAGE,gBAAI,QAAQ,CAAA;AAEZ,iBAAK,WAAW,WAAW;AACzB,kBAAI,KAAK,aAAa;AAAE,qBAAK,iBAAiB,KAAK,OAAO,gCAAgC;AAAA,cAAE;AAC5F,kBAAI,OAAO,KAAK,UAAS;AACzB,mBAAK,KAAI;AACT,kBAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,QAAQ,KAAK;AAC9D,oBAAI,OAAO,KAAK,YAAY,KAAK,OAAO,KAAK,OAAO,KAAK,IAAI,KAAK;AAClE,qBAAK,OAAO;AACZ,qBAAK,OAAO,KAAK,WAAW,MAAM,YAAY;AAC9C,qBAAK,KAAI;AACT,oBAAI,cAAc,KAAK;AACvB,qBAAK,WAAW,KAAK,WAAW,IAAI;AACpC,oBAAI,KAAK,SAAS,SAAS,UACzB;AAAE,uBAAK,iBAAiB,KAAK,SAAS,OAAO,sDAAsD;AAAA,gBAAE;AACvG,oBAAI,aACF;AAAE,uBAAK,iBAAiB,KAAK,OAAO,kDAAkD;AAAA,gBAAE;AAC1F,oBAAI,CAAC,KAAK,mBACR;AAAE,uBAAK,iBAAiB,KAAK,OAAO,mEAAmE;AAAA,gBAAE;AAC3G,uBAAO,KAAK,WAAW,MAAM,cAAc;AAAA,cACjD;AACI,kBAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,mBAAK,SAAS,KAAK,gBAAgB,KAAK,cAAc,MAAM,OAAO,IAAI,GAAG,UAAU,UAAU,MAAM,KAAK;AACzG,kBAAI,KAAK,IAAI,QAAQ,MAAM,GAAG;AAAE,qBAAK,YAAY,KAAK,cAAc,QAAQ,QAAQ,KAAK,QAAQ,eAAe,GAAG,KAAK;AAAA,cAAE,OACrH;AAAE,qBAAK,YAAY;AAAA,cAAM;AAC9B,qBAAO,KAAK,WAAW,MAAM,eAAe;AAAA,YAChD;AAGE,iBAAK,uBAAuB,SAASN,MAAK;AACxC,kBAAI,WAAWA,KAAI;AAEnB,kBAAI,OAAO,KAAK,UAAS;AACzB,kBAAI,KAAK,SAAS,QAAQ,iBAAiB;AACzC,oBAAI,CAAC,UAAU;AACb,uBAAK,iBAAiB,KAAK,OAAO,kDAAkD;AAAA,gBAC5F;AACM,qBAAK,QAAQ;AAAA,kBACX,KAAK,KAAK,MAAM,QAAQ,UAAU,IAAI;AAAA,kBACtC,QAAQ;AAAA;cAEhB,OAAW;AACL,qBAAK,QAAQ;AAAA,kBACX,KAAK,KAAK,MAAM,MAAM,KAAK,OAAO,KAAK,GAAG,EAAE,QAAQ,UAAU,IAAI;AAAA,kBAClE,QAAQ,KAAK;AAAA;cAErB;AACI,mBAAK,KAAI;AACT,mBAAK,OAAO,KAAK,SAAS,QAAQ;AAClC,qBAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,YAClD;AAEE,iBAAK,gBAAgB,SAASA,MAAK;AACjC,kBAAKA,SAAQ,OAAS,CAAAA,OAAM,CAAA;AAC5B,kBAAI,WAAWA,KAAI;AAAU,kBAAK,aAAa,OAAS,YAAW;AAEnE,kBAAI,OAAO,KAAK,UAAS;AACzB,mBAAK,KAAI;AACT,mBAAK,cAAc,CAAA;AACnB,kBAAI,SAAS,KAAK,qBAAqB,EAAC,SAAkB,CAAC;AAC3D,mBAAK,SAAS,CAAC,MAAM;AACrB,qBAAO,CAAC,OAAO,MAAM;AACnB,oBAAI,KAAK,SAAS,QAAQ,KAAK;AAAE,uBAAK,MAAM,KAAK,KAAK,+BAA+B;AAAA,gBAAE;AACvF,qBAAK,OAAO,QAAQ,YAAY;AAChC,qBAAK,YAAY,KAAK,KAAK,gBAAe,CAAE;AAC5C,qBAAK,OAAO,QAAQ,MAAM;AAC1B,qBAAK,OAAO,KAAK,SAAS,KAAK,qBAAqB,EAAC,SAAkB,CAAC,CAAC;AAAA,cAC/E;AACI,mBAAK,KAAI;AACT,qBAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,YAClD;AAEE,iBAAK,cAAc,SAAS,MAAM;AAChC,qBAAO,CAAC,KAAK,YAAY,KAAK,IAAI,SAAS,gBAAgB,KAAK,IAAI,SAAS,YAC1E,KAAK,SAAS,QAAQ,QAAQ,KAAK,SAAS,QAAQ,OAAO,KAAK,SAAS,QAAQ,UAAU,KAAK,SAAS,QAAQ,YAAY,KAAK,KAAK,WAAY,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,QAAQ,SAC3M,CAAC,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC;AAAA,YACnE;AAGE,iBAAK,WAAW,SAAS,WAAW,wBAAwB;AAC1D,kBAAI,OAAO,KAAK,UAAS,GAAI,QAAQ,MAAM,WAAW,CAAA;AACtD,mBAAK,aAAa,CAAA;AAClB,mBAAK,KAAI;AACT,qBAAO,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAChC,oBAAI,CAAC,OAAO;AACV,uBAAK,OAAO,QAAQ,KAAK;AACzB,sBAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAAE;AAAA,kBAAK;AAAA,gBAC7F,OAAa;AAAE,0BAAQ;AAAA,gBAAM;AAEvB,oBAAI,OAAO,KAAK,cAAc,WAAW,sBAAsB;AAC/D,oBAAI,CAAC,WAAW;AAAE,uBAAK,eAAe,MAAM,UAAU,sBAAsB;AAAA,gBAAE;AAC9E,qBAAK,WAAW,KAAK,IAAI;AAAA,cAC/B;AACI,qBAAO,KAAK,WAAW,MAAM,YAAY,kBAAkB,kBAAkB;AAAA,YACjF;AAEE,iBAAK,gBAAgB,SAAS,WAAW,wBAAwB;AAC/D,kBAAI,OAAO,KAAK,UAAS,GAAI,aAAa,SAAS,UAAU;AAC7D,kBAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAC/D,oBAAI,WAAW;AACb,uBAAK,WAAW,KAAK,WAAW,KAAK;AACrC,sBAAI,KAAK,SAAS,QAAQ,OAAO;AAC/B,yBAAK,iBAAiB,KAAK,OAAO,+CAA+C;AAAA,kBAC3F;AACQ,yBAAO,KAAK,WAAW,MAAM,aAAa;AAAA,gBAClD;AACM,qBAAK,WAAW,KAAK,iBAAiB,OAAO,sBAAsB;AACnE,oBAAI,KAAK,SAAS,QAAQ,SAAS,0BAA0B,uBAAuB,gBAAgB,GAAG;AACrG,yCAAuB,gBAAgB,KAAK;AAAA,gBACpD;AACM,uBAAO,KAAK,WAAW,MAAM,eAAe;AAAA,cAClD;AACI,kBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,qBAAK,SAAS;AACd,qBAAK,YAAY;AACjB,oBAAI,aAAa,wBAAwB;AACvC,6BAAW,KAAK;AAChB,6BAAW,KAAK;AAAA,gBACxB;AACM,oBAAI,CAAC,WACH;AAAE,gCAAc,KAAK,IAAI,QAAQ,IAAI;AAAA,gBAAE;AAAA,cAC/C;AACI,kBAAI,cAAc,KAAK;AACvB,mBAAK,kBAAkB,IAAI;AAC3B,kBAAI,CAAC,aAAa,CAAC,eAAe,KAAK,QAAQ,eAAe,KAAK,CAAC,eAAe,KAAK,YAAY,IAAI,GAAG;AACzG,0BAAU;AACV,8BAAc,KAAK,QAAQ,eAAe,KAAK,KAAK,IAAI,QAAQ,IAAI;AACpE,qBAAK,kBAAkB,IAAI;AAAA,cACjC,OAAW;AACL,0BAAU;AAAA,cAChB;AACI,mBAAK,mBAAmB,MAAM,WAAW,aAAa,SAAS,UAAU,UAAU,wBAAwB,WAAW;AACtH,qBAAO,KAAK,WAAW,MAAM,UAAU;AAAA,YAC3C;AAEE,iBAAK,oBAAoB,SAAS,MAAM;AACtC,mBAAK,OAAO,KAAK,IAAI;AACrB,mBAAK,kBAAkB,IAAI;AAC3B,mBAAK,QAAQ,KAAK,YAAY,KAAK;AACnC,kBAAI,aAAa,KAAK,SAAS,QAAQ,IAAI;AAC3C,kBAAI,KAAK,MAAM,OAAO,WAAW,YAAY;AAC3C,oBAAI,QAAQ,KAAK,MAAM;AACvB,oBAAI,KAAK,SAAS,OAChB;AAAE,uBAAK,iBAAiB,OAAO,8BAA8B;AAAA,gBAAE,OAE/D;AAAE,uBAAK,iBAAiB,OAAO,sCAAsC;AAAA,gBAAE;AAAA,cAC/E,OAAW;AACL,oBAAI,KAAK,SAAS,SAAS,KAAK,MAAM,OAAO,CAAC,EAAE,SAAS,eACvD;AAAE,uBAAK,iBAAiB,KAAK,MAAM,OAAO,CAAC,EAAE,OAAO,+BAA+B;AAAA,gBAAE;AAAA,cAC7F;AAAA,YACA;AAEE,iBAAK,qBAAqB,SAAS,MAAM,WAAW,aAAa,SAAS,UAAU,UAAU,wBAAwB,aAAa;AACjI,mBAAK,eAAe,YAAY,KAAK,SAAS,QAAQ,OACpD;AAAE,qBAAK,WAAU;AAAA,cAAG;AAEtB,kBAAI,KAAK,IAAI,QAAQ,KAAK,GAAG;AAC3B,qBAAK,QAAQ,YAAY,KAAK,kBAAkB,KAAK,OAAO,KAAK,QAAQ,IAAI,KAAK,iBAAiB,OAAO,sBAAsB;AAChI,qBAAK,OAAO;AAAA,cAClB,WAAe,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,QAAQ,QAAQ;AACxE,oBAAI,WAAW;AAAE,uBAAK,WAAU;AAAA,gBAAG;AACnC,qBAAK,OAAO;AACZ,qBAAK,SAAS;AACd,qBAAK,QAAQ,KAAK,YAAY,aAAa,OAAO;AAAA,cACxD,WAAe,CAAC,aAAa,CAAC,eACf,KAAK,QAAQ,eAAe,KAAK,CAAC,KAAK,YAAY,KAAK,IAAI,SAAS,iBACpE,KAAK,IAAI,SAAS,SAAS,KAAK,IAAI,SAAS,WAC7C,KAAK,SAAS,QAAQ,SAAS,KAAK,SAAS,QAAQ,UAAU,KAAK,SAAS,QAAQ,KAAK;AACpG,oBAAI,eAAe,SAAS;AAAE,uBAAK,WAAU;AAAA,gBAAG;AAChD,qBAAK,kBAAkB,IAAI;AAAA,cACjC,WAAe,KAAK,QAAQ,eAAe,KAAK,CAAC,KAAK,YAAY,KAAK,IAAI,SAAS,cAAc;AAC5F,oBAAI,eAAe,SAAS;AAAE,uBAAK,WAAU;AAAA,gBAAG;AAChD,qBAAK,gBAAgB,KAAK,GAAG;AAC7B,oBAAI,KAAK,IAAI,SAAS,WAAW,CAAC,KAAK,eACrC;AAAE,uBAAK,gBAAgB;AAAA,gBAAS;AAClC,qBAAK,OAAO;AACZ,oBAAI,WAAW;AACb,uBAAK,QAAQ,KAAK,kBAAkB,UAAU,UAAU,KAAK,SAAS,KAAK,GAAG,CAAC;AAAA,gBACvF,WAAiB,KAAK,SAAS,QAAQ,MAAM,wBAAwB;AAC7D,sBAAI,uBAAuB,kBAAkB,GAC3C;AAAE,2CAAuB,kBAAkB,KAAK;AAAA,kBAAM;AACxD,uBAAK,QAAQ,KAAK,kBAAkB,UAAU,UAAU,KAAK,SAAS,KAAK,GAAG,CAAC;AAAA,gBACvF,OAAa;AACL,uBAAK,QAAQ,KAAK,SAAS,KAAK,GAAG;AAAA,gBAC3C;AACM,qBAAK,YAAY;AAAA,cACvB,OAAW;AAAE,qBAAK,WAAU;AAAA,cAAG;AAAA,YAC/B;AAEE,iBAAK,oBAAoB,SAAS,MAAM;AACtC,kBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,oBAAI,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAC9B,uBAAK,WAAW;AAChB,uBAAK,MAAM,KAAK,iBAAgB;AAChC,uBAAK,OAAO,QAAQ,QAAQ;AAC5B,yBAAO,KAAK;AAAA,gBACpB,OAAa;AACL,uBAAK,WAAW;AAAA,gBACxB;AAAA,cACA;AACI,qBAAO,KAAK,MAAM,KAAK,SAAS,QAAQ,OAAO,KAAK,SAAS,QAAQ,SAAS,KAAK,cAAa,IAAK,KAAK,WAAW,KAAK,QAAQ,kBAAkB,OAAO;AAAA,YAC/J;AAGE,iBAAK,eAAe,SAAS,MAAM;AACjC,mBAAK,KAAK;AACV,kBAAI,KAAK,QAAQ,eAAe,GAAG;AAAE,qBAAK,YAAY,KAAK,aAAa;AAAA,cAAM;AAC9E,kBAAI,KAAK,QAAQ,eAAe,GAAG;AAAE,qBAAK,QAAQ;AAAA,cAAM;AAAA,YAC5D;AAGE,iBAAK,cAAc,SAAS,aAAa,SAAS,kBAAkB;AAClE,kBAAI,OAAO,KAAK,UAAS,GAAI,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU,mBAAmB,KAAK;AAE/G,mBAAK,aAAa,IAAI;AACtB,kBAAI,KAAK,QAAQ,eAAe,GAC9B;AAAE,qBAAK,YAAY;AAAA,cAAY;AACjC,kBAAI,KAAK,QAAQ,eAAe,GAC9B;AAAE,qBAAK,QAAQ,CAAC,CAAC;AAAA,cAAQ;AAE3B,mBAAK,WAAW;AAChB,mBAAK,WAAW;AAChB,mBAAK,gBAAgB;AACrB,mBAAK,WAAW,cAAc,SAAS,KAAK,SAAS,IAAI,eAAe,mBAAmB,qBAAqB,EAAE;AAElH,mBAAK,OAAO,QAAQ,MAAM;AAC1B,mBAAK,SAAS,KAAK,iBAAiB,QAAQ,QAAQ,OAAO,KAAK,QAAQ,eAAe,CAAC;AACxF,mBAAK,+BAA8B;AACnC,mBAAK,kBAAkB,MAAM,OAAO,MAAM,KAAK;AAE/C,mBAAK,WAAW;AAChB,mBAAK,WAAW;AAChB,mBAAK,gBAAgB;AACrB,qBAAO,KAAK,WAAW,MAAM,oBAAoB;AAAA,YACrD;AAGE,iBAAK,uBAAuB,SAAS,MAAM,QAAQ,SAAS,SAAS;AACnE,kBAAI,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU,mBAAmB,KAAK;AAEtF,mBAAK,WAAW,cAAc,SAAS,KAAK,IAAI,WAAW;AAC3D,mBAAK,aAAa,IAAI;AACtB,kBAAI,KAAK,QAAQ,eAAe,GAAG;AAAE,qBAAK,QAAQ,CAAC,CAAC;AAAA,cAAQ;AAE5D,mBAAK,WAAW;AAChB,mBAAK,WAAW;AAChB,mBAAK,gBAAgB;AAErB,mBAAK,SAAS,KAAK,iBAAiB,QAAQ,IAAI;AAChD,mBAAK,kBAAkB,MAAM,MAAM,OAAO,OAAO;AAEjD,mBAAK,WAAW;AAChB,mBAAK,WAAW;AAChB,mBAAK,gBAAgB;AACrB,qBAAO,KAAK,WAAW,MAAM,yBAAyB;AAAA,YAC1D;AAGE,iBAAK,oBAAoB,SAAS,MAAM,iBAAiB,UAAU,SAAS;AAC1E,kBAAI,eAAe,mBAAmB,KAAK,SAAS,QAAQ;AAC5D,kBAAI,YAAY,KAAK,QAAQ,YAAY;AAEzC,kBAAI,cAAc;AAChB,qBAAK,OAAO,KAAK,iBAAiB,OAAO;AACzC,qBAAK,aAAa;AAClB,qBAAK,YAAY,MAAM,KAAK;AAAA,cAClC,OAAW;AACL,oBAAI,YAAY,KAAK,QAAQ,eAAe,KAAK,CAAC,KAAK,kBAAkB,KAAK,MAAM;AACpF,oBAAI,CAAC,aAAa,WAAW;AAC3B,8BAAY,KAAK,gBAAgB,KAAK,GAAG;AACzC,sBAAI,aAAa,WACf;AAAE,yBAAK,iBAAiB,KAAK,OAAO,2EAA2E;AAAA,kBAAE;AAAA,gBAC3H;AACM,oBAAI,YAAY,KAAK;AACrB,qBAAK,SAAS,CAAA;AACd,oBAAI,WAAW;AAAE,uBAAK,SAAS;AAAA,gBAAK;AAEpC,qBAAK,YAAY,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,mBAAmB,CAAC,YAAY,KAAK,kBAAkB,KAAK,MAAM,CAAC;AACvH,oBAAI,KAAK,UAAU,KAAK,IAAI;AAAE,uBAAK,gBAAgB,KAAK,IAAI,YAAY;AAAA,gBAAE;AAC1E,qBAAK,OAAO,KAAK,WAAW,OAAO,QAAW,aAAa,CAAC,SAAS;AACrE,qBAAK,aAAa;AAClB,qBAAK,uBAAuB,KAAK,KAAK,IAAI;AAC1C,qBAAK,SAAS;AAAA,cACpB;AACI,mBAAK,UAAS;AAAA,YAClB;AAEE,iBAAK,oBAAoB,SAAS,QAAQ;AACxC,uBAASV,KAAI,GAAGc,QAAO,QAAQd,KAAIc,MAAK,QAAQd,MAAK,GACnD;AACA,oBAAI,QAAQc,MAAKd,EAAC;AAElB,oBAAI,MAAM,SAAS,cAAc;AAAE,yBAAO;AAAA,gBAChD;AAAA,cAAK;AACD,qBAAO;AAAA,YACX;AAGE,iBAAK,cAAc,SAAS,MAAM,iBAAiB;AACjD,kBAAI,WAAW,uBAAO,OAAO,IAAI;AACjC,uBAASA,KAAI,GAAGc,QAAO,KAAK,QAAQd,KAAIc,MAAK,QAAQd,MAAK,GACxD;AACA,oBAAI,QAAQc,MAAKd,EAAC;AAElB,qBAAK,sBAAsB,OAAO,UAAU,kBAAkB,OAAO,QAAQ;AAAA,cACnF;AAAA,YACA;AAGE,iBAAK,gBAAgB,SAAS,OAAO,oBAAoB,YAAY,wBAAwB;AAC3F,kBAAI,OAAO,IAAI,QAAQ;AACvB,qBAAO,CAAC,KAAK,IAAI,KAAK,GAAG;AACvB,oBAAI,CAAC,OAAO;AACV,uBAAK,OAAO,QAAQ,KAAK;AACzB,sBAAI,sBAAsB,KAAK,mBAAmB,KAAK,GAAG;AAAE;AAAA,kBAAK;AAAA,gBACzE,OAAa;AAAE,0BAAQ;AAAA,gBAAM;AAEvB,oBAAI,MAAO;AACX,oBAAI,cAAc,KAAK,SAAS,QAAQ,OACtC;AAAE,wBAAM;AAAA,gBAAK,WACN,KAAK,SAAS,QAAQ,UAAU;AACvC,wBAAM,KAAK,YAAY,sBAAsB;AAC7C,sBAAI,0BAA0B,KAAK,SAAS,QAAQ,SAAS,uBAAuB,gBAAgB,GAClG;AAAE,2CAAuB,gBAAgB,KAAK;AAAA,kBAAM;AAAA,gBAC9D,OAAa;AACL,wBAAM,KAAK,iBAAiB,OAAO,sBAAsB;AAAA,gBACjE;AACM,qBAAK,KAAK,GAAG;AAAA,cACnB;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,kBAAkB,SAASU,MAAK;AACnC,kBAAI,QAAQA,KAAI;AAChB,kBAAI,MAAMA,KAAI;AACd,kBAAIL,QAAOK,KAAI;AAEf,kBAAI,KAAK,eAAeL,UAAS,SAC/B;AAAE,qBAAK,iBAAiB,OAAO,qDAAqD;AAAA,cAAE;AACxF,kBAAI,KAAK,WAAWA,UAAS,SAC3B;AAAE,qBAAK,iBAAiB,OAAO,2DAA2D;AAAA,cAAE;AAC9F,kBAAI,KAAK,iBAAgB,EAAG,oBAAoBA,UAAS,aACvD;AAAE,qBAAK,iBAAiB,OAAO,mDAAmD;AAAA,cAAE;AACtF,kBAAI,KAAK,uBAAuBA,UAAS,eAAeA,UAAS,UAC/D;AAAE,qBAAK,MAAM,OAAQ,gBAAgBA,QAAO,uCAAuC;AAAA,cAAG;AACxF,kBAAI,KAAK,SAAS,KAAKA,KAAI,GACzB;AAAE,qBAAK,MAAM,OAAQ,yBAAyBA,QAAO,GAAG;AAAA,cAAG;AAC7D,kBAAI,KAAK,QAAQ,cAAc,KAC7B,KAAK,MAAM,MAAM,OAAO,GAAG,EAAE,QAAQ,IAAI,MAAM,IAAI;AAAE;AAAA,cAAM;AAC7D,kBAAI,KAAK,KAAK,SAAS,KAAK,sBAAsB,KAAK;AACvD,kBAAI,GAAG,KAAKA,KAAI,GAAG;AACjB,oBAAI,CAAC,KAAK,WAAWA,UAAS,SAC5B;AAAE,uBAAK,iBAAiB,OAAO,sDAAsD;AAAA,gBAAE;AACzF,qBAAK,iBAAiB,OAAQ,kBAAkBA,QAAO,eAAe;AAAA,cAC5E;AAAA,YACA;AAGE,iBAAK,aAAa,SAAS,SAAS;AAClC,kBAAI,OAAO,KAAK,eAAc;AAC9B,mBAAK,KAAK,CAAC,CAAC,OAAO;AACnB,mBAAK,WAAW,MAAM,YAAY;AAClC,kBAAI,CAAC,SAAS;AACZ,qBAAK,gBAAgB,IAAI;AACzB,oBAAI,KAAK,SAAS,WAAW,CAAC,KAAK,eACjC;AAAE,uBAAK,gBAAgB,KAAK;AAAA,gBAAM;AAAA,cAC1C;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,iBAAiB,WAAW;AAC/B,kBAAI,OAAO,KAAK,UAAS;AACzB,kBAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,qBAAK,OAAO,KAAK;AAAA,cACvB,WAAe,KAAK,KAAK,SAAS;AAC5B,qBAAK,OAAO,KAAK,KAAK;AAEtB,qBAAK,KAAK,SAAS,WAAW,KAAK,SAAS,gBACzC,KAAK,eAAe,KAAK,eAAe,KAAK,KAAK,MAAM,WAAW,KAAK,YAAY,MAAM,KAAK;AAChG,uBAAK,QAAQ,IAAG;AAAA,gBACxB;AACM,qBAAK,OAAO,QAAQ;AAAA,cAC1B,OAAW;AACL,qBAAK,WAAU;AAAA,cACrB;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,oBAAoB,WAAW;AAClC,kBAAI,OAAO,KAAK,UAAS;AACzB,kBAAI,KAAK,SAAS,QAAQ,WAAW;AACnC,qBAAK,OAAO,KAAK;AAAA,cACvB,OAAW;AACL,qBAAK,WAAU;AAAA,cACrB;AACI,mBAAK,KAAI;AACT,mBAAK,WAAW,MAAM,mBAAmB;AAEzC,kBAAI,KAAK,QAAQ,oBAAoB;AACnC,oBAAI,KAAK,iBAAiB,WAAW,GAAG;AACtC,uBAAK,MAAM,KAAK,OAAQ,qBAAsB,KAAK,OAAQ,0CAA0C;AAAA,gBAC7G,OAAa;AACL,uBAAK,iBAAiB,KAAK,iBAAiB,SAAS,CAAC,EAAE,KAAK,KAAK,IAAI;AAAA,gBAC9E;AAAA,cACA;AAEI,qBAAO;AAAA,YACX;AAGE,iBAAK,aAAa,SAAS,SAAS;AAClC,kBAAI,CAAC,KAAK,UAAU;AAAE,qBAAK,WAAW,KAAK;AAAA,cAAM;AAEjD,kBAAI,OAAO,KAAK,UAAS;AACzB,mBAAK,KAAI;AACT,kBAAI,KAAK,SAAS,QAAQ,QAAQ,KAAK,mBAAkB,KAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC,KAAK,KAAK,YAAa;AACpH,qBAAK,WAAW;AAChB,qBAAK,WAAW;AAAA,cACtB,OAAW;AACL,qBAAK,WAAW,KAAK,IAAI,QAAQ,IAAI;AACrC,qBAAK,WAAW,KAAK,iBAAiB,OAAO;AAAA,cACnD;AACI,qBAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,YAClD;AAEE,iBAAK,aAAa,SAAS,SAAS;AAClC,kBAAI,CAAC,KAAK,UAAU;AAAE,qBAAK,WAAW,KAAK;AAAA,cAAM;AAEjD,kBAAI,OAAO,KAAK,UAAS;AACzB,mBAAK,KAAI;AACT,mBAAK,WAAW,KAAK,gBAAgB,MAAM,MAAM,OAAO,OAAO;AAC/D,qBAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,YAClD;AAEE,gBAAI,OAAO,OAAO;AAGlB,iBAAK,QAAQ,SAAS,KAAK,SAAS;AAClC,kBAAI,MAAM,YAAY,KAAK,OAAO,GAAG;AACrC,yBAAW,OAAO,IAAI,OAAO,MAAM,IAAI,SAAS;AAChD,kBAAI,MAAM,IAAI,YAAY,OAAO;AACjC,kBAAI,MAAM;AAAK,kBAAI,MAAM;AAAK,kBAAI,WAAW,KAAK;AAClD,oBAAM;AAAA,YACV;AAEE,iBAAK,mBAAmB,KAAK;AAE7B,iBAAK,cAAc,WAAW;AAC5B,kBAAI,KAAK,QAAQ,WAAW;AAC1B,uBAAO,IAAI,SAAS,KAAK,SAAS,KAAK,MAAM,KAAK,SAAS;AAAA,cACjE;AAAA,YACA;AAEE,gBAAI,OAAO,OAAO;AAElB,gBAAI,QAAQ,gCAASc,OAAM,OAAO;AAChC,mBAAK,QAAQ;AACb,mBAAK,MAAM,CAAA;AACX,mBAAK,UAAU,CAAA;AACf,mBAAK,YAAY,CAAA;AACjB,mBAAK,mBAAmB;AAAA,YAC5B,GANc;AASZ,iBAAK,aAAa,SAAS,OAAO;AAChC,mBAAK,WAAW,KAAK,IAAI,MAAM,KAAK,CAAC;AAAA,YACzC;AAEE,iBAAK,YAAY,WAAW;AAC1B,mBAAK,WAAW,IAAG;AAAA,YACvB;AAEE,iBAAK,6BAA6B,SAAS,OAAO;AAChD,qBAAQ,MAAM,QAAQ,kBAAmB,CAAC,KAAK,YAAa,MAAM,QAAQ;AAAA,YAC9E;AAEE,iBAAK,cAAc,SAASd,OAAM,aAAa,KAAK;AAClD,kBAAI,aAAa;AACjB,kBAAI,gBAAgB,cAAc;AAChC,oBAAI,QAAQ,KAAK,aAAY;AAC7B,6BAAa,MAAM,QAAQ,QAAQA,KAAI,IAAI,MAAM,MAAM,UAAU,QAAQA,KAAI,IAAI,MAAM,MAAM,IAAI,QAAQA,KAAI,IAAI;AACjH,sBAAM,QAAQ,KAAKA,KAAI;AACvB,oBAAI,KAAK,YAAa,MAAM,QAAQ,WAClC;AAAE,yBAAO,KAAK,iBAAiBA,KAAI;AAAA,gBAAE;AAAA,cAC7C,WAAe,gBAAgB,mBAAmB;AAC5C,oBAAI,UAAU,KAAK,aAAY;AAC/B,wBAAQ,QAAQ,KAAKA,KAAI;AAAA,cAC/B,WAAe,gBAAgB,eAAe;AACxC,oBAAI,UAAU,KAAK,aAAY;AAC/B,oBAAI,KAAK,qBACP;AAAE,+BAAa,QAAQ,QAAQ,QAAQA,KAAI,IAAI;AAAA,gBAAG,OAElD;AAAE,+BAAa,QAAQ,QAAQ,QAAQA,KAAI,IAAI,MAAM,QAAQ,IAAI,QAAQA,KAAI,IAAI;AAAA,gBAAG;AACtF,wBAAQ,UAAU,KAAKA,KAAI;AAAA,cACjC,OAAW;AACL,yBAASL,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAG,EAAEA,IAAG;AACpD,sBAAI,UAAU,KAAK,WAAWA,EAAC;AAC/B,sBAAI,QAAQ,QAAQ,QAAQK,KAAI,IAAI,MAAM,EAAG,QAAQ,QAAQ,sBAAuB,QAAQ,QAAQ,CAAC,MAAMA,UACvG,CAAC,KAAK,2BAA2B,OAAO,KAAK,QAAQ,UAAU,QAAQA,KAAI,IAAI,IAAI;AACrF,iCAAa;AACb;AAAA,kBACV;AACQ,0BAAQ,IAAI,KAAKA,KAAI;AACrB,sBAAI,KAAK,YAAa,QAAQ,QAAQ,WACpC;AAAE,2BAAO,KAAK,iBAAiBA,KAAI;AAAA,kBAAE;AACvC,sBAAI,QAAQ,QAAQ,WAAW;AAAE;AAAA,kBAAK;AAAA,gBAC9C;AAAA,cACA;AACI,kBAAI,YAAY;AAAE,qBAAK,iBAAiB,KAAM,iBAAiBA,QAAO,6BAA6B;AAAA,cAAG;AAAA,YAC1G;AAEE,iBAAK,mBAAmB,SAAS,IAAI;AACnC,kBAAI,KAAK,WAAW,CAAC,EAAE,QAAQ,QAAQ,GAAG,IAAI,MAAM,MAChD,KAAK,WAAW,CAAC,EAAE,IAAI,QAAQ,GAAG,IAAI,MAAM,IAAI;AAClD,qBAAK,iBAAiB,GAAG,IAAI,IAAI;AAAA,cACvC;AAAA,YACA;AAEE,iBAAK,eAAe,WAAW;AAC7B,qBAAO,KAAK,WAAW,KAAK,WAAW,SAAS,CAAC;AAAA,YACrD;AAEE,iBAAK,kBAAkB,WAAW;AAChC,uBAASL,KAAI,KAAK,WAAW,SAAS,KAAIA,MAAK;AAC7C,oBAAI,QAAQ,KAAK,WAAWA,EAAC;AAC7B,oBAAI,MAAM,QAAQ,WAAW;AAAE,yBAAO;AAAA,gBAAK;AAAA,cACjD;AAAA,YACA;AAEE,iBAAK,mBAAmB,WAAW;AACjC,uBAASA,KAAI,KAAK,WAAW,SAAS,KAAIA,MAAK;AAC7C,oBAAI,QAAQ,KAAK,WAAWA,EAAC;AAC7B,oBAAI,MAAM,QAAQ,aAAa,EAAE,MAAM,QAAQ,cAAc;AAAE,yBAAO;AAAA,gBAAK;AAAA,cACjF;AAAA,YACA;AAEE,gBAAI,OAAO,gCAASoB,MAAK,QAAQ,KAAK,KAAK;AACzC,mBAAK,OAAO;AACZ,mBAAK,QAAQ;AACb,mBAAK,MAAM;AACX,kBAAI,OAAO,QAAQ,WACjB;AAAE,qBAAK,MAAM,IAAI,eAAe,QAAQ,GAAG;AAAA,cAAE;AAC/C,kBAAI,OAAO,QAAQ,kBACjB;AAAE,qBAAK,aAAa,OAAO,QAAQ;AAAA,cAAiB;AACtD,kBAAI,OAAO,QAAQ,QACjB;AAAE,qBAAK,QAAQ,CAAC,KAAK,CAAC;AAAA,cAAE;AAAA,YAC9B,GAVa;AAaX,gBAAI,OAAO,OAAO;AAElB,iBAAK,YAAY,WAAW;AAC1B,qBAAO,IAAI,KAAK,MAAM,KAAK,OAAO,KAAK,QAAQ;AAAA,YACnD;AAEE,iBAAK,cAAc,SAAS,KAAK,KAAK;AACpC,qBAAO,IAAI,KAAK,MAAM,KAAK,GAAG;AAAA,YAClC;AAGE,qBAAS,aAAa,MAAM,MAAM,KAAK,KAAK;AAC1C,mBAAK,OAAO;AACZ,mBAAK,MAAM;AACX,kBAAI,KAAK,QAAQ,WACf;AAAE,qBAAK,IAAI,MAAM;AAAA,cAAI;AACvB,kBAAI,KAAK,QAAQ,QACf;AAAE,qBAAK,MAAM,CAAC,IAAI;AAAA,cAAI;AACxB,qBAAO;AAAA,YACX;AARW;AAUT,iBAAK,aAAa,SAAS,MAAM,MAAM;AACrC,qBAAO,aAAa,KAAK,MAAM,MAAM,MAAM,KAAK,YAAY,KAAK,aAAa;AAAA,YAClF;AAGE,iBAAK,eAAe,SAAS,MAAM,MAAM,KAAK,KAAK;AACjD,qBAAO,aAAa,KAAK,MAAM,MAAM,MAAM,KAAK,GAAG;AAAA,YACvD;AAEE,iBAAK,WAAW,SAAS,MAAM;AAC7B,kBAAI,UAAU,IAAI,KAAK,MAAM,KAAK,OAAO,KAAK,QAAQ;AACtD,uBAAS,QAAQ,MAAM;AAAE,wBAAQ,IAAI,IAAI,KAAK,IAAI;AAAA,cAAE;AACpD,qBAAO;AAAA,YACX;AAEE,gBAAI,6BAA6B;AAGjC,gBAAI,wBAAwB;AAC5B,gBAAI,yBAAyB,wBAAwB;AACrD,gBAAI,yBAAyB;AAC7B,gBAAI,yBAAyB,yBAAyB;AACtD,gBAAI,yBAAyB;AAC7B,gBAAI,yBAAyB;AAE7B,gBAAI,0BAA0B;AAAA,cAC5B,GAAG;AAAA,cACH,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,IAAI;AAAA;AAGN,gBAAI,kCAAkC;AAEtC,gBAAI,mCAAmC;AAAA,cACrC,GAAG;AAAA,cACH,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,IAAI;AAAA;AAGN,gBAAI,+BAA+B;AAEnC,gBAAI,oBAAoB;AACxB,gBAAI,qBAAqB,oBAAoB;AAC7C,gBAAI,qBAAqB,qBAAqB;AAC9C,gBAAI,qBAAqB,qBAAqB;AAC9C,gBAAI,qBAAqB,qBAAqB;AAC9C,gBAAI,qBAAqB,qBAAqB,MAAM;AAEpD,gBAAI,sBAAsB;AAAA,cACxB,GAAG;AAAA,cACH,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,IAAI;AAAA;AAGN,gBAAI,OAAO,CAAA;AACX,qBAAS,iBAAiBL,cAAa;AACrC,kBAAI,IAAI,KAAKA,YAAW,IAAI;AAAA,gBAC1B,QAAQ,YAAY,wBAAwBA,YAAW,IAAI,MAAM,4BAA4B;AAAA,gBAC7F,iBAAiB,YAAY,iCAAiCA,YAAW,CAAC;AAAA,gBAC1E,WAAW;AAAA,kBACT,kBAAkB,YAAY,4BAA4B;AAAA,kBAC1D,QAAQ,YAAY,oBAAoBA,YAAW,CAAC;AAAA,gBAC5D;AAAA;AAEI,gBAAE,UAAU,oBAAoB,EAAE,UAAU;AAE5C,gBAAE,UAAU,KAAK,EAAE,UAAU;AAC7B,gBAAE,UAAU,KAAK,EAAE,UAAU;AAC7B,gBAAE,UAAU,MAAM,EAAE,UAAU;AAAA,YAClC;AAdW;AAgBT,qBAAS,IAAI,GAAG,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACvE,kBAAI,cAAc,KAAK,CAAC;AAExB,+BAAiB,WAAW;AAAA,YAChC;AAEE,gBAAI,OAAO,OAAO;AAElB,gBAAI,WAAW,gCAASM,UAAS,QAAQ,MAAM;AAC7C,mBAAK,SAAS;AACd,mBAAK,OAAO,QAAQ;AAAA,YACxB,GAHiB;AAKf,qBAAS,UAAU,gBAAgB,gCAAS,cAAe,KAAK;AAC9D,uBAASC,QAAO,MAAMA,OAAMA,QAAOA,MAAK,QAAQ;AAC9C,yBAAS,QAAQ,KAAK,OAAO,QAAQ,MAAM,QAAQ;AACjD,sBAAIA,MAAK,SAAS,MAAM,QAAQA,UAAS,OAAO;AAAE,2BAAO;AAAA,kBAAI;AAAA,gBACrE;AAAA,cACA;AACI,qBAAO;AAAA,YACX,GAPqC;AASnC,qBAAS,UAAU,UAAU,gCAAS,UAAW;AAC/C,qBAAO,IAAI,SAAS,KAAK,QAAQ,KAAK,IAAI;AAAA,YAC9C,GAF+B;AAI7B,gBAAI,wBAAwB,gCAASC,uBAAsB,QAAQ;AACjE,mBAAK,SAAS;AACd,mBAAK,aAAa,SAAS,OAAO,QAAQ,eAAe,IAAI,OAAO,OAAO,OAAO,QAAQ,eAAe,IAAI,MAAM,OAAO,OAAO,QAAQ,eAAe,KAAK,MAAM,OAAO,OAAO,QAAQ,eAAe,KAAK,MAAM;AACnN,mBAAK,oBAAoB,KAAK,OAAO,QAAQ,eAAe,KAAK,KAAK,OAAO,QAAQ,WAAW;AAChG,mBAAK,SAAS;AACd,mBAAK,QAAQ;AACb,mBAAK,QAAQ;AACb,mBAAK,UAAU;AACf,mBAAK,UAAU;AACf,mBAAK,UAAU;AACf,mBAAK,MAAM;AACX,mBAAK,eAAe;AACpB,mBAAK,kBAAkB;AACvB,mBAAK,8BAA8B;AACnC,mBAAK,qBAAqB;AAC1B,mBAAK,mBAAmB;AACxB,mBAAK,aAAa,uBAAO,OAAO,IAAI;AACpC,mBAAK,qBAAqB,CAAA;AAC1B,mBAAK,WAAW;AAAA,YACpB,GAnB8B;AAqB5B,kCAAsB,UAAU,QAAQ,gCAAS,MAAO,OAAO,SAAS,OAAO;AAC7E,kBAAI,cAAc,MAAM,QAAQ,GAAG,MAAM;AACzC,kBAAI,UAAU,MAAM,QAAQ,GAAG,MAAM;AACrC,mBAAK,QAAQ,QAAQ;AACrB,mBAAK,SAAS,UAAU;AACxB,mBAAK,QAAQ;AACb,kBAAI,eAAe,KAAK,OAAO,QAAQ,eAAe,IAAI;AACxD,qBAAK,UAAU;AACf,qBAAK,UAAU;AACf,qBAAK,UAAU;AAAA,cACrB,OAAW;AACL,qBAAK,UAAU,WAAW,KAAK,OAAO,QAAQ,eAAe;AAC7D,qBAAK,UAAU;AACf,qBAAK,UAAU,WAAW,KAAK,OAAO,QAAQ,eAAe;AAAA,cACnE;AAAA,YACA,GAf0C;AAiBxC,kCAAsB,UAAU,QAAQ,gCAAS,MAAO,SAAS;AAC/D,mBAAK,OAAO,iBAAiB,KAAK,OAAQ,kCAAmC,KAAK,SAAU,QAAQ,OAAO;AAAA,YAC/G,GAF0C;AAIxC,kCAAsB,UAAU,KAAK,gCAAS,GAAIvB,IAAG,QAAQ;AACzD,kBAAK,WAAW,OAAS,UAAS;AAEpC,kBAAI,IAAI,KAAK;AACb,kBAAI,IAAI,EAAE;AACV,kBAAIA,MAAK,GAAG;AACV,uBAAO;AAAA,cACb;AACI,kBAAI,IAAI,EAAE,WAAWA,EAAC;AACtB,kBAAI,EAAE,UAAU,KAAK,YAAY,KAAK,SAAU,KAAK,SAAUA,KAAI,KAAK,GAAG;AACzE,uBAAO;AAAA,cACb;AACI,kBAAI,OAAO,EAAE,WAAWA,KAAI,CAAC;AAC7B,qBAAO,QAAQ,SAAU,QAAQ,SAAU,KAAK,MAAM,OAAO,WAAY;AAAA,YAC7E,GAduC;AAgBrC,kCAAsB,UAAU,YAAY,gCAAS,UAAWA,IAAG,QAAQ;AACvE,kBAAK,WAAW,OAAS,UAAS;AAEpC,kBAAI,IAAI,KAAK;AACb,kBAAI,IAAI,EAAE;AACV,kBAAIA,MAAK,GAAG;AACV,uBAAO;AAAA,cACb;AACI,kBAAI,IAAI,EAAE,WAAWA,EAAC,GAAG;AACzB,kBAAI,EAAE,UAAU,KAAK,YAAY,KAAK,SAAU,KAAK,SAAUA,KAAI,KAAK,MACnE,OAAO,EAAE,WAAWA,KAAI,CAAC,KAAK,SAAU,OAAO,OAAQ;AAC1D,uBAAOA,KAAI;AAAA,cACjB;AACI,qBAAOA,KAAI;AAAA,YACf,GAd8C;AAgB5C,kCAAsB,UAAU,UAAU,gCAAS,QAAS,QAAQ;AAChE,kBAAK,WAAW,OAAS,UAAS;AAEpC,qBAAO,KAAK,GAAG,KAAK,KAAK,MAAM;AAAA,YACnC,GAJ4C;AAM1C,kCAAsB,UAAU,YAAY,gCAAS,UAAW,QAAQ;AACpE,kBAAK,WAAW,OAAS,UAAS;AAEpC,qBAAO,KAAK,GAAG,KAAK,UAAU,KAAK,KAAK,MAAM,GAAG,MAAM;AAAA,YAC3D,GAJ8C;AAM5C,kCAAsB,UAAU,UAAU,gCAAS,QAAS,QAAQ;AAChE,kBAAK,WAAW,OAAS,UAAS;AAEpC,mBAAK,MAAM,KAAK,UAAU,KAAK,KAAK,MAAM;AAAA,YAC9C,GAJ4C;AAM1C,kCAAsB,UAAU,MAAM,gCAAS,IAAK,IAAI,QAAQ;AAC5D,kBAAK,WAAW,OAAS,UAAS;AAEpC,kBAAI,KAAK,QAAQ,MAAM,MAAM,IAAI;AAC/B,qBAAK,QAAQ,MAAM;AACnB,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX,GARwC;AAUtC,kCAAsB,UAAU,WAAW,gCAAS,SAAU,KAAK,QAAQ;AACvE,kBAAK,WAAW,OAAS,UAAS;AAEpC,kBAAI,MAAM,KAAK;AACf,uBAASA,KAAI,GAAGc,QAAO,KAAKd,KAAIc,MAAK,QAAQd,MAAK,GAAG;AACnD,oBAAI,KAAKc,MAAKd,EAAC;AAEb,oBAAI,UAAU,KAAK,GAAG,KAAK,MAAM;AACnC,oBAAI,YAAY,MAAM,YAAY,IAAI;AACpC,yBAAO;AAAA,gBACf;AACM,sBAAM,KAAK,UAAU,KAAK,MAAM;AAAA,cACtC;AACI,mBAAK,MAAM;AACX,qBAAO;AAAA,YACX,GAf6C;AAiB3C,iBAAK,sBAAsB,SAAS,OAAO;AACzC,kBAAI,aAAa,MAAM;AACvB,kBAAI,QAAQ,MAAM;AAElB,kBAAI,IAAI;AACR,kBAAI,IAAI;AAER,uBAASA,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,oBAAI,OAAO,MAAM,OAAOA,EAAC;AACzB,oBAAI,WAAW,QAAQ,IAAI,MAAM,IAAI;AACnC,uBAAK,MAAM,MAAM,OAAO,iCAAiC;AAAA,gBACjE;AACM,oBAAI,MAAM,QAAQ,MAAMA,KAAI,CAAC,IAAI,IAAI;AACnC,uBAAK,MAAM,MAAM,OAAO,mCAAmC;AAAA,gBACnE;AACM,oBAAI,SAAS,KAAK;AAAE,sBAAI;AAAA,gBAAK;AAC7B,oBAAI,SAAS,KAAK;AAAE,sBAAI;AAAA,gBAAK;AAAA,cACnC;AACI,kBAAI,KAAK,QAAQ,eAAe,MAAM,KAAK,GAAG;AAC5C,qBAAK,MAAM,MAAM,OAAO,iCAAiC;AAAA,cAC/D;AAAA,YACA;AAEE,qBAAS,QAAQ,KAAK;AACpB,uBAAS,KAAK,KAAK;AAAE,uBAAO;AAAA,cAAI;AAChC,qBAAO;AAAA,YACX;AAHW;AAKT,iBAAK,wBAAwB,SAAS,OAAO;AAC3C,mBAAK,eAAe,KAAK;AAEzB,kBAAI,CAAC,MAAM,WAAW,KAAK,QAAQ,eAAe,KAAK,QAAQ,MAAM,UAAU,GAAG;AAChF,sBAAM,UAAU;AAChB,qBAAK,eAAe,KAAK;AAAA,cAC/B;AAAA,YACA;AAEE,iBAAK,iBAAiB,SAAS,OAAO;AACpC,oBAAM,MAAM;AACZ,oBAAM,eAAe;AACrB,oBAAM,kBAAkB;AACxB,oBAAM,8BAA8B;AACpC,oBAAM,qBAAqB;AAC3B,oBAAM,mBAAmB;AACzB,oBAAM,aAAa,uBAAO,OAAO,IAAI;AACrC,oBAAM,mBAAmB,SAAS;AAClC,oBAAM,WAAW;AAEjB,mBAAK,mBAAmB,KAAK;AAE7B,kBAAI,MAAM,QAAQ,MAAM,OAAO,QAAQ;AACrC,oBAAI,MAAM,IAAI,KAAQ;AACpB,wBAAM,MAAM,eAAe;AAAA,gBACnC;AACM,oBAAI,MAAM,IAAI,EAAI,KAAM,MAAM,IAAI,MAAQ;AACxC,wBAAM,MAAM,0BAA0B;AAAA,gBAC9C;AAAA,cACA;AACI,kBAAI,MAAM,mBAAmB,MAAM,oBAAoB;AACrD,sBAAM,MAAM,gBAAgB;AAAA,cAClC;AACI,uBAASA,KAAI,GAAGc,QAAO,MAAM,oBAAoBd,KAAIc,MAAK,QAAQd,MAAK,GAAG;AACxE,oBAAIK,QAAOS,MAAKd,EAAC;AAEjB,oBAAI,CAAC,MAAM,WAAWK,KAAI,GAAG;AAC3B,wBAAM,MAAM,kCAAkC;AAAA,gBACtD;AAAA,cACA;AAAA,YACA;AAEE,iBAAK,qBAAqB,SAAS,OAAO;AACxC,kBAAI,mBAAmB,KAAK,QAAQ,eAAe;AACnD,kBAAI,kBAAkB;AAAE,sBAAM,WAAW,IAAI,SAAS,MAAM,UAAU,IAAI;AAAA,cAAE;AAC5E,mBAAK,mBAAmB,KAAK;AAC7B,qBAAO,MAAM,IAAI,MAAQ;AACvB,oBAAI,kBAAkB;AAAE,wBAAM,WAAW,MAAM,SAAS,QAAO;AAAA,gBAAG;AAClE,qBAAK,mBAAmB,KAAK;AAAA,cACnC;AACI,kBAAI,kBAAkB;AAAE,sBAAM,WAAW,MAAM,SAAS;AAAA,cAAO;AAE/D,kBAAI,KAAK,qBAAqB,OAAO,IAAI,GAAG;AAC1C,sBAAM,MAAM,mBAAmB;AAAA,cACrC;AACI,kBAAI,MAAM,IAAI,MAAQ;AACpB,sBAAM,MAAM,0BAA0B;AAAA,cAC5C;AAAA,YACA;AAEE,iBAAK,qBAAqB,SAAS,OAAO;AACxC,qBAAO,MAAM,MAAM,MAAM,OAAO,UAAU,KAAK,eAAe,KAAK,GAAG;AAAA,cAAA;AAAA,YAC1E;AAEE,iBAAK,iBAAiB,SAAS,OAAO;AACpC,kBAAI,KAAK,oBAAoB,KAAK,GAAG;AACnC,oBAAI,MAAM,+BAA+B,KAAK,qBAAqB,KAAK,GAAG;AACzE,sBAAI,MAAM,SAAS;AACjB,0BAAM,MAAM,oBAAoB;AAAA,kBAC1C;AAAA,gBACA;AACM,uBAAO;AAAA,cACb;AAEI,kBAAI,MAAM,UAAU,KAAK,eAAe,KAAK,IAAI,KAAK,uBAAuB,KAAK,GAAG;AACnF,qBAAK,qBAAqB,KAAK;AAC/B,uBAAO;AAAA,cACb;AAEI,qBAAO;AAAA,YACX;AAEE,iBAAK,sBAAsB,SAAS,OAAO;AACzC,kBAAI,QAAQ,MAAM;AAClB,oBAAM,8BAA8B;AAEpC,kBAAI,MAAM,IAAI,EAAI,KAAM,MAAM,IAAI,KAAQ;AACxC,uBAAO;AAAA,cACb;AAEI,kBAAI,MAAM,IAAI,KAAQ;AACpB,oBAAI,MAAM,IAAI,EAAI,KAAM,MAAM,IAAI,KAAQ;AACxC,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM;AAAA,cAClB;AAEI,kBAAI,MAAM,IAAI,EAAI,KAAM,MAAM,IAAI,KAAQ;AACxC,oBAAI,aAAa;AACjB,oBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,+BAAa,MAAM,IAAI,EAAI;AAAA,gBACnC;AACM,oBAAI,MAAM,IAAI,EAAI,KAAM,MAAM,IAAI,KAAQ;AACxC,uBAAK,mBAAmB,KAAK;AAC7B,sBAAI,CAAC,MAAM,IAAI,KAAQ;AACrB,0BAAM,MAAM,oBAAoB;AAAA,kBAC1C;AACQ,wBAAM,8BAA8B,CAAC;AACrC,yBAAO;AAAA,gBACf;AAAA,cACA;AAEI,oBAAM,MAAM;AACZ,qBAAO;AAAA,YACX;AAEE,iBAAK,uBAAuB,SAAS,OAAO,SAAS;AACnD,kBAAK,YAAY,OAAS,WAAU;AAEpC,kBAAI,KAAK,2BAA2B,OAAO,OAAO,GAAG;AACnD,sBAAM,IAAI,EAAI;AACd,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,6BAA6B,SAAS,OAAO,SAAS;AACzD,qBACE,MAAM,IAAI,EAAI,KACd,MAAM,IAAI,EAAI,KACd,MAAM,IAAI,EAAI,KACd,KAAK,2BAA2B,OAAO,OAAO;AAAA,YAEpD;AACE,iBAAK,6BAA6B,SAAS,OAAO,SAAS;AACzD,kBAAI,QAAQ,MAAM;AAClB,kBAAI,MAAM,IAAI,MAAQ;AACpB,oBAAI,MAAM,GAAG,MAAM;AACnB,oBAAI,KAAK,wBAAwB,KAAK,GAAG;AACvC,wBAAM,MAAM;AACZ,sBAAI,MAAM,IAAI,EAAI,KAAM,KAAK,wBAAwB,KAAK,GAAG;AAC3D,0BAAM,MAAM;AAAA,kBACtB;AACQ,sBAAI,MAAM,IAAI,MAAQ;AACpB,wBAAI,QAAQ,MAAM,MAAM,OAAO,CAAC,SAAS;AACvC,4BAAM,MAAM,uCAAuC;AAAA,oBAC/D;AACU,2BAAO;AAAA,kBACjB;AAAA,gBACA;AACM,oBAAI,MAAM,WAAW,CAAC,SAAS;AAC7B,wBAAM,MAAM,uBAAuB;AAAA,gBAC3C;AACM,sBAAM,MAAM;AAAA,cAClB;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,iBAAiB,SAAS,OAAO;AACpC,qBACE,KAAK,4BAA4B,KAAK,KACtC,MAAM,IAAI,EAAI,KACd,KAAK,mCAAmC,KAAK,KAC7C,KAAK,yBAAyB,KAAK,KACnC,KAAK,2BAA2B,KAAK,KACrC,KAAK,yBAAyB,KAAK;AAAA,YAEzC;AACE,iBAAK,qCAAqC,SAAS,OAAO;AACxD,kBAAI,QAAQ,MAAM;AAClB,kBAAI,MAAM,IAAI,KAAQ;AACpB,oBAAI,KAAK,qBAAqB,KAAK,GAAG;AACpC,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM;AAAA,cAClB;AACI,qBAAO;AAAA,YACX;AACE,iBAAK,6BAA6B,SAAS,OAAO;AAChD,kBAAI,QAAQ,MAAM;AAClB,kBAAI,MAAM,IAAI,KAAQ;AACpB,oBAAI,MAAM,IAAI,KAAQ;AACpB,sBAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,wBAAI,eAAe,KAAK,oBAAoB,KAAK;AACjD,wBAAI,YAAY,MAAM,IAAI,EAAI;AAC9B,wBAAI,gBAAgB,WAAW;AAC7B,+BAASL,KAAI,GAAGA,KAAI,aAAa,QAAQA,MAAK;AAC5C,4BAAI,WAAW,aAAa,OAAOA,EAAC;AACpC,4BAAI,aAAa,QAAQ,UAAUA,KAAI,CAAC,IAAI,IAAI;AAC9C,gCAAM,MAAM,wCAAwC;AAAA,wBACpE;AAAA,sBACA;AACY,0BAAI,WAAW;AACb,4BAAI,kBAAkB,KAAK,oBAAoB,KAAK;AACpD,4BAAI,CAAC,gBAAgB,CAAC,mBAAmB,MAAM,QAAO,MAAO,IAAO;AAClE,gCAAM,MAAM,sCAAsC;AAAA,wBAClE;AACc,iCAAS,MAAM,GAAG,MAAM,gBAAgB,QAAQ,OAAO;AACrD,8BAAI,aAAa,gBAAgB,OAAO,GAAG;AAC3C,8BACE,gBAAgB,QAAQ,YAAY,MAAM,CAAC,IAAI,MAC/C,aAAa,QAAQ,UAAU,IAAI,IACnC;AACA,kCAAM,MAAM,wCAAwC;AAAA,0BACtE;AAAA,wBACA;AAAA,sBACA;AAAA,oBACA;AAAA,kBACA;AACQ,sBAAI,MAAM,IAAI,KAAQ;AACpB,yBAAK,mBAAmB,KAAK;AAC7B,wBAAI,MAAM,IAAI,KAAQ;AACpB,6BAAO;AAAA,oBACnB;AACU,0BAAM,MAAM,oBAAoB;AAAA,kBAC1C;AAAA,gBACA;AACM,sBAAM,MAAM;AAAA,cAClB;AACI,qBAAO;AAAA,YACX;AACE,iBAAK,2BAA2B,SAAS,OAAO;AAC9C,kBAAI,MAAM,IAAI,KAAQ;AACpB,oBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,uBAAK,sBAAsB,KAAK;AAAA,gBACxC,WAAiB,MAAM,QAAO,MAAO,IAAO;AACpC,wBAAM,MAAM,eAAe;AAAA,gBACnC;AACM,qBAAK,mBAAmB,KAAK;AAC7B,oBAAI,MAAM,IAAI,KAAQ;AACpB,wBAAM,sBAAsB;AAC5B,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM,oBAAoB;AAAA,cACtC;AACI,qBAAO;AAAA,YACX;AACE,iBAAK,sBAAsB,SAAS,OAAO;AACzC,kBAAI,YAAY;AAChB,kBAAI,KAAK;AACT,sBAAQ,KAAK,MAAM,QAAO,OAAQ,MAAM,4BAA4B,EAAE,GAAG;AACvE,6BAAa,kBAAkB,EAAE;AACjC,sBAAM,QAAO;AAAA,cACnB;AACI,qBAAO;AAAA,YACX;AACE,qBAAS,4BAA4B,IAAI;AACvC,qBAAO,OAAO,OAAS,OAAO,OAAS,OAAO;AAAA,YAClD;AAFW;AAIT,iBAAK,yBAAyB,SAAS,OAAO;AAC5C,qBACE,MAAM,IAAI,EAAI,KACd,KAAK,mCAAmC,KAAK,KAC7C,KAAK,yBAAyB,KAAK,KACnC,KAAK,2BAA2B,KAAK,KACrC,KAAK,yBAAyB,KAAK,KACnC,KAAK,kCAAkC,KAAK,KAC5C,KAAK,mCAAmC,KAAK;AAAA,YAEnD;AAEE,iBAAK,oCAAoC,SAAS,OAAO;AACvD,kBAAI,KAAK,2BAA2B,OAAO,IAAI,GAAG;AAChD,sBAAM,MAAM,mBAAmB;AAAA,cACrC;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,4BAA4B,SAAS,OAAO;AAC/C,kBAAI,KAAK,MAAM,QAAO;AACtB,kBAAI,kBAAkB,EAAE,GAAG;AACzB,sBAAM,eAAe;AACrB,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AACE,qBAAS,kBAAkB,IAAI;AAC7B,qBACE,OAAO,MACP,MAAM,MAAS,MAAM,MACrB,OAAO,MACP,OAAO,MACP,MAAM,MAAS,MAAM,MACrB,MAAM,OAAS,MAAM;AAAA,YAE3B;AATW;AAWT,iBAAK,8BAA8B,SAAS,OAAO;AACjD,kBAAI,QAAQ,MAAM;AAClB,kBAAI,KAAK;AACT,sBAAQ,KAAK,MAAM,QAAO,OAAQ,MAAM,CAAC,kBAAkB,EAAE,GAAG;AAC9D,sBAAM,QAAO;AAAA,cACnB;AACI,qBAAO,MAAM,QAAQ;AAAA,YACzB;AAEE,iBAAK,qCAAqC,SAAS,OAAO;AACxD,kBAAI,KAAK,MAAM,QAAO;AACtB,kBACE,OAAO,MACP,OAAO,MACP,EAAE,MAAM,MAAS,MAAM,OACvB,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,KACP;AACA,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,wBAAwB,SAAS,OAAO;AAC3C,kBAAI,MAAM,IAAI,KAAQ;AACpB,oBAAI,CAAC,KAAK,oBAAoB,KAAK,GAAG;AAAE,wBAAM,MAAM,eAAe;AAAA,gBAAE;AACrE,oBAAI,mBAAmB,KAAK,QAAQ,eAAe;AACnD,oBAAI,QAAQ,MAAM,WAAW,MAAM,eAAe;AAClD,oBAAI,OAAO;AACT,sBAAI,kBAAkB;AACpB,6BAASA,KAAI,GAAGc,QAAO,OAAOd,KAAIc,MAAK,QAAQd,MAAK,GAAG;AACrD,0BAAI,QAAQc,MAAKd,EAAC;AAElB,0BAAI,CAAC,MAAM,cAAc,MAAM,QAAQ,GACrC;AAAE,8BAAM,MAAM,8BAA8B;AAAA,sBAAE;AAAA,oBAC5D;AAAA,kBACA,OAAe;AACL,0BAAM,MAAM,8BAA8B;AAAA,kBACpD;AAAA,gBACA;AACM,oBAAI,kBAAkB;AACpB,mBAAC,UAAU,MAAM,WAAW,MAAM,eAAe,IAAI,CAAA,IAAK,KAAK,MAAM,QAAQ;AAAA,gBACrF,OAAa;AACL,wBAAM,WAAW,MAAM,eAAe,IAAI;AAAA,gBAClD;AAAA,cACA;AAAA,YACA;AAEE,iBAAK,sBAAsB,SAAS,OAAO;AACzC,oBAAM,kBAAkB;AACxB,kBAAI,MAAM,IAAI,KAAQ;AACpB,oBAAI,KAAK,+BAA+B,KAAK,KAAK,MAAM,IAAI,KAAQ;AAClE,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM,4BAA4B;AAAA,cAC9C;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,iCAAiC,SAAS,OAAO;AACpD,oBAAM,kBAAkB;AACxB,kBAAI,KAAK,gCAAgC,KAAK,GAAG;AAC/C,sBAAM,mBAAmB,kBAAkB,MAAM,YAAY;AAC7D,uBAAO,KAAK,+BAA+B,KAAK,GAAG;AACjD,wBAAM,mBAAmB,kBAAkB,MAAM,YAAY;AAAA,gBACrE;AACM,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,kCAAkC,SAAS,OAAO;AACrD,kBAAI,QAAQ,MAAM;AAClB,kBAAI,SAAS,KAAK,QAAQ,eAAe;AACzC,kBAAI,KAAK,MAAM,QAAQ,MAAM;AAC7B,oBAAM,QAAQ,MAAM;AAEpB,kBAAI,OAAO,MAAS,KAAK,sCAAsC,OAAO,MAAM,GAAG;AAC7E,qBAAK,MAAM;AAAA,cACjB;AACI,kBAAI,wBAAwB,EAAE,GAAG;AAC/B,sBAAM,eAAe;AACrB,uBAAO;AAAA,cACb;AAEI,oBAAM,MAAM;AACZ,qBAAO;AAAA,YACX;AACE,qBAAS,wBAAwB,IAAI;AACnC,qBAAO,kBAAkB,IAAI,IAAI,KAAK,OAAO,MAAS,OAAO;AAAA,YACjE;AAFW;AAIT,iBAAK,iCAAiC,SAAS,OAAO;AACpD,kBAAI,QAAQ,MAAM;AAClB,kBAAI,SAAS,KAAK,QAAQ,eAAe;AACzC,kBAAI,KAAK,MAAM,QAAQ,MAAM;AAC7B,oBAAM,QAAQ,MAAM;AAEpB,kBAAI,OAAO,MAAS,KAAK,sCAAsC,OAAO,MAAM,GAAG;AAC7E,qBAAK,MAAM;AAAA,cACjB;AACI,kBAAI,uBAAuB,EAAE,GAAG;AAC9B,sBAAM,eAAe;AACrB,uBAAO;AAAA,cACb;AAEI,oBAAM,MAAM;AACZ,qBAAO;AAAA,YACX;AACE,qBAAS,uBAAuB,IAAI;AAClC,qBAAO,iBAAiB,IAAI,IAAI,KAAK,OAAO,MAAS,OAAO,MAAS,OAAO,QAAW,OAAO;AAAA,YAClG;AAFW;AAIT,iBAAK,uBAAuB,SAAS,OAAO;AAC1C,kBACE,KAAK,wBAAwB,KAAK,KAClC,KAAK,+BAA+B,KAAK,KACzC,KAAK,0BAA0B,KAAK,KACnC,MAAM,WAAW,KAAK,qBAAqB,KAAK,GACjD;AACA,uBAAO;AAAA,cACb;AACI,kBAAI,MAAM,SAAS;AACjB,oBAAI,MAAM,QAAO,MAAO,IAAO;AAC7B,wBAAM,MAAM,wBAAwB;AAAA,gBAC5C;AACM,sBAAM,MAAM,gBAAgB;AAAA,cAClC;AACI,qBAAO;AAAA,YACX;AACE,iBAAK,0BAA0B,SAAS,OAAO;AAC7C,kBAAI,QAAQ,MAAM;AAClB,kBAAI,KAAK,wBAAwB,KAAK,GAAG;AACvC,oBAAI,IAAI,MAAM;AACd,oBAAI,MAAM,SAAS;AACjB,sBAAI,IAAI,MAAM,kBAAkB;AAC9B,0BAAM,mBAAmB;AAAA,kBACnC;AACQ,yBAAO;AAAA,gBACf;AACM,oBAAI,KAAK,MAAM,oBAAoB;AACjC,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM;AAAA,cAClB;AACI,qBAAO;AAAA,YACX;AACE,iBAAK,uBAAuB,SAAS,OAAO;AAC1C,kBAAI,MAAM,IAAI,MAAQ;AACpB,oBAAI,KAAK,oBAAoB,KAAK,GAAG;AACnC,wBAAM,mBAAmB,KAAK,MAAM,eAAe;AACnD,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM,yBAAyB;AAAA,cAC3C;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,4BAA4B,SAAS,OAAO;AAC/C,qBACE,KAAK,wBAAwB,KAAK,KAClC,KAAK,yBAAyB,KAAK,KACnC,KAAK,eAAe,KAAK,KACzB,KAAK,4BAA4B,KAAK,KACtC,KAAK,sCAAsC,OAAO,KAAK,KACtD,CAAC,MAAM,WAAW,KAAK,oCAAoC,KAAK,KACjE,KAAK,yBAAyB,KAAK;AAAA,YAEzC;AACE,iBAAK,2BAA2B,SAAS,OAAO;AAC9C,kBAAI,QAAQ,MAAM;AAClB,kBAAI,MAAM,IAAI,KAAQ;AACpB,oBAAI,KAAK,wBAAwB,KAAK,GAAG;AACvC,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM;AAAA,cAClB;AACI,qBAAO;AAAA,YACX;AACE,iBAAK,iBAAiB,SAAS,OAAO;AACpC,kBAAI,MAAM,QAAO,MAAO,MAAS,CAAC,eAAe,MAAM,UAAS,CAAE,GAAG;AACnE,sBAAM,eAAe;AACrB,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,0BAA0B,SAAS,OAAO;AAC7C,kBAAI,KAAK,MAAM,QAAO;AACtB,kBAAI,OAAO,KAAO;AAChB,sBAAM,eAAe;AACrB,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AACI,kBAAI,OAAO,KAAO;AAChB,sBAAM,eAAe;AACrB,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AACI,kBAAI,OAAO,KAAO;AAChB,sBAAM,eAAe;AACrB,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AACI,kBAAI,OAAO,KAAO;AAChB,sBAAM,eAAe;AACrB,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AACI,kBAAI,OAAO,KAAO;AAChB,sBAAM,eAAe;AACrB,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,0BAA0B,SAAS,OAAO;AAC7C,kBAAI,KAAK,MAAM,QAAO;AACtB,kBAAI,gBAAgB,EAAE,GAAG;AACvB,sBAAM,eAAe,KAAK;AAC1B,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AACE,qBAAS,gBAAgB,IAAI;AAC3B,qBACG,MAAM,MAAS,MAAM,MACrB,MAAM,MAAS,MAAM;AAAA,YAE5B;AALW;AAOT,iBAAK,wCAAwC,SAAS,OAAO,QAAQ;AACnE,kBAAK,WAAW,OAAS,UAAS;AAElC,kBAAI,QAAQ,MAAM;AAClB,kBAAI,UAAU,UAAU,MAAM;AAE9B,kBAAI,MAAM,IAAI,MAAQ;AACpB,oBAAI,KAAK,yBAAyB,OAAO,CAAC,GAAG;AAC3C,sBAAI,OAAO,MAAM;AACjB,sBAAI,WAAW,QAAQ,SAAU,QAAQ,OAAQ;AAC/C,wBAAI,mBAAmB,MAAM;AAC7B,wBAAI,MAAM,IAAI,EAAI,KAAM,MAAM,IAAI,GAAI,KAAM,KAAK,yBAAyB,OAAO,CAAC,GAAG;AACnF,0BAAI,QAAQ,MAAM;AAClB,0BAAI,SAAS,SAAU,SAAS,OAAQ;AACtC,8BAAM,gBAAgB,OAAO,SAAU,QAAS,QAAQ,SAAU;AAClE,+BAAO;AAAA,sBACrB;AAAA,oBACA;AACU,0BAAM,MAAM;AACZ,0BAAM,eAAe;AAAA,kBAC/B;AACQ,yBAAO;AAAA,gBACf;AACM,oBACE,WACA,MAAM,IAAI,GAAI,KACd,KAAK,oBAAoB,KAAK,KAC9B,MAAM,IAAI,GAAI,KACd,eAAe,MAAM,YAAY,GACjC;AACA,yBAAO;AAAA,gBACf;AACM,oBAAI,SAAS;AACX,wBAAM,MAAM,wBAAwB;AAAA,gBAC5C;AACM,sBAAM,MAAM;AAAA,cAClB;AAEI,qBAAO;AAAA,YACX;AACE,qBAAS,eAAe,IAAI;AAC1B,qBAAO,MAAM,KAAK,MAAM;AAAA,YAC5B;AAFW;AAIT,iBAAK,2BAA2B,SAAS,OAAO;AAC9C,kBAAI,MAAM,SAAS;AACjB,oBAAI,KAAK,0BAA0B,KAAK,GAAG;AACzC,yBAAO;AAAA,gBACf;AACM,oBAAI,MAAM,IAAI,KAAQ;AACpB,wBAAM,eAAe;AACrB,yBAAO;AAAA,gBACf;AACM,uBAAO;AAAA,cACb;AAEI,kBAAI,KAAK,MAAM,QAAO;AACtB,kBAAI,OAAO,OAAU,CAAC,MAAM,WAAW,OAAO,MAAQ;AACpD,sBAAM,eAAe;AACrB,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AAEI,qBAAO;AAAA,YACX;AAEE,iBAAK,0BAA0B,SAAS,OAAO;AAC7C,oBAAM,eAAe;AACrB,kBAAI,KAAK,MAAM,QAAO;AACtB,kBAAI,MAAM,MAAS,MAAM,IAAO;AAC9B,mBAAG;AACD,wBAAM,eAAe,KAAK,MAAM,gBAAgB,KAAK;AACrD,wBAAM,QAAO;AAAA,gBACrB,UAAgB,KAAK,MAAM,QAAO,MAAO,MAAS,MAAM;AAClD,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAEE,gBAAI,cAAc;AAClB,gBAAI,YAAY;AAChB,gBAAI,gBAAgB;AAEpB,iBAAK,iCAAiC,SAAS,OAAO;AACpD,kBAAI,KAAK,MAAM,QAAO;AAEtB,kBAAI,uBAAuB,EAAE,GAAG;AAC9B,sBAAM,eAAe;AACrB,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AAEI,kBAAI,SAAS;AACb,kBACE,MAAM,WACN,KAAK,QAAQ,eAAe,OAC1B,SAAS,OAAO,OAAU,OAAO,MACnC;AACA,sBAAM,eAAe;AACrB,sBAAM,QAAO;AACb,oBAAI;AACJ,oBACE,MAAM,IAAI,GAAI,MACb,SAAS,KAAK,yCAAyC,KAAK,MAC7D,MAAM,IAAI,GAAI,GACd;AACA,sBAAI,UAAU,WAAW,eAAe;AAAE,0BAAM,MAAM,uBAAuB;AAAA,kBAAE;AAC/E,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM,uBAAuB;AAAA,cACzC;AAEI,qBAAO;AAAA,YACX;AAEE,qBAAS,uBAAuB,IAAI;AAClC,qBACE,OAAO,OACP,OAAO,MACP,OAAO,OACP,OAAO,MACP,OAAO,OACP,OAAO;AAAA,YAEb;AATW;AAWT,iBAAK,2CAA2C,SAAS,OAAO;AAC9D,kBAAI,QAAQ,MAAM;AAElB,kBAAI,KAAK,8BAA8B,KAAK,KAAK,MAAM,IAAI,KAAQ;AACjE,oBAAIK,QAAO,MAAM;AACjB,oBAAI,KAAK,+BAA+B,KAAK,GAAG;AAC9C,sBAAIW,SAAQ,MAAM;AAClB,uBAAK,2CAA2C,OAAOX,OAAMW,MAAK;AAClE,yBAAO;AAAA,gBACf;AAAA,cACA;AACI,oBAAM,MAAM;AAEZ,kBAAI,KAAK,yCAAyC,KAAK,GAAG;AACxD,oBAAI,cAAc,MAAM;AACxB,uBAAO,KAAK,0CAA0C,OAAO,WAAW;AAAA,cAC9E;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,6CAA6C,SAAS,OAAOX,OAAMW,QAAO;AAC7E,kBAAI,CAAC,OAAO,MAAM,kBAAkB,WAAWX,KAAI,GACjD;AAAE,sBAAM,MAAM,uBAAuB;AAAA,cAAE;AACzC,kBAAI,CAAC,MAAM,kBAAkB,UAAUA,KAAI,EAAE,KAAKW,MAAK,GACrD;AAAE,sBAAM,MAAM,wBAAwB;AAAA,cAAE;AAAA,YAC9C;AAEE,iBAAK,4CAA4C,SAAS,OAAO,aAAa;AAC5E,kBAAI,MAAM,kBAAkB,OAAO,KAAK,WAAW,GAAG;AAAE,uBAAO;AAAA,cAAS;AACxE,kBAAI,MAAM,WAAW,MAAM,kBAAkB,gBAAgB,KAAK,WAAW,GAAG;AAAE,uBAAO;AAAA,cAAa;AACtG,oBAAM,MAAM,uBAAuB;AAAA,YACvC;AAEE,iBAAK,gCAAgC,SAAS,OAAO;AACnD,kBAAI,KAAK;AACT,oBAAM,kBAAkB;AACxB,qBAAO,+BAA+B,KAAK,MAAM,QAAO,CAAE,GAAG;AAC3D,sBAAM,mBAAmB,kBAAkB,EAAE;AAC7C,sBAAM,QAAO;AAAA,cACnB;AACI,qBAAO,MAAM,oBAAoB;AAAA,YACrC;AAEE,qBAAS,+BAA+B,IAAI;AAC1C,qBAAO,gBAAgB,EAAE,KAAK,OAAO;AAAA,YACzC;AAFW;AAIT,iBAAK,iCAAiC,SAAS,OAAO;AACpD,kBAAI,KAAK;AACT,oBAAM,kBAAkB;AACxB,qBAAO,gCAAgC,KAAK,MAAM,QAAO,CAAE,GAAG;AAC5D,sBAAM,mBAAmB,kBAAkB,EAAE;AAC7C,sBAAM,QAAO;AAAA,cACnB;AACI,qBAAO,MAAM,oBAAoB;AAAA,YACrC;AACE,qBAAS,gCAAgC,IAAI;AAC3C,qBAAO,+BAA+B,EAAE,KAAK,eAAe,EAAE;AAAA,YAClE;AAFW;AAIT,iBAAK,2CAA2C,SAAS,OAAO;AAC9D,qBAAO,KAAK,+BAA+B,KAAK;AAAA,YACpD;AAEE,iBAAK,2BAA2B,SAAS,OAAO;AAC9C,kBAAI,MAAM,IAAI,KAAQ;AACpB,oBAAI,SAAS,MAAM,IAAI,EAAI;AAC3B,oBAAI,SAAS,KAAK,qBAAqB,KAAK;AAC5C,oBAAI,CAAC,MAAM,IAAI,EAAI,GACjB;AAAE,wBAAM,MAAM,8BAA8B;AAAA,gBAAE;AAChD,oBAAI,UAAU,WAAW,eACvB;AAAE,wBAAM,MAAM,6CAA6C;AAAA,gBAAE;AAC/D,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,uBAAuB,SAAS,OAAO;AAC1C,kBAAI,MAAM,QAAO,MAAO,IAAO;AAAE,uBAAO;AAAA,cAAS;AACjD,kBAAI,MAAM,SAAS;AAAE,uBAAO,KAAK,0BAA0B,KAAK;AAAA,cAAC;AACjE,mBAAK,2BAA2B,KAAK;AACrC,qBAAO;AAAA,YACX;AAEE,iBAAK,6BAA6B,SAAS,OAAO;AAChD,qBAAO,KAAK,oBAAoB,KAAK,GAAG;AACtC,oBAAI,OAAO,MAAM;AACjB,oBAAI,MAAM,IAAI,EAAI,KAAM,KAAK,oBAAoB,KAAK,GAAG;AACvD,sBAAI,QAAQ,MAAM;AAClB,sBAAI,MAAM,YAAY,SAAS,MAAM,UAAU,KAAK;AAClD,0BAAM,MAAM,yBAAyB;AAAA,kBAC/C;AACQ,sBAAI,SAAS,MAAM,UAAU,MAAM,OAAO,OAAO;AAC/C,0BAAM,MAAM,uCAAuC;AAAA,kBAC7D;AAAA,gBACA;AAAA,cACA;AAAA,YACA;AAEE,iBAAK,sBAAsB,SAAS,OAAO;AACzC,kBAAI,QAAQ,MAAM;AAElB,kBAAI,MAAM,IAAI,KAAQ;AACpB,oBAAI,KAAK,sBAAsB,KAAK,GAAG;AACrC,yBAAO;AAAA,gBACf;AACM,oBAAI,MAAM,SAAS;AACjB,sBAAI,OAAO,MAAM,QAAO;AACxB,sBAAI,SAAS,MAAS,aAAa,IAAI,GAAG;AACxC,0BAAM,MAAM,sBAAsB;AAAA,kBAC5C;AACQ,wBAAM,MAAM,gBAAgB;AAAA,gBACpC;AACM,sBAAM,MAAM;AAAA,cAClB;AAEI,kBAAI,KAAK,MAAM,QAAO;AACtB,kBAAI,OAAO,IAAO;AAChB,sBAAM,eAAe;AACrB,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AAEI,qBAAO;AAAA,YACX;AAEE,iBAAK,wBAAwB,SAAS,OAAO;AAC3C,kBAAI,QAAQ,MAAM;AAElB,kBAAI,MAAM,IAAI,KAAQ;AACpB,sBAAM,eAAe;AACrB,uBAAO;AAAA,cACb;AAEI,kBAAI,MAAM,WAAW,MAAM,IAAI,EAAI,GAAI;AACrC,sBAAM,eAAe;AACrB,uBAAO;AAAA,cACb;AAEI,kBAAI,CAAC,MAAM,WAAW,MAAM,IAAI,EAAI,GAAI;AACtC,oBAAI,KAAK,6BAA6B,KAAK,GAAG;AAC5C,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM;AAAA,cAClB;AAEI,qBACE,KAAK,+BAA+B,KAAK,KACzC,KAAK,0BAA0B,KAAK;AAAA,YAE1C;AAEE,iBAAK,4BAA4B,SAAS,OAAO;AAC/C,kBAAI,SAAS,WAAW;AACxB,kBAAI,KAAK,wBAAwB,KAAK,EAAG;AAAA,uBAAW,YAAY,KAAK,0BAA0B,KAAK,GAAG;AACrG,oBAAI,cAAc,eAAe;AAAE,2BAAS;AAAA,gBAAc;AAC1D,oBAAI,QAAQ,MAAM;AAClB,uBAAO,MAAM,SAAS,CAAC,IAAM,EAAI,CAAC,GAAI;AACpC,sBACE,MAAM,QAAO,MAAO,OACnB,YAAY,KAAK,0BAA0B,KAAK,IACjD;AACA,wBAAI,cAAc,eAAe;AAAE,+BAAS;AAAA,oBAAU;AACtD;AAAA,kBACV;AACQ,wBAAM,MAAM,sCAAsC;AAAA,gBAC1D;AACM,oBAAI,UAAU,MAAM,KAAK;AAAE,yBAAO;AAAA,gBAAM;AACxC,uBAAO,MAAM,SAAS,CAAC,IAAM,EAAI,CAAC,GAAI;AACpC,sBAAI,KAAK,0BAA0B,KAAK,GAAG;AAAE;AAAA,kBAAQ;AACrD,wBAAM,MAAM,sCAAsC;AAAA,gBAC1D;AACM,oBAAI,UAAU,MAAM,KAAK;AAAE,yBAAO;AAAA,gBAAM;AAAA,cAC9C,OAAW;AACL,sBAAM,MAAM,sCAAsC;AAAA,cACxD;AACI,yBAAS;AACP,oBAAI,KAAK,wBAAwB,KAAK,GAAG;AAAE;AAAA,gBAAQ;AACnD,4BAAY,KAAK,0BAA0B,KAAK;AAChD,oBAAI,CAAC,WAAW;AAAE,yBAAO;AAAA,gBAAM;AAC/B,oBAAI,cAAc,eAAe;AAAE,2BAAS;AAAA,gBAAc;AAAA,cAChE;AAAA,YACA;AAEE,iBAAK,0BAA0B,SAAS,OAAO;AAC7C,kBAAI,QAAQ,MAAM;AAClB,kBAAI,KAAK,4BAA4B,KAAK,GAAG;AAC3C,oBAAI,OAAO,MAAM;AACjB,oBAAI,MAAM,IAAI,EAAI,KAAM,KAAK,4BAA4B,KAAK,GAAG;AAC/D,sBAAI,QAAQ,MAAM;AAClB,sBAAI,SAAS,MAAM,UAAU,MAAM,OAAO,OAAO;AAC/C,0BAAM,MAAM,uCAAuC;AAAA,kBAC7D;AACQ,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM;AAAA,cAClB;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,4BAA4B,SAAS,OAAO;AAC/C,kBAAI,KAAK,4BAA4B,KAAK,GAAG;AAAE,uBAAO;AAAA,cAAS;AAC/D,qBAAO,KAAK,iCAAiC,KAAK,KAAK,KAAK,sBAAsB,KAAK;AAAA,YAC3F;AAEE,iBAAK,wBAAwB,SAAS,OAAO;AAC3C,kBAAI,QAAQ,MAAM;AAClB,kBAAI,MAAM,IAAI,KAAQ;AACpB,oBAAI,SAAS,MAAM,IAAI,EAAI;AAC3B,oBAAI,SAAS,KAAK,qBAAqB,KAAK;AAC5C,oBAAI,MAAM,IAAI,KAAQ;AACpB,sBAAI,UAAU,WAAW,eAAe;AACtC,0BAAM,MAAM,6CAA6C;AAAA,kBACnE;AACQ,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM;AAAA,cAClB;AACI,kBAAI,MAAM,IAAI,KAAQ;AACpB,oBAAI,WAAW,KAAK,+BAA+B,KAAK;AACxD,oBAAI,UAAU;AACZ,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM;AAAA,cAClB;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,mCAAmC,SAAS,OAAO;AACtD,kBAAI,QAAQ,MAAM;AAClB,kBAAI,MAAM,SAAS,CAAC,IAAM,GAAI,CAAC,GAAI;AACjC,oBAAI,MAAM,IAAI,MAAQ;AACpB,sBAAI,SAAS,KAAK,sCAAsC,KAAK;AAC7D,sBAAI,MAAM,IAAI,MAAQ;AACpB,2BAAO;AAAA,kBACjB;AAAA,gBACA,OAAa;AACL,wBAAM,MAAM,gBAAgB;AAAA,gBACpC;AACM,sBAAM,MAAM;AAAA,cAClB;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,wCAAwC,SAAS,OAAO;AAC3D,kBAAI,SAAS,KAAK,mBAAmB,KAAK;AAC1C,qBAAO,MAAM,IAAI,MAAQ;AACvB,oBAAI,KAAK,mBAAmB,KAAK,MAAM,eAAe;AAAE,2BAAS;AAAA,gBAAc;AAAA,cACrF;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,qBAAqB,SAAS,OAAO;AACxC,kBAAI,QAAQ;AACZ,qBAAO,KAAK,4BAA4B,KAAK,GAAG;AAAE;AAAA,cAAQ;AAC1D,qBAAO,UAAU,IAAI,YAAY;AAAA,YACrC;AAEE,iBAAK,8BAA8B,SAAS,OAAO;AACjD,kBAAI,QAAQ,MAAM;AAClB,kBAAI,MAAM,IAAI,KAAQ;AACpB,oBACE,KAAK,0BAA0B,KAAK,KACpC,KAAK,qCAAqC,KAAK,GAC/C;AACA,yBAAO;AAAA,gBACf;AACM,oBAAI,MAAM,IAAI,KAAQ;AACpB,wBAAM,eAAe;AACrB,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAM;AACZ,uBAAO;AAAA,cACb;AACI,kBAAI,KAAK,MAAM,QAAO;AACtB,kBAAI,KAAK,KAAK,OAAO,MAAM,eAAe,4CAA4C,EAAE,GAAG;AAAE,uBAAO;AAAA,cAAK;AACzG,kBAAI,0BAA0B,EAAE,GAAG;AAAE,uBAAO;AAAA,cAAK;AACjD,oBAAM,QAAO;AACb,oBAAM,eAAe;AACrB,qBAAO;AAAA,YACX;AAEE,qBAAS,4CAA4C,IAAI;AACvD,qBACE,OAAO,MACP,MAAM,MAAS,MAAM,MACrB,MAAM,MAAS,MAAM,MACrB,OAAO,MACP,MAAM,MAAS,MAAM,MACrB,OAAO,MACP,OAAO,MACP,OAAO;AAAA,YAEb;AAXW;AAaT,qBAAS,0BAA0B,IAAI;AACrC,qBACE,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,MAAM,MAAS,MAAM,MACrB,MAAM,OAAS,MAAM;AAAA,YAE3B;AATW;AAWT,iBAAK,uCAAuC,SAAS,OAAO;AAC1D,kBAAI,KAAK,MAAM,QAAO;AACtB,kBAAI,6BAA6B,EAAE,GAAG;AACpC,sBAAM,eAAe;AACrB,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAEE,qBAAS,6BAA6B,IAAI;AACxC,qBACE,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,MAAM,MAAS,MAAM,MACrB,OAAO,MACP,OAAO,MACP,OAAO;AAAA,YAEb;AAbW;AAeT,iBAAK,+BAA+B,SAAS,OAAO;AAClD,kBAAI,KAAK,MAAM,QAAO;AACtB,kBAAI,eAAe,EAAE,KAAK,OAAO,IAAO;AACtC,sBAAM,eAAe,KAAK;AAC1B,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,8BAA8B,SAAS,OAAO;AACjD,kBAAI,QAAQ,MAAM;AAClB,kBAAI,MAAM,IAAI,MAAQ;AACpB,oBAAI,KAAK,yBAAyB,OAAO,CAAC,GAAG;AAC3C,yBAAO;AAAA,gBACf;AACM,oBAAI,MAAM,SAAS;AACjB,wBAAM,MAAM,gBAAgB;AAAA,gBACpC;AACM,sBAAM,MAAM;AAAA,cAClB;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,0BAA0B,SAAS,OAAO;AAC7C,kBAAI,QAAQ,MAAM;AAClB,kBAAI,KAAK;AACT,oBAAM,eAAe;AACrB,qBAAO,eAAe,KAAK,MAAM,QAAO,CAAE,GAAG;AAC3C,sBAAM,eAAe,KAAK,MAAM,gBAAgB,KAAK;AACrD,sBAAM,QAAO;AAAA,cACnB;AACI,qBAAO,MAAM,QAAQ;AAAA,YACzB;AACE,qBAAS,eAAe,IAAI;AAC1B,qBAAO,MAAM,MAAS,MAAM;AAAA,YAChC;AAFW;AAIT,iBAAK,sBAAsB,SAAS,OAAO;AACzC,kBAAI,QAAQ,MAAM;AAClB,kBAAI,KAAK;AACT,oBAAM,eAAe;AACrB,qBAAO,WAAW,KAAK,MAAM,QAAO,CAAE,GAAG;AACvC,sBAAM,eAAe,KAAK,MAAM,eAAe,SAAS,EAAE;AAC1D,sBAAM,QAAO;AAAA,cACnB;AACI,qBAAO,MAAM,QAAQ;AAAA,YACzB;AACE,qBAAS,WAAW,IAAI;AACtB,qBACG,MAAM,MAAS,MAAM,MACrB,MAAM,MAAS,MAAM,MACrB,MAAM,MAAS,MAAM;AAAA,YAE5B;AANW;AAOT,qBAAS,SAAS,IAAI;AACpB,kBAAI,MAAM,MAAS,MAAM,IAAO;AAC9B,uBAAO,MAAM,KAAK;AAAA,cACxB;AACI,kBAAI,MAAM,MAAS,MAAM,KAAO;AAC9B,uBAAO,MAAM,KAAK;AAAA,cACxB;AACI,qBAAO,KAAK;AAAA,YAChB;AARW;AAUT,iBAAK,sCAAsC,SAAS,OAAO;AACzD,kBAAI,KAAK,qBAAqB,KAAK,GAAG;AACpC,oBAAI,KAAK,MAAM;AACf,oBAAI,KAAK,qBAAqB,KAAK,GAAG;AACpC,sBAAI,KAAK,MAAM;AACf,sBAAI,MAAM,KAAK,KAAK,qBAAqB,KAAK,GAAG;AAC/C,0BAAM,eAAe,KAAK,KAAK,KAAK,IAAI,MAAM;AAAA,kBACxD,OAAe;AACL,0BAAM,eAAe,KAAK,IAAI;AAAA,kBACxC;AAAA,gBACA,OAAa;AACL,wBAAM,eAAe;AAAA,gBAC7B;AACM,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAEE,iBAAK,uBAAuB,SAAS,OAAO;AAC1C,kBAAI,KAAK,MAAM,QAAO;AACtB,kBAAI,aAAa,EAAE,GAAG;AACpB,sBAAM,eAAe,KAAK;AAC1B,sBAAM,QAAO;AACb,uBAAO;AAAA,cACb;AACI,oBAAM,eAAe;AACrB,qBAAO;AAAA,YACX;AACE,qBAAS,aAAa,IAAI;AACxB,qBAAO,MAAM,MAAS,MAAM;AAAA,YAChC;AAFW;AAIT,iBAAK,2BAA2B,SAAS,OAAO,QAAQ;AACtD,kBAAI,QAAQ,MAAM;AAClB,oBAAM,eAAe;AACrB,uBAAShB,KAAI,GAAGA,KAAI,QAAQ,EAAEA,IAAG;AAC/B,oBAAI,KAAK,MAAM,QAAO;AACtB,oBAAI,CAAC,WAAW,EAAE,GAAG;AACnB,wBAAM,MAAM;AACZ,yBAAO;AAAA,gBACf;AACM,sBAAM,eAAe,KAAK,MAAM,eAAe,SAAS,EAAE;AAC1D,sBAAM,QAAO;AAAA,cACnB;AACI,qBAAO;AAAA,YACX;AAGE,gBAAI,QAAQ,gCAASwB,OAAM,GAAG;AAC5B,mBAAK,OAAO,EAAE;AACd,mBAAK,QAAQ,EAAE;AACf,mBAAK,QAAQ,EAAE;AACf,mBAAK,MAAM,EAAE;AACb,kBAAI,EAAE,QAAQ,WACZ;AAAE,qBAAK,MAAM,IAAI,eAAe,GAAG,EAAE,UAAU,EAAE,MAAM;AAAA,cAAE;AAC3D,kBAAI,EAAE,QAAQ,QACZ;AAAE,qBAAK,QAAQ,CAAC,EAAE,OAAO,EAAE,GAAG;AAAA,cAAE;AAAA,YACtC,GATc;AAYZ,gBAAI,KAAK,OAAO;AAGhB,eAAG,OAAO,SAAS,+BAA+B;AAChD,kBAAI,CAAC,iCAAiC,KAAK,KAAK,WAAW,KAAK,aAC9D;AAAE,qBAAK,iBAAiB,KAAK,OAAO,gCAAgC,KAAK,KAAK,OAAO;AAAA,cAAE;AACzF,kBAAI,KAAK,QAAQ,SACf;AAAE,qBAAK,QAAQ,QAAQ,IAAI,MAAM,IAAI,CAAC;AAAA,cAAE;AAE1C,mBAAK,aAAa,KAAK;AACvB,mBAAK,eAAe,KAAK;AACzB,mBAAK,gBAAgB,KAAK;AAC1B,mBAAK,kBAAkB,KAAK;AAC5B,mBAAK,UAAS;AAAA,YAClB;AAEE,eAAG,WAAW,WAAW;AACvB,mBAAK,KAAI;AACT,qBAAO,IAAI,MAAM,IAAI;AAAA,YACzB;AAEE,gBAAI,OAAO,WAAW,aACpB;AAAE,iBAAG,OAAO,QAAQ,IAAI,WAAW;AACjC,oBAAI,WAAW;AAEf,uBAAO;AAAA,kBACL,MAAM,kCAAY;AAChB,wBAAI,QAAQ,SAAS,SAAQ;AAC7B,2BAAO;AAAA,sBACL,MAAM,MAAM,SAAS,QAAQ;AAAA,sBAC7B,OAAO;AAAA,oBACnB;AAAA,kBACA,GANc;AAAA,gBAOd;AAAA,cACA;AAAA,YAAM;AAIJ,eAAG,YAAY,WAAW;AACxB,kBAAI,aAAa,KAAK,WAAU;AAChC,kBAAI,CAAC,cAAc,CAAC,WAAW,eAAe;AAAE,qBAAK,UAAS;AAAA,cAAG;AAEjE,mBAAK,QAAQ,KAAK;AAClB,kBAAI,KAAK,QAAQ,WAAW;AAAE,qBAAK,WAAW,KAAK,YAAW;AAAA,cAAG;AACjE,kBAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAAE,uBAAO,KAAK,YAAY,QAAQ,GAAG;AAAA,cAAC;AAEzE,kBAAI,WAAW,UAAU;AAAE,uBAAO,WAAW,SAAS,IAAI;AAAA,cAAC,OACtD;AAAE,qBAAK,UAAU,KAAK,kBAAiB,CAAE;AAAA,cAAE;AAAA,YACpD;AAEE,eAAG,YAAY,SAAS,MAAM;AAC5B,kBAAI,kBAAkB,MAAM,KAAK,QAAQ,eAAe,CAAC,KAAK,SAAS,IACrE;AAAE,uBAAO,KAAK;cAAU;AAE1B,qBAAO,KAAK,iBAAiB,IAAI;AAAA,YACrC;AAEE,eAAG,oBAAoB,WAAW;AAChC,kBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,GAAG;AACzC,kBAAI,QAAQ,SAAU,QAAQ,OAAQ;AAAE,uBAAO;AAAA,cAAI;AACnD,kBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,qBAAO,QAAQ,SAAU,QAAQ,QAAS,QAAQ,QAAQ,MAAM,OAAO;AAAA,YAC3E;AAEE,eAAG,mBAAmB,WAAW;AAC/B,kBAAI,WAAW,KAAK,QAAQ,aAAa,KAAK,YAAW;AACzD,kBAAI,QAAQ,KAAK,KAAK,MAAM,KAAK,MAAM,QAAQ,MAAM,KAAK,OAAO,CAAC;AAClE,kBAAI,QAAQ,IAAI;AAAE,qBAAK,MAAM,KAAK,MAAM,GAAG,sBAAsB;AAAA,cAAE;AACnE,mBAAK,MAAM,MAAM;AACjB,kBAAI,KAAK,QAAQ,WAAW;AAC1B,yBAAS,YAAa,QAAS,MAAM,QAAQ,YAAY,cAAc,KAAK,OAAO,KAAK,KAAK,GAAG,KAAK,MAAK;AACxG,oBAAE,KAAK;AACP,wBAAM,KAAK,YAAY;AAAA,gBAC/B;AAAA,cACA;AACI,kBAAI,KAAK,QAAQ,WACf;AAAE,qBAAK,QAAQ;AAAA,kBAAU;AAAA,kBAAM,KAAK,MAAM,MAAM,QAAQ,GAAG,GAAG;AAAA,kBAAG;AAAA,kBAAO,KAAK;AAAA,kBACtD;AAAA,kBAAU,KAAK,YAAW;AAAA,gBAAE;AAAA,cAAE;AAAA,YAC3D;AAEE,eAAG,kBAAkB,SAAS,WAAW;AACvC,kBAAI,QAAQ,KAAK;AACjB,kBAAI,WAAW,KAAK,QAAQ,aAAa,KAAK,YAAW;AACzD,kBAAI,KAAK,KAAK,MAAM,WAAW,KAAK,OAAO,SAAS;AACpD,qBAAO,KAAK,MAAM,KAAK,MAAM,UAAU,CAAC,UAAU,EAAE,GAAG;AACrD,qBAAK,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG;AAAA,cAC3C;AACI,kBAAI,KAAK,QAAQ,WACf;AAAE,qBAAK,QAAQ;AAAA,kBAAU;AAAA,kBAAO,KAAK,MAAM,MAAM,QAAQ,WAAW,KAAK,GAAG;AAAA,kBAAG;AAAA,kBAAO,KAAK;AAAA,kBACpE;AAAA,kBAAU,KAAK,YAAW;AAAA,gBAAE;AAAA,cAAE;AAAA,YAC3D;AAGE,eAAG,YAAY,WAAW;AACxB,mBAAM,QAAO,KAAK,MAAM,KAAK,MAAM,QAAQ;AACzC,oBAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACvC,wBAAQ,IAAE;AAAA,kBACV,KAAK;AAAA,kBAAI,KAAK;AACZ,sBAAE,KAAK;AACP;AAAA,kBACF,KAAK;AACH,wBAAI,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,IAAI;AAC9C,wBAAE,KAAK;AAAA,oBACjB;AAAA,kBACM,KAAK;AAAA,kBAAI,KAAK;AAAA,kBAAM,KAAK;AACvB,sBAAE,KAAK;AACP,wBAAI,KAAK,QAAQ,WAAW;AAC1B,wBAAE,KAAK;AACP,2BAAK,YAAY,KAAK;AAAA,oBAChC;AACQ;AAAA,kBACF,KAAK;AACH,4BAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,GAAC;AAAA,sBAC3C,KAAK;AACH,6BAAK,iBAAgB;AACrB;AAAA,sBACF,KAAK;AACH,6BAAK,gBAAgB,CAAC;AACtB;AAAA,sBACF;AACE,8BAAM;AAAA,oBAChB;AACQ;AAAA,kBACF;AACE,wBAAI,KAAK,KAAK,KAAK,MAAM,MAAM,QAAQ,mBAAmB,KAAK,OAAO,aAAa,EAAE,CAAC,GAAG;AACvF,wBAAE,KAAK;AAAA,oBACjB,OAAe;AACL,4BAAM;AAAA,oBAChB;AAAA,gBACA;AAAA,cACA;AAAA,YACA;AAGE,eAAG,cAAc,SAAS,MAAM,KAAK;AACnC,mBAAK,MAAM,KAAK;AAChB,kBAAI,KAAK,QAAQ,WAAW;AAAE,qBAAK,SAAS,KAAK,YAAW;AAAA,cAAG;AAC/D,kBAAI,WAAW,KAAK;AACpB,mBAAK,OAAO;AACZ,mBAAK,QAAQ;AAEb,mBAAK,cAAc,QAAQ;AAAA,YAC/B;AAGE,eAAG,gBAAgB,WAAW;AAC5B,kBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,kBAAI,QAAQ,MAAM,QAAQ,IAAI;AAAE,uBAAO,KAAK,WAAW,IAAI;AAAA,cAAC;AAC5D,kBAAI,QAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC9C,kBAAI,KAAK,QAAQ,eAAe,KAAK,SAAS,MAAM,UAAU,IAAI;AAChE,qBAAK,OAAO;AACZ,uBAAO,KAAK,YAAY,QAAQ,QAAQ;AAAA,cAC9C,OAAW;AACL,kBAAE,KAAK;AACP,uBAAO,KAAK,YAAY,QAAQ,GAAG;AAAA,cACzC;AAAA,YACA;AAEE,eAAG,kBAAkB,WAAW;AAC9B,kBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,kBAAI,KAAK,aAAa;AAAE,kBAAE,KAAK;AAAK,uBAAO,KAAK;cAAY;AAC5D,kBAAI,SAAS,IAAI;AAAE,uBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,cAAC;AAC1D,qBAAO,KAAK,SAAS,QAAQ,OAAO,CAAC;AAAA,YACzC;AAEE,eAAG,4BAA4B,SAAS,MAAM;AAC5C,kBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,kBAAI,OAAO;AACX,kBAAI,YAAY,SAAS,KAAK,QAAQ,OAAO,QAAQ;AAErD,kBAAI,KAAK,QAAQ,eAAe,KAAK,SAAS,MAAM,SAAS,IAAI;AAC/D,kBAAE;AACF,4BAAY,QAAQ;AACpB,uBAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAAA,cAC/C;AAEI,kBAAI,SAAS,IAAI;AAAE,uBAAO,KAAK,SAAS,QAAQ,QAAQ,OAAO,CAAC;AAAA,cAAC;AACjE,qBAAO,KAAK,SAAS,WAAW,IAAI;AAAA,YACxC;AAEE,eAAG,qBAAqB,SAAS,MAAM;AACrC,kBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,kBAAI,SAAS,MAAM;AACjB,oBAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,sBAAI,QAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC9C,sBAAI,UAAU,IAAI;AAAE,2BAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,kBAAC;AAAA,gBACnE;AACM,uBAAO,KAAK,SAAS,SAAS,MAAM,QAAQ,YAAY,QAAQ,YAAY,CAAC;AAAA,cACnF;AACI,kBAAI,SAAS,IAAI;AAAE,uBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,cAAC;AAC1D,qBAAO,KAAK,SAAS,SAAS,MAAM,QAAQ,YAAY,QAAQ,YAAY,CAAC;AAAA,YACjF;AAEE,eAAG,kBAAkB,WAAW;AAC9B,kBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,kBAAI,SAAS,IAAI;AAAE,uBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,cAAC;AAC1D,qBAAO,KAAK,SAAS,QAAQ,YAAY,CAAC;AAAA,YAC9C;AAEE,eAAG,qBAAqB,SAAS,MAAM;AACrC,kBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,kBAAI,SAAS,MAAM;AACjB,oBAAI,SAAS,MAAM,CAAC,KAAK,YAAY,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,OACxE,KAAK,eAAe,KAAK,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,GAAG,CAAC,IAAI;AAC1F,uBAAK,gBAAgB,CAAC;AACtB,uBAAK,UAAS;AACd,yBAAO,KAAK,UAAS;AAAA,gBAC7B;AACM,uBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,cAC5C;AACI,kBAAI,SAAS,IAAI;AAAE,uBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,cAAC;AAC1D,qBAAO,KAAK,SAAS,QAAQ,SAAS,CAAC;AAAA,YAC3C;AAEE,eAAG,kBAAkB,SAAS,MAAM;AAClC,kBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,kBAAI,OAAO;AACX,kBAAI,SAAS,MAAM;AACjB,uBAAO,SAAS,MAAM,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,KAAK,IAAI;AACvE,oBAAI,KAAK,MAAM,WAAW,KAAK,MAAM,IAAI,MAAM,IAAI;AAAE,yBAAO,KAAK,SAAS,QAAQ,QAAQ,OAAO,CAAC;AAAA,gBAAC;AACnG,uBAAO,KAAK,SAAS,QAAQ,UAAU,IAAI;AAAA,cACjD;AACI,kBAAI,SAAS,MAAM,SAAS,MAAM,CAAC,KAAK,YAAY,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,MACxF,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,IAAI;AAC9C,qBAAK,gBAAgB,CAAC;AACtB,qBAAK,UAAS;AACd,uBAAO,KAAK,UAAS;AAAA,cAC3B;AACI,kBAAI,SAAS,IAAI;AAAE,uBAAO;AAAA,cAAE;AAC5B,qBAAO,KAAK,SAAS,QAAQ,YAAY,IAAI;AAAA,YACjD;AAEE,eAAG,oBAAoB,SAAS,MAAM;AACpC,kBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,kBAAI,SAAS,IAAI;AAAE,uBAAO,KAAK,SAAS,QAAQ,UAAU,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC;AAAA,cAAC;AAC7G,kBAAI,SAAS,MAAM,SAAS,MAAM,KAAK,QAAQ,eAAe,GAAG;AAC/D,qBAAK,OAAO;AACZ,uBAAO,KAAK,YAAY,QAAQ,KAAK;AAAA,cAC3C;AACI,qBAAO,KAAK,SAAS,SAAS,KAAK,QAAQ,KAAK,QAAQ,QAAQ,CAAC;AAAA,YACrE;AAEE,eAAG,qBAAqB,WAAW;AACjC,kBAAIT,eAAc,KAAK,QAAQ;AAC/B,kBAAIA,gBAAe,IAAI;AACrB,oBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,oBAAI,SAAS,IAAI;AACf,sBAAI,QAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC9C,sBAAI,QAAQ,MAAM,QAAQ,IAAI;AAAE,2BAAO,KAAK,SAAS,QAAQ,aAAa,CAAC;AAAA,kBAAC;AAAA,gBACpF;AACM,oBAAI,SAAS,IAAI;AACf,sBAAIA,gBAAe,IAAI;AACrB,wBAAI,UAAU,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAChD,wBAAI,YAAY,IAAI;AAAE,6BAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,oBAAC;AAAA,kBACvE;AACQ,yBAAO,KAAK,SAAS,QAAQ,UAAU,CAAC;AAAA,gBAChD;AAAA,cACA;AACI,qBAAO,KAAK,SAAS,QAAQ,UAAU,CAAC;AAAA,YAC5C;AAEE,eAAG,uBAAuB,WAAW;AACnC,kBAAIA,eAAc,KAAK,QAAQ;AAC/B,kBAAI,OAAO;AACX,kBAAIA,gBAAe,IAAI;AACrB,kBAAE,KAAK;AACP,uBAAO,KAAK,kBAAiB;AAC7B,oBAAI,kBAAkB,MAAM,IAAI,KAAK,SAAS,IAAK;AACjD,yBAAO,KAAK,YAAY,QAAQ,WAAW,KAAK,UAAS,CAAE;AAAA,gBACnE;AAAA,cACA;AAEI,mBAAK,MAAM,KAAK,KAAK,2BAA2B,kBAAkB,IAAI,IAAI,GAAG;AAAA,YACjF;AAEE,eAAG,mBAAmB,SAAS,MAAM;AACnC,sBAAQ,MAAI;AAAA,gBACZ,KAAK;AACH,yBAAO,KAAK,cAAa;AAAA,gBAE3B,KAAK;AAAI,oBAAE,KAAK;AAAK,yBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,gBAC3D,KAAK;AAAI,oBAAE,KAAK;AAAK,yBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,gBAC3D,KAAK;AAAI,oBAAE,KAAK;AAAK,yBAAO,KAAK,YAAY,QAAQ,IAAI;AAAA,gBACzD,KAAK;AAAI,oBAAE,KAAK;AAAK,yBAAO,KAAK,YAAY,QAAQ,KAAK;AAAA,gBAC1D,KAAK;AAAI,oBAAE,KAAK;AAAK,yBAAO,KAAK,YAAY,QAAQ,QAAQ;AAAA,gBAC7D,KAAK;AAAI,oBAAE,KAAK;AAAK,yBAAO,KAAK,YAAY,QAAQ,QAAQ;AAAA,gBAC7D,KAAK;AAAK,oBAAE,KAAK;AAAK,yBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,gBAC5D,KAAK;AAAK,oBAAE,KAAK;AAAK,yBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,gBAC5D,KAAK;AAAI,oBAAE,KAAK;AAAK,yBAAO,KAAK,YAAY,QAAQ,KAAK;AAAA,gBAE1D,KAAK;AACH,sBAAI,KAAK,QAAQ,cAAc,GAAG;AAAE;AAAA,kBAAK;AACzC,oBAAE,KAAK;AACP,yBAAO,KAAK,YAAY,QAAQ,SAAS;AAAA,gBAE3C,KAAK;AACH,sBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,sBAAI,SAAS,OAAO,SAAS,IAAI;AAAE,2BAAO,KAAK,gBAAgB,EAAE;AAAA,kBAAC;AAClE,sBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,wBAAI,SAAS,OAAO,SAAS,IAAI;AAAE,6BAAO,KAAK,gBAAgB,CAAC;AAAA,oBAAC;AACjE,wBAAI,SAAS,MAAM,SAAS,IAAI;AAAE,6BAAO,KAAK,gBAAgB,CAAC;AAAA,oBAAC;AAAA,kBACxE;AAAA,gBAEI,KAAK;AAAA,gBAAI,KAAK;AAAA,gBAAI,KAAK;AAAA,gBAAI,KAAK;AAAA,gBAAI,KAAK;AAAA,gBAAI,KAAK;AAAA,gBAAI,KAAK;AAAA,gBAAI,KAAK;AAAA,gBAAI,KAAK;AAC3E,yBAAO,KAAK,WAAW,KAAK;AAAA,gBAE9B,KAAK;AAAA,gBAAI,KAAK;AACZ,yBAAO,KAAK,WAAW,IAAI;AAAA,gBAE7B,KAAK;AACH,yBAAO,KAAK,gBAAe;AAAA,gBAE7B,KAAK;AAAA,gBAAI,KAAK;AACZ,yBAAO,KAAK,0BAA0B,IAAI;AAAA,gBAE5C,KAAK;AAAA,gBAAK,KAAK;AACb,yBAAO,KAAK,mBAAmB,IAAI;AAAA,gBAErC,KAAK;AACH,yBAAO,KAAK,gBAAe;AAAA,gBAE7B,KAAK;AAAA,gBAAI,KAAK;AACZ,yBAAO,KAAK,mBAAmB,IAAI;AAAA,gBAErC,KAAK;AAAA,gBAAI,KAAK;AACZ,yBAAO,KAAK,gBAAgB,IAAI;AAAA,gBAElC,KAAK;AAAA,gBAAI,KAAK;AACZ,yBAAO,KAAK,kBAAkB,IAAI;AAAA,gBAEpC,KAAK;AACH,yBAAO,KAAK,mBAAkB;AAAA,gBAEhC,KAAK;AACH,yBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,gBAExC,KAAK;AACH,yBAAO,KAAK,qBAAoB;AAAA,cACtC;AAEI,mBAAK,MAAM,KAAK,KAAK,2BAA2B,kBAAkB,IAAI,IAAI,GAAG;AAAA,YACjF;AAEE,eAAG,WAAW,SAAS,MAAM,MAAM;AACjC,kBAAI,MAAM,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,MAAM,IAAI;AACpD,mBAAK,OAAO;AACZ,qBAAO,KAAK,YAAY,MAAM,GAAG;AAAA,YACrC;AAEE,eAAG,aAAa,WAAW;AACzB,kBAAI,SAAS,SAAS,QAAQ,KAAK;AACnC,yBAAS;AACP,oBAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAAE,uBAAK,MAAM,OAAO,iCAAiC;AAAA,gBAAE;AAC1F,oBAAI,KAAK,KAAK,MAAM,OAAO,KAAK,GAAG;AACnC,oBAAI,UAAU,KAAK,EAAE,GAAG;AAAE,uBAAK,MAAM,OAAO,iCAAiC;AAAA,gBAAE;AAC/E,oBAAI,CAAC,SAAS;AACZ,sBAAI,OAAO,KAAK;AAAE,8BAAU;AAAA,kBAAK,WACxB,OAAO,OAAO,SAAS;AAAE,8BAAU;AAAA,kBAAM,WACzC,OAAO,OAAO,CAAC,SAAS;AAAE;AAAA,kBAAK;AACxC,4BAAU,OAAO;AAAA,gBACzB,OAAa;AAAE,4BAAU;AAAA,gBAAM;AACzB,kBAAE,KAAK;AAAA,cACb;AACI,kBAAI,UAAU,KAAK,MAAM,MAAM,OAAO,KAAK,GAAG;AAC9C,gBAAE,KAAK;AACP,kBAAI,aAAa,KAAK;AACtB,kBAAI,QAAQ,KAAK,UAAS;AAC1B,kBAAI,KAAK,aAAa;AAAE,qBAAK,WAAW,UAAU;AAAA,cAAE;AAEpD,kBAAI,QAAQ,KAAK,gBAAgB,KAAK,cAAc,IAAI,sBAAsB,IAAI;AAClF,oBAAM,MAAM,OAAO,SAAS,KAAK;AACjC,mBAAK,oBAAoB,KAAK;AAC9B,mBAAK,sBAAsB,KAAK;AAEhC,kBAAIC,SAAQ;AACZ,kBAAI;AACF,gBAAAA,SAAQ,IAAI,OAAO,SAAS,KAAK;AAAA,cACvC,SAAa,GAAG;AAAA,cAChB;AAEI,qBAAO,KAAK,YAAY,QAAQ,QAAQ,EAAC,SAAkB,OAAc,OAAOA,OAAK,CAAC;AAAA,YAC1F;AAGE,eAAG,UAAU,SAAS,OAAO,KAAK,gCAAgC;AAChE,kBAAI,kBAAkB,KAAK,QAAQ,eAAe,MAAM,QAAQ;AAEhE,kBAAI,8BAA8B,kCAAkC,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM;AAExG,kBAAI,QAAQ,KAAK,KAAK,QAAQ,GAAG,WAAW;AAC5C,uBAAShB,KAAI,GAAG,IAAI,OAAO,OAAO,WAAW,KAAKA,KAAI,GAAG,EAAEA,IAAG,EAAE,KAAK,KAAK;AACxE,oBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,GAAG,GAAG,MAAO;AAEnD,oBAAI,mBAAmB,SAAS,IAAI;AAClC,sBAAI,6BAA6B;AAAE,yBAAK,iBAAiB,KAAK,KAAK,mEAAmE;AAAA,kBAAE;AACxI,sBAAI,aAAa,IAAI;AAAE,yBAAK,iBAAiB,KAAK,KAAK,kDAAkD;AAAA,kBAAE;AAC3G,sBAAIA,OAAM,GAAG;AAAE,yBAAK,iBAAiB,KAAK,KAAK,yDAAyD;AAAA,kBAAE;AAC1G,6BAAW;AACX;AAAA,gBACR;AAEM,oBAAI,QAAQ,IAAI;AAAE,wBAAM,OAAO,KAAK;AAAA,gBAAG,WAC9B,QAAQ,IAAI;AAAE,wBAAM,OAAO,KAAK;AAAA,gBAAG,WACnC,QAAQ,MAAM,QAAQ,IAAI;AAAE,wBAAM,OAAO;AAAA,gBAAG,OAChD;AAAE,wBAAM;AAAA,gBAAS;AACtB,oBAAI,OAAO,OAAO;AAAE;AAAA,gBAAK;AACzB,2BAAW;AACX,wBAAQ,QAAQ,QAAQ;AAAA,cAC9B;AAEI,kBAAI,mBAAmB,aAAa,IAAI;AAAE,qBAAK,iBAAiB,KAAK,MAAM,GAAG,wDAAwD;AAAA,cAAE;AACxI,kBAAI,KAAK,QAAQ,SAAS,OAAO,QAAQ,KAAK,MAAM,UAAU,KAAK;AAAE,uBAAO;AAAA,cAAI;AAEhF,qBAAO;AAAA,YACX;AAEE,qBAAS,eAAe,KAAK,6BAA6B;AACxD,kBAAI,6BAA6B;AAC/B,uBAAO,SAAS,KAAK,CAAC;AAAA,cAC5B;AAEI,qBAAO,WAAW,IAAI,QAAQ,MAAM,EAAE,CAAC;AAAA,YAC3C;AANW;AAQT,qBAAS,eAAe,KAAK;AAC3B,kBAAI,OAAO,WAAW,YAAY;AAChC,uBAAO;AAAA,cACb;AAEI,qBAAO,OAAO,IAAI,QAAQ,MAAM,EAAE,CAAC;AAAA,YACvC;AANW;AAQT,eAAG,kBAAkB,SAAS,OAAO;AACnC,kBAAI,QAAQ,KAAK;AACjB,mBAAK,OAAO;AACZ,kBAAI,MAAM,KAAK,QAAQ,KAAK;AAC5B,kBAAI,OAAO,MAAM;AAAE,qBAAK,MAAM,KAAK,QAAQ,GAAG,8BAA8B,KAAK;AAAA,cAAE;AACnF,kBAAI,KAAK,QAAQ,eAAe,MAAM,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM,KAAK;AAC7E,sBAAM,eAAe,KAAK,MAAM,MAAM,OAAO,KAAK,GAAG,CAAC;AACtD,kBAAE,KAAK;AAAA,cACb,WAAe,kBAAkB,KAAK,kBAAiB,CAAE,GAAG;AAAE,qBAAK,MAAM,KAAK,KAAK,kCAAkC;AAAA,cAAE;AACnH,qBAAO,KAAK,YAAY,QAAQ,KAAK,GAAG;AAAA,YAC5C;AAGE,eAAG,aAAa,SAAS,eAAe;AACtC,kBAAI,QAAQ,KAAK;AACjB,kBAAI,CAAC,iBAAiB,KAAK,QAAQ,IAAI,QAAW,IAAI,MAAM,MAAM;AAAE,qBAAK,MAAM,OAAO,gBAAgB;AAAA,cAAE;AACxG,kBAAI,QAAQ,KAAK,MAAM,SAAS,KAAK,KAAK,MAAM,WAAW,KAAK,MAAM;AACtE,kBAAI,SAAS,KAAK,QAAQ;AAAE,qBAAK,MAAM,OAAO,gBAAgB;AAAA,cAAE;AAChE,kBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,GAAG;AACzC,kBAAI,CAAC,SAAS,CAAC,iBAAiB,KAAK,QAAQ,eAAe,MAAM,SAAS,KAAK;AAC9E,oBAAI,QAAQ,eAAe,KAAK,MAAM,MAAM,OAAO,KAAK,GAAG,CAAC;AAC5D,kBAAE,KAAK;AACP,oBAAI,kBAAkB,KAAK,kBAAiB,CAAE,GAAG;AAAE,uBAAK,MAAM,KAAK,KAAK,kCAAkC;AAAA,gBAAE;AAC5G,uBAAO,KAAK,YAAY,QAAQ,KAAK,KAAK;AAAA,cAChD;AACI,kBAAI,SAAS,OAAO,KAAK,KAAK,MAAM,MAAM,OAAO,KAAK,GAAG,CAAC,GAAG;AAAE,wBAAQ;AAAA,cAAM;AAC7E,kBAAI,SAAS,MAAM,CAAC,OAAO;AACzB,kBAAE,KAAK;AACP,qBAAK,QAAQ,EAAE;AACf,uBAAO,KAAK,MAAM,WAAW,KAAK,GAAG;AAAA,cAC3C;AACI,mBAAK,SAAS,MAAM,SAAS,QAAQ,CAAC,OAAO;AAC3C,uBAAO,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG;AACvC,oBAAI,SAAS,MAAM,SAAS,IAAI;AAAE,oBAAE,KAAK;AAAA,gBAAI;AAC7C,oBAAI,KAAK,QAAQ,EAAE,MAAM,MAAM;AAAE,uBAAK,MAAM,OAAO,gBAAgB;AAAA,gBAAE;AAAA,cAC3E;AACI,kBAAI,kBAAkB,KAAK,kBAAiB,CAAE,GAAG;AAAE,qBAAK,MAAM,KAAK,KAAK,kCAAkC;AAAA,cAAE;AAE5G,kBAAI,MAAM,eAAe,KAAK,MAAM,MAAM,OAAO,KAAK,GAAG,GAAG,KAAK;AACjE,qBAAO,KAAK,YAAY,QAAQ,KAAK,GAAG;AAAA,YAC5C;AAGE,eAAG,gBAAgB,WAAW;AAC5B,kBAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG,GAAG;AAE1C,kBAAI,OAAO,KAAK;AACd,oBAAI,KAAK,QAAQ,cAAc,GAAG;AAAE,uBAAK,WAAU;AAAA,gBAAG;AACtD,oBAAI,UAAU,EAAE,KAAK;AACrB,uBAAO,KAAK,YAAY,KAAK,MAAM,QAAQ,KAAK,KAAK,GAAG,IAAI,KAAK,GAAG;AACpE,kBAAE,KAAK;AACP,oBAAI,OAAO,SAAU;AAAE,uBAAK,mBAAmB,SAAS,0BAA0B;AAAA,gBAAE;AAAA,cAC1F,OAAW;AACL,uBAAO,KAAK,YAAY,CAAC;AAAA,cAC/B;AACI,qBAAO;AAAA,YACX;AAEE,eAAG,aAAa,SAAS,OAAO;AAC9B,kBAAI,MAAM,IAAI,aAAa,EAAE,KAAK;AAClC,yBAAS;AACP,oBAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAAE,uBAAK,MAAM,KAAK,OAAO,8BAA8B;AAAA,gBAAE;AAC5F,oBAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACvC,oBAAI,OAAO,OAAO;AAAE;AAAA,gBAAK;AACzB,oBAAI,OAAO,IAAI;AACb,yBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,yBAAO,KAAK,gBAAgB,KAAK;AACjC,+BAAa,KAAK;AAAA,gBAC1B,WAAiB,OAAO,QAAU,OAAO,MAAQ;AACzC,sBAAI,KAAK,QAAQ,cAAc,IAAI;AAAE,yBAAK,MAAM,KAAK,OAAO,8BAA8B;AAAA,kBAAE;AAC5F,oBAAE,KAAK;AACP,sBAAI,KAAK,QAAQ,WAAW;AAC1B,yBAAK;AACL,yBAAK,YAAY,KAAK;AAAA,kBAChC;AAAA,gBACA,OAAa;AACL,sBAAI,UAAU,EAAE,GAAG;AAAE,yBAAK,MAAM,KAAK,OAAO,8BAA8B;AAAA,kBAAE;AAC5E,oBAAE,KAAK;AAAA,gBACf;AAAA,cACA;AACI,qBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,KAAK;AAC9C,qBAAO,KAAK,YAAY,QAAQ,QAAQ,GAAG;AAAA,YAC/C;AAGE,gBAAI,gCAAgC,CAAA;AAEpC,eAAG,uBAAuB,WAAW;AACnC,mBAAK,oBAAoB;AACzB,kBAAI;AACF,qBAAK,cAAa;AAAA,cACxB,SAAa,KAAK;AACZ,oBAAI,QAAQ,+BAA+B;AACzC,uBAAK,yBAAwB;AAAA,gBACrC,OAAa;AACL,wBAAM;AAAA,gBACd;AAAA,cACA;AAEI,mBAAK,oBAAoB;AAAA,YAC7B;AAEE,eAAG,qBAAqB,SAAS,UAAU,SAAS;AAClD,kBAAI,KAAK,qBAAqB,KAAK,QAAQ,eAAe,GAAG;AAC3D,sBAAM;AAAA,cACZ,OAAW;AACL,qBAAK,MAAM,UAAU,OAAO;AAAA,cAClC;AAAA,YACA;AAEE,eAAG,gBAAgB,WAAW;AAC5B,kBAAI,MAAM,IAAI,aAAa,KAAK;AAChC,yBAAS;AACP,oBAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAAE,uBAAK,MAAM,KAAK,OAAO,uBAAuB;AAAA,gBAAE;AACrF,oBAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACvC,oBAAI,OAAO,MAAM,OAAO,MAAM,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,KAAK;AACzE,sBAAI,KAAK,QAAQ,KAAK,UAAU,KAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,QAAQ,kBAAkB;AACxG,wBAAI,OAAO,IAAI;AACb,2BAAK,OAAO;AACZ,6BAAO,KAAK,YAAY,QAAQ,YAAY;AAAA,oBACxD,OAAiB;AACL,wBAAE,KAAK;AACP,6BAAO,KAAK,YAAY,QAAQ,SAAS;AAAA,oBACrD;AAAA,kBACA;AACQ,yBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,yBAAO,KAAK,YAAY,QAAQ,UAAU,GAAG;AAAA,gBACrD;AACM,oBAAI,OAAO,IAAI;AACb,yBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,yBAAO,KAAK,gBAAgB,IAAI;AAChC,+BAAa,KAAK;AAAA,gBAC1B,WAAiB,UAAU,EAAE,GAAG;AACxB,yBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,oBAAE,KAAK;AACP,0BAAQ,IAAE;AAAA,oBACV,KAAK;AACH,0BAAI,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM,IAAI;AAAE,0BAAE,KAAK;AAAA,sBAAI;AAAA,oBAC3D,KAAK;AACH,6BAAO;AACP;AAAA,oBACF;AACE,6BAAO,OAAO,aAAa,EAAE;AAC7B;AAAA,kBACV;AACQ,sBAAI,KAAK,QAAQ,WAAW;AAC1B,sBAAE,KAAK;AACP,yBAAK,YAAY,KAAK;AAAA,kBAChC;AACQ,+BAAa,KAAK;AAAA,gBAC1B,OAAa;AACL,oBAAE,KAAK;AAAA,gBACf;AAAA,cACA;AAAA,YACA;AAEE,eAAG,2BAA2B,WAAW;AACvC,qBAAO,KAAK,MAAM,KAAK,MAAM,QAAQ,KAAK,OAAO;AAC/C,wBAAQ,KAAK,MAAM,KAAK,GAAG,GAAC;AAAA,kBAC5B,KAAK;AACH,sBAAE,KAAK;AACP;AAAA,kBAEF,KAAK;AACH,wBAAI,KAAK,MAAM,KAAK,MAAM,CAAC,MAAM,KAAK;AAAE;AAAA,oBAAK;AAAA,kBAC/C,KAAK;AACH,2BAAO,KAAK,YAAY,QAAQ,iBAAiB,KAAK,MAAM,MAAM,KAAK,OAAO,KAAK,GAAG,CAAC;AAAA,kBAEzF,KAAK;AACH,wBAAI,KAAK,MAAM,KAAK,MAAM,CAAC,MAAM,MAAM;AAAE,wBAAE,KAAK;AAAA,oBAAI;AAAA,kBACtD,KAAK;AAAA,kBAAM,KAAK;AAAA,kBAAU,KAAK;AAC7B,sBAAE,KAAK;AACP,yBAAK,YAAY,KAAK,MAAM;AAC5B;AAAA,gBACR;AAAA,cACA;AACI,mBAAK,MAAM,KAAK,OAAO,uBAAuB;AAAA,YAClD;AAGE,eAAG,kBAAkB,SAAS,YAAY;AACxC,kBAAI,KAAK,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG;AACzC,gBAAE,KAAK;AACP,sBAAQ,IAAE;AAAA,gBACV,KAAK;AAAK,yBAAO;AAAA,gBACjB,KAAK;AAAK,yBAAO;AAAA,gBACjB,KAAK;AAAK,yBAAO,OAAO,aAAa,KAAK,YAAY,CAAC,CAAC;AAAA,gBACxD,KAAK;AAAK,yBAAO,kBAAkB,KAAK,cAAa,CAAE;AAAA,gBACvD,KAAK;AAAK,yBAAO;AAAA,gBACjB,KAAK;AAAI,yBAAO;AAAA,gBAChB,KAAK;AAAK,yBAAO;AAAA,gBACjB,KAAK;AAAK,yBAAO;AAAA,gBACjB,KAAK;AAAI,sBAAI,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM,IAAI;AAAE,sBAAE,KAAK;AAAA,kBAAI;AAAA,gBAClE,KAAK;AACH,sBAAI,KAAK,QAAQ,WAAW;AAAE,yBAAK,YAAY,KAAK;AAAK,sBAAE,KAAK;AAAA,kBAAQ;AACxE,yBAAO;AAAA,gBACT,KAAK;AAAA,gBACL,KAAK;AACH,sBAAI,KAAK,QAAQ;AACf,yBAAK;AAAA,sBACH,KAAK,MAAM;AAAA,sBACX;AAAA;kBAEV;AACM,sBAAI,YAAY;AACd,wBAAI,UAAU,KAAK,MAAM;AAEzB,yBAAK;AAAA,sBACH;AAAA,sBACA;AAAA;kBAEV;AAAA,gBACI;AACE,sBAAI,MAAM,MAAM,MAAM,IAAI;AACxB,wBAAI,WAAW,KAAK,MAAM,OAAO,KAAK,MAAM,GAAG,CAAC,EAAE,MAAM,SAAS,EAAE,CAAC;AACpE,wBAAI,QAAQ,SAAS,UAAU,CAAC;AAChC,wBAAI,QAAQ,KAAK;AACf,iCAAW,SAAS,MAAM,GAAG,EAAE;AAC/B,8BAAQ,SAAS,UAAU,CAAC;AAAA,oBACtC;AACQ,yBAAK,OAAO,SAAS,SAAS;AAC9B,yBAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACnC,yBAAK,aAAa,OAAO,OAAO,MAAM,OAAO,QAAQ,KAAK,UAAU,aAAa;AAC/E,2BAAK;AAAA,wBACH,KAAK,MAAM,IAAI,SAAS;AAAA,wBACxB,aACI,qCACA;AAAA;oBAEhB;AACQ,2BAAO,OAAO,aAAa,KAAK;AAAA,kBACxC;AACM,sBAAI,UAAU,EAAE,GAAG;AACjB,wBAAI,KAAK,QAAQ,WAAW;AAAE,2BAAK,YAAY,KAAK;AAAK,wBAAE,KAAK;AAAA,oBAAQ;AACxE,2BAAO;AAAA,kBACf;AACM,yBAAO,OAAO,aAAa,EAAE;AAAA,cACnC;AAAA,YACA;AAGE,eAAG,cAAc,SAAS,KAAK;AAC7B,kBAAI,UAAU,KAAK;AACnB,kBAAI,IAAI,KAAK,QAAQ,IAAI,GAAG;AAC5B,kBAAI,MAAM,MAAM;AAAE,qBAAK,mBAAmB,SAAS,+BAA+B;AAAA,cAAE;AACpF,qBAAO;AAAA,YACX;AAGE,eAAG,YAAY,WAAW;AACxB,mBAAK,cAAc;AACnB,kBAAI,OAAO,IAAI,QAAQ,MAAM,aAAa,KAAK;AAC/C,kBAAI,SAAS,KAAK,QAAQ,eAAe;AACzC,qBAAO,KAAK,MAAM,KAAK,MAAM,QAAQ;AACnC,oBAAI,KAAK,KAAK,kBAAiB;AAC/B,oBAAI,iBAAiB,IAAI,MAAM,GAAG;AAChC,uBAAK,OAAO,MAAM,QAAS,IAAI;AAAA,gBACvC,WAAiB,OAAO,IAAI;AACpB,uBAAK,cAAc;AACnB,0BAAQ,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC7C,sBAAI,WAAW,KAAK;AACpB,sBAAI,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG,MAAM,KACxC;AAAE,yBAAK,mBAAmB,KAAK,KAAK,2CAA2C;AAAA,kBAAE;AACnF,oBAAE,KAAK;AACP,sBAAI,MAAM,KAAK,cAAa;AAC5B,sBAAI,EAAE,QAAQ,oBAAoB,kBAAkB,KAAK,MAAM,GAC7D;AAAE,yBAAK,mBAAmB,UAAU,wBAAwB;AAAA,kBAAE;AAChE,0BAAQ,kBAAkB,GAAG;AAC7B,+BAAa,KAAK;AAAA,gBAC1B,OAAa;AACL;AAAA,gBACR;AACM,wBAAQ;AAAA,cACd;AACI,qBAAO,OAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAAA,YACvD;AAGE,eAAG,WAAW,WAAW;AACvB,kBAAI,OAAO,KAAK,UAAS;AACzB,kBAAI,OAAO,QAAQ;AACnB,kBAAI,KAAK,SAAS,KAAK,IAAI,GAAG;AAC5B,uBAAO,SAAS,IAAI;AAAA,cAC1B;AACI,qBAAO,KAAK,YAAY,MAAM,IAAI;AAAA,YACtC;AAIE,gBAAI,UAAU;AAEd,mBAAO,QAAQ;AAAA,cACb;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,UAAU;AAAA,cACV,cAAc;AAAA,cACd;AAAA,cACA,aAAa;AAAA,cACb;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAIF,qBAAS,MAAM,OAAO,SAAS;AAC7B,qBAAO,OAAO,MAAM,OAAO,OAAO;AAAA,YACtC;AAFW;AAKT,qBAAS,kBAAkB,OAAO,KAAK,SAAS;AAC9C,qBAAO,OAAO,kBAAkB,OAAO,KAAK,OAAO;AAAA,YACvD;AAFW;AAKT,qBAAS,UAAU,OAAO,SAAS;AACjC,qBAAO,OAAO,UAAU,OAAO,OAAO;AAAA,YAC1C;AAFW;AAIT,YAAAD,SAAQ,OAAO;AACf,YAAAA,SAAQ,SAAS;AACjB,YAAAA,SAAQ,WAAW;AACnB,YAAAA,SAAQ,iBAAiB;AACzB,YAAAA,SAAQ,aAAa;AACrB,YAAAA,SAAQ,QAAQ;AAChB,YAAAA,SAAQ,YAAY;AACpB,YAAAA,SAAQ,iBAAiB;AACzB,YAAAA,SAAQ,cAAc;AACtB,YAAAA,SAAQ,mBAAmB;AAC3B,YAAAA,SAAQ,oBAAoB;AAC5B,YAAAA,SAAQ,YAAY;AACpB,YAAAA,SAAQ,eAAe;AACvB,YAAAA,SAAQ,YAAY;AACpB,YAAAA,SAAQ,aAAa;AACrB,YAAAA,SAAQ,qBAAqB;AAC7B,YAAAA,SAAQ,QAAQ;AAChB,YAAAA,SAAQ,oBAAoB;AAC5B,YAAAA,SAAQ,cAAc;AACtB,YAAAA,SAAQ,WAAW;AACnB,YAAAA,SAAQ,YAAY;AACpB,YAAAA,SAAQ,UAAU;AAAA,UAEpB,EAAC;AAAA,QAED,GAAE,CAAA,CAAE,GAAE,GAAE,CAAC,SAASE,UAAQL,SAAOG,UAAQ;AAAA,QAEzC,GAAE,CAAA,CAAE,GAAE,GAAE,CAAC,SAASE,UAAQL,SAAOG,UAAQ;AACzC,mBAAS,UAAU,IAAI,UAAU,IAAI;AACnC,kBAAM;AAAA,cACJ,cAAc;AAAA,cACd;AAAA,cACA;AAAA,cACA;AAAA,cACA,YAAY,CAAA;AAAA,cACZ,YAAY,CAAA;AAAA,cACZ;AAAA,cACA;AAAA,YACJ,IAAM;AACJ,kBAAM,QAAQ,IAAI,MAAM,IAAI,EAAE,KAAK,QAAQ;AAC3C,kBAAM,mBAAmB,CAAA;AACzB,kBAAM,cAAc,CAAA;AACpB,gBAAI,aAAa;AACjB,gBAAI,SAAS;AACb,gBAAI;AACJ,mBAAO;AACP,qBAAS,OAAO,KAAK,UAAU;AAC7B,sBAAQ,UAAQ;AAAA,gBACd,KAAK;AAAc,yBAAO;AAAA,gBAC1B,KAAK;AAAmB,yBAAO;AAAA,gBAC/B,KAAK;AAA6B,yBAAO;AAAA,gBACzC,KAAK;AAAkB,yBAAO;AAAA,gBAC9B,KAAK;AAAS,yBAAO;AAAA,gBACrB,KAAK;AAAa,yBAAO;AAAA,gBACzB,KAAK;AAAY,yBAAO;AAAA,gBACxB,KAAK;AAA0B,yBAAO;AAAA,cAC5C;AACI,kBAAI,OAAO,GAAG,QAAQ,MAAM,YAAY;AACtC,uBAAO,WAAW;AAChB,0BAAQ,UAAQ;AAAA,oBACd,KAAK;AACH,0BAAI,eAAe;AACjB,kCAAU,KAAK,GAAG,MAAM,OAAO,WAAW,mBAAmB,WAAW,kCAAkC;AAAA,sBACxH,OAAmB;AACL,kCAAU,KAAK,GAAG,MAAM,GAAG,WAAW,cAAc;AAAA,sBAClE;AACY,6BAAO,GAAG,SAAQ;AAAA,oBACpB,KAAK,gBAAgB;AACnB,4BAAM,eAAe,GAAG,WAAW,YAAY,iBAAiB,MAAM;AACtE,gCAAU,KAAK,GAAG,MAAM,SAAS,YAAY,MAAM,WAAW,kBAAkB,UAAU,CAAC,CAAC,KAAK;AACjG,4BAAM,YAAY,GAAG,aAAa,UAAU,CAAC,CAAC;AAC9C,0BAAI,aAAa,OAAO,cAAc,UAAU;AAC9C,8BAAM,kBAAkB,mBAAmB,WAAW;AAAA,0BACpD;AAAA,0BACA;AAAA,0BACA;AAAA,0BACA,aAAa;AAAA,0BACb;AAAA,0BACA;AAAA,0BACA;AAAA,0BACA;AAAA,wBAChB,CAAe;AACD,yCAAiB,KAAK,eAAe;AACrC,+BAAO;AAAA,sBACrB,OAAmB;AACL,yCAAiB,KAAK,IAAI;AAAA,sBACxC;AACY,6BAAO;AAAA,oBACnB;AAAA,oBACU,KAAK;AACH,4BAAM,IAAI,iBAAiB,QAAQ,UAAU,CAAC,CAAC;AAC/C,0BAAI;AACJ,0BAAI,MAAM,IAAI;AACZ,8BAAM,eAAe,gBAAgB,UAAU,CAAC,CAAC;AACjD,4BAAI,cAAc;AAChB,+CAAqB;AACrB,oCAAU,KAAK,GAAG,MAAM,GAAG,YAAY,EAAE;AAAA,wBACzD,OAAqB;AACL,+CAAqB,GAAG,WAAW,WAAW,iBAAiB,MAAM;AACrE,2CAAiB,KAAK,UAAU,CAAC,CAAC;AAClC,oCAAU,KAAK,GAAG,MAAM,SAAS,kBAAkB,UAAU,UAAU,CAAC,EAAE,YAAY,IAAI,IAAI,UAAU,CAAC,EAAE,MAAM,IAAI;AAAA,wBACrI;AAAA,sBACA,OAAmB;AACL,6CAAqB,GAAG,WAAW,WAAW,CAAC;AAAA,sBAC7D;AACY,+CAAyB;AACzB,4BAAM,oBAAoB;AAAA,wBACxB,UAAU,CAAC;AAAA,wBACX,UAAU,CAAC;AAAA,wBACX,UAAU,CAAC;AAAA,wBACX,UAAU,CAAC;AAAA,wBACX,UAAU,UAAU,CAAC,CAAC;AAAA,wBACtB,UAAU,UAAU,CAAC,CAAC;AAAA,wBACtB;AAAA;AAEF,gCAAU,KAAK,GAAG,MAAM,GAAG,WAAW,eAAe,kBAAkB,KAAK,IAAI,CAAC,IAAI;AACrF,0BAAI,gBAAgB;AAClB,iCAAS,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC;AAAA,sBACjD;AACY,0BAAI,cAAc;AAChB,qCAAa,oBAAoB,iBAAiB;AAAA,sBAChE;AACY,6BAAO,GAAG,WAAW,MAAM,IAAI,SAAS;AAAA,oBAC1C,KAAK;AACH,gCAAU,KAAK,GAAG,MAAM,GAAG,WAAW,iBAAiB,kBAAkB,UAAU,CAAC,GAAG,EAAE,aAAa,kBAAkB,WAAW,aAAa,WAAW,6BAA4B,EAAI,KAAK;AAChM,6BAAO,GAAG,YAAY,UAAU,CAAC,CAAC;AAAA,kBAC9C;AACQ,sBAAI,SAAS,GAAG,QAAQ,EAAE,MAAM,IAAI,SAAS;AAC7C,0BAAQ,OAAO,QAAM;AAAA,oBACnB,KAAK;AACH,gCAAU,KAAK,GAAG,MAAM,GAAG,mBAAmB,UAAU,SAAS,CAAC,GAAG;AACrE;AAAA,oBACF,KAAK;AAAA,oBACL,KAAK;AACH,0BAAI,0BAA0B,iBAAiB,QAAQ,mBAAmB,MAAM,CAAC,MAAM,IAAI;AACzF,kCAAU,KAAK,GAAG,MAAM,SAAS,WAAW,WAAW,iBAAiB,MAAM,MAAM,mBAAmB,UAAU,SAAS,CAAC,GAAG;AAC9H,yCAAiB,KAAK,SAAS,mBAAmB,MAAM,CAAC;AACzD;AAAA,sBACd;AAAA,oBACU;AACE,0BAAI,WAAW,MAAM;AACnB,kCAAU,KAAK,GAAG,mBAAmB,UAAU,SAAS,CAAC,GAAG;AAAA,sBAC1E,OAAmB;AACL,kCAAU,KAAK,GAAG,MAAM,SAAS,WAAW,WAAW,iBAAiB,MAAM,MAAM,mBAAmB,UAAU,SAAS,CAAC,GAAG;AAAA,sBAC5I;AAEY,uCAAiB,KAAK,MAAM;AAAA,kBACxC;AACQ,yBAAO;AAAA,gBACf;AAAA,cACA;AACI,0BAAY,GAAG,QAAQ,CAAC,IAAI;AAC5B,qBAAO,GAAG,QAAQ;AAAA,YACtB;AA3GW;AA4GT,qBAAS,WAAW;AAClB,qBAAO,UAAU,KAAK,IAAI;AAAA,YAC9B;AAFW;AAGT,qBAAS,QAAQ;AACf,qBAAO,UAAU,SAAS,GAAG;AAC3B,0BAAU,IAAG;AAAA,cACnB;AAAA,YACA;AAJW;AAKT,qBAAS,eAAeM,OAAMW,QAAO;AACnC,wBAAUX,KAAI,IAAIW;AAAA,YACtB;AAFW;AAGT,qBAAS,UAAUA,QAAO;AACxB,oBAAMX,QAAO,YAAYW,MAAK;AAC9B,kBAAIX,OAAM;AACR,uBAAO,cAAc,MAAMA;AAAA,cACjC;AACI,qBAAOW;AAAA,YACX;AANW;AAOT,qBAAS,UAAU,QAAQ;AACzB,uBAAS,IAAI,OAAO,MAAM;AAAA,YAC9B;AAFW;AAGT,qBAAS,YAAYA,QAAO,QAAQ;AAClC,oBAAM,eAAe,GAAG,WAAW,WAAW,iBAAiB,MAAM;AACrE,wBAAU,KAAK,GAAG,MAAM,SAAS,YAAY,MAAM,MAAM,GAAG;AAC5D,+BAAiB,KAAKA,MAAK;AAC3B,qBAAO;AAAA,YACX;AALW;AAMT,qBAAS,SAAS,OAAO,QAAQ;AAC/B,oBAAM,iBAAiB,GAAG,WAAW,WAAW,iBAAiB,MAAM;AACvE,oBAAM,gBAAgB,aAAa,UAAU;AAC7C,wBAAU,KAAK,GAAG,MAAM,OAAO,aAAa,eAAe,cAAc,aAAa,KAAK,UAAU,MAAM,0BAA0B;AACrI,wBAAU,KAAK,GAAG,MAAM,uBAAuB,aAAa,oBAAoB;AAChF,wBAAU,KAAK,GAAG,MAAM,KAAK,aAAa,OAAO,cAAc,eAAe,cAAc,mBAAmB,cAAc,gBAAgB;AAC7I,wBAAU,KAAK,GAAG,MAAM,GAAG;AAC3B,wBAAU,KAAK,GAAG,MAAM,uCAAuC;AAC/D,wBAAU,KAAK,GAAG,MAAM,oCAAoC,cAAc,UAAU,aAAa,IAAI;AACrG,wBAAU,KAAK,GAAG,MAAM,GAAG;AAC3B;AAAA,YACJ;AAXW;AAYT,qBAAS,WAAWA,QAAO;AACzB,wBAAU,KAAK,GAAG,MAAM,MAAMA,MAAK,EAAE;AAAA,YACzC;AAFW;AAGT,qBAAS,kBAAkB;AACzB,wBAAU,KAAK,GAAG,MAAM;AAAA,EAC1B,MAAM,iBAAiB,WAAW;AAAA,EAClC,MAAM,iBAAiB,WAAW;AAAA,EAClC,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM,WAAW,WAAW;AAAA,EAC5B,MAAM,0BAA0B,WAAW;AAAA,EAC3C,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM,OAAO;AAAA,YACf;AAbW;AAcT,qBAAS,mBAAmB,QAAQ,MAAM;AACxC,qBAAO,GAAG,WAAW,IAAI,MAAM,IAAI,kBAAkB,MAAM,EAAE,aAAa,kBAAkB,WAAW,aAAa,WAAW,6BAA4B,CAAE,CAAC;AAAA,YAClK;AAFW;AAIT,qBAAS,gBAAgBA,QAAO;AAC9B,kBAAI,WAAW;AACb,2BAAWX,SAAQ,WAAW;AAC5B,sBAAI,UAAUA,KAAI,MAAMW,QAAO;AAC7B,2BAAOX;AAAA,kBACjB;AAAA,gBACA;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AATW;AAWT,qBAAS,uBAAuBW,QAAO;AACrC,oBAAM,IAAI,iBAAiB,QAAQA,MAAK;AACxC,kBAAI,MAAM,IAAI;AACZ,uBAAO,GAAG,WAAW,WAAW,CAAC;AAAA,cACvC;AACI,qBAAO;AAAA,YACX;AANW;AAAA,UAOX;AA5MS;AA8MT,mBAAS,mBAAmB,WAAW,SAAS;AAC9C,kBAAM,QAAQ,IAAI,MAAM,WAAW,EAAE,KAAK,QAAQ;AAClD,kBAAM,uBAAuB,CAAA;AAC7B,kBAAM;AAAA,cACJ;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACJ,IAAM;AACJ,mBAAO;AACP,qBAAS,OAAO,KAAK,UAAU;AAC7B,kBAAI,OAAO,IAAI,QAAQ,MAAM,YAAY;AACvC,uBAAO,WAAW;AAChB,0BAAQ,UAAQ;AAAA,oBACd,KAAK;AACH,gCAAU,KAAK,GAAG,MAAM,GAAG,WAAW,sBAAsB,kBAAkB,UAAU,CAAC,GAAG,EAAE,aAAa,kBAAkB,WAAW,oBAAoB,aAAa,WAAW,6BAA4B,CAAE,CAAC,KAAK;AACxN,6BAAO,UAAU,iBAAiB,UAAU,CAAC,CAAC;AAAA,kBAC1D;AACQ,sBAAI,SAAS,UAAU,QAAQ,EAAE,MAAM,WAAW,SAAS;AAC3D,0BAAQ,OAAO,QAAM;AAAA,oBACnB,KAAK;AACH,gCAAU,KAAK,GAAG,MAAM,GAAG,mBAAmB,UAAU,SAAS,CAAC,GAAG;AACrE;AAAA,oBACF,KAAK;AAAA,oBACL,KAAK;AACH,0BAAI,0BAA0B,iBAAiB,QAAQ,mBAAmB,MAAM,CAAC,MAAM,IAAI;AACzF,kCAAU,KAAK,GAAG,MAAM,SAAS,WAAW,WAAW,iBAAiB,MAAM,MAAM,mBAAmB,UAAU,SAAS,CAAC,GAAG;AAC9H,yCAAiB,KAAK,SAAS,mBAAmB,MAAM,CAAC;AAAA,sBACvE,OAAmB;AACL,kCAAU,KAAK,GAAG,MAAM,SAAS,WAAW,WAAW,iBAAiB,MAAM,MAAM,mBAAmB,UAAU,SAAS,CAAC,GAAG;AAC9H,yCAAiB,KAAK,MAAM;AAAA,sBAC1C;AACY;AAAA,oBACF;AACE,0BAAI,WAAW,MAAM;AACnB,kCAAU,KAAK,GAAG,mBAAmB,UAAU,SAAS,CAAC,GAAG;AAAA,sBAC1E,OAAmB;AACL,kCAAU,KAAK,GAAG,MAAM,SAAS,WAAW,WAAW,iBAAiB,MAAM,MAAM,mBAAmB,UAAU,SAAS,CAAC,GAAG;AAAA,sBAC5I;AACY,uCAAiB,KAAK,MAAM;AAAA,kBACxC;AACQ,yBAAO;AAAA,gBACf;AAAA,cACA;AACI,mCAAqB,UAAU,QAAQ,CAAC,IAAI;AAC5C,qBAAO,UAAU,QAAQ;AAAA,YAC7B;AApCW;AAsCT,qBAAS,mBAAmBA,QAAO;AACjC,kBAAI,qBAAqB,eAAeA,MAAK,GAAG;AAC9C,uBAAO,GAAG,WAAW,IAAI,qBAAqBA,MAAK,CAAC;AAAA,cAC1D;AACI,qBAAO,UAAUA,MAAK;AAAA,YAC1B;AALW;AAOT,qBAAS,mBAAmB,QAAQ,MAAM;AACxC,qBAAO,GAAG,WAAW,IAAI,MAAM,IAAI,kBAAkB,MAAM,EAAE,aAAa,kBAAkB,WAAW,oBAAoB,aAAa,WAAW,6BAA4B,CAAE,CAAC;AAAA,YACtL;AAFW;AAIT,qBAAS,YAAYA,QAAO,QAAQ;AAClC,oBAAM,eAAe,GAAG,WAAW,WAAW,iBAAiB,MAAM;AACrE,+BAAiB,KAAKA,MAAK;AAC3B,wBAAU,KAAK,GAAG,MAAM,SAAS,YAAY,MAAM,MAAM,GAAG;AAC5D,qBAAO;AAAA,YACX;AALW;AAAA,UAMX;AArES;AAuET,mBAAS,kBAAkB,MAAM,SAAS;AACxC,kBAAM,EAAE,WAAW,6BAA4B,IAAK;AACpD,mBAAQ,MAAM,KAAK,IAAI,EAAE,IAAI,CAAC,QAAQ;AACpC,oBAAM,eAAe,gBAAgB,GAAG;AACxC,kBAAI,cAAc;AAChB,uBAAO;AAAA,cACb;AACI,qBAAO,iBAAiB,KAAK,OAAO;AAAA,YACxC,CAAG,EAAE,KAAK,IAAI;AAEZ,qBAAS,gBAAgBA,QAAO;AAC9B,kBAAI,WAAW;AACb,2BAAWX,SAAQ,WAAW;AAC5B,sBAAI,CAAC,UAAU,eAAeA,KAAI,EAAG;AACrC,sBAAI,UAAUA,KAAI,MAAMW,QAAO;AAC7B,2BAAOX;AAAA,kBACjB;AAAA,gBACA;AAAA,cACA;AACI,kBAAI,8BAA8B;AAChC,uBAAO,6BAA6BW,MAAK;AAAA,cAC/C;AACI,qBAAO;AAAA,YACX;AAbW;AAAA,UAcX;AAxBS;AA0BT,mBAAS,iBAAiB,KAAK,SAAS;AACtC,kBAAM,EAAE,aAAa,kBAAkB,WAAW,aAAa,6BAA4B,IAAK;AAChG,gBAAI,OAAO,QAAQ,aAAa;AAC9B,qBAAO;AAAA,YACX;AACE,gBAAI,QAAQ,MAAM;AAChB,qBAAO;AAAA,YACX;AACE,kBAAM,IAAI,iBAAiB,QAAQ,GAAG;AACtC,gBAAI,IAAI,IAAI;AACV,qBAAO,GAAG,WAAW,WAAW,CAAC;AAAA,YACrC;AACE,oBAAQ,IAAI,YAAY,MAAI;AAAA,cAC1B,KAAK;AACH,sBAAM,WAAW,KAAK,KAAK,GAAG;AAC9B,sBAAM,kBAAkB,IAAI,KAAK,GAAG;AACpC,sBAAM,kBAAkB,IAAI,KAAK,GAAG;AACpC,oBAAI,UAAU;AACZ,yBAAO,MAAM,MAAM;AAAA,gBAC3B,WAAiB,mBAAmB,CAAC,iBAAiB;AAC9C,yBAAO,MAAM,MAAM;AAAA,gBAC3B,WAAiB,CAAC,mBAAmB,iBAAiB;AAC9C,yBAAO,MAAM,MAAM;AAAA,gBAC3B,OAAa;AACL,yBAAO,MAAO,MAAM;AAAA,gBAC5B;AAAA,cACI,KAAK;AAAU,uBAAO,UAAU,GAAG;AAAA,cACnC,KAAK;AAAW,uBAAO,UAAU,GAAG;AAAA,cACpC,KAAK;AACH,uBAAO,YAAY,KAAK,OAAO,IAAI,YAAY,IAAI,KAAK,MAAM,KAAK,GAAG,EAAE,KAAK,GAAG,CAAC,IAAI;AAAA,cACvF,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACH,uBAAO,YAAY,KAAK,OAAO,IAAI,YAAY,IAAI,IAAI,KAAK,UAAU,MAAM,KAAK,GAAG,CAAC,CAAC,GAAG;AAAA,cAC3F;AACE,oBAAI,8BAA8B;AAChC,wBAAM,sBAAsB,6BAA6B,GAAG;AAC5D,sBAAI,qBAAqB;AACvB,2BAAO;AAAA,kBACjB;AAAA,gBACA;AACM,sBAAM,IAAI,MAAM,8BAA8B,IAAI,YAAY,IAAI,EAAE;AAAA,YAC1E;AAAA,UACA;AA5CS;AA8CT,mBAAS,mBAAmBA,QAAO;AACjC,mBAAO,IAAIA,OAAM,YAAYA,MAAK;AAAA,UACpC;AAFS;AAIT,cAAI,OAAOpB,YAAW,aAAa;AACjC,YAAAA,QAAO,UAAU,EAAE,WAAW,mBAAkB;AAAA,UAClD;AAEA,cAAI,OAAO,WAAW,aAAa;AACjC,sBAAU,qBAAqB;AAC/B,mBAAO,YAAY;AAAA,UACrB;AAAA,QAEA,GAAE,CAAA,CAAE,GAAE,GAAE,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACzC,mBAAS,eAAe,MAAM;AAC5B,kBAAM,eAAe,IAAI,MAAM,KAAK,MAAM;AAC1C,qBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,oBAAM,MAAM,KAAK,CAAC;AAClB,kBAAI,IAAI,SAAS;AACf,6BAAa,CAAC,IAAI,IAAI,QAAO;AAAA,cACnC,OAAW;AACL,6BAAa,CAAC,IAAI;AAAA,cACxB;AAAA,YACA;AACE,mBAAO;AAAA,UACT;AAXS;AAaT,mBAAS,SAAS;AAChB,kBAAM,OAAO,eAAe,SAAS;AACrC,kBAAM,MAAM,IAAI,aAAa,KAAK,OAAO,CAAC;AAC1C,qBAAS,IAAI,GAAG,IAAI,KAAK,OAAO,GAAG,KAAK;AACtC,mBAAK,OAAO,IAAI;AAChB,mBAAK,OAAO,IAAI;AAChB,mBAAK,OAAO,IAAI;AAChB,kBAAI,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,IAAI;AAAA,YACtC;AACE,mBAAO;AAAA,UACT;AAVS;AAYT,mBAAS,SAAS;AAChB,kBAAM,OAAO,eAAe,SAAS;AACrC,kBAAM,SAAS,IAAI,MAAM,KAAK,OAAO,CAAC;AACtC,qBAAS,IAAI,GAAG,IAAI,KAAK,OAAO,GAAG,KAAK;AACtC,oBAAM,MAAM,IAAI,aAAa,KAAK,OAAO,CAAC;AAC1C,uBAAS,IAAI,GAAG,IAAI,KAAK,OAAO,GAAG,KAAK;AACtC,qBAAK,OAAO,IAAI;AAChB,qBAAK,OAAO,IAAI;AAChB,qBAAK,OAAO,IAAI;AAChB,oBAAI,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,IAAI;AAAA,cACxC;AACI,qBAAO,CAAC,IAAI;AAAA,YAChB;AACE,mBAAO;AAAA,UACT;AAdS;AAgBT,mBAAS,kBAAkB;AACzB,kBAAM,OAAO,eAAe,SAAS;AACrC,qBAAS,IAAI,GAAG,IAAI,KAAK,OAAO,GAAG,KAAK;AACtC,uBAAS,IAAI,GAAG,IAAI,KAAK,OAAO,GAAG,KAAK;AACtC,qBAAK,OAAO,IAAI;AAChB,qBAAK,OAAO,IAAI;AAChB,qBAAK,OAAO,IAAI;AAChB,qBAAK,IAAI,MAAM,MAAM,IAAI;AAAA,cAC/B;AAAA,YACA;AAAA,UACA;AAVS;AAYT,mBAAS,SAAS;AAChB,kBAAM,OAAO,eAAe,SAAS;AACrC,kBAAM,OAAO,IAAI,MAAM,KAAK,OAAO,CAAC;AACpC,qBAAS,IAAI,GAAG,IAAI,KAAK,OAAO,GAAG,KAAK;AACtC,oBAAM,SAAS,IAAI,MAAM,KAAK,OAAO,CAAC;AACtC,uBAAS,IAAI,GAAG,IAAI,KAAK,OAAO,GAAG,KAAK;AACtC,sBAAM,MAAM,IAAI,aAAa,KAAK,OAAO,CAAC;AAC1C,yBAAS,IAAI,GAAG,IAAI,KAAK,OAAO,GAAG,KAAK;AACtC,uBAAK,OAAO,IAAI;AAChB,uBAAK,OAAO,IAAI;AAChB,uBAAK,OAAO,IAAI;AAChB,sBAAI,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,IAAI;AAAA,gBAC1C;AACM,uBAAO,CAAC,IAAI;AAAA,cAClB;AACI,mBAAK,CAAC,IAAI;AAAA,YACd;AACE,mBAAO;AAAA,UACT;AAlBS;AAoBT,mBAAS,YAAY,QAAQ;AAC3B,mBAAO,YAAY,CAAC,WAAW;AAC7B,qBAAO,SAAS,YAAY,MAAM;AAClC,kBAAI,OAAO,WAAW;AACpB,+BAAe,MAAM;AAAA,cAC3B;AAAA,YACA;AACE,mBAAO,SAAS,MAAM;AACpB,oBAAM,IAAI,MAAM,yBAAyB;AAAA,YAC7C;AACE,mBAAO,eAAe,CAAC,SAAS;AAC9B,qBAAO,YAAY;AACnB,qBAAO;AAAA,YACX;AACE,mBAAO,eAAe,CAAC,SAAS;AAC9B,qBAAO,YAAY;AACnB,qBAAO;AAAA,YACX;AACE,mBAAO,YAAY,CAAC,SAAS;AAC3B,qBAAO,SAAS;AAChB,qBAAO;AAAA,YACX;AACE,mBAAO,aAAa,CAAC,SAAS;AAC5B,qBAAO,UAAU;AACjB,qBAAO;AAAA,YACX;AACE,mBAAO,UAAU,MAAM;AAAA,YAAA;AACvB,mBAAO,mBAAmB,MAAM;AAAA,YAAA;AAChC,gBAAI,OAAO,aAAa,OAAO,QAAQ;AACrC,6BAAe,MAAM;AAAA,YACzB;AACE,mBAAO,OAAO,WAAW;AACvB,qBAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,oBAAI;AACF,0BAAQ,OAAO,MAAM,QAAQ,SAAS,CAAC;AAAA,gBAC/C,SAAc,GAAG;AACT,yBAAO,CAAC;AAAA,gBAChB;AAAA,cACA,CAAK;AAAA,YACL;AACE,mBAAO,YAAY,CAAC,SAAS;AAC3B,oBAAM,EAAC,GAAG,EAAC,IAAI,OAAO;AACtB,qBAAO,OAAO,WAAW,OAAO,WAAW,MAAM,GAAG,CAAC,IAAI,OAAO,WAAW,KAAK,MAAM,CAAC;AAAA,YAC3F;AACE,mBAAO,QAAQ,SAAS,GAAG,GAAG,GAAG,GAAG;AAClC,kBAAI,OAAO,MAAM,aAAa;AAC5B,oBAAI;AAAA,cACV;AAEI,kBAAI,KAAK,MAAM,IAAI,GAAG;AACtB,kBAAI,KAAK,MAAM,IAAI,GAAG;AACtB,kBAAI,KAAK,MAAM,IAAI,GAAG;AACtB,kBAAI,KAAK,MAAM,IAAI,GAAG;AAEtB,oBAAM,QAAQ,OAAO,OAAO;AAC5B,oBAAM,SAAS,OAAO,OAAO;AAE7B,oBAAM,IAAI,OAAO,OAAO;AACxB,oBAAM,IAAI,SAAS,OAAO,OAAO,IAAI;AAErC,oBAAMmB,SAAQ,IAAI,IAAI;AAEtB,qBAAO,WAAWA,SAAQ,IAAI,CAAC,IAAI;AACnC,qBAAO,WAAWA,SAAQ,IAAI,CAAC,IAAI;AACnC,qBAAO,WAAWA,SAAQ,IAAI,CAAC,IAAI;AACnC,qBAAO,WAAWA,SAAQ,IAAI,CAAC,IAAI;AAAA,YACvC;AAEE,kBAAM,aAAa,6BAAM,QAAN;AACnB,kBAAM,UAAU;AAAA,cACd;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAEF,qBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,qBAAO,QAAQ,CAAC,CAAC,IAAI;AAAA,YACzB;AACE,mBAAO;AAAA,UACT;AAhGS;AAkGT,mBAAS,eAAe,QAAQ;AAC9B,kBAAM,EAAC,GAAG,EAAC,IAAI,OAAO;AACtB,gBAAI,OAAO,WAAW,OAAO,QAAQ,iBAAiB;AACpD,oBAAM,OAAO,IAAI,kBAAkB,IAAI,IAAI,CAAC;AAC5C,qBAAO,aAAa,OAAO,QAAQ,gBAAgB,GAAG,CAAC;AACvD,qBAAO,aAAa;AAAA,YACxB,OAAS;AACL,oBAAM,OAAO,IAAI,kBAAkB,IAAI,IAAI,CAAC;AAC5C,qBAAO,aAAa,EAAE,KAAI;AAC1B,qBAAO,aAAa;AAAA,YACxB;AAAA,UACA;AAXS;AAaT,mBAAS,YAAY,QAAQ;AAC3B,gBAAI,SAAS;AACb,gBAAI,OAAO,QAAQ;AACjB,kBAAI,OAAO,WAAW,GAAG;AACvB,sBAAM,CAAC,GAAE,GAAE,CAAC,IAAI;AAChB,yBAAS,EAAE,GAAG,GAAG,EAAC;AAAA,cACxB,WAAe,OAAO,WAAW,GAAG;AAC9B,sBAAM,CAAC,GAAE,CAAC,IAAI;AACd,yBAAS,EAAE,GAAG,EAAC;AAAA,cACrB,OAAW;AACL,sBAAM,CAAC,CAAC,IAAI;AACZ,yBAAS,EAAE,EAAC;AAAA,cAClB;AAAA,YACA,OAAS;AACL,uBAAS;AAAA,YACb;AACE,mBAAO;AAAA,UACT;AAjBS;AAmBT,mBAAS,QAAQ,IAAI,WAAW,IAAI;AAClC,kBAAM,SAAS,SAAS,SAAS,YAAY,SAAS,MAAM,IAAI;AAChE,qBAAS,SAAS;AAChB,kBAAI,OAAO,OAAO,GAAG;AACnB,uBAAO,OAAO,MAAM,QAAQ,SAAS;AAAA,cAC3C,WAAe,OAAO,OAAO,GAAG;AAC1B,oBAAI,OAAO,WAAW;AACpB,yBAAO,gBAAgB,MAAM,QAAQ,SAAS;AAAA,gBACtD;AACM,uBAAO,OAAO,MAAM,QAAQ,SAAS;AAAA,cAC3C,OAAW;AACL,uBAAO,OAAO,MAAM,QAAQ,SAAS;AAAA,cAC3C;AAAA,YACA;AAXW;AAYT,mBAAO,MAAM;AACb,mBAAO,YAAY,SAAS,aAAa;AACzC,mBAAO,UAAU,SAAS,WAAW;AACrC,mBAAO,SAAS,SAAS,UAAU;AACnC,mBAAO,YAAY,SAAS,aAAa;AACzC,mBAAO,aAAa;AACpB,mBAAO,aAAa;AACpB,mBAAO,SAAS;AAChB,mBAAO,SAAS;AAAA,cACd,GAAG;AAAA,cACH,GAAG;AAAA,cACH,GAAG;AAAA;AAEL,mBAAO,YAAY,MAAM;AAAA,UAC3B;AA5BS;AA8BT,mBAAS,WAAW,QAAQ,OAAO,QAAQ;AACzC,kBAAM,aAAa,SAAS,IAAI;AAChC,kBAAM,cAAc,QAAQ;AAC5B,kBAAM,OAAO,IAAI,kBAAkB,QAAQ,CAAC;AAC5C,kBAAM,SAAS,OAAO,MAAM,CAAC;AAC7B,qBAAS,IAAI,GAAG,IAAI,YAAY,EAAE,GAAG;AACnC,oBAAM,YAAY,IAAI;AACtB,oBAAM,gBAAgB,SAAS,IAAI,KAAK;AAExC,mBAAK,IAAI,OAAO,SAAS,WAAW,YAAY,WAAW,CAAC;AAE5D,qBAAO,WAAW,WAAW,cAAc,eAAe,WAAW;AAErE,qBAAO,IAAI,MAAM,YAAY;AAAA,YACjC;AACE,mBAAO;AAAA,UACT;AAhBS;AAkBT,UAAAtB,QAAO,UAAU;AAAA,YACf;AAAA;QAGF,GAAE,CAAA,CAAE,GAAE,GAAE,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACzC,gBAAM,EAAE,MAAK,IAAKE,SAAQ,SAAS;AAEnC,mBAAS,MAAMI,OAAM,QAAQ;AAC3B,kBAAM,WAAW,OAAO,SAAQ;AAChC,mBAAO,IAAI,SAAS,mBAAoBA,KAAI,KAAO,MAAM,2BAA2B,QAAQ,EAAE,KAAK,IAAI,CAAC;AAAA,IACrG,MAAM,0BAA0B,QAAQ,CAAC;AAAA,EAC5C,EAAC;AAAA,UACH;AALS;AAOT,UAAAT,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,WAAU,IAAG,CAAC,GAAE,GAAE,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACtD,gBAAM,EAAE,aAAY,IAAKE,SAAQ,kBAAkB;AAEnD,gBAAM,mBAAN,MAAM,yBAAwB,aAAa;AAAA,YACzC,YAAY,KAAK,QAAQ;AAEvB,kBAAI,CAAC,KAAK,cAAc;AACtB,uBAAO,KAAK,UAAU;AACtB,uBAAO,KAAK,GAAG;AACf,uBAAO,KAAK,KAAK,IAAI;AACrB,uBAAO,KAAK,GAAG;AAEf,yBAAS,IAAI,GAAG,IAAI,KAAK,cAAc,QAAQ,EAAE,GAAG;AAClD,wBAAM,eAAe,KAAK,cAAc,CAAC;AAEzC,sBAAI,IAAI,GAAG;AACT,2BAAO,KAAK,IAAI;AAAA,kBAC1B;AACQ,yBAAO,KAAK,OAAO;AACnB,yBAAO,KAAK,YAAY;AAAA,gBAChC;AAEM,uBAAO,KAAK,OAAO;AAAA,cACzB;AAEI,uBAAS,IAAI,GAAG,IAAI,IAAI,KAAK,KAAK,QAAQ,EAAE,GAAG;AAC7C,qBAAK,WAAW,IAAI,KAAK,KAAK,CAAC,GAAG,MAAM;AACxC,uBAAO,KAAK,IAAI;AAAA,cACtB;AAEI,kBAAI,CAAC,KAAK,cAAc;AACtB,uBAAO,KAAK,KAAK;AAAA,cACvB;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,mBAAmB,KAAK,QAAQ;AAC9B,oBAAM,OAAO,KAAK,cAAc,KAAK,QAAQ,IAAI,QAAQ;AAEzD,kBAAI,CAAC,KAAK,YAAY;AACpB,qBAAK,aAAa;AAAA,cACxB;AAEI,kBAAI,KAAK,cAAc;AACrB,uBAAO,KAAK,KAAK,sBAAsB;AACvC,qBAAK,WAAW,IAAI,UAAU,MAAM;AACpC,uBAAO,KAAK,KAAK;AACjB,uBAAO,KAAK,KAAK,wBAAwB;AACzC,uBAAO,KAAK,aAAa;AAAA,cAC/B,WAAe,KAAK,aAAa;AAC3B,uBAAO,KAAK,mBAAoB,KAAK,IAAI,KAAM;AAC/C,qBAAK,WAAW,IAAI,UAAU,MAAM;AACpC,uBAAO,KAAK,GAAG;AACf,uBAAO,KAAK,0BAA2B,KAAK,IAAI,GAAI;AAAA,cAC1D,OAAW;AACL,uBAAO,KAAK,SAAS;AACrB,qBAAK,WAAW,IAAI,UAAU,MAAM;AACpC,uBAAO,KAAK,GAAG;AAAA,cACrB;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,WAAW,KAAK,QAAQ;AAEtB,kBAAI,MAAM,IAAI,KAAK,GAAG;AACpB,sBAAM,KAAK;AAAA,kBACT,yCAAyC,IAAI;AAAA,kBAC7C;AAAA;cAER;AAEI,qBAAO,KAAK,IAAI,KAAK;AAErB,qBAAO;AAAA,YACX;AAAA,YAEE,oBAAoB,KAAK,QAAQ;AAC/B,qBAAO,KAAK,GAAG;AACf,mBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,qBAAO,KAAK,IAAI,QAAQ;AACxB,mBAAK,WAAW,IAAI,OAAO,MAAM;AACjC,qBAAO,KAAK,GAAG;AACf,qBAAO;AAAA,YACX;AAAA,YAEE,wBAAwB,SAAS,QAAQ;AACvC,kBAAI,QAAQ,SAAS,cAAc;AACjC,sBAAM,KAAK;AAAA,kBACT;AAAA,kBACA;AAAA;cAER;AAEI,sBAAQ,QAAQ,MAAI;AAAA,gBAClB,KAAK;AACH,yBAAO,KAAK,UAAU;AACtB;AAAA,gBACF;AACE,sBAAI,KAAK,aAAa,KAAK,UAAU,eAAe,QAAQ,IAAI,GAAG;AACjE,2BAAO,KAAK,eAAe,QAAQ,IAAI;AAAA,kBACjD,OAAe;AACL,2BAAO,KAAK,UAAU,QAAQ,IAAI;AAAA,kBAC5C;AAAA,cACA;AAEI,qBAAO;AAAA,YACX;AAAA,YAEE,gBAAgB,SAAS,QAAQ;AAC/B,kBAAI,QAAQ,SAAS,gBAAgB;AACnC,sBAAM,KAAK,eAAe,yBAAyB,OAAO;AAAA,cAChE;AAEI,oBAAM,UAAU,CAAA;AAChB,oBAAM,UAAU,CAAA;AAChB,oBAAM,YAAY,CAAA;AAClB,oBAAM,UAAU,CAAA;AAChB,kBAAI,SAAS;AAEb,kBAAI,QAAQ,MAAM;AAChB,qBAAK,UAAU,kBAAkB;AACjC,qBAAK,WAAW,QAAQ,MAAM,OAAO;AACrC,yBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,sBAAI,QAAQ,CAAC,EAAE,YAAY,QAAQ,CAAC,EAAE,SAAS,GAAG,GAAG;AACnD,6BAAS;AAAA,kBACnB;AAAA,gBACA;AACM,qBAAK,SAAS,kBAAkB;AAAA,cACtC,OAAW;AACL,yBAAS;AAAA,cACf;AAEI,kBAAI,QAAQ,MAAM;AAChB,qBAAK,WAAW,QAAQ,MAAM,OAAO;AAAA,cAC3C,OAAW;AACL,yBAAS;AAAA,cACf;AAEI,kBAAI,QAAQ,QAAQ;AAClB,qBAAK,WAAW,QAAQ,QAAQ,SAAS;AAAA,cAC/C,OAAW;AACL,yBAAS;AAAA,cACf;AAEI,kBAAI,QAAQ,MAAM;AAChB,qBAAK,UAAU,WAAW;AAC1B,qBAAK,WAAW,QAAQ,MAAM,OAAO;AACrC,qBAAK,SAAS,WAAW;AAAA,cAC/B;AAEI,kBAAI,WAAW,MAAM;AACnB,yBAAS,KAAK,OAAO,QAAQ,IAAI,KAAK,KAAK,OAAO,QAAQ,IAAI;AAAA,cACpE;AAEI,kBAAI,QAAQ;AACV,uBAAO,KAAK,QAAQ,QAAQ,KAAK,EAAE,CAAC,IAAI,QAAQ,KAAK,EAAE,CAAC,IAAI,UAAU,KAAK,EAAE,CAAC;AAAA,CAAM;AACpF,uBAAO,KAAK,QAAQ,KAAK,EAAE,CAAC;AAC5B,uBAAO,KAAK,KAAK;AAAA,cACvB,OAAW;AACL,sBAAM,gBAAgB,KAAK,wBAAwB,OAAO;AAC1D,oBAAI,QAAQ,SAAS,GAAG;AACtB,yBAAO,KAAK,QAAQ,KAAK,EAAE,GAAG,KAAK;AAAA,gBAC3C;AACM,uBAAO,KAAK,YAAY,aAAa,MAAM,aAAa,aAAa,aAAa;AAAA,CAAQ;AAC1F,oBAAI,QAAQ,SAAS,GAAG;AACtB,yBAAO,KAAK,QAAQ,QAAQ,KAAK,EAAE,CAAC;AAAA,CAAY;AAAA,gBACxD;AACM,uBAAO,KAAK,QAAQ,KAAK,EAAE,CAAC;AAC5B,uBAAO,KAAK;AAAA,EAAK,UAAU,KAAK,EAAE,CAAC,GAAG;AACtC,uBAAO,KAAK,KAAK;AAAA,cACvB;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkB,WAAW,QAAQ;AACnC,kBAAI,UAAU,SAAS,kBAAkB;AACvC,sBAAM,KAAK;AAAA,kBACT;AAAA,kBACA;AAAA;cAER;AAEI,qBAAO,KAAK,sCAAsC;AAClD,qBAAO,KAAK,MAAM;AAClB,mBAAK,WAAW,UAAU,MAAM,MAAM;AACtC,qBAAO,KAAK,OAAO;AACnB,mBAAK,WAAW,UAAU,MAAM,MAAM;AACtC,qBAAO,KAAK,YAAY;AACxB,qBAAO,KAAK,UAAU;AACtB,qBAAO,KAAK,KAAK;AACjB,qBAAO,KAAK,KAAK;AAEjB,qBAAO;AAAA,YACX;AAAA,YAEE,oBAAoB,aAAa,QAAQ;AACvC,kBAAI,YAAY,SAAS,oBAAoB;AAC3C,sBAAM,KAAK;AAAA,kBACT;AAAA,kBACA;AAAA;cAER;AAEI,qBAAO,KAAK,sCAAsC;AAClD,mBAAK,WAAW,YAAY,MAAM,MAAM;AACxC,qBAAO,KAAK,OAAO;AACnB,mBAAK,WAAW,YAAY,MAAM,MAAM;AACxC,qBAAO,KAAK,OAAO;AACnB,qBAAO,KAAK,UAAU;AACtB,qBAAO,KAAK,KAAK;AACjB,qBAAO,KAAK,KAAK;AAEjB,qBAAO;AAAA,YAEX;AAAA,YAEE,wBAAwB,SAAS,QAAQ;AACvC,oBAAM,cAAc,KAAK,eAAe,QAAQ,IAAI;AACpD,kBAAI,eAAe,CAAC,YAAY,YAAY;AAC1C,sBAAM,KAAK,eAAe,YAAY,QAAQ,KAAK,IAAI,2BAA2B,OAAO;AAAA,cAC/F;AACI,mBAAK,WAAW,QAAQ,MAAM,MAAM;AACpC,qBAAO,KAAK,QAAQ,QAAQ;AAC5B,mBAAK,WAAW,QAAQ,OAAO,MAAM;AACrC,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkB,OAAO,QAAQ;AAC/B,kBAAI,KAAK,QAAQ,WAAW,GAAG;AAC7B,qBAAK,UAAU,YAAY;AAC3B,yBAAS,IAAI,GAAG,IAAI,MAAM,KAAK,QAAQ,KAAK;AAC1C,uBAAK,WAAW,MAAM,KAAK,CAAC,GAAG,MAAM;AAAA,gBAC7C;AACM,qBAAK,SAAS,YAAY;AAAA,cAChC,OAAW;AACL,uBAAO,KAAK,KAAK;AACjB,yBAAS,IAAI,GAAG,IAAI,MAAM,KAAK,QAAQ,KAAK;AAC1C,uBAAK,WAAW,MAAM,KAAK,CAAC,GAAG,MAAM;AAAA,gBAC7C;AACM,uBAAO,KAAK,KAAK;AAAA,cACvB;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,uBAAuB,YAAY,QAAQ;AACzC,qBAAO,KAAK,GAAG,WAAW,IAAI,GAAG;AACjC,oBAAM,EAAE,aAAY,IAAK;AACzB,uBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,oBAAI,IAAI,GAAG;AACT,yBAAO,KAAK,GAAG;AAAA,gBACvB;AACM,sBAAM,cAAc,aAAa,CAAC;AAClC,sBAAM,OAAO,KAAK,eAAe,YAAY,EAAE;AAC/C,oBAAI,CAAC,KAAK,WAAW;AACnB,uBAAK,YAAY,KAAK,QAAQ,YAAY,IAAI;AAAA,gBACtD;AACM,qBAAK,WAAW,aAAa,MAAM;AAAA,cACzC;AACI,kBAAI,CAAC,KAAK,QAAQ,kBAAkB,GAAG;AACrC,uBAAO,KAAK,GAAG;AAAA,cACrB;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,eAAe,QAAQ,QAAQ;AAC7B,qBAAO,KAAK,MAAM;AAClB,mBAAK,WAAW,OAAO,MAAM,MAAM;AACnC,qBAAO,KAAK,GAAG;AACf,kBAAI,OAAO,WAAW,SAAS,kBAAkB;AAC/C,qBAAK,WAAW,OAAO,YAAY,MAAM;AAAA,cAC/C,OAAW;AACL,uBAAO,KAAK,MAAM;AAClB,qBAAK,WAAW,OAAO,YAAY,MAAM;AACzC,uBAAO,KAAK,OAAO;AAAA,cACzB;AAEI,kBAAI,OAAO,WAAW;AACpB,uBAAO,KAAK,OAAO;AACnB,oBAAI,OAAO,UAAU,SAAS,oBAAoB,OAAO,UAAU,SAAS,eAAe;AACzF,uBAAK,WAAW,OAAO,WAAW,MAAM;AAAA,gBAChD,OAAa;AACL,yBAAO,KAAK,MAAM;AAClB,uBAAK,WAAW,OAAO,WAAW,MAAM;AACxC,yBAAO,KAAK,OAAO;AAAA,gBAC3B;AAAA,cACA;AACI,qBAAO;AAAA,YAEX;AAAA,YAEE,mBAAmB,KAAK,QAAQ;AAC9B,oBAAM,EAAE,cAAc,MAAK,IAAK;AAChC,qBAAO,KAAK,UAAU;AACtB,mBAAK,WAAW,cAAc,MAAM;AACpC,qBAAO,KAAK,OAAO;AACnB,uBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,oBAAI,MAAM,CAAC,EAAE,SAAS,MAAM;AAC1B,yBAAO,KAAK,YAAY;AACxB,uBAAK,WAAW,MAAM,CAAC,EAAE,YAAY,MAAM;AAC3C,sBAAI,MAAM,CAAC,EAAE,cAAc,MAAM,CAAC,EAAE,WAAW,SAAS,GAAG;AACzD,2BAAO,KAAK,UAAU;AAAA,kBAChC;AACQ;AAAA,gBACR;AACM,uBAAO,KAAK,OAAO;AACnB,qBAAK,WAAW,MAAM,CAAC,EAAE,MAAM,MAAM;AACrC,uBAAO,KAAK,KAAK;AACjB,oBAAI,MAAM,CAAC,EAAE,cAAc,MAAM,CAAC,EAAE,WAAW,SAAS,GAAG;AACzD,uBAAK,WAAW,MAAM,CAAC,EAAE,YAAY,MAAM;AAC3C,yBAAO,KAAK,UAAU;AAAA,gBAC9B;AAAA,cACA;AACI,qBAAO,KAAK,KAAK;AAAA,YACrB;AAAA,YAEE,kBAAkB,OAAO,QAAQ;AAC/B,qBAAO,KAAK,OAAO;AACnB,qBAAO;AAAA,YACX;AAAA,YAEE,oBAAoB,OAAO,QAAQ;AACjC,oBAAM;AAAA,gBACJ;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,MAAAI;AAAA,gBACA;AAAA,cACN,IAAQ,KAAK,2BAA2B,KAAK;AACzC,sBAAQ,WAAS;AAAA,gBACf,KAAK;AACH,yBAAO,KAAK,gBAAiBA,KAAI,EAAG;AACpC,yBAAO;AAAA,gBACT,KAAK;AACH,0BAAQA,OAAI;AAAA,oBACV,KAAK;AACH,6BAAO,KAAK,SAAS;AACrB;AAAA,oBACF,KAAK;AACH,6BAAO,KAAK,SAAS;AACrB;AAAA,oBACF,KAAK;AACH,6BAAO,KAAK,SAAS;AACrB;AAAA,oBACF;AACE,4BAAM,KAAK,eAAe,yBAAyB,KAAK;AAAA,kBACpE;AACQ,yBAAO;AAAA,gBACT,KAAK;AACH,wBAAM,KAAK,eAAe,yBAAyB,KAAK;AAAA,gBAC1D,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,sBAAI,WAAW,QAAQ;AACrB,2BAAO,KAAK,KAAKA,KAAI,CAAC;AACtB,2BAAO;AAAA,kBACjB;AACQ,0BAAQ,UAAQ;AAAA,oBACd,KAAK;AACH,6BAAO,KAAK,QAASA,KAAI,KAAM;AAC/B,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO,KAAK,QAASA,KAAI,KAAM;AAC/B,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO,KAAK,QAASA,KAAI,KAAM;AAC/B,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO,KAAK,QAASA,KAAI,KAAM;AAC/B,6BAAO;AAAA,kBACnB;AACQ;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH;AAAA,gBACF,KAAK;AACH,uBAAK,WAAW,MAAM,QAAQ,MAAM;AACpC,yBAAO,KAAK,GAAG;AACf,uBAAK,WAAW,MAAM,UAAU,MAAM;AACtC,yBAAO,KAAK,GAAG;AACf,yBAAO;AAAA,gBACT,KAAK;AACH,uBAAK,WAAW,MAAM,OAAO,QAAQ,MAAM;AAC3C,yBAAO,KAAK,GAAG;AACf,uBAAK,WAAW,MAAM,OAAO,UAAU,MAAM;AAC7C,yBAAO,KAAK,GAAG;AACf,yBAAO,KAAK,GAAG;AACf,uBAAK,WAAW,MAAM,UAAU,MAAM;AACtC,yBAAO,KAAK,GAAG;AACf,yBAAO;AAAA,gBACT;AACE,wBAAM,KAAK,eAAe,yBAAyB,KAAK;AAAA,cAChE;AAEI,kBAAI,CAAC,MAAM,UAAU;AACnB,wBAAQ,MAAI;AAAA,kBACV,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACH,2BAAO,KAAK,GAAG,MAAM,IAAIA,KAAI,EAAE;AAC/B,2BAAO;AAAA,gBACjB;AAAA,cACA;AAEI,oBAAM,aAAa,GAAG,MAAM,IAAIA,KAAI;AAEpC,sBAAQ,MAAI;AAAA,gBACV,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL;AACE,sBAAI;AACJ,sBAAI;AACJ,sBAAI,WAAW,aAAa;AAC1B,0BAAM,WAAW,KAAK,UAAUA,KAAI;AACpC,8BAAU,KAAK,cAAcA,KAAI,MAAM;AACvC,2BAAO,UAAU,SAAS,OAAO;AAAA,kBAC3C,OAAe;AACL,8BAAU,KAAK,QAAQA,KAAI;AAC3B,2BAAO,UAAU,KAAK,cAAc,KAAK,cAAc,QAAQA,KAAI,CAAC,IAAI;AAAA,kBAClF;AACQ,yBAAO,KAAK,GAAI,UAAU,EAAG;AAC7B,sBAAI,aAAa,WAAW;AAC1B,wBAAI,SAAS;AACX,6BAAO,KAAK,IAAI;AAChB,2BAAK,WAAW,WAAW,MAAM;AACjC,6BAAO,KAAK,IAAK,KAAK,mBAAmB,wBAAwB,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,KAAM;AACxF,2BAAK,WAAW,WAAW,MAAM;AACjC,6BAAO,KAAK,IAAK,KAAK,mBAAmB,YAAY,KAAK,CAAC,CAAC,IAAK;AACjE,2BAAK,WAAW,WAAW,MAAM;AACjC,6BAAO,KAAK,GAAG;AAAA,oBAC3B,OAAiB;AACL,6BAAO,KAAK,GAAG;AACf,2BAAK,WAAW,WAAW,MAAM;AACjC,6BAAO,KAAK,GAAG;AACf,6BAAO,KAAK,GAAG;AACf,2BAAK,WAAW,WAAW,MAAM;AACjC,6BAAO,KAAK,GAAG;AACf,6BAAO,KAAK,GAAG;AACf,2BAAK,WAAW,WAAW,MAAM;AACjC,6BAAO,KAAK,GAAG;AAAA,oBAC3B;AAAA,kBACA,WAAmB,WAAW;AACpB,wBAAI,SAAS;AACX,6BAAO,KAAK,IAAI;AAChB,2BAAK,WAAW,WAAW,MAAM;AACjC,6BAAO,KAAK,IAAK,KAAK,mBAAmB,YAAY,KAAK,CAAC,CAAC,IAAK;AACjE,2BAAK,WAAW,WAAW,MAAM;AACjC,6BAAO,KAAK,GAAG;AAAA,oBAC3B,OAAiB;AACL,6BAAO,KAAK,GAAG;AACf,2BAAK,WAAW,WAAW,MAAM;AACjC,6BAAO,KAAK,GAAG;AACf,6BAAO,KAAK,GAAG;AACf,2BAAK,WAAW,WAAW,MAAM;AACjC,6BAAO,KAAK,GAAG;AAAA,oBAC3B;AAAA,kBACA,WAAmB,OAAO,cAAc,aAAa;AAC3C,2BAAO,KAAK,GAAG;AACf,yBAAK,WAAW,WAAW,MAAM;AACjC,2BAAO,KAAK,GAAG;AAAA,kBACzB;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkB,KAAK,QAAQ;AAC7B,kBAAI,IAAI,SAAS,kBAAkB;AACjC,sBAAM,KAAK,eAAe,0BAA0B,GAAG;AAAA,cAC7D;AACI,kBAAI,eAAe,KAAK,0BAA0B,IAAI,MAAM;AAE5D,kBAAI,KAAK,gBAAgB,QAAQ,YAAY,IAAI,GAAG;AAClD,qBAAK,gBAAgB,KAAK,YAAY;AAAA,cAC5C;AAEI,oBAAM,iBAAiB,KAAK,kBAAkB,GAAG;AAEjD,kBAAI,KAAK,gBAAgB;AACvB,qBAAK,eAAe,KAAK,MAAM,cAAc,IAAI,SAAS;AAAA,cAChE;AAEI,qBAAO,KAAK,YAAY;AAExB,qBAAO,KAAK,GAAG;AACf,oBAAM,cAAc,KAAK,4BAA4B,YAAY,KAAK,CAAA;AACtE,uBAAS,IAAI,GAAG,IAAI,IAAI,UAAU,QAAQ,EAAE,GAAG;AAC7C,sBAAM,WAAW,IAAI,UAAU,CAAC;AAEhC,oBAAI,eAAe,KAAK,QAAQ,QAAQ;AACxC,oBAAI,CAAC,YAAY,CAAC,GAAG;AACnB,uBAAK,yBAAyB,cAAc,GAAG,cAAc,IAAI;AAAA,gBACzE;AAEM,oBAAI,IAAI,GAAG;AACT,yBAAO,KAAK,IAAI;AAAA,gBACxB;AACM,qBAAK,WAAW,UAAU,MAAM;AAAA,cACtC;AACI,qBAAO,KAAK,GAAG;AAEf,qBAAO;AAAA,YACX;AAAA,YAEE,mBAAmB,SAAS,QAAQ;AAClC,oBAAM,aAAa,KAAK,QAAQ,OAAO;AACvC,oBAAM,SAAS,QAAQ,SAAS;AAChC,oBAAM,WAAW,CAAA;AACjB,uBAAS,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC/B,sBAAM,UAAU,CAAA;AAChB,qBAAK,WAAW,QAAQ,SAAS,CAAC,GAAG,OAAO;AAC5C,yBAAS,KAAK,QAAQ,KAAK,EAAE,CAAC;AAAA,cACpC;AACI,sBAAQ,YAAU;AAAA,gBAChB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,KAAK,IAAI,SAAS,KAAK,IAAI,CAAC,GAAG;AACtC;AAAA,gBACF;AACE,yBAAO,KAAK,qBAAqB,SAAS,KAAK,IAAI,CAAC,IAAI;AAAA,cAChE;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,qBAAqB,SAAS,QAAQ;AACpC,qBAAO,KAAK,WAAW;AACvB,qBAAO;AAAA,YACX;AAAA,UACA;AA7hB2C;AAA3C,cAAM,kBAAN;AA+hBA,UAAAT,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,oBAAmB,GAAE,CAAC,GAAE,GAAE,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC9D,gBAAM,EAAE,MAAK,IAAKE,SAAQ,aAAa;AAEvC,mBAAS,kBAAkB,WAAW,OAAO;AAC3C,kBAAM,UAAU,CAAA;AAChB,uBAAWI,SAAQ,OAAO;AACxB,kBAAI,CAAC,MAAM,eAAeA,KAAI,EAAG;AACjC,oBAAM,OAAO,MAAMA,KAAI;AACvB,oBAAM,WAAW,UAAUA,KAAI;AAC/B,sBAAQ,MAAI;AAAA,gBACV,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,0BAAQ,KAAK,GAAGA,KAAI,IAAI,QAAQ,EAAE;AAClC;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,0BAAQ,KAAK,GAAGA,KAAI,QAAQ,SAAS,YAAY,IAAI,IAAI,KAAK,UAAU,MAAM,KAAK,QAAQ,CAAC,CAAC,GAAG;AAChG;AAAA,cACR;AAAA,YACA;AACE,mBAAO,KAAM,QAAQ,KAAI,CAAE;AAAA,UAC7B;AAxBS;AA0BT,mBAAS,gBAAgB,WAAWA,OAAM;AACxC,kBAAM,SAAS,CAAA;AACf,kBAAM,iBAAiB,CAAA;AACvB,kBAAM,eAAe,CAAA;AAErB,kBAAM,qBAAqB,CAAC,YAAY,KAAK,UAAU,MAAM,UAAU;AAEvE,mBAAO;AAAA,cACL;AAAA,cACA,mCAAmC,KAAK,UAAU,MAAM,KAAK,UAAU,MAAM,CAAC,CAAC;AAAA,cAC/E,4BAA4B,KAAK,UAAU,UAAU,aAAa,CAAC;AAAA,cACnE,wBAAwB,kBAAkB,UAAU,WAAW,UAAU,aAAa,CAAC;AAAA;AAGzF,2BAAe;AAAA,cACb;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA;AAGF,gBAAI,UAAU,WAAW;AACvB,qBAAO,KAAK,gDAAgD,UAAU,OAAO,CAAC,CAAC,KAAK,UAAU,OAAO,CAAC,CAAC,IAAI;AAC3G,qBAAO,KAAK,8CAA8C,UAAU,OAAO,CAAC,CAAC,MAAM,UAAU,OAAO,CAAC,CAAC,QAAQ;AAE9G,oBAAM,UAAU,MAAM,yBAAyB,qBAAqB,cAAc,MAAM,UAAU,MAAM,YAAY;AAAA,gBAClH,YAAY,wBAAC,iBAAiB;AAC5B,0BAAQ,cAAY;AAAA,oBAClB,KAAK;AACH,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO;AAAA,kBACnB;AACQ,yBAAO,KAAK,UAAU,UAAU,YAAY,CAAC;AAAA,gBACrD,GAZkB;AAAA,gBAaZ,gBAAgB,wBAAC,QAAQA,UAAS;AAChC,yBAAO;AAAA,gBACf,GAFsB;AAAA,cAGtB,CAAK;AAED,oBAAM,cAAc,MAAM,yBAAyB,qBAAqB,cAAc,MAAM,UAAU,UAAU,YAAY;AAAA,gBAC1H,YAAY,wBAAC,iBAAiB;AAC5B,0BAAQ,cAAY;AAAA,oBAClB,KAAK;AACH,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO;AAAA,kBACnB;AACQ,yBAAO,KAAK,UAAU,UAAU,YAAY,CAAC;AAAA,gBACrD,GAZkB;AAAA,gBAaZ,gBAAgB,6BAAM;AACpB,yBAAO;AAAA,gBACf,GAFsB;AAAA,cAGtB,CAAK;AAED,6BAAe;AAAA,gBACb;AAAA,gBACA;AAAA,gBACA,cAAc,OAAO;AAAA;AAGvB,2BAAa;AAAA,gBACX,wBAAwB,WAAW;AAAA;YAEzC;AAEE,kBAAM,gBAAgB,CAAA;AACtB,kBAAM,eAAe,OAAO,KAAK,UAAU,aAAa;AACxD,qBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,4BAAc,KAAK,UAAU,cAAc,YAAY,CAAC;AAAA,YAC5D;AACE,gBAAI,UAAU,cAAc,QAAQ,gBAAgB,MAAM,MAAM,cAAc,QAAQ,gBAAgB,MAAM,IAAI;AAC9G,oBAAM,0BAA0B,MAAM,yBAAyB,qBAAqB,cAAc,MAAM,UAAU,gBAAgB,YAAY;AAAA,gBAC5I,aAAa,CAAC,QAAQ;AAAA,gBACtB,gBAAgB,wBAAC,QAAQA,UAAS;AAChC,sBAAI,WAAW,QAAQ;AACrB,4BAAQ,qBAAqB,cAAc,MAAM,UAAUA,KAAI,EAAE,SAAQ;AAAA,kBACnF;AACQ,yBAAO;AAAA,gBACf,GALsB;AAAA,gBAMhB,YAAY,wBAAC,iBAAiB;AAC5B,0BAAQ,cAAY;AAAA,oBAClB,KAAK;AACH;AAAA,oBACF,KAAK;AACH,6BAAO;AAAA,kBACnB;AAAA,gBACA,GAPkB;AAAA,cAQlB,CAAK;AACD,2BAAa,KAAK,uBAAuB;AACzC,6BAAe,KAAK,sBAAsB;AAC1C,6BAAe,KAAK,sBAAsB;AAAA,YAC9C,WAAa,UAAU,cAAc,QAAQ,WAAW,MAAM,MAAM,cAAc,QAAQ,WAAW,MAAM,IAAI;AAC3G,oBAAM,0BAA0B,MAAM,yBAAyB,qBAAqB,cAAc,MAAM,UAAU,gBAAgB,YAAY;AAAA,gBAC5I,gBAAgB,wBAAC,QAAQA,UAAS;AAChC,yBAAO;AAAA,gBACf,GAFsB;AAAA,gBAGhB,YAAY,wBAAC,iBAAiB;AAC5B,0BAAQ,cAAY;AAAA,oBAClB,KAAK;AACH,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO;AAAA,kBACnB;AACQ,wBAAM,IAAI,MAAM,sBAAsB;AAAA,gBAC9C,GARkB;AAAA,cASlB,CAAK;AACD,2BAAa,KAAK,uBAAuB;AACzC,6BAAe,KAAK,sBAAsB;AAAA,YAC9C;AAEE,mBAAO;AAAA,EACN,OAAO,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0BlB,UAAU,aAAa;AAAA;AAAA,eAEV,eAAe,KAAK,IAAI,CAAC;AAAA,IACnC,aAAa,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA,UAG5B;AAxJS;AA0JT,UAAAT,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,eAAc,IAAG,CAAC,GAAE,GAAE,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC1D,gBAAM,EAAE,OAAM,IAAKE,SAAQ,WAAW;AACtC,gBAAM,EAAE,gBAAe,IAAKA,SAAQ,qBAAqB;AACzD,gBAAM,EAAE,gBAAe,IAAKA,SAAQ,iBAAiB;AACrD,gBAAM,EAAE,MAAK,IAAKA,SAAQ,aAAa;AACvC,gBAAM,EAAE,gBAAe,IAAKA,SAAQ,iBAAiB;AAErD,gBAAM,aAAN,MAAM,mBAAkB,OAAO;AAAA,YAC7B,OAAO,cAAc;AACnB,qBAAO,KAAK;AAAA,YAChB;AAAA,YACE,WAAW,WAAW;AACpB,qBAAO,OAAO,OAAO;AAAA,gBACnB,WAAW;AAAA,gBACX,2BAA2B;AAAA,cACjC,CAAK;AAAA,YACL;AAAA,YACE,WAAW,cAAc;AACvB,qBAAO;AAAA,YACX;AAAA,YACE,OAAO,eAAe,SAAS;AAC7B,qBAAO;AAAA,YACX;AAAA,YACE,WAAW,OAAO;AAChB,qBAAO;AAAA,YACX;AAAA,YAEE,OAAO,0BAA0B;AAC/B,qBAAO;AAAA,YACX;AAAA,YAEE,OAAO,2BAA2B;AAChC,oBAAM,IAAI,MAAM,2DAA2D,KAAK,IAAI,EAAE;AAAA,YAC1F;AAAA,YAEE,OAAO,eAAe,gBAAgB;AACpC,qBAAO;AAAA,YACX;AAAA,YAEE,OAAO,aAAa,QAAQ,eAAe;AACzC,qBAAO,SAAS,cAAc,SAAS,IAAI,MAAM,cAAc,KAAK,GAAG,IAAI;AAAA,YAC/E;AAAA,YAEE,YAAY,QAAQ,UAAU;AAC5B,oBAAM,QAAQ,QAAQ;AACtB,mBAAK,cAAc,OAAO,YAAY,QAAQ;AAE9C,mBAAK,aAAa;AAClB,mBAAK,aAAa;AAClB,mBAAK,gBAAgB;AACrB,mBAAK,mBAAmB,CAAA;AACxB,mBAAK,SAAS;AAAA,gBACZ,GAAG;AAAA,gBACH,GAAG;AAAA,gBACH,GAAG;AAAA;AAEL,mBAAK,oBAAoB;AAAA,YAC7B;AAAA,YAEE,aAAa;AACX,kBAAI,OAAO,aAAa,aAAa;AACnC,uBAAO,SAAS,cAAc,QAAQ;AAAA,cAC5C,WAAe,OAAO,oBAAoB,aAAa;AACjD,uBAAO,IAAI,gBAAgB,GAAG,CAAC;AAAA,cACrC;AAAA,YACA;AAAA,YAEE,cAAc;AACZ,kBAAI,CAAC,KAAK,OAAQ,QAAO;AACzB,qBAAO,KAAK,OAAO,WAAW,IAAI;AAAA,YACtC;AAAA,YAEE,YAAY,UAAU;AACpB,qBAAO,CAAA;AAAA,YACX;AAAA,YAEE,iBAAiB,MAAM;AACrB,kBAAI,CAAC,KAAK,UAAU,KAAK,OAAO,WAAW,GAAG;AAC5C,oBAAI,KAAK,WAAW,GAAG;AACrB,wBAAM,IAAI,MAAM,4DAA4D;AAAA,gBACpF;AAEM,sBAAM,UAAU,MAAM,gBAAgB,KAAK,CAAC,GAAG,KAAK,cAAc;AAClE,oBAAI,YAAY,SAAS;AACvB,uBAAK,SAAS,MAAM,cAAc,OAAO;AAAA,gBACjD,WAAiB,YAAY,mBAAmB,YAAY,mBAAmB;AACvE,uBAAK,SAAS,KAAK,CAAC,EAAE;AAAA,gBAC9B,OAAa;AACL,wBAAM,IAAI,MAAM,+CAA+C,OAAO;AAAA,gBAC9E;AAAA,cACA;AAEI,kBAAI,KAAK,WAAW;AAClB,oBAAI,KAAK,OAAO,WAAW,GAAG;AAC5B,wBAAM,IAAI,MAAM,iDAAiD;AAAA,gBACzE;AAAA,cACA;AAEI,mBAAK,YAAW;AAAA,YACpB;AAAA,YAEE,kBAAkB;AAChB,mBAAK,yBAAyB,KAAK,OAAO,SAAS,IAAI,kBAAkB;AACzE,kBAAI,KAAK,YAAY;AACnB,sBAAM,2BAA2B,CAAA;AACjC,yBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,wBAAM;AAAA,oBACJ,MAAAI;AAAA,kBACV,IAAY,KAAK,WAAW,CAAC;AACrB,2CAAyB,KAAK,KAAK,OAAO,SAAS,IAAI,WAAYA,KAAI,yBAA2BA,KAAI;AAAA,IAAS,UAAWA,KAAI,yBAA2BA,KAAI;AAAA,CAAM;AAAA,gBAC3K;AACM,qBAAK,2BAA2B,yBAAyB,KAAK,EAAE;AAAA,cACtE;AACI,oBAAM,kBAAkB,gBAAgB,WAAW,MAAM,eAAe;AACxE,mBAAK,oBAAoB,gBAAgB,cAAc,QAAQ;AAC/D,kBAAI,CAAC,KAAK,aAAa,CAAC,KAAK,YAAY;AACvC,qBAAK,aAAa,gBAAgB,oBAAmB;AAAA,cAC3D;AAAA,YACA;AAAA,YAEE,QAAQ;AACN,kBAAI,KAAK,MAAO;AAChB,mBAAK,eAAc;AACnB,mBAAK,eAAe,SAAS;AAC7B,mBAAK,iBAAiB,SAAS;AAC/B,mBAAK,gBAAe;AAEpB,kBAAI,KAAK,WAAW;AAClB,sBAAM;AAAA,kBACJ;AAAA,kBACA;AAAA,gBACR,IAAU;AACJ,oBAAI,CAAC,QAAQ;AACX,wBAAM,IAAI,MAAM,gDAAgD;AAAA,gBACxE;AACM,sBAAM,QAAQ,OAAO,CAAC;AACtB,sBAAM,SAAS,OAAO,CAAC,KAAK;AAC5B,uBAAO,QAAQ;AACf,uBAAO,SAAS;AAChB,qBAAK,aAAa,KAAK,QAAQ,gBAAgB,OAAO,MAAM;AAC5D,qBAAK,aAAa,IAAI,kBAAkB,QAAQ,SAAS,CAAC;AAAA,cAChE;AAEI,oBAAM,eAAe,KAAK,gBAAe;AACzC,mBAAK,eAAe;AAEpB,kBAAI,KAAK,OAAO;AACd,wBAAQ,IAAI,kBAAkB;AAC9B,wBAAQ,IAAI,YAAY;AAAA,cAC9B;AAEI,kBAAI;AACF,qBAAK,MAAM,IAAI,SAAS,CAAA,GAAI,YAAY,EAAE,KAAK,IAAI,EAAC;AAAA,cAC1D,SAAa,GAAG;AACV,wBAAQ,MAAM,gDAAgD,CAAC;AAAA,cACrE;AACI,mBAAK,eAAe,SAAS;AAC7B,mBAAK,QAAQ;AAAA,YACjB;AAAA,YAEE,MAAM,GAAG,GAAG,GAAG,GAAG;AAChB,kBAAI,OAAO,MAAM,aAAa;AAC5B,oBAAI;AAAA,cACV;AAEI,kBAAI,KAAK,MAAM,IAAI,GAAG;AACtB,kBAAI,KAAK,MAAM,IAAI,GAAG;AACtB,kBAAI,KAAK,MAAM,IAAI,GAAG;AACtB,kBAAI,KAAK,MAAM,IAAI,GAAG;AAEtB,oBAAM,QAAQ,KAAK,OAAO,CAAC;AAC3B,oBAAM,SAAS,KAAK,OAAO,CAAC;AAE5B,oBAAM,IAAI,KAAK,OAAO;AACtB,oBAAM,IAAI,SAAS,KAAK,OAAO,IAAI;AAEnC,oBAAMa,SAAQ,IAAI,IAAI;AAEtB,mBAAK,WAAWA,SAAQ,IAAI,CAAC,IAAI;AACjC,mBAAK,WAAWA,SAAQ,IAAI,CAAC,IAAI;AACjC,mBAAK,WAAWA,SAAQ,IAAI,CAAC,IAAI;AACjC,mBAAK,WAAWA,SAAQ,IAAI,CAAC,IAAI;AAAA,YACrC;AAAA,YAEE,kBAAkB;AAChB,kBAAI,KAAK,kBAAkB,KAAM,QAAO,KAAK;AAE7C,kBAAI,qBAAqB;AACzB,kBAAI;AAAA,gBACF;AAAA,cACN,IAAQ;AACJ,kBAAI,kBAAkB,SAAS,GAAG;AAChC,oCAAoB,kBAAkB,OAAO,QAAM;AACjD,sBAAI,YAAY,KAAK,EAAE,EAAG,QAAO;AACjC,uCAAqB;AACrB,yBAAO;AAAA,gBACf,CAAO;AAAA,cACP,OAAW;AACL,qCAAqB,kBAAkB,MAAK;AAAA,cAClD;AACI,qBAAO,KAAK,gBAAgB,sBAAuB,KAAK,kBAAiB,CAAE;AAAA,IAC1E,KAAK,kBAAkB,EAAE;AAAA;AAAA,IAEzB,KAAK,oBAAmB,CAAE;AAAA,IAC1B,KAAK,kBAAiB,CAAE;AAAA,YAChB,KAAK,cAAc,IAAI,kBAAgB,UAAU,YAAY,EAAE,KAAK,IAAI,CAAC;AAAA,MAC/E,KAAK,iBAAiB,KAAK,EAAE,CAAC;AAAA,MAC9B,KAAK,aAAY,CAAE;AAAA,MACnB,KAAK,kBAAiB,CAAE;AAAA,MACxB,KAAK,YAAY,KAAK,qBAAqB,kBAAkB,IAAI,KAAK,kBAAkB,kBAAkB,CAAC;AAAA,MAC3G,kBAAkB,SAAS,IAAI,kBAAkB,KAAK,IAAI,IAAI,EAAE;AAAA;AAAA,YAEvE;AAAA,YAEE,WAAW;AACT,qBAAO,gBAAgB,IAAI;AAAA,YAC/B;AAAA,YAEE,oBAAoB;AAClB,qBACE,KAAK,oBACL,IAAK,SAAS,KAAK,iBAAiB,CAAC,MACrC;AAAA,YAEN;AAAA,YAEE,oBAAoB;AAClB,kBAAI,CAAC,KAAK,UAAW,QAAO;AAE5B,oBAAM,SAAS,CAAA;AACf,uBAAS,KAAK,KAAK,WAAW;AAC5B,sBAAM,OAAO,KAAK,cAAc,CAAC;AACjC,wBAAQ,MAAI;AAAA,kBACV,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACH,2BAAO,KAAK,uBAAuB,CAAC,0CAA0C,CAAC;AAAA,CAAM;AACrF;AAAA,kBACF,KAAK;AACH,2BAAO,KAAK,uBAAuB,CAAC,0CAA0C,CAAC;AAAA,CAAM;AACrF;AAAA,kBACF,KAAK;AACH,2BAAO,KAAK,uBAAuB,CAAC,qBAAqB,CAAC;AAAA,CAAW;AACrE;AAAA,kBACF;AACE,2BAAO,KAAK,uBAAuB,CAAC,qBAAqB,CAAC;AAAA,CAAK;AAAA,gBACzE;AAAA,cACA;AACI,qBAAO,OAAO,KAAK,EAAE;AAAA,YACzB;AAAA,YAEE,eAAe;AACb,kBAAI,KAAK,UAAW,QAAO;AAC3B,kBAAI,KAAK,UAAW,QAAO;AAC3B,kBAAI,CAAC,KAAK,SAAU,QAAO;AAC3B,oBAAM,iBAAiB,CAAA;AACvB,uBAAS,IAAI,GAAG,IAAI,KAAK,cAAc,QAAQ,KAAK;AAClD,oBAAI,KAAK,cAAc,CAAC,MAAM,SAAS;AACrC,iCAAe,KAAK,KAAK,cAAc,CAAC,CAAC;AAAA,gBACjD;AAAA,cACA;AACI,kBAAI,eAAe,WAAW,EAAG,QAAO;AACxC,oBAAM,SAAS,CAAA;AACf,uBAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,sBAAM,eAAe,eAAe,CAAC;AACrC,sBAAM,kBAAkB,KAAK,eAAe,eAAa,QAAQ,YAAY,eAAe,UAAU,IAAI,EAAE,EAAE,KAAK,MAAM;AACzH,uBAAO,KAAK,QAAQ,YAAY,cAAc,kBAAkB,OAAO,eAAe,KAAK,EAAE,EAAE;AAAA,cACrG;AACI,qBAAO,OAAO,OAAO,KAAK,MAAM,CAAC;AAAA,YACrC;AAAA,YAEE,oBAAoB;AAClB,oBAAM,SAAS,CAAA;AACf,uBAAS,IAAI,GAAG,IAAI,KAAK,cAAc,QAAQ,KAAK;AAClD,sBAAM,eAAe,QAAQ,KAAK,cAAc,CAAC,CAAC;AAClD,wBAAQ,KAAK,cAAc,CAAC,GAAC;AAAA,kBAC3B,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACH,2BAAO,KAAK,OAAO,YAAY,2BAA2B,YAAY;AAAA,CAAM;AAC5E;AAAA,kBACF,KAAK;AACH,2BAAO,KAAK,OAAO,YAAY,2BAA2B,YAAY;AAAA,CAAM;AAC5E;AAAA,kBACF,KAAK;AACH,2BAAO,KAAK,OAAO,YAAY,MAAM,YAAY;AAAA,CAAW;AAC5D;AAAA,kBACF,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACH,2BAAO,KAAK;AAAA,UACZ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,wDAKkC,YAAY;AAAA;AAAA,UAE1D,YAAY;AAAA;AAAA,kCAEY,YAAY;AAAA,UACpC,YAAY,MAAM,YAAY;AAAA,gCACR,YAAY;AAAA;AAAA,MAEtC;AACI;AAAA,gBACV;AAAA,cACA;AACI,qBAAO,OAAO,KAAK,EAAE;AAAA,YACzB;AAAA,YAEE,gBAAgB,OAAO;AACrB,oBAAM,SAAS,KAAK;AACpB,oBAAM,QAAQ,MAAM,QAAQ,IAAI,MAAM,QAAQ,MAAM;AACpD,oBAAM,SAAS,MAAM,SAAS,IAAI,MAAM,SAAS,MAAM;AACvD,kBAAI,OAAO,QAAQ,OAAO;AACxB,uBAAO,QAAQ;AAAA,cACrB;AACI,kBAAI,OAAO,SAAS,QAAQ;AAC1B,uBAAO,SAAS;AAAA,cACtB;AACI,oBAAM,MAAM,KAAK;AACjB,kBAAI;AACJ,kBAAI,MAAM,gBAAgB,WAAW;AACnC,6BAAa,MAAM;AAAA,cACzB,OAAW;AACL,oBAAI,UAAU,OAAO,GAAG,GAAG,OAAO,MAAM;AACxC,6BAAa,IAAI,aAAa,GAAG,GAAG,OAAO,MAAM,EAAE;AAAA,cACzD;AACI,oBAAM,aAAa,IAAI,MAAM,MAAM;AACnC,kBAAIA,SAAQ;AACZ,uBAAS,IAAI,SAAS,GAAG,KAAK,GAAG,KAAK;AACpC,sBAAM,MAAM,WAAW,CAAC,IAAI,IAAI,MAAM,KAAK;AAC3C,yBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,wBAAM,QAAQ,IAAI,aAAa,CAAC;AAChC,wBAAM,CAAC,IAAI,WAAWA,QAAO,IAAI;AACjC,wBAAM,CAAC,IAAI,WAAWA,QAAO,IAAI;AACjC,wBAAM,CAAC,IAAI,WAAWA,QAAO,IAAI;AACjC,wBAAM,CAAC,IAAI,WAAWA,QAAO,IAAI;AACjC,sBAAI,CAAC,IAAI;AAAA,gBACjB;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,UAAU,MAAM;AACd,oBAAM,CAAC,OAAO,MAAM,IAAI,KAAK;AAC7B,qBAAO,OAAO,MAAM,WAAW,KAAK,WAAW,MAAM,OAAO,MAAM,IAAI,KAAK,WAAW,KAAK,MAAM,CAAC;AAAA,YACtG;AAAA,YAEE,gBAAgB,QAAQ;AACtB,oBAAM,cAAc,IAAI,MAAM,OAAO,MAAM;AAC3C,uBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,4BAAY,CAAC,IAAI,KAAK,gBAAgB,OAAO,CAAC,CAAC;AAAA,cACrD;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,sBAAsB;AACpB,kBAAI,KAAK,UAAW,QAAO;AAC3B,kBAAI,KAAK,UAAW,QAAO;AAC3B,kBAAI,CAAC,KAAK,SAAU,QAAO;AAC3B,sBAAQ,KAAK,OAAO,QAAM;AAAA,gBACxB,KAAK;AACH,yBAAO,KAAK,wBAAuB;AAAA,gBACrC,KAAK;AACH,yBAAO,KAAK,wBAAuB;AAAA,gBACrC,KAAK;AACH,yBAAO,KAAK,wBAAuB;AAAA,cAC3C;AAAA,YACA;AAAA,YAEE,kBAAkB,cAAc;AAC9B,sBAAQ,KAAK,OAAO,QAAM;AAAA,gBACxB,KAAK;AACH,0BAAQ,CAAC,KAAK,aAAa,KAAK,WAAW,KAAK,2BAA2B,YAAY,IAAI,KAAK,6BAA6B,YAAY,KAAK,KAAK,cAAa;AAAA,gBAClK,KAAK;AACH,0BAAQ,CAAC,KAAK,aAAa,KAAK,WAAW,KAAK,2BAA2B,YAAY,IAAI,KAAK,6BAA6B,YAAY,KAAK,KAAK,cAAa;AAAA,gBAClK,KAAK;AACH,0BAAQ,CAAC,KAAK,aAAa,KAAK,WAAW,KAAK,2BAA2B,YAAY,IAAI,KAAK,6BAA6B,YAAY,KAAK,KAAK,cAAa;AAAA,gBAClK;AACE,wBAAM,IAAI,MAAM,yBAAyB;AAAA,cACjD;AAAA,YACA;AAAA,YAEE,qBAAqB,oBAAoB;AACvC,sBAAQ,KAAK,OAAO,QAAM;AAAA,gBACxB,KAAK;AACH,yBAAO,KAAK,uBAAuB,kBAAkB,IAAI,KAAK,iBAAgB;AAAA,gBAChF;AACE,wBAAM,IAAI,MAAM,yBAAyB;AAAA,cACjD;AAAA,YACA;AAAA,YAEE,mBAAmB;AACjB,qBAAO;AAAA;AAAA;AAAA;AAAA,YAIX;AAAA,YAEE,wCAAwC;AACtC,sBAAQ,KAAK,YAAU;AAAA,gBACrB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO;AAAA,gBACT;AACE,sBAAI,KAAK,WAAW;AAClB,2BAAO;AAAA,kBACjB;AACQ,wBAAM,IAAI,MAAM,wBAAyB,KAAK,UAAU,EAAG;AAAA,cACnE;AAAA,YACA;AAAA,YAEE,6BAA6B,cAAc;AACzC,oBAAM,oBAAoB,KAAK,sCAAqC;AACpE,qBAAO;AAAA,yBACc,iBAAiB;AAAA,MACnC,KAAK,eAAe,eAAa,gBAAiB,UAAU,IAAI,UAAW,iBAAiB;AAAA,CAAc,EAAE,KAAK,MAAM,CAAC;AAAA,MACxH,KAAK,eAAe,eAAa,uBAAwB,UAAU;CAAU,EAAE,KAAK,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,QAKzF,YAAY;AAAA;AAAA,YAErB;AAAA,YAEE,0BAA0B;AACxB,oBAAM,oBAAoB,KAAK,sCAAqC;AACpE,qBAAO;AAAA,yBACc,iBAAiB;AAAA,MACnC,KAAK,eAAe,eAAa,gBAAiB,UAAU,IAAI,UAAW,iBAAiB;AAAA,CAAc,EAAE,KAAK,MAAM,CAAC;AAAA,MACxH,KAAK,eAAe,eAAa,uBAAwB,UAAU,IAAI;AAAA,CAAM,EAAE,KAAK,MAAM,CAAC;AAAA,YAClG;AAAA,YAEE,2BAA2B,cAAc;AACvC,qBAAO;AAAA;AAAA;AAAA;AAAA;AAAA,QAKF,YAAY;AAAA;AAAA,YAErB;AAAA,YAEE,6BAA6B,cAAc;AACzC,oBAAM,oBAAoB,KAAK,sCAAqC;AACpE,qBAAO;AAAA;AAAA;AAAA,MAGJ,KAAK,eAAe,eAAa,gBAAiB,UAAU;CAA+B,EAAE,KAAK,MAAM,CAAC;AAAA,MACzG,KAAK,eAAe,eAAa,uBAAwB,UAAU;CAAU,EAAE,KAAK,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA,wCAI1D,iBAAiB;AAAA,QAChD,KAAK,eAAe,eAAa,iBAAkB,UAAU,IAAI,aAAc,UAAU,IAAI,aAAa,iBAAiB;AAAA,CAAc,EAAE,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA,UAGjJ,YAAY;AAAA;AAAA;AAAA,YAGvB;AAAA,YAEE,0BAA0B;AACxB,oBAAM,oBAAoB,KAAK,sCAAqC;AACpE,qBAAO;AAAA;AAAA;AAAA,MAGJ,KAAK,eAAe,eAAa,gBAAiB,UAAU;CAA+B,EAAE,KAAK,MAAM,CAAC;AAAA,MACzG,KAAK,eAAe,eAAa,uBAAwB,UAAU;CAAU,EAAE,KAAK,MAAM,CAAC;AAAA;AAAA,wCAE1D,iBAAiB;AAAA,QAChD,KAAK,eAAe,eAAa,iBAAkB,UAAU,IAAI,aAAc,UAAU,IAAI,aAAa,iBAAiB;AAAA,CAAc,EAAE,KAAK,EAAE,CAAC;AAAA;AAAA,YAE5J;AAAA,YAEE,2BAA2B,cAAc;AACvC,oBAAM,oBAAoB,KAAK,sCAAqC;AACpE,qBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMF,KAAK,eAAe,eAAa,iBAAkB,UAAU,IAAI,aAAc,UAAU,IAAI,aAAa,iBAAiB;AAAA,CAAc,EAAE,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA,UAGjJ,YAAY;AAAA;AAAA;AAAA,YAGvB;AAAA,YAEE,uBAAuB,cAAc;AACnC,qBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOA,YAAY;AAAA;AAAA;AAAA,YAGvB;AAAA,YAEE,6BAA6B,cAAc;AACzC,oBAAM,oBAAoB,KAAK,sCAAqC;AACpE,qBAAO;AAAA;AAAA;AAAA;AAAA,MAIJ,KAAK,eAAe,eAAa,gBAAiB,UAAU;CAA+B,EAAE,KAAK,MAAM,CAAC;AAAA,MACzG,KAAK,eAAe,eAAa,uBAAwB,UAAU;CAAU,EAAE,KAAK,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA,QAIzF,KAAK,eAAe,eAAa,iBAAkB,UAAU,IAAI,aAAc,UAAU,IAAI;AAAA,CAA6B,EAAE,KAAK,QAAQ,CAAC;AAAA;AAAA;AAAA,2CAGxG,iBAAiB;AAAA,UACjD,KAAK,eAAe,eAAa,iBAAkB,UAAU,IAAI,cAAe,UAAU,IAAI,aAAa,iBAAiB;AAAA,CAAc,EAAE,KAAK,UAAU,CAAC;AAAA;AAAA;AAAA,YAG1J,YAAY;AAAA;AAAA;AAAA;AAAA,YAIzB;AAAA,YAEE,0BAA0B;AACxB,oBAAM,oBAAoB,KAAK,sCAAqC;AACpE,qBAAO;AAAA;AAAA;AAAA;AAAA,MAIJ,KAAK,eAAe,eAAa,gBAAiB,UAAU;CAA+B,EAAE,KAAK,MAAM,CAAC;AAAA,MACzG,KAAK,eAAe,eAAa,uBAAwB,UAAU;CAAU,EAAE,KAAK,MAAM,CAAC;AAAA;AAAA;AAAA,QAGzF,KAAK,eAAe,eAAa,iBAAkB,UAAU,IAAI,aAAc,UAAU,IAAI;AAAA,CAA6B,EAAE,KAAK,QAAQ,CAAC;AAAA;AAAA,2CAExG,iBAAiB;AAAA,UACjD,KAAK,eAAe,eAAa,iBAAkB,UAAU,IAAI,cAAe,UAAU,IAAI,aAAa,iBAAiB;AAAA,CAAc,EAAE,KAAK,UAAU,CAAC;AAAA;AAAA;AAAA,YAGvK;AAAA,YAEE,2BAA2B,cAAc;AACvC,qBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAWE,YAAY;AAAA;AAAA;AAAA;AAAA,YAIzB;AAAA,YAEE,gBAAgB;AACd,kBAAI,CAAC,KAAK,YAAY;AACpB,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA;AAAA;AAAA,QAEF,KAAK,WAAW,IAAI,eAAa,GAAI,UAAU,QAAQ,YAAc,UAAU,IAAI,EAAG,EAAE,KAAK,WAAW,CAAC;AAAA;AAAA,YAElH;AAAA,YAEE,eAAe,IAAI;AACjB,qBAAO,KAAK,eAAe,OAAO,CAAC,EAAE,IACnC,KAAK,WAAW,IAAI,EAAE;AAAA,YAC5B;AAAA,YAEE,QAAQ,uBAAuB;AAC7B,kBAAI,uBAAuB;AACzB,uBAAO,KAAK;AAAA,cAClB;AAAA,YACA;AAAA,YAEE,OAAO,eAAe,SAAS;AAAA,YAAA;AAAA,YAE/B,SAAS;AACP,oBAAM,OAAO,MAAM,OAAM;AACzB,mBAAK,gBAAgB,gBAAgB,WAAW,MAAM,eAAe,EAAE,OAAM;AAC7E,qBAAO;AAAA,YACX;AAAA,YAEE,UAAU,QAAQ;AAChB,oBAAM,UAAU,MAAM;AACtB,oBAAM,CAAC,OAAO,MAAM,IAAI,KAAK;AAC7B,kBAAI,KAAK,WAAW;AAClB,qBAAK,aAAa,KAAK,QAAQ,gBAAgB,OAAO,MAAM;AAC5D,qBAAK,aAAa,IAAI,kBAAkB,QAAQ,SAAS,CAAC;AAAA,cAChE;AAAA,YACA;AAAA,YAEE,cAAcF,QAAO;AACnB,kBAAI,KAAK,cAAe,OAAM,IAAI,MAAM,sBAAsB;AAC9D,mBAAK,iBAAiB,KAAKA,MAAK;AAAA,YACpC;AAAA,YAEE,iBAAiBA,QAAO;AACtB,qBAAO,KAAK,iBAAiB,QAAQA,MAAK,IAAI;AAAA,YAClD;AAAA,UACA;AA7mB+B;AAA/B,cAAM,YAAN;AA+mBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,eAAc,KAAI,uBAAsB,GAAE,aAAY,IAAG,mBAAkB,GAAE,mBAAkB,EAAC,CAAC,GAAE,GAAE,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACzI,gBAAM,mBAAN,MAAM,iBAAgB;AAAA,YACpB,OAAO,WAAW,QAAQ,cAAc,kBAAkB;AACxD,oBAAM;AAAA,gBACJ;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cACN,IAAQ;AAEJ,oBAAM,gBAAgB,IAAI,MAAM,gBAAgB,MAAM;AACtD,oBAAM,gBAAgB,CAAA;AAEtB,uBAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,8BAAc,CAAC,IAAI,gBAAgB,CAAC,EAAE;AAAA,cAC5C;AAEI,uBAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,sBAAM,iBAAiB,gBAAgB,CAAC;AACxC,8BAAc,eAAe,IAAI,IAAI,eAAe;AAAA,cAC1D;AAEI,oBAAM,oBAAoB,wBAAC,cAAcmB,WAAU;AACjD,uBAAO,gBAAgB,kBAAkB,cAAcA,MAAK;AAAA,cAClE,GAF8B;AAI1B,oBAAM,qBAAqB,wBAAC,cAAcA,QAAO,SAAS;AACxD,gCAAgB,mBAAmB,cAAcA,QAAO,IAAI;AAAA,cAClE,GAF+B;AAI3B,oBAAM,mBAAmB,wBAAC,cAAc,KAAK,mBAAmB;AAC9D,uBAAO,gBAAgB,iBAAiB,cAAc,KAAK,cAAc;AAAA,cAC/E,GAF6B;AAIzB,oBAAM,8BAA8B,wBAAC,iBAAiB;AACpD,uBAAO,gBAAgB,4BAA4B,YAAY;AAAA,cACrE,GAFwC;AAIpC,oBAAM,6BAA6B,wBAAC,cAAc,kBAAkB;AAClE,uBAAO,gBAAgB,2BAA2B,cAAc,aAAa;AAAA,cACnF,GAFuC;AAInC,oBAAM,iCAAiC,wBAAC,cAAc,iBAAiB;AACrE,uBAAO,gBAAgB,+BAA+B,cAAc,YAAY;AAAA,cACtF,GAF2C;AAIvC,oBAAM,2BAA2B,wBAAC,cAAc,GAAG,cAAc,mBAAmB;AAClF,gCAAgB,mBAAmB,cAAc,GAAG,cAAc,cAAc;AAAA,cACtF,GAFqC;AAIjC,oBAAM,+BAA+B,wBAAC,cAAc,cAAc,oBAAoB,kBAAkB;AACtG,gCAAgB,uBAAuB,cAAc,cAAc,oBAAoB,aAAa;AAAA,cAC1G,GAFyC;AAIrC,oBAAM,iBAAiB,wBAAC,cAAc,oBAAoB,SAAS;AACjE,gCAAgB,kBAAkB,cAAc,oBAAoB,IAAI;AAAA,cAC9E,GAF2B;AAIvB,oBAAM,mBAAmB,wBAAC,KAAKO,YAAW;AACxC,sBAAMC,iBAAgB,CAAA;AACtB,yBAAS,IAAI,GAAG,IAAI,IAAI,OAAO,QAAQ,KAAK;AAC1C,kBAAAA,eAAc,KAAK,IAAI,OAAO,CAAC,EAAE,IAAI;AAAA,gBAC7C;AACM,sBAAM,iBAAiB,IAAI,aAAaD,SAAQ,OAAO,OAAO,CAAA,GAAI,aAAa;AAAA,kBAC7E,YAAY;AAAA,kBACZ;AAAA,kBACA,MAAM,IAAI,GAAG;AAAA,kBACb,eAAAC;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,gBACR,CAAO,CAAC;AACF,+BAAe,iBAAiB,GAAG;AACnC,gCAAgB,gBAAgB,cAAc;AAAA,cACpD,GAtB6B;AAwBzB,oBAAM,cAAc,OAAO,OAAO;AAAA,gBAChC,cAAc;AAAA,gBACd;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cACN,GAAO,oBAAoB,CAAA,CAAE;AAEzB,oBAAM,kBAAkB,OAAO,OAAO,CAAA,GAAI,aAAa;AAAA,gBACrD,cAAc;AAAA,gBACd,MAAM;AAAA,gBACN;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cACN,CAAK;AAED,kBAAI,OAAO,WAAW,YAAY,OAAO,eAAe;AACtD,uBAAO,IAAI,iBAAe,EAAG,SAAS,OAAO,eAAe,YAAY;AAAA,cAC9E;AAEI,oBAAM,WAAW,IAAI,aAAa,QAAQ,eAAe;AAEzD,kBAAI,gBAAgB;AACpB,kBAAI,WAAW;AACb,gCAAgB,UAAU,IAAI,CAAC,OAAO,IAAI,aAAa,GAAG,QAAQ;AAAA,kBAChE,YAAY,GAAG;AAAA,kBACf,eAAe,GAAG;AAAA,kBAClB;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,gBACR,CAAO,CAAC;AAAA,cACR;AAEI,kBAAI,iBAAiB;AACrB,kBAAI,YAAY;AACd,iCAAiB,WAAW,IAAI,CAAC,cAAc;AAC7C,wBAAM,EAAE,MAAArB,OAAM,QAAAoB,QAAM,IAAK;AACzB,yBAAO,IAAI,aAAaA,SAAQ,OAAO,OAAO,CAAA,GAAI,aAAa;AAAA,oBAC7D,MAAApB;AAAA,oBACA,aAAa;AAAA,oBACb,cAAc;AAAA,kBACxB,CAAS,CAAC;AAAA,gBACV,CAAO;AAAA,cACP;AAEI,oBAAM,kBAAkB,IAAI,iBAAgB;AAAA,gBAC1C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cACN,CAAK;AAED,qBAAO;AAAA,YACX;AAAA,YAEE,YAAY,UAAU;AACpB,yBAAW,YAAY,CAAA;AACvB,mBAAK,SAAS,SAAS;AACvB,mBAAK,WAAW,SAAS;AACzB,mBAAK,gBAAgB,SAAS,iBAAiB,CAAA;AAC/C,mBAAK,iBAAiB,SAAS,kBAAkB,CAAA;AACjD,mBAAK,kBAAkB,SAAS,mBAAmB,CAAA;AACnD,mBAAK,cAAc,CAAA;AACnB,mBAAK,sBAAsB,CAAA;AAC3B,mBAAK,cAAc,CAAA;AACnB,mBAAK,2BAA2B,CAAA;AAChC,mBAAK,gBAAgB,CAAA;AAErB,kBAAI,KAAK,UAAU;AACjB,qBAAK,YAAY,QAAQ,IAAI,KAAK;AAAA,cACxC;AAEI,kBAAI,KAAK,eAAe;AACtB,yBAAS,IAAI,GAAG,IAAI,KAAK,cAAc,QAAQ,KAAK;AAClD,uBAAK,YAAY,KAAK,cAAc,CAAC,EAAE,IAAI,IAAI,KAAK,cAAc,CAAC;AAAA,gBAC3E;AAAA,cACA;AAEI,kBAAI,KAAK,gBAAgB;AACvB,yBAAS,IAAI,GAAG,IAAI,KAAK,eAAe,QAAQ,KAAK;AACnD,uBAAK,YAAY,KAAK,eAAe,CAAC,EAAE,IAAI,IAAI,KAAK,eAAe,CAAC;AAAA,gBAC7E;AAAA,cACA;AAEI,kBAAI,KAAK,iBAAiB;AACxB,yBAAS,IAAI,GAAG,IAAI,KAAK,gBAAgB,QAAQ,KAAK;AACpD,wBAAM,iBAAiB,KAAK,gBAAgB,CAAC;AAC7C,uBAAK,oBAAoB,KAAK,eAAe,IAAI;AAAA,gBACzD;AAAA,cACA;AAAA,YACA;AAAA,YAEE,gBAAgB,cAAc;AAC5B,kBAAI,CAAC,aAAa,KAAM,OAAM,IAAI,MAAM,6BAA6B;AACrE,mBAAK,YAAY,aAAa,IAAI,IAAI;AACtC,kBAAI,aAAa,cAAc;AAC7B,qBAAK,WAAW;AAAA,cACtB;AAAA,YACA;AAAA,YAEE,mBAAmB,cAAc,SAAS;AACxC,6BAAe,gBAAgB;AAC/B,wBAAU,WAAW,CAAA;AAErB,kBAAI,KAAK,oBAAoB,QAAQ,YAAY,IAAI,IAAI;AACvD,sBAAM,sBAAsB,QAAQ,QAAQ,YAAY;AACxD,oBAAI,wBAAwB,IAAI;AAC9B,0BAAQ,KAAK,YAAY;AAAA,gBACjC,OAAa;AACL,wBAAM,8BAA8B,QAAQ,OAAO,qBAAqB,CAAC,EAAE,CAAC;AAC5E,0BAAQ,KAAK,2BAA2B;AAAA,gBAChD;AACM,uBAAO;AAAA,cACb;AAEI,oBAAM,eAAe,KAAK,YAAY,YAAY;AAClD,kBAAI,cAAc;AAChB,sBAAM,gBAAgB,QAAQ,QAAQ,YAAY;AAClD,oBAAI,kBAAkB,IAAI;AACxB,0BAAQ,KAAK,YAAY;AACzB,+BAAa,SAAQ;AACrB,2BAAS,IAAI,GAAG,IAAI,aAAa,gBAAgB,QAAQ,EAAE,GAAG;AAC5D,yBAAK,mBAAmB,aAAa,gBAAgB,CAAC,GAAG,OAAO;AAAA,kBAC1E;AAAA,gBACA,OAAa;AACL,wBAAM,wBAAwB,QAAQ,OAAO,eAAe,CAAC,EAAE,CAAC;AAChE,0BAAQ,KAAK,qBAAqB;AAAA,gBAC1C;AAAA,cACA;AAEI,qBAAO;AAAA,YACX;AAAA,YAEE,mBAAmB,cAAc;AAC/B,qBAAO,KAAK,cAAc,YAAY,EAAE,KAAK,IAAI;AAAA,YACrD;AAAA,YAEE,cAAc,cAAc;AAC1B,kBAAI,KAAK,UAAU;AACjB,qBAAK,SAAS,SAAQ;AAAA,cAC5B;AACI,kBAAI,cAAc;AAChB,uBAAO,KAAK,+BAA+B,KAAK,mBAAmB,cAAc,CAAA,CAAE,EAAE,SAAS;AAAA,cACpG;AACI,qBAAO,KAAK,+BAA+B,OAAO,KAAK,KAAK,WAAW,CAAC;AAAA,YAC5E;AAAA,YAEE,2BAA2B,cAAc;AACvC,oBAAM,MAAM,CAAA;AACZ,uBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,EAAE,GAAG;AAC5C,sBAAM,OAAO,KAAK,YAAY,aAAa,CAAC,CAAC;AAC7C,oBAAI,MAAM;AACR,sBAAI,KAAK,KAAK,YAAY,aAAa,CAAC,CAAC,EAAE,UAAU;AAAA,gBAC7D;AAAA,cACA;AACI,qBAAO,IAAI,KAAK,IAAI;AAAA,YACxB;AAAA,YAEE,+BAA+B,cAAc;AAC3C,oBAAM,MAAM,CAAA;AACZ,uBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,EAAE,GAAG;AAC5C,sBAAM,eAAe,aAAa,CAAC;AACnC,sBAAM,gBAAgB,KAAK,oBAAoB,QAAQ,YAAY;AACnE,oBAAI,gBAAgB,IAAI;AACtB,sBAAI,KAAK,KAAK,gBAAgB,aAAa,EAAE,MAAM;AACnD;AAAA,gBACR;AACM,sBAAM,OAAO,KAAK,YAAY,YAAY;AAC1C,oBAAI,MAAM;AACR,sBAAI,KAAK,KAAK,UAAU;AAAA,gBAChC;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,SAAS;AACP,qBAAO,KAAK,mBAAmB,KAAK,SAAS,IAAI,EAAE,QAAO,EAAG,IAAI,CAAAA,UAAQ;AACvE,sBAAM,cAAc,KAAK,gBAAgB,QAAQA,KAAI;AACrD,oBAAI,cAAc,IAAI;AACpB,yBAAO;AAAA,oBACL,MAAAA;AAAA,oBACA,QAAQ,KAAK,gBAAgB,WAAW,EAAE;AAAA;gBAEpD,WAAiB,KAAK,YAAYA,KAAI,GAAG;AACjC,yBAAO,KAAK,YAAYA,KAAI,EAAE,OAAM;AAAA,gBAC5C,OAAa;AACL,wBAAM,IAAI,MAAM,YAAaA,KAAI,YAAa;AAAA,gBACtD;AAAA,cACA,CAAK;AAAA,YACL;AAAA,YAEE,SAAS,mBAAmB,cAAc;AACxC,mBAAK,cAAc,CAAA;AACnB,uBAAS,IAAI,GAAG,IAAI,kBAAkB,QAAQ,KAAK;AACjD,sBAAM,mBAAmB,kBAAkB,CAAC;AAC5C,qBAAK,YAAY,iBAAiB,SAAS,IAAI,IAAI,IAAI,aAAa,iBAAiB,KAAK,iBAAiB,QAAQ;AAAA,cACzH;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,UAAU,cAAc;AACtB,kBAAI,cAAc;AAChB,uBAAO,KAAK,2BAA2B,KAAK,mBAAmB,YAAY,EAAE,SAAS;AAAA,cAC5F;AACI,qBAAO,KAAK,2BAA2B,OAAO,KAAK,KAAK,WAAW,CAAC;AAAA,YACxE;AAAA,YAEE,iBAAiB,cAAc,KAAK,gBAAgB;AAClD,kBAAI,IAAI,SAAS,kBAAkB;AACjC,sBAAM,IAAI,MAAM,iDAAkD,IAAI,IAAI,EAAG;AAAA,cACnF;AACI,kBAAI,KAAK,kBAAkB,YAAY,GAAG;AACxC,uBAAO,KAAK,gCAAgC,YAAY;AAAA,cAC9D,WAAe,KAAK,YAAY,YAAY,GAAG;AACzC,sBAAM,OAAO,KAAK,aAAa,YAAY;AAC3C,oBAAI,KAAK,YAAY;AACnB,yBAAO,KAAK;AAAA,gBACpB,OAAa;AACL,2BAAS,IAAI,GAAG,IAAI,KAAK,YAAY,QAAQ,KAAK;AAChD,wBAAI,KAAK,YAAY,CAAC,EAAE,QAAQ,KAAK;AACnC,0BAAI,KAAK,cAAc,WAAW,KAAK,IAAI,UAAU,SAAS,GAAG;AAC/D,8BAAM,OAAO,IAAI;AACjB,iCAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,+BAAK,YAAY,KAAK;AAAA,4BACpB,MAAM,eAAe;AAAA,4BACrB,KAAK,KAAK,CAAC;AAAA,4BACX;AAAA,0BAClB,CAAiB;AACD,+BAAK,cAAc,CAAC,IAAI,eAAe,QAAQ,KAAK,CAAC,CAAC;AACtD,+BAAK,YAAY,IAAG;AAAA,wBACpC;AACc,+BAAO,KAAK,aAAa,KAAK,QAAQ,KAAK,UAAU;AAAA,sBACnE;AAEY,4BAAM,IAAI,MAAM,2BAA2B;AAAA,oBACvD;AAAA,kBACA;AACQ,uBAAK,YAAY,KAAK;AAAA,oBACpB,MAAM,eAAe;AAAA,oBACrB;AAAA,oBACA;AAAA,kBACV,CAAS;AACD,wBAAM,OAAO,KAAK,QAAQ,KAAK,SAAQ,CAAE;AACzC,uBAAK,YAAY,IAAG;AACpB,yBAAO,KAAK,aAAa;AAAA,gBACjC;AAAA,cACA;AAEI,qBAAO;AAAA,YACX;AAAA,YAEE,aAAa,cAAc;AACzB,kBAAI,CAAC,KAAK,YAAY,YAAY,GAAG;AACnC,oBAAI,MAAM,YAAY,YAAY,YAAY;AAAA,cACpD;AACI,qBAAO,KAAK,YAAY,YAAY;AAAA,YACxC;AAAA,YAEE,YAAY,cAAc;AACxB,qBAAO,QAAQ,KAAK,YAAY,YAAY,CAAC;AAAA,YACjD;AAAA,YAEE,mBAAmB,cAAc;AAC/B,uBAAS,IAAI,GAAG,IAAI,KAAK,gBAAgB,QAAQ,KAAK;AACpD,oBAAI,KAAK,gBAAgB,CAAC,EAAE,SAAS,aAAc,QAAO,KAAK,gBAAgB,CAAC;AAAA,cACtF;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkB,cAAc;AAC9B,qBAAO,QAAQ,KAAK,mBAAmB,YAAY,CAAC;AAAA,YACxD;AAAA,YAEE,gCAAgC,cAAc;AAC5C,kBAAI,iBAAiB,KAAK,mBAAmB,YAAY;AACzD,kBAAI,gBAAgB;AAClB,uBAAO,eAAe;AAAA,cAC5B;AACI,oBAAM,IAAI,MAAM,mBAAoB,YAAY,YAAa;AAAA,YACjE;AAAA,YAEE,4BAA4B,cAAc;AACxC,kBAAI,KAAK,kBAAkB,YAAY,GAAG;AACxC,uBAAO,KAAK,mBAAmB,YAAY,EAAE;AAAA,cACnD,WAAe,KAAK,YAAY,YAAY,GAAG;AACzC,uBAAO,KAAK,aAAa,YAAY,EAAE;AAAA,cAC7C;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,2BAA2B,cAAc,eAAe;AACtD,qBAAO,KAAK,aAAa,YAAY,EAAE,cAAc,aAAa;AAAA,YACtE;AAAA,YAEE,+BAA+B,cAAc,cAAc;AACzD,kBAAI,CAAC,KAAK,YAAY,YAAY,GAAG;AACnC,sBAAM,IAAI,MAAM,oBAAoB;AAAA,cAC1C;AACI,kBAAI,KAAK,SAAS,SAAS,cAAc;AACvC,sBAAML,KAAI,KAAK,SAAS,cAAc,QAAQ,YAAY;AAC1D,oBAAIA,OAAM,IAAI;AACZ,yBAAO,KAAK,SAAS,kBAAkBA,EAAC;AAAA,gBAChD;AAAA,cACA;AACI,oBAAM,OAAO,KAAK,aAAa,YAAY;AAC3C,oBAAM,IAAI,KAAK,cAAc,QAAQ,YAAY;AACjD,kBAAI,MAAM,IAAI;AACZ,sBAAM,IAAI,MAAM,oBAAoB;AAAA,cAC1C;AACI,oBAAM,WAAW,KAAK,kBAAkB,CAAC;AACzC,kBAAI,OAAO,aAAa,UAAU;AAChC,sBAAM,IAAI,MAAM,8BAA8B;AAAA,cACpD;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkB,cAAc,GAAG;AACjC,kBAAI,CAAC,KAAK,YAAY,YAAY,EAAG,QAAO;AAC5C,oBAAM,SAAS,KAAK,aAAa,YAAY;AAC7C,qBAAO,CAAC,OAAO,cAAc,CAAC;AAAA,YAClC;AAAA,YAEE,mBAAmB,cAAc,GAAG,cAAc,gBAAgB;AAChE,kBAAI,CAAC,KAAK,YAAY,YAAY,EAAG;AACrC,oBAAM,SAAS,KAAK,aAAa,YAAY;AAC7C,kBAAI,CAAC,OAAO,cAAc,CAAC,GAAG;AAC5B,uBAAO,cAAc,CAAC,IAAI;AAAA,cAChC;AAAA,YACA;AAAA,YAEE,uBAAuB,cAAc,cAAc,oBAAoB,eAAe;AACpF,oBAAM,OAAO,KAAK,aAAa,YAAY;AAC3C,kBAAI,KAAK,kBAAkB,kBAAkB,EAAG,QAAO;AACvD,oBAAM,aAAa,KAAK,aAAa,kBAAkB;AACvD,oBAAM,IAAI,KAAK,cAAc,QAAQ,YAAY;AACjD,kBAAI,MAAM,IAAI;AACZ,sBAAM,IAAI,MAAM,YAAY,YAAY,yCAAyC,YAAY,EAAE;AAAA,cACrG;AACI,oBAAM,WAAW,KAAK,kBAAkB,CAAC;AACzC,kBAAI,OAAO,aAAa,UAAU;AAChC,sBAAM,IAAI,MAAM,0BAA0B,YAAY,0BAA0B,YAAY,EAAE;AAAA,cACpG;AACI,kBAAI,CAAC,WAAW,mBAAmB;AACjC,2BAAW,oBAAoB,IAAI,MAAM,WAAW,cAAc,MAAM;AAAA,cAC9E;AACI,oBAAM,iBAAiB,WAAW,kBAAkB,CAAC;AACrD,kBAAI,OAAO,mBAAmB,UAAU;AACtC,oBAAI,mBAAmB,UAAU;AAC/B,wBAAM,IAAI,MAAM,4CAA4C,YAAY,gBAAgB,YAAY,EAAE;AAAA,gBAC9G;AACM,uBAAO;AAAA,cACb;AACI,yBAAW,kBAAkB,CAAC,IAAI;AAClC,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkB,cAAc,oBAAoB,MAAM;AACxD,kBAAI,CAAC,KAAK,yBAAyB,YAAY,GAAG;AAChD,qBAAK,yBAAyB,YAAY,IAAI,oBAAI,IAAG;AACrD,qBAAK,cAAc,YAAY,IAAI,CAAA;AAAA,cACzC;AACI,mBAAK,yBAAyB,YAAY,EAAE,IAAI,kBAAkB;AAClE,mBAAK,cAAc,YAAY,EAAE,KAAK,IAAI;AAAA,YAC9C;AAAA,YAEE,sBAAsB;AACpB,qBAAO,KAAK,SAAS,cAAc,KAAK,SAAS,QAAQ,KAAK,SAAS,GAAG;AAAA,YAC9E;AAAA,YAEE,uBAAuBkB,QAAO;AAC5B,oBAAM,gBAAgB,KAAK,eAAeA,MAAK;AAC/C,kBAAI,SAAS;AACb,uBAAS,oBAAoB,GAAG,oBAAoB,KAAK,SAAS,cAAc,QAAQ,qBAAqB;AAC3G,sBAAM,eAAe,KAAK,SAAS,cAAc,iBAAiB;AAClE,oBAAI,aAAa,IAAI,OAAO,SAAS,cAAc,MAAM;AACvD,2BAAS;AAAA,gBACjB;AAAA,cACA;AACI,kBAAI,CAAC,QAAQ;AACX,sBAAM,IAAI,MAAM,aAAc,cAAc,IAAI,yBAA0B;AAAA,cAChF;AACI,qBAAO,cAAc,cAAc,cAAc,QAAQ,cAAc,UAAU;AAAA,YACrF;AAAA,YAEE,iBAAiB;AACf,oBAAM,SAAS;AAAA,gBACb,CAAC,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS,QAAQ,KAAK,SAAS,GAAG;AAAA;AAE/D,oBAAM,OAAO,KAAK,mBAAmB,KAAK,SAAS,IAAI;AACvD,uBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,sBAAM,eAAe,KAAK,CAAC;AAC3B,sBAAM,eAAe,KAAK,YAAY,YAAY;AAClD,uBAAO,YAAY,IAAI,aAAa,QAAQ,aAAa,GAAG;AAAA,cAClE;AACI,qBAAO;AAAA,YACX;AAAA,UACA;AAjhBsB;AAAtB,cAAM,kBAAN;AAmhBA,UAAAtB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,CAAA,CAAE,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC1C,gBAAM,QAAQE,SAAQ,OAAO;AAC7B,gBAAM,EAAE,MAAK,IAAKA,SAAQ,UAAU;AACpC,gBAAM,EAAE,eAAc,IAAKA,SAAQ,mBAAmB;AAEtD,gBAAM,gBAAN,MAAM,cAAa;AAAA,YACjB,YAAY,QAAQ,UAAU;AAC5B,kBAAI,CAAC,UAAU,CAAC,SAAS,KAAK;AAC5B,sBAAM,IAAI,MAAM,6BAA6B;AAAA,cACnD;AACI,yBAAW,YAAY,CAAA;AACvB,mBAAK,SAAS;AACd,mBAAK,MAAM;AACX,mBAAK,OAAO,OAAO,WAAW,WAAW,SAAS,eAChD,WACC,SAAS,QAAQ,MAAM,0BAA0B,MAAM,IAAK;AAC/D,mBAAK,kBAAkB,CAAA;AACvB,mBAAK,YAAY,CAAA;AACjB,mBAAK,gBAAgB,CAAA;AACrB,mBAAK,oBAAoB,CAAA;AACzB,mBAAK,eAAe;AACpB,mBAAK,cAAc;AACnB,mBAAK,QAAQ;AACb,mBAAK,YAAY;AACjB,mBAAK,cAAc;AACnB,mBAAK,WAAW;AAChB,mBAAK,gBAAgB;AACrB,mBAAK,SAAS,CAAA;AACd,mBAAK,oBAAoB;AACzB,mBAAK,qBAAqB;AAC1B,mBAAK,mBAAmB;AACxB,mBAAK,8BAA8B;AACnC,mBAAK,iCAAiC;AACtC,mBAAK,2BAA2B;AAChC,mBAAK,+BAA+B;AACpC,mBAAK,mBAAmB;AACxB,mBAAK,iBAAiB;AACtB,mBAAK,sBAAsB;AAC3B,mBAAK,YAAY;AACjB,mBAAK,oBAAoB;AACzB,mBAAK,gBAAiB,OAAO,KAAK,WAAW,WAAW,MAAM,2BAA2B,KAAK,MAAM,IAAI;AACxG,mBAAK,gBAAgB,CAAA;AACrB,mBAAK,gBAAgB,CAAA;AACrB,mBAAK,oBAAoB;AACzB,mBAAK,aAAa;AAClB,mBAAK,SAAS,CAAA;AACd,mBAAK,UAAU;AACf,mBAAK,yBAAyB;AAC9B,mBAAK,2BAA2B;AAChC,mBAAK,gBAAgB;AACrB,mBAAK,mBAAmB;AACxB,mBAAK,uBAAuB;AAC5B,mBAAK,6BAA6B;AAElC,kBAAI,UAAU;AACZ,2BAAW,KAAK,UAAU;AACxB,sBAAI,CAAC,SAAS,eAAe,CAAC,EAAG;AACjC,sBAAI,CAAC,KAAK,eAAe,CAAC,EAAG;AAC7B,uBAAK,CAAC,IAAI,SAAS,CAAC;AAAA,gBAC5B;AAAA,cACA;AAEI,mBAAK,eAAe,CAAA;AAEpB,mBAAK,SAAQ;AACb,mBAAK,UAAU;AACf,mBAAK,yBAAyB,CAAA;AAAA,YAClC;AAAA,YAEE,WAAW;AACT,kBAAI,OAAO,KAAK,WAAW,YAAY,CAAC,KAAK,KAAK;AAChD,sBAAM,IAAI,MAAM,0BAA0B;AAAA,cAChD;AAEI,kBAAI,CAAC,KAAK,OAAO,CAAC,MAAM,iBAAiB,KAAK,MAAM,GAAG;AACrD,sBAAM,IAAI,MAAM,mCAAmC;AAAA,cACzD;AAEI,kBAAI,CAAC,KAAK,MAAM;AACd,sBAAM,IAAI,MAAM,4BAA4B;AAAA,cAClD;AAEI,kBAAI,KAAK,cAAc,SAAS,KAAK,KAAK,cAAc,WAAW,KAAK,cAAc,QAAQ;AAC5F,sBAAM,IAAI,MAAM,0BAA2B,KAAK,cAAc,MAAM,YAAc,KAAK,cAAc,MAAM,EAAG;AAAA,cACpH;AAEI,kBAAI,KAAK,OAAO,SAAS,GAAG;AAC1B,sBAAM,IAAI,MAAM,+BAA+B;AAAA,cACrD;AAAA,YACA;AAAA,YAEE,qBAAqBI,OAAM;AACzB,kBAAI,CAAC,KAAK,UAAW,QAAO;AAC5B,qBAAO,KAAK,UAAU,eAAeA,KAAI;AAAA,YAC7C;AAAA,YAEE,QAAQ,cAAc;AACpB,qBAAO,KAAK,cAAc,KAAK,cAAc,QAAQ,YAAY,CAAC,MAAM;AAAA,YAC5E;AAAA,YAEE,UAAU,OAAO;AACf,mBAAK,OAAO,KAAK,KAAK;AAAA,YAC1B;AAAA,YAEE,SAAS,OAAO;AACd,kBAAI,KAAK,UAAU,OAAO;AACxB,sBAAM,IAAI,MAAM,mBAAoB,KAAK,YAAc,KAAK,KAAK,EAAG;AAAA,cAC1E;AACI,mBAAK,OAAO,IAAG;AAAA,YACnB;AAAA,YAEE,QAAQ,OAAO;AACb,qBAAO,KAAK,UAAU;AAAA,YAC1B;AAAA,YAEE,IAAI,QAAQ;AACV,qBAAO,KAAK,OAAO,KAAK,OAAO,SAAS,CAAC;AAAA,YAC7C;AAAA,YAEE,0BAA0B,KAAK;AAC7B,kBAAI,IAAI,SAAS,cAAc;AAC7B,uBAAO,IAAI;AAAA,cACjB,WAAe,IAAI,SAAS,kBAAkB;AACxC,uBAAO;AAAA,cACb;AAEI,kBAAI,IAAI,SAAS,oBAAoB;AACnC,oBAAI,IAAI,UAAU,IAAI,UAAU;AAC9B,sBAAI,IAAI,OAAO,eAAe,MAAM,KAAK,IAAI,OAAO,SAAS,QAAQ;AACnE,2BAAO,KAAK,0BAA0B,IAAI,QAAQ;AAAA,kBAC5D;AAEQ,yBACE,KAAK,0BAA0B,IAAI,MAAM,IACzC,MACA,KAAK,0BAA0B,IAAI,QAAQ;AAAA,gBAErD;AAAA,cACA;AAEI,kBAAI,IAAI,eAAe,aAAa,GAAG;AACrC,sBAAM,kBAAkB,IAAI,YAAY,CAAC;AACzC,oBAAI,gBAAgB,SAAS,aAAa,gBAAgB,UAAU,KAAK,IAAI,YAAY,WAAW,GAAG;AACrG,yBAAO,KAAK,0BAA0B,IAAI,YAAY,CAAC,CAAC;AAAA,gBAChE;AAAA,cACA;AAEI,oBAAM,KAAK,eAAe,qCAAqC,GAAG;AAAA,YACtE;AAAA,YAEE,SAAS,UAAU;AACjB,kBAAI,KAAK,KAAK;AACZ,uBAAO,KAAK;AAAA,cAClB;AACI,kBAAI,OAAO,KAAK,WAAW,UAAU;AACnC,qBAAK,iBAAiB,KAAK,MAAM;AACjC,uBAAO,KAAK,MAAM,KAAK;AAAA,cAC7B;AAEI,yBAAW,YAAY;AACvB,kBAAI,aAAa,MAAM;AACrB,sBAAM,IAAI,MAAM,0BAA0B;AAAA,cAChD;AAEI,oBAAM,MAAM,OAAO,OAAO,SAAS,MAAM,gBAAiB,KAAK,IAAI,MAAQ,KAAK,MAAM,KAAM;AAAA,gBAC1F,WAAW;AAAA,cACjB,CAAK,CAAC;AACF,oBAAM,cAAc,IAAI,KAAK,CAAC,EAAE,aAAa,CAAC,EAAE;AAChD,mBAAK,iBAAiB,WAAW;AAEjC,kBAAI,CAAC,KAAK;AACR,sBAAM,IAAI,MAAM,yBAAyB;AAAA,cAC/C;AAEI,qBAAO,KAAK,MAAM;AAAA,YACtB;AAAA,YAEE,iBAAiB,KAAK;AACpB,oBAAM,EAAE,UAAU,cAAc,WAAW,aAAa,cAAa,IAAK,IAAI,eAAe,GAAG;AAChG,mBAAK,WAAW;AAChB,mBAAK,cAAc;AACnB,mBAAK,gBAAgB;AACrB,mBAAK,YAAY;AACjB,uBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,sBAAM,cAAc,aAAa,CAAC;AAClC,sBAAM,EAAE,KAAAsB,MAAK,eAAe,cAAa,IAAK;AAC9C,sBAAM,EAAE,KAAI,IAAKA;AACjB,sBAAM,eAAe,KAAK,gBAAgB,IAAI;AAC9C,oBAAI,YAAY;AAEhB,oBAAI,iBAAiB,eAAe;AAClC,8BAAY;AAAA,gBACpB,OAAa;AACL,sBAAI,MAAM;AACR,0BAAM,WAAW,KAAK,QAAQ,IAAI;AAClC,4BAAQ,UAAQ;AAAA,sBACd,KAAK;AAAA,sBACL,KAAK;AAAA,sBACL,KAAK;AACH,4BAAI,KAAK,SAAS,oBAAoB;AACpC,sCAAY;AAAA,wBAC5B,OAAqB;AACL,sCAAY;AAAA,wBAC5B;AACc;AAAA,sBACF,KAAK;AACH,oCAAY;AACZ;AAAA,sBACF;AACE,oCAAY;AAAA,oBAC1B;AAAA,kBACA;AAAA,gBACA;AACM,4BAAY,YAAY;AACxB,4BAAY,eAAe;AAC3B,4BAAY,SAAS,KAAK,mBAAmB,YAAY;AAAA,cAC/D;AAEI,uBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,qBAAK,iBAAiB,UAAU,CAAC,GAAG,KAAK,MAAM;AAAA,cACrD;AAAA,YACA;AAAA,YAEE,eAAe,KAAK;AAClB,uBAAS,IAAI,GAAG,IAAI,KAAK,YAAY,QAAQ,KAAK;AAChD,sBAAM,aAAa,KAAK,YAAY,CAAC;AACrC,oBAAI,QAAQ,WAAW,KAAK;AAC1B,yBAAO,WAAW;AAAA,gBAC1B;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,gBAAgB,KAAK;AACnB,kBAAI,IAAI,SAAS,cAAc;AAC7B,sBAAM,IAAI,MAAM,UAAU,IAAI,IAAI,mBAAmB;AAAA,cAC3D;AACI,kBAAI,OAAO;AACX,oBAAM,gBAAgB,KAAK,cAAc,QAAQ,IAAI,IAAI;AACzD,kBAAI,kBAAkB,IAAI;AACxB,sBAAM,cAAc,KAAK,eAAe,GAAG;AAC3C,oBAAI,aAAa;AACf,yBAAO,YAAY;AAAA,gBAC3B;AAAA,cACA,OAAW;AACL,sBAAM,eAAe,KAAK,cAAc,aAAa;AACrD,oBAAI,cAAc;AAChB,yBAAO;AAAA,gBACf;AAAA,cACA;AACI,kBAAI,CAAC,QAAQ,KAAK,sBAAsB;AACtC,sBAAM,IAAI,MAAM,kBAAkB,IAAI,YAAY;AAAA,cACxD;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,cAAc,MAAM;AAClB,kBAAI,CAAC,cAAc,eAAe,IAAI,GAAG;AACvC,sBAAM,IAAI,MAAM,yBAA0B,IAAI,EAAG;AAAA,cACvD;AACI,qBAAO,cAAc,IAAI;AAAA,YAC7B;AAAA,YAEE,gBAAgB,cAAc;AAC5B,kBAAI,KAAK,cAAc,YAAY,GAAG;AACpC,sBAAM,OAAO,KAAK,cAAc,YAAY;AAC5C,oBAAI,SAAS,SAAS;AACpB,yBAAO;AAAA,gBACf,OAAa;AACL,yBAAO;AAAA,gBACf;AAAA,cACA;AACI,oBAAM,IAAI,MAAM,sBAAuB,YAAY,gBAAiB;AAAA,YACxE;AAAA,YAEE,WAAW;AACT,kBAAI,KAAK,QAAS,QAAO,KAAK;AAC9B,qBAAO,KAAK,UAAU,KAAK,WAAW,KAAK,SAAQ,GAAI,CAAA,CAAE,EAAE,KAAK,EAAE,EAAE,KAAI;AAAA,YAC5E;AAAA,YAEE,SAAS;AACP,oBAAM,WAAW;AAAA,gBACf,QAAQ,KAAK;AAAA,gBACb,MAAM,KAAK;AAAA,gBACX,WAAW,KAAK;AAAA,gBAChB,eAAe,KAAK;AAAA,gBACpB,cAAc,KAAK;AAAA,gBACnB,aAAa,KAAK;AAAA,gBAClB,OAAO,KAAK;AAAA,gBACZ,QAAQ,KAAK;AAAA,gBACb,mBAAmB,KAAK;AAAA,gBACxB,eAAe,KAAK;AAAA,gBACpB,eAAe,KAAK;AAAA,gBACpB,eAAe,KAAK;AAAA,gBACpB,YAAY,KAAK;AAAA,gBACjB,wBAAwB,KAAK;AAAA,gBAC7B,0BAA0B,KAAK;AAAA;AAGjC,qBAAO;AAAA,gBACL,KAAK,KAAK;AAAA,gBACV;AAAA;YAEN;AAAA,YAEE,QAAQ,KAAK;AACX,kBAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,uBAAO,KAAK,QAAQ,IAAI,IAAI,SAAS,CAAC,CAAC;AAAA,cAC7C;AACI,sBAAQ,IAAI,MAAI;AAAA,gBACd,KAAK;AACH,yBAAO,KAAK,QAAQ,IAAI,IAAI;AAAA,gBAC9B,KAAK;AACH,wBAAM,YAAY,KAAK,QAAQ,IAAI,SAAS,CAAC,CAAC;AAC9C,0BAAQ,WAAS;AAAA,oBACf,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AACH,6BAAO,UAAU,IAAI,SAAS,MAAM;AAAA,kBAChD;AACQ,yBAAO,SAAU,IAAI,SAAS,MAAM;AAAA,gBACtC,KAAK;AACH,wBAAM,aAAa,KAAK,OAAO,GAAG;AAClC,sBAAI,KAAK,aAAa,UAAU,GAAG;AACjC,2BAAO,KAAK,aAAa,UAAU;AAAA,kBAC7C;AACQ,sBAAI,OAAO,UAAU,IAAI,KAAK,GAAG;AAC/B,2BAAO;AAAA,kBACjB,WAAmB,IAAI,UAAU,QAAQ,IAAI,UAAU,OAAO;AACpD,2BAAO;AAAA,kBACjB,OAAe;AACL,2BAAO;AAAA,kBACjB;AAAA,gBACQ,KAAK;AACH,yBAAO,KAAK,QAAQ,IAAI,IAAI;AAAA,gBAC9B,KAAK;AACH,sBAAI,KAAK,kBAAkB,GAAG,GAAG;AAC/B,2BAAO;AAAA,kBACnB;AACU,sBAAI,CAAC,IAAI,UAAU,CAAC,IAAI,OAAO,MAAM;AACnC,wBAAI,IAAI,OAAO,SAAS,wBAAwB,IAAI,OAAO,YAAY,IAAI,OAAO,YAAY,SAAS,CAAC,EAAE,SAAS,MAAM;AACvH,4BAAM,eAAe,IAAI,OAAO,YAAY,IAAI,OAAO,YAAY,SAAS,CAAC,EAAE,SAAS;AACxF,2BAAK,2BAA2B,cAAc,IAAI,SAAS;AAC3D,6BAAO,KAAK,iBAAiB,cAAc,KAAK,IAAI;AAAA,oBAClE;AACY,wBAAI,KAAK,qBAAqB,IAAI,QAAQ,IAAI,MAAM,cAAc;AAChE,6BAAO;AAAA,oBACrB;AACY,wBAAI,IAAI,OAAO,SAAS,sBAAsB,IAAI,OAAO,UAAU,IAAI,OAAO,YAAY,IAAI,OAAO,SAAS,QAAQ,IAAI,WAAW;AACnI,4BAAM,eAAe,IAAI,OAAO,SAAS;AACzC,2BAAK,2BAA2B,cAAc,IAAI,SAAS;AAC3D,6BAAO,KAAK,iBAAiB,cAAc,KAAK,IAAI;AAAA,oBAClE;AACY,0BAAM,KAAK,eAAe,2BAA2B,GAAG;AAAA,kBACpE;AACU,sBAAI,IAAI,UAAU,IAAI,OAAO,MAAM;AACjC,0BAAM,eAAe,IAAI,OAAO;AAChC,yBAAK,2BAA2B,cAAc,IAAI,SAAS;AAC3D,2BAAO,KAAK,iBAAiB,cAAc,KAAK,IAAI;AAAA,kBAChE;AACU,wBAAM,KAAK,eAAe,2BAA4B,IAAI,IAAI,KAAM,GAAG;AAAA,gBACzE,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AACH,0BAAQ,IAAI,UAAQ;AAAA,oBAClB,KAAK;AAAA,oBACL,KAAK;AACH,0BAAI,KAAK,4BAA4B;AACnC,+BAAO;AAAA,sBACvB,OAAqB;AACL;AAAA,sBAChB;AAAA,oBACc,KAAK;AAAA,oBACL,KAAK;AACH,6BAAO;AAAA,oBACT,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AACH,6BAAO;AAAA,kBACvB;AACU,wBAAM,OAAO,KAAK,QAAQ,IAAI,IAAI;AAClC,sBAAI,KAAK,QAAQ,yBAAyB,EAAG,QAAO;AACpD,sBAAI,SAAS,kBAAkB;AAC7B,0BAAM,YAAY,KAAK,QAAQ,IAAI,KAAK;AACxC,wBAAI,cAAc,kBAAkB;AAClC,0BAAI,IAAI,KAAK,QAAQ,MAAM,GAAG;AAC5B,+BAAO;AAAA,sBACvB,OAAqB;AACL,+BAAO;AAAA,sBACvB;AAAA,oBACA;AACY,2BAAO;AAAA,kBACnB;AACU,yBAAO,cAAc,IAAI,KAAK;AAAA,gBAChC,KAAK;AACH,yBAAO,KAAK,QAAQ,IAAI,QAAQ;AAAA,gBAClC,KAAK;AACH,sBAAI,IAAI,aAAa,KAAK;AACxB,2BAAO;AAAA,kBACnB;AACU,yBAAO,KAAK,QAAQ,IAAI,QAAQ;AAAA,gBAClC,KAAK,uBAAuB;AAC1B,wBAAM,eAAe,IAAI;AACzB,sBAAI;AACJ,2BAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,0BAAMC,eAAc,aAAa,CAAC;AAClC,+BAAW,KAAK,QAAQA,YAAW;AAAA,kBAC/C;AACU,sBAAI,CAAC,UAAU;AACb,0BAAM,KAAK,eAAe,uCAAuC,GAAG;AAAA,kBAChF;AACU,yBAAO;AAAA,gBACjB;AAAA,gBACQ,KAAK;AACH,wBAAM,cAAc,KAAK,eAAe,IAAI,EAAE;AAC9C,sBAAI,CAAC,aAAa;AAChB,0BAAM,KAAK,eAAe,6BAA6B,GAAG;AAAA,kBACtE;AAEU,sBAAI,CAAC,YAAY,WAAW;AAC1B,0BAAM,KAAK,eAAe,uCAAuC,GAAG;AAAA,kBAChF;AAEU,yBAAO,YAAY;AAAA,gBACrB,KAAK;AACH,sBAAI,IAAI,SAAS,YAAY;AAC3B,2BAAO;AAAA,kBACnB;AACU,sBAAI,KAAK,cAAc,GAAG,GAAG;AAC3B,0BAAM,YAAY,KAAK,qBAAqB,GAAG;AAC/C,wBAAI,cAAc,SAAS;AACzB,6BAAO,KAAK,qBAAqB,GAAG;AAAA,oBAClD;AAAA,kBACA;AACU,wBAAM,SAAS,KAAK,qBAAqB,GAAG;AAC5C,sBAAI,UAAU,OAAO,MAAM;AACzB,2BAAO,KAAK,QAAQ,OAAO,IAAI;AAAA,kBAC3C;AACU,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAO,KAAK,QAAQ,IAAI,QAAQ;AAAA,gBAClC,KAAK;AACH,sBAAI,KAAK,kBAAkB,GAAG,GAAG;AAC/B,4BAAQ,IAAI,SAAS,MAAI;AAAA,sBACvB,KAAK;AACH,+BAAO;AAAA,sBACT,KAAK;AACH,+BAAO;AAAA,sBACT,KAAK;AACH,+BAAO;AAAA,oBACvB;AACY,2BAAO;AAAA,kBACnB;AACU,sBAAI,KAAK,cAAc,GAAG,GAAG;AAC3B,0BAAM,oBAAoB,KAAK,qBAAqB,GAAG;AACvD,4BAAQ,mBAAiB;AAAA,sBACvB,KAAK;AACH,+BAAO,KAAK,cAAc,KAAK,qBAAqB,IAAI,MAAM,CAAC;AAAA,sBACjE,KAAK;AACH,+BAAO,KAAK,cAAc,KAAK,qBAAqB,IAAI,OAAO,MAAM,CAAC;AAAA,sBACxE,KAAK;AACH,+BAAO,KAAK,cAAc,KAAK,qBAAqB,IAAI,OAAO,OAAO,MAAM,CAAC;AAAA,sBAC/E,KAAK;AACH,+BAAO,KAAK,cAAc,KAAK,qBAAqB,IAAI,OAAO,OAAO,OAAO,MAAM,CAAC;AAAA,sBACtF,KAAK;AAAA,sBACL,KAAK;AACH,+BAAO;AAAA,sBACT,KAAK;AACH,+BAAO,KAAK,gBAAgB,YAAY;AAAA,sBAC1C,KAAK;AACH,+BAAO,KAAK,gBAAgB,IAAI,SAAS,IAAI;AAAA,sBAC/C,KAAK;AACH,+BAAO,KAAK,cAAc,KAAK,gBAAgB,IAAI,OAAO,SAAS,IAAI,CAAC;AAAA,sBAC1E,KAAK;AACH,+BAAO,KAAK,cAAc,KAAK,gBAAgB,IAAI,OAAO,OAAO,SAAS,IAAI,CAAC;AAAA,sBACjF,KAAK;AACH,+BAAO,KAAK,cAAc,KAAK,gBAAgB,IAAI,OAAO,OAAO,OAAO,SAAS,IAAI,CAAC;AAAA,sBACxF,KAAK;AACH,+BAAO,KAAK,cAAc,KAAK,gBAAgB,IAAI,OAAO,OAAO,OAAO,OAAO,SAAS,IAAI,CAAC;AAAA,sBAC/F,KAAK;AAAA,sBACL,KAAK;AAAA,sBACL,KAAK;AACH,+BAAO,KAAK,cAAc,KAAK,QAAQ,IAAI,MAAM,CAAC;AAAA,sBACpD,KAAK;AACH,4BAAI,KAAK,kBAAkB,GAAG,GAAG;AAC/B,iCAAO;AAAA,wBACzB;AACgB,gCAAQ,IAAI,SAAS,MAAI;AAAA,0BACvB,KAAK;AAAA,0BACL,KAAK;AAAA,0BACL,KAAK;AAAA,0BACL,KAAK;AACH,mCAAO,KAAK,cAAc,KAAK,qBAAqB,IAAI,MAAM,CAAC;AAAA,wBACnF;AAAA,sBACgB,KAAK;AACH,+BAAO;AAAA,oBACzB;AACY,0BAAM,KAAK,eAAe,sCAAsC,GAAG;AAAA,kBAC/E;AACU,wBAAM,KAAK,eAAe,sCAAsC,GAAG;AAAA,gBACrE,KAAK;AACH,yBAAO,KAAK,QAAQ,IAAI,UAAU;AAAA,gBACpC,KAAK;AAAA,gBACL,KAAK;AACH,wBAAM,aAAa,KAAK,eAAe,IAAI,IAAI;AAC/C,sBAAI,YAAY;AACd,2BAAO,KAAK,QAAQ,UAAU;AAAA,kBAC1C;AACU,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAO,KAAK,QAAQ,IAAI,UAAU;AAAA,gBACpC,KAAK;AACH,yBAAO,KAAK,QAAQ,IAAI,YAAY,IAAI,YAAY,SAAS,CAAC,CAAC;AAAA,gBACjE;AACE,wBAAM,KAAK,eAAe,2BAA4B,IAAI,IAAI,KAAM,GAAG;AAAA,cACjF;AAAA,YACA;AAAA,YAEE,qBAAqB,KAAK;AACxB,oBAAM,OAAO,KAAK,gBAAgB,GAAG;AACrC,kBAAI,CAAC,MAAM;AACT,sBAAM,KAAK,eAAe,GAAG,IAAI,IAAI,mBAAmB,GAAG;AAAA,cACjE;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,2BAA2B,cAAc,MAAM;AAC7C,uBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,oBAAI,CAAC,KAAK,kBAAkB,cAAc,CAAC,EAAG;AAC9C,sBAAM,OAAO,KAAK,QAAQ,KAAK,CAAC,CAAC;AACjC,oBAAI,CAAC,MAAM;AACT,wBAAM,KAAK,eAAe,4BAA4B,CAAC,IAAI,KAAK,CAAC,CAAC;AAAA,gBAC1E;AACM,qBAAK,mBAAmB,cAAc,GAAG,IAAI;AAAA,cACnD;AAAA,YACA;AAAA,YAEE,kBAAkB,KAAK;AACrB,oBAAM,iBAAiB;AAAA,gBACrB;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA;AAEF,qBAAO,IAAI,SAAS,sBAClB,IAAI,UAAU,IAAI,OAAO,SAAS,gBAClC,IAAI,OAAO,SAAS,UACpB,IAAI,YACJ,IAAI,SAAS,SAAS,gBACtB,eAAe,QAAQ,IAAI,SAAS,IAAI,IAAI;AAAA,YAClD;AAAA,YAEE,kBAAkB,KAAK;AACrB,oBAAM,gBAAgB;AAAA,gBACpB;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA;AAEF,qBAAO,IAAI,SAAS,oBAClB,IAAI,UACJ,IAAI,OAAO,SAAS,sBACpB,IAAI,OAAO,UACX,IAAI,OAAO,OAAO,SAAS,gBAC3B,IAAI,OAAO,OAAO,SAAS,UAC3B,IAAI,OAAO,YACX,IAAI,OAAO,SAAS,SAAS,gBAC7B,cAAc,QAAQ,IAAI,OAAO,SAAS,IAAI,IAAI;AAAA,YACxD;AAAA,YAEE,cAAc,KAAK;AACjB,qBAAO,IAAI,SAAS,gBAAgB,IAAI,SAAS;AAAA,YACrD;AAAA,YAEE,OAAO,KAAK;AACV,qBAAO,KAAK,mBAAmB,KAAK,gBAAgB,GAAG,CAAC;AAAA,YAC5D;AAAA,YAEE,mBAAmB,cAAc;AAC/B,qBAAO,gBAAgB,aAAa,QAAQ,aAAa,MAAM,gBAAc,WAAW,MAAM,IAAI;AAAA,YACtG;AAAA,YAEE,gBAAgB,KAAK,cAAc,WAAW;AAC5C,kBAAI,CAAC,cAAc;AACjB,+BAAe,CAAA;AAAA,cACrB;AACI,kBAAI,CAAC,IAAK,QAAO;AACjB,kBAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,yBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,uBAAK,gBAAgB,IAAI,CAAC,GAAG,cAAc,SAAS;AAAA,gBAC5D;AACM,uBAAO;AAAA,cACb;AACI,sBAAQ,IAAI,MAAI;AAAA,gBACd,KAAK;AACH,uBAAK,gBAAgB,IAAI,MAAM,cAAc,SAAS;AACtD,uBAAK,gBAAgB,IAAI,OAAO,cAAc,SAAS;AACvD,yBAAO;AAAA,gBACT,KAAK;AACH,uBAAK,gBAAgB,IAAI,MAAM,cAAc,SAAS;AACtD,uBAAK,gBAAgB,IAAI,WAAW,cAAc,SAAS;AAC3D,uBAAK,gBAAgB,IAAI,YAAY,cAAc,SAAS;AAC5D,yBAAO;AAAA,gBACT,KAAK;AACH,+BAAa,KAAK;AAAA,oBAChB,QAAQ;AAAA,oBACR,OAAO,IAAI;AAAA,oBACX,QAAQ,cAAc,OAAO,QAAQ,IAAI,QAAQ,aAAa,IAAI,QAAQ,YAAY,CAAC,MAAM,IAAI,KAAK;AAAA,kBAChH,CAAS;AACD;AAAA,gBACF,KAAK;AACH,yBAAO,KAAK,gBAAgB,IAAI,MAAM,cAAc,SAAS;AAAA,gBAC/D,KAAK;AACH,wBAAM,cAAc,KAAK,eAAe,GAAG;AAC3C,sBAAI,aAAa;AACf,iCAAa,KAAK;AAAA,sBAChB,MAAM,IAAI;AAAA,sBACV,QAAQ;AAAA,sBACR,QAAQ,YAAY,QAAQ,KAAK,mBAAmB,YAAY,YAAY;AAAA,oBACxF,CAAW;AAAA,kBACX,WAAmB,KAAK,cAAc,QAAQ,IAAI,IAAI,IAAI,IAAI;AACpD,iCAAa,KAAK;AAAA,sBAChB,MAAM,IAAI;AAAA,sBACV,QAAQ;AAAA,sBACR,QAAQ;AAAA,oBACpB,CAAW;AAAA,kBACX,WAAmB,KAAK,sBAAsB;AACpC,0BAAM,IAAI,MAAM,kCAAkC,IAAI,IAAI,GAAG;AAAA,kBACvE;AACQ;AAAA,gBACF,KAAK;AACH,yBAAO,KAAK,gBAAgB,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,SAAS,CAAC,GAAG,cAAc,SAAS;AAAA,gBAC9F,KAAK;AACH,yBAAO,KAAK,gBAAgB,IAAI,UAAU,YAAY;AAAA,gBACxD,KAAK;AAAA,gBACL,KAAK;AACH,8BAAa,IAAI,aAAa,OAAO,IAAI,aAAa;AACtD,uBAAK,gBAAgB,IAAI,MAAM,cAAc,SAAS;AACtD,uBAAK,gBAAgB,IAAI,OAAO,cAAc,SAAS;AACvD,yBAAO;AAAA,gBACT,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,KAAK,gBAAgB,IAAI,UAAU,cAAc,SAAS;AAAA,gBACnE,KAAK;AACH,yBAAO,KAAK,gBAAgB,IAAI,cAAc,cAAc,SAAS;AAAA,gBACvE,KAAK;AACH,+BAAa,KAAK;AAAA,oBAChB,QAAQ;AAAA,oBACR,QAAQ;AAAA,kBAClB,CAAS;AACD,yBAAO;AAAA,gBACT,KAAK;AACH,+BAAa,KAAK;AAAA,oBAChB,QAAQ;AAAA,oBACR,QAAQ;AAAA,kBAClB,CAAS;AACD,yBAAO;AAAA,gBACT,KAAK;AACH,wBAAM,UAAU,KAAK,2BAA2B,GAAG;AACnD,0BAAQ,QAAQ,WAAS;AAAA,oBACvB,KAAK;AACH,2BAAK,gBAAgB,IAAI,QAAQ,cAAc,SAAS;AACxD;AAAA,oBACF,KAAK;AACH,2BAAK,gBAAgB,IAAI,OAAO,QAAQ,cAAc,SAAS;AAC/D;AAAA,oBACF,KAAK;AACH,2BAAK,gBAAgB,IAAI,OAAO,OAAO,QAAQ,cAAc,SAAS;AACtE;AAAA,oBACF,KAAK;AACH,0BAAI,KAAK,eAAe;AACtB,qCAAa,KAAK;AAAA,0BAChB,MAAM,QAAQ;AAAA,0BACd,QAAQ;AAAA,0BACR,QAAQ;AAAA,wBACxB,CAAe;AAAA,sBACf;AACY;AAAA,kBACZ;AACQ,sBAAI,SAAS;AACX,wBAAI,QAAQ,UAAU;AACpB,2BAAK,gBAAgB,QAAQ,UAAU,cAAc,SAAS;AAAA,oBAC1E;AACU,wBAAI,QAAQ,WAAW;AACrB,2BAAK,gBAAgB,QAAQ,WAAW,cAAc,SAAS;AAAA,oBAC3E;AACU,wBAAI,QAAQ,WAAW;AACrB,2BAAK,gBAAgB,QAAQ,WAAW,cAAc,SAAS;AAAA,oBAC3E;AACU,wBAAI,QAAQ,WAAW;AACrB,2BAAK,gBAAgB,QAAQ,WAAW,cAAc,SAAS;AAAA,oBAC3E;AACU,2BAAO;AAAA,kBACjB;AAAA,gBACQ,KAAK;AACH,yBAAO,KAAK,gBAAgB,IAAI,aAAa,cAAc,SAAS;AAAA,gBACtE;AACE,wBAAM,KAAK,eAAe,kBAAmB,IAAI,IAAI,uBAAwB,GAAG;AAAA,cAC1F;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,qBAAqB,KAAK,gBAAgB;AACxC,kBAAI,CAAC,KAAK,cAAc,GAAG,GAAG;AAC5B,sBAAM,IAAI,MAAM,gBAAiB,IAAI,IAAI,+BAAgC;AAAA,cAC/E;AACI,kBAAI,IAAI,SAAS,cAAc;AAC7B,uBAAO;AAAA,cACb;AACI,oBAAM,YAAY,CAAA;AAClB,qBAAO,MAAM;AACX,oBAAI,CAAC,IAAK;AACV,oBAAI,IAAI,UAAU;AAChB,4BAAU,KAAK,IAAI;AAAA,gBAC3B,WAAiB,IAAI,SAAS,kBAAkB;AACxC,4BAAU,QAAQ,MAAM;AAAA,gBAChC,WAAiB,IAAI,YAAY,IAAI,SAAS,MAAM;AAC5C,sBACE,IAAI,SAAS,SAAS,OACtB,IAAI,SAAS,SAAS,OACtB,IAAI,SAAS,SAAS,KACtB;AACA,8BAAU,QAAQ,iBAAiB,MAAM,IAAI,SAAS,OAAO,QAAQ;AAAA,kBAC/E,WACU,IAAI,SAAS,SAAS,eACtB,IAAI,SAAS,SAAS,YACtB,IAAI,SAAS,SAAS,UACtB;AACA,8BAAU,QAAQ,MAAM,IAAI,SAAS,IAAI;AAAA,kBACnD,OAAe;AACL,8BAAU,QAAQ,iBAAiB,MAAM,IAAI,SAAS,OAAO,QAAQ;AAAA,kBAC/E;AAAA,gBACA,WAAiB,IAAI,MAAM;AACnB,4BAAU,QAAQ,iBAAiB,IAAI,OAAO,OAAO;AAAA,gBAC7D,WAAiB,IAAI,UAAU,IAAI,OAAO,MAAM;AACxC,4BAAU,QAAQ,iBAAiB,IAAI,OAAO,OAAO,OAAO,MAAM;AAAA,gBAC1E,WAAiB,IAAI,UAAU;AACvB,4BAAU,QAAQ,IAAI;AAAA,gBAC9B,OAAa;AACL,4BAAU,QAAQ,SAAS;AAAA,gBACnC;AACM,sBAAM,IAAI;AAAA,cAChB;AAEI,oBAAM,kBAAkB,UAAU,KAAK,EAAE;AACzC,kBAAI,gBAAgB;AAClB,uBAAO;AAAA,cACb;AAEI,oBAAM,qBAAqB;AAAA,gBACzB;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA;AAEF,kBAAI,mBAAmB,QAAQ,eAAe,IAAI,IAAI;AACpD,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,QAAQ;AACN,qBAAO,KAAK,WAAW,SAAS;AAAA,YACpC;AAAA,YAEE,WAAW,KAAK,QAAQ;AACtB,kBAAI,QAAQ,MAAM;AAChB,sBAAM,KAAK,eAAe,YAAY,GAAG;AAAA,cAC/C,OAAW;AACL,oBAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,2BAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,yBAAK,WAAW,IAAI,CAAC,GAAG,MAAM;AAAA,kBACxC;AACQ,yBAAO;AAAA,gBACf;AAEM,wBAAQ,IAAI,MAAI;AAAA,kBACd,KAAK;AACH,2BAAO,KAAK,uBAAuB,KAAK,MAAM;AAAA,kBAChD,KAAK;AACH,2BAAO,KAAK,sBAAsB,KAAK,MAAM;AAAA,kBAC/C,KAAK;AACH,2BAAO,KAAK,mBAAmB,KAAK,MAAM;AAAA,kBAC5C,KAAK;AACH,2BAAO,KAAK,WAAW,KAAK,MAAM;AAAA,kBACpC,KAAK;AACH,2BAAO,KAAK,oBAAoB,KAAK,MAAM;AAAA,kBAC7C,KAAK;AACH,2BAAO,KAAK,wBAAwB,KAAK,MAAM;AAAA,kBACjD,KAAK;AACH,2BAAO,KAAK,wBAAwB,KAAK,MAAM;AAAA,kBACjD,KAAK;AACH,2BAAO,KAAK,uBAAuB,KAAK,MAAM;AAAA,kBAChD,KAAK;AACH,2BAAO,KAAK,kBAAkB,KAAK,MAAM;AAAA,kBAC3C,KAAK;AACH,2BAAO,KAAK,kBAAkB,KAAK,MAAM;AAAA,kBAC3C,KAAK;AACH,2BAAO,KAAK,eAAe,KAAK,MAAM;AAAA,kBACxC,KAAK;AACH,2BAAO,KAAK,mBAAmB,KAAK,MAAM;AAAA,kBAC5C,KAAK;AACH,2BAAO,KAAK,kBAAkB,KAAK,MAAM;AAAA,kBAC3C,KAAK;AACH,2BAAO,KAAK,qBAAqB,KAAK,MAAM;AAAA,kBAC9C,KAAK;AACH,2BAAO,KAAK,gBAAgB,KAAK,MAAM;AAAA,kBACzC,KAAK;AACH,2BAAO,KAAK,kBAAkB,KAAK,MAAM;AAAA,kBAC3C,KAAK;AACH,2BAAO,KAAK,oBAAoB,KAAK,MAAM;AAAA,kBAC7C,KAAK;AACH,2BAAO,KAAK,uBAAuB,KAAK,MAAM;AAAA,kBAChD,KAAK;AACH,2BAAO,KAAK,sBAAsB,KAAK,MAAM;AAAA,kBAC/C,KAAK;AACH,2BAAO,KAAK,kBAAkB,KAAK,MAAM;AAAA,kBAC3C,KAAK;AACH,2BAAO,KAAK,sBAAsB,KAAK,MAAM;AAAA,kBAC/C,KAAK;AACH,2BAAO,KAAK,mBAAmB,KAAK,MAAM;AAAA,kBAC5C,KAAK;AACH,2BAAO,KAAK,oBAAoB,KAAK,MAAM;AAAA,kBAC7C,KAAK;AACH,2BAAO,KAAK,qBAAqB,KAAK,MAAM;AAAA,kBAC9C,KAAK;AACH,2BAAO,KAAK,oBAAoB,KAAK,MAAM;AAAA,kBAC7C,KAAK;AACH,2BAAO,KAAK,kBAAkB,KAAK,MAAM;AAAA,kBAC3C,KAAK;AACH,2BAAO,KAAK,mBAAmB,KAAK,MAAM;AAAA,kBAC5C,KAAK;AACH,2BAAO,KAAK,qBAAqB,KAAK,MAAM;AAAA,kBAC9C,KAAK;AACH,2BAAO,KAAK,yBAAyB,KAAK,MAAM;AAAA,gBAC1D;AAEM,sBAAM,KAAK,eAAe,wBAAwB,IAAI,MAAM,GAAG;AAAA,cACrE;AAAA,YACA;AAAA,YACE,eAAe,OAAO,KAAK;AACzB,kBAAI,OAAO,KAAK,WAAW,UAAU;AACnC,uBAAO,IAAI,MAAM,KAAK;AAAA,cAC5B;AAEI,oBAAM,cAAc,MAAM,aAAa,KAAK,QAAQ,GAAG;AACvD,oBAAM,gBAAgB,KAAK,OAAO,OAAO,IAAI,KAAK;AAClD,oBAAM,aAAa,cAAc,MAAM,IAAI;AAC3C,oBAAM,aAAa,WAAW,SAAS,IAAI,WAAW,WAAW,SAAS,CAAC,IAAI;AAC/E,qBAAO,IAAI,MAAM,GAAG,KAAK,YAAa,WAAW,MAAM,cAAgB,WAAW,MAAM;AAAA,GAAS,WAAW,EAAG;AAAA,YACnH;AAAA,YAEE,qBAAqB,SAAS,QAAQ;AACpC,qBAAO;AAAA,YACX;AAAA,YAEE,yBAAyB,KAAK,QAAQ;AACpC,kBAAI,IAAI,SAAS,yBAAyB;AACxC,sBAAM,KAAK,eAAe,gCAAgC,GAAG;AAAA,cACnE;AACI,qBAAO,KAAK,GAAG;AACf,mBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,qBAAO,KAAK,GAAG;AACf,mBAAK,WAAW,IAAI,YAAY,MAAM;AACtC,qBAAO,KAAK,GAAG;AACf,mBAAK,WAAW,IAAI,WAAW,MAAM;AACrC,qBAAO,KAAK,GAAG;AACf,qBAAO;AAAA,YACX;AAAA,YAEE,YAAY,KAAK,QAAQ;AACvB,oBAAM,IAAI,MAAM,gCAAiC,KAAK,YAAY,IAAI,EAAG;AAAA,YAC7E;AAAA,YAEE,uBAAuB,KAAK,QAAQ;AAClC,kBAAI,KAAK,gBAAgB,GAAG,GAAG;AAC7B,uBAAO;AAAA,cACb;AACI,qBAAO,KAAK,YAAY,KAAK,MAAM;AAAA,YACvC;AAAA,YACE,sBAAsB,KAAK,QAAQ;AACjC,kBAAI,KAAK,gBAAgB,GAAG,GAAG;AAC7B,uBAAO;AAAA,cACb;AACI,qBAAO,KAAK,YAAY,KAAK,MAAM;AAAA,YACvC;AAAA,YACE,gBAAgB,KAAK;AACnB,uBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,oBAAI,KAAK,UAAU,CAAC,MAAM,KAAK;AAC7B,yBAAO;AAAA,gBACf;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YACE,mBAAmB,KAAK,QAAQ;AAC9B,qBAAO;AAAA,YACX;AAAA,YACE,WAAW,KAAK,QAAQ;AACtB,mBAAK,aAAa,KAAK,OAAO,GAAG,CAAC,IAAI;AACtC,qBAAO;AAAA,YACX;AAAA,YACE,oBAAoB,KAAK,QAAQ;AAC/B,qBAAO;AAAA,YACX;AAAA,YACE,wBAAwB,KAAK,QAAQ;AACnC,qBAAO;AAAA,YACX;AAAA,YACE,wBAAwB,KAAK,QAAQ;AACnC,qBAAO;AAAA,YACX;AAAA,YACE,uBAAuB,QAAQ,QAAQ;AACrC,mBAAK,WAAW,OAAO,YAAY,MAAM;AACzC,qBAAO,KAAK,GAAG;AACf,qBAAO;AAAA,YACX;AAAA,YACE,kBAAkB,OAAO,QAAQ;AAC/B,qBAAO;AAAA,YACX;AAAA,YACE,kBAAkB,KAAK,QAAQ;AAC7B,qBAAO;AAAA,YACX;AAAA,YACE,eAAe,KAAK,QAAQ;AAC1B,qBAAO;AAAA,YACX;AAAA,YACE,mBAAmB,KAAK,QAAQ;AAC9B,qBAAO;AAAA,YACX;AAAA,YACE,kBAAkB,QAAQ,QAAQ;AAChC,qBAAO,KAAK,QAAQ;AACpB,qBAAO;AAAA,YACX;AAAA,YACE,qBAAqB,QAAQ,QAAQ;AACnC,qBAAO,KAAK,aAAa;AACzB,qBAAO;AAAA,YACX;AAAA,YACE,gBAAgB,KAAK,QAAQ;AAC3B,qBAAO;AAAA,YACX;AAAA,YACE,kBAAkB,KAAK,QAAQ;AAC7B,qBAAO;AAAA,YACX;AAAA,YACE,oBAAoB,KAAK,QAAQ;AAC/B,qBAAO;AAAA,YACX;AAAA,YACE,sBAAsB,aAAa,QAAQ;AACzC,mBAAK,WAAW,YAAY,IAAI,MAAM;AACtC,kBAAI,YAAY,SAAS,MAAM;AAC7B,uBAAO,KAAK,GAAG;AACf,qBAAK,WAAW,YAAY,MAAM,MAAM;AAAA,cAC9C;AACI,qBAAO;AAAA,YACX;AAAA,YACE,kBAAkB,KAAK,QAAQ;AAC7B,qBAAO;AAAA,YACX;AAAA,YACE,sBAAsB,OAAO,QAAQ;AACnC,oBAAM,EAAE,YAAW,IAAK;AACxB,oBAAM,iBAAiB,CAAA;AACvB,uBAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,sBAAM,aAAa,YAAY,CAAC;AAChC,sBAAM,mBAAmB,CAAA;AACzB,qBAAK,WAAW,YAAY,gBAAgB;AAC5C,+BAAe,KAAK,iBAAiB,KAAK,EAAE,CAAC;AAAA,cACnD;AACI,kBAAI,eAAe,SAAS,GAAG;AAC7B,uBAAO,KAAK,KAAK,eAAe,KAAK,GAAG,GAAG,GAAG;AAAA,cACpD,OAAW;AACL,uBAAO,KAAK,eAAe,CAAC,CAAC;AAAA,cACnC;AACI,qBAAO;AAAA,YACX;AAAA,YACE,mBAAmB,OAAO,QAAQ;AAChC,oBAAM,cAAc,KAAK,8BAA8B,OAAO,MAAM;AACpE,kBAAI,aAAa;AACf,uBAAO;AAAA,cACb;AAEI,kBAAI,MAAM,QAAQ;AAChB,uBAAO,KAAK,MAAM,QAAQ;AAC1B,qBAAK,WAAW,MAAM,UAAU,MAAM;AAAA,cAC5C,OAAW;AACL,qBAAK,WAAW,MAAM,UAAU,MAAM;AACtC,uBAAO,KAAK,MAAM,QAAQ;AAAA,cAChC;AAEI,qBAAO;AAAA,YACX;AAAA,YAEE,8BAA8B,OAAO,QAAQ;AAAA,YAAA;AAAA,YAE7C,oBAAoB,OAAO,QAAQ;AACjC,kBAAI,MAAM,QAAQ;AAChB,uBAAO,KAAK,MAAM,QAAQ;AAC1B,qBAAK,WAAW,MAAM,UAAU,MAAM;AAAA,cAC5C,OAAW;AACL,qBAAK,WAAW,MAAM,UAAU,MAAM;AACtC,uBAAO,KAAK,MAAM,QAAQ;AAAA,cAChC;AAEI,qBAAO;AAAA,YACX;AAAA,YACE,qBAAqB,SAAS,QAAQ;AACpC,qBAAO,KAAK,GAAG;AACf,mBAAK,WAAW,QAAQ,MAAM,MAAM;AACpC,qBAAO,KAAK,QAAQ,QAAQ;AAC5B,mBAAK,WAAW,QAAQ,OAAO,MAAM;AACrC,qBAAO,KAAK,GAAG;AACf,qBAAO;AAAA,YACX;AAAA,YACE,oBAAoB,KAAK,QAAQ;AAC/B,qBAAO;AAAA,YACX;AAAA,YACE,kBAAkB,KAAK,QAAQ;AAC7B,qBAAO;AAAA,YACX;AAAA,YACE,mBAAmB,KAAK,QAAQ;AAC9B,qBAAO;AAAA,YACX;AAAA,YAEE,2BAA2B,KAAK;AAC9B,kBAAI,IAAI,SAAS,oBAAoB;AACnC,sBAAM,KAAK,eAAe,cAAe,IAAI,IAAI,2BAA4B,GAAG;AAAA,cACtF;AACI,kBAAIvB,QAAO;AACX,kBAAI,OAAO;AACX,oBAAM,oBAAoB,KAAK,qBAAqB,GAAG;AACvD,sBAAQ,mBAAiB;AAAA,gBACvB,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO;AAAA,oBACL,WAAW;AAAA,oBACT,MAAM;AAAA,oBACN,MAAM,IAAI,SAAS;AAAA;gBAEzB,KAAK;AACH,sBAAI,OAAO,IAAI,OAAO,SAAS,UAAU;AACvC,0BAAM,KAAK,eAAe,yBAAyB,GAAG;AAAA,kBAChE;AACQ,kBAAAA,QAAO,IAAI,OAAO;AAClB,yBAAO;AAAA,oBACL,MAAAA;AAAA,oBACA,QAAQ;AAAA,oBACN,WAAW;AAAA,oBACX,MAAM,KAAK,gBAAgB,IAAI,MAAM;AAAA,oBACrC,WAAW,IAAI;AAAA;gBAErB,KAAK;AACH,sBAAI,OAAO,IAAI,OAAO,OAAO,SAAS,UAAU;AAC9C,0BAAM,KAAK,eAAe,yBAAyB,GAAG;AAAA,kBAChE;AACQ,kBAAAA,QAAO,IAAI,OAAO,OAAO;AACzB,yBAAO;AAAA,oBACL,MAAAA;AAAA,oBACA,QAAQ;AAAA,oBACN,WAAW;AAAA,oBACX,MAAM,KAAK,gBAAgB,IAAI,OAAO,MAAM;AAAA,oBAC5C,WAAW,IAAI,OAAO;AAAA,oBACtB,WAAW,IAAI;AAAA;gBAErB,KAAK;AACH,sBAAI,OAAO,IAAI,OAAO,OAAO,OAAO,SAAS,UAAU;AACrD,0BAAM,KAAK,eAAe,yBAAyB,GAAG;AAAA,kBAChE;AACQ,kBAAAA,QAAO,IAAI,OAAO,OAAO,OAAO;AAChC,yBAAO;AAAA,oBACL,MAAAA;AAAA,oBACA,QAAQ;AAAA,oBACN,WAAW;AAAA,oBACX,MAAM,KAAK,gBAAgB,IAAI,OAAO,OAAO,MAAM;AAAA,oBACnD,WAAW,IAAI,OAAO,OAAO;AAAA,oBAC7B,WAAW,IAAI,OAAO;AAAA,oBACtB,WAAW,IAAI;AAAA;gBAErB,KAAK;AACH,sBAAI,OAAO,IAAI,OAAO,OAAO,OAAO,OAAO,SAAS,UAAU;AAC5D,0BAAM,KAAK,eAAe,yBAAyB,GAAG;AAAA,kBAChE;AACQ,kBAAAA,QAAO,IAAI,OAAO,OAAO,OAAO,OAAO;AACvC,yBAAO;AAAA,oBACL,MAAAA;AAAA,oBACA,QAAQ;AAAA,oBACN,WAAW;AAAA,oBACX,MAAM,KAAK,gBAAgB,IAAI,OAAO,OAAO,OAAO,MAAM;AAAA,oBAC1D,WAAW,IAAI,OAAO,OAAO;AAAA,oBAC7B,WAAW,IAAI,OAAO;AAAA,oBACtB,WAAW,IAAI;AAAA;gBAErB,KAAK;AACH,sBAAI,OAAO,IAAI,SAAS,SAAS,UAAU;AACzC,0BAAM,KAAK,eAAe,yBAAyB,GAAG;AAAA,kBAChE;AACQ,sBAAI,KAAK,kBAAkB,GAAG,GAAG;AAC/B,oBAAAA,QAAO,IAAI,SAAS;AACpB,2BAAO;AAAA,sBACL,MAAAA;AAAA,sBACA,QAAQ;AAAA,sBACR,MAAM;AAAA,sBACN,WAAW;AAAA;kBAEvB;AACQ,0BAAQ,IAAI,SAAS,MAAI;AAAA,oBACvB,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AACH,sBAAAA,QAAO,IAAI,OAAO;AAClB,6BAAO;AAAA,wBACL,MAAAA;AAAA,wBACA,UAAU,IAAI,SAAS;AAAA,wBACrB,QAAQ;AAAA,wBACR,WAAW;AAAA,wBACX,MAAM;AAAA;oBAEZ;AACE,4BAAM,KAAK,eAAe,yBAAyB,GAAG;AAAA,kBAClE;AAAA,gBACQ,KAAK;AACH,sBAAI,OAAO,IAAI,SAAS,SAAS,UAAU;AACzC,0BAAM,KAAK,eAAe,yBAAyB,GAAG;AAAA,kBAClE;AACU,kBAAAA,QAAO,IAAI,SAAS;AACpB,yBAAO,KAAK,gBAAgBA,KAAI;AAChC,sBAAI,CAAC,MAAM;AACT,0BAAM,KAAK,eAAe,wBAAwB,GAAG;AAAA,kBACjE;AACU,yBAAO;AAAA,oBACL,MAAAA;AAAA,oBACA;AAAA,oBACA,QAAQ;AAAA,oBACN,WAAW;AAAA;gBAEjB,KAAK;AACH,sBAAI,OAAO,IAAI,OAAO,SAAS,SAAS,UAAU;AAChD,0BAAM,KAAK,eAAe,yBAAyB,GAAG;AAAA,kBAClE;AACU,kBAAAA,QAAO,IAAI,OAAO,SAAS;AAC3B,yBAAO,KAAK,gBAAgBA,KAAI;AAChC,sBAAI,CAAC,MAAM;AACT,0BAAM,KAAK,eAAe,wBAAwB,GAAG;AAAA,kBACjE;AACU,yBAAO;AAAA,oBACL,MAAAA;AAAA,oBACA;AAAA,oBACA,QAAQ;AAAA,oBACN,WAAW;AAAA,oBACX,WAAW,IAAI;AAAA;gBAErB,KAAK,4BAA4B;AAC/B,sBAAI,OAAO,IAAI,OAAO,OAAO,SAAS,SAAS,UAAU;AACvD,0BAAM,KAAK,eAAe,yBAAyB,GAAG;AAAA,kBAClE;AACU,kBAAAA,QAAO,IAAI,OAAO,OAAO,SAAS;AAClC,yBAAO,KAAK,gBAAgBA,KAAI;AAChC,sBAAI,CAAC,MAAM;AACT,0BAAM,KAAK,eAAe,wBAAwB,GAAG;AAAA,kBACjE;AACU,yBAAO;AAAA,oBACL,MAAAA;AAAA,oBACA;AAAA,oBACA,QAAQ;AAAA,oBACR,WAAW;AAAA,oBACX,WAAW,IAAI,OAAO;AAAA,oBACtB,WAAW,IAAI;AAAA;gBAE3B;AAAA,gBACQ,KAAK,8BAA8B;AACjC,sBAAI,OAAO,IAAI,OAAO,OAAO,OAAO,SAAS,SAAS,UAAU;AAC9D,0BAAM,KAAK,eAAe,yBAAyB,GAAG;AAAA,kBAClE;AACU,kBAAAA,QAAO,IAAI,OAAO,OAAO,OAAO,SAAS;AACzC,yBAAO,KAAK,gBAAgBA,KAAI;AAChC,sBAAI,CAAC,MAAM;AACT,0BAAM,KAAK,eAAe,wBAAwB,GAAG;AAAA,kBACjE;AACU,yBAAO;AAAA,oBACL,MAAAA;AAAA,oBACA;AAAA,oBACA,QAAQ;AAAA,oBACR,WAAW;AAAA,oBACX,WAAW,IAAI,OAAO,OAAO;AAAA,oBAC7B,WAAW,IAAI,OAAO;AAAA,oBACtB,WAAW,IAAI;AAAA;gBAE3B;AAAA,gBACQ,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO;AAAA,oBACL,WAAW;AAAA,oBACT,UAAU,IAAI;AAAA;gBAEpB;AACE,wBAAM,KAAK,eAAe,yBAAyB,GAAG;AAAA,cAChE;AAAA,YACA;AAAA,YAEE,qBAAqB,WAAW;AAC9B,oBAAM,QAAQ,CAAC,KAAK,GAAG;AAEvB,qBAAO,MAAM,SAAS,GAAG;AACvB,sBAAM,SAAS,MAAM,CAAC;AACtB,oBAAI,OAAO,SAAS,wBAAwB,OAAO,MAAM,OAAO,GAAG,QAAQ,OAAO,GAAG,SAAS,UAAU,MAAM;AAC5G,yBAAO;AAAA,gBACf;AACM,sBAAM,MAAK;AACX,oBAAI,OAAO,UAAU;AACnB,wBAAM,KAAK,OAAO,QAAQ;AAAA,gBAClC,WAAiB,OAAO,MAAM;AACtB,wBAAM,KAAK,OAAO,IAAI;AAAA,gBAC9B,WAAiB,OAAO,cAAc;AAC9B,wBAAM,KAAK,OAAO,YAAY;AAAA,gBACtC,WAAiB,MAAM,QAAQ,MAAM,GAAG;AAChC,2BAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,0BAAM,KAAK,OAAO,CAAC,CAAC;AAAA,kBAC9B;AAAA,gBACA;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,eAAe,KAAK;AAClB,oBAAM,QAAQ,CAAC,OAAO,KAAK,GAAG;AAE9B,qBAAO,MAAM,SAAS,GAAG;AACvB,sBAAM,SAAS,MAAM,IAAG;AACxB,oBAAI,OAAO,SAAS,mBAAmB;AACrC,yBAAO;AAAA,gBACf;AACM,oBAAI,OAAO,SAAS,uBAAuB;AACzC;AAAA,gBACR;AACM,oBAAI,OAAO,UAAU;AACnB,wBAAM,KAAK,OAAO,QAAQ;AAAA,gBAClC,WAAiB,OAAO,MAAM;AACtB,wBAAM,KAAK,OAAO,IAAI;AAAA,gBAC9B,WAAiB,OAAO,cAAc;AAC9B,wBAAM,KAAK,OAAO,YAAY;AAAA,gBACtC,WAAiB,MAAM,QAAQ,MAAM,GAAG;AAChC,2BAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,0BAAM,KAAK,OAAO,CAAC,CAAC;AAAA,kBAC9B;AAAA,gBACA,WAAiB,OAAO,YAAY;AAC5B,wBAAM,KAAK,OAAO,UAAU;AAAA,gBACpC,WAAiB,OAAO,OAAO;AACvB,wBAAM,KAAK,OAAO,KAAK;AAAA,gBAC/B;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,wBAAwBA,OAAM;AAC5B,kBAAI,CAAC,KAAK,uBAAuB,eAAeA,KAAI,GAAG;AACrD,qBAAK,uBAAuBA,KAAI,IAAI;AAAA,cAC1C;AACI,mBAAK,uBAAuBA,KAAI;AAChC,kBAAI,KAAK,uBAAuBA,KAAI,MAAM,GAAG;AAC3C,uBAAOA;AAAA,cACb;AACI,qBAAOA,QAAO,KAAK,uBAAuBA,KAAI;AAAA,YAClD;AAAA,YAEE,OAAO,KAAK,YAAY,KAAK;AAC3B,kBAAI,CAAC,IAAI,SAAS,CAAC,IAAI,IAAK,OAAM,IAAI,MAAM,0BAA0B;AACtE,qBAAO,GAAG,IAAI,KAAK,GAAG,SAAS,GAAG,IAAI,GAAG;AAAA,YAC7C;AAAA,UACA;AAlyCmB;AAAnB,cAAM,eAAN;AAoyCA,gBAAM,gBAAgB;AAAA,YACpB,UAAU;AAAA,YACV,SAAS;AAAA,YACT,WAAW;AAAA,YACX,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,aAAa;AAAA,YACb,aAAa;AAAA,YACb,aAAa;AAAA,YACb,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS;AAAA,YACT,cAAc;AAAA,YACd,mBAAmB;AAAA,YACnB,aAAa;AAAA,YACb,eAAe;AAAA,YACf,aAAa;AAAA,YACb,aAAa;AAAA,YACb,kBAAkB;AAAA,YAClB,iBAAiB;AAAA,YACjB,gCAAgC;AAAA,YAChC,cAAc;AAAA,YACd,cAAc;AAAA,YACd,cAAc;AAAA,YACd,cAAc;AAAA,YACd,cAAc;AAAA,YACd,cAAc;AAAA,YACd,cAAc;AAAA,YACd,cAAc;AAAA,YACd,cAAc;AAAA,YACd,mBAAmB;AAAA,YACnB,mBAAmB;AAAA,YACnB,mBAAmB;AAAA,YACnB,mBAAmB;AAAA;AAGrB,UAAAT,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,YAAW,KAAI,qBAAoB,IAAG,SAAQ,EAAC,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACzF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,UAAU;AAEpC,mBAAS,KAAK,OAAO;AACnB,mBAAO,MAAM,SAAS,IAAI,MAAM,MAAM,SAAS,CAAC,IAAI;AAAA,UACtD;AAFS;AAIT,gBAAM,SAAS;AAAA,YACb,kBAAkB;AAAA,YAClB,kBAAkB;AAAA,YAClB,eAAe;AAAA;AAGjB,gBAAM,kBAAN,MAAM,gBAAe;AAAA,YACnB,YAAY,KAAK;AACf,mBAAK,kBAAkB,CAAA;AACvB,mBAAK,mBAAmB,CAAA;AACxB,mBAAK,WAAW,CAAA;AAChB,mBAAK,gBAAgB,CAAA;AACrB,mBAAK,eAAe,CAAA;AACpB,mBAAK,cAAc,CAAA;AACnB,mBAAK,YAAY,CAAA;AACjB,mBAAK,mBAAmB,CAAA;AACxB,mBAAK,qBAAqB;AAC1B,mBAAK,SAAS,CAAA;AACd,mBAAK,mBAAkB;AACvB,mBAAK,KAAK,GAAG;AAAA,YACjB;AAAA,YAEE,QAAQ,OAAO;AACb,qBAAO,KAAK,OAAO,KAAK,OAAO,SAAS,CAAC,MAAM;AAAA,YACnD;AAAA,YAEE,SAAS,OAAO;AACd,qBAAO,KAAK,OAAO,QAAQ,KAAK,IAAI;AAAA,YACxC;AAAA,YAEE,UAAU,OAAO;AACf,mBAAK,OAAO,KAAK,KAAK;AAAA,YAC1B;AAAA,YAEE,SAAS,OAAO;AACd,kBAAI,KAAK,QAAQ,KAAK,GAAG;AACvB,qBAAK,OAAO,IAAG;AAAA,cACrB,OAAW;AACL,sBAAM,IAAI,MAAM,oCAAoC,KAAK,GAAG;AAAA,cAClE;AAAA,YACA;AAAA,YAEE,IAAI,yBAAyB;AAC3B,qBAAO,KAAK,KAAK,gBAAgB;AAAA,YACrC;AAAA,YAEE,IAAI,iBAAiB;AACnB,qBAAO,KAAK,KAAK,eAAe;AAAA,YACpC;AAAA,YAEE,qBAAqB;AACnB,oBAAM,aAAa,EAAE,gBAAgB,WAAU;AAC/C,mBAAK,SAAS,KAAK,UAAU;AAC7B,mBAAK,iBAAiB,KAAK,UAAU;AAAA,YACzC;AAAA,YAEE,WAAW,KAAK;AACd,oBAAM,aAAa,OAAO,OAAO,EAAE,gBAAgB,YAAW,GAAI,KAAK,cAAc;AACrF,mBAAK,SAAS,KAAK,UAAU;AAC7B,mBAAK,gBAAgB,KAAK,UAAU;AACpC,kBAAG;AACH,oBAAM,EAAE,uBAAsB,IAAK;AACnC,yBAAW,KAAK,wBAAwB;AACtC,oBAAI,CAAC,uBAAuB,eAAe,CAAC,KAAK,WAAW,eAAe,CAAC,EAAG;AAC/E,2BAAW,CAAC,IAAI,uBAAuB,CAAC;AAAA,cAC9C;AACI,mBAAK,gBAAgB,IAAG;AACxB,qBAAO;AAAA,YACX;AAAA,YAEE,mBAAmB,KAAK;AACtB,oBAAM,kBAAkB,KAAK,KAAK,gBAAgB;AAClD,mBAAK,gBAAgB,KAAK,eAAe;AACzC,kBAAG;AACH,mBAAK,gBAAgB,IAAG;AAAA,YAC5B;AAAA,YAEE,eAAe,KAAK;AAClB,oBAAM,qBAAqB,KAAK,qBAAqB,CAAA;AACrD,mBAAK,UAAU,OAAO,gBAAgB;AACtC,kBAAG;AACH,mBAAK,qBAAqB;AAC1B,mBAAK,SAAS,OAAO,gBAAgB;AACrC,qBAAO;AAAA,YACX;AAAA,YAEE,eAAeI,OAAM;AACnB,oBAAM,EAAE,gBAAgB,wBAAwB,gBAAe,IAAK;AACpE,oBAAM,cAAc,eAAeA,KAAI,KAAK,uBAAuBA,KAAI,KAAK;AAE5E,kBACE,CAAC,eACD,mBAAmB,0BACnB,gBAAgB,SAAS,GACzB;AACA,sBAAM,yBAAyB,gBAAgB,gBAAgB,SAAS,CAAC;AACzE,oBAAI,uBAAuBA,KAAI,GAAG;AAChC,yBAAO,uBAAuBA,KAAI;AAAA,gBAC1C;AAAA,cACA;AAEI,qBAAO;AAAA,YACX;AAAA,YAEE,KAAK,KAAK;AACR,kBAAI,CAAC,IAAK;AACV,kBAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,yBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,uBAAK,KAAK,IAAI,CAAC,CAAC;AAAA,gBACxB;AACM;AAAA,cACN;AACI,sBAAQ,IAAI,MAAI;AAAA,gBACd,KAAK;AACH,uBAAK,mBAAmB,MAAM;AAC5B,yBAAK,KAAK,IAAI,IAAI;AAAA,kBAC5B,CAAS;AACD;AAAA,gBACF,KAAK;AACH,uBAAK,WAAW,MAAM;AACpB,yBAAK,KAAK,IAAI,IAAI;AAAA,kBAC5B,CAAS;AACD;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AACH,uBAAK,KAAK,IAAI,IAAI;AAClB,uBAAK,KAAK,IAAI,KAAK;AACnB;AAAA,gBACF,KAAK;AACH,uBAAK,KAAK,IAAI,IAAI;AAClB,uBAAK,KAAK,IAAI,KAAK;AACnB;AAAA,gBACF,KAAK;AACH,sBAAI,IAAI,aAAa,MAAM;AACzB,0BAAM,cAAc,KAAK,eAAe,IAAI,SAAS,IAAI;AACzD,wBAAI,aAAa;AACf,kCAAY,gBAAgB;AAAA,oBACxC;AAAA,kBACA;AACQ,uBAAK,KAAK,IAAI,QAAQ;AACtB;AAAA,gBACF,KAAK;AACH,uBAAK,KAAK,IAAI,QAAQ;AACtB;AAAA,gBACF,KAAK;AACH,sBAAI,IAAI,SAAS,OAAO;AACtB,yBAAK,mBAAmB,MAAM;AAC5B,0BAAI,eAAe,MAAM,sBAAsB,GAAG;AAClD,2BAAK,KAAK,IAAI,YAAY;AAAA,oBACtC,CAAW;AAAA,kBACX,OAAe;AACL,wBAAI,eAAe,MAAM,sBAAsB,GAAG;AAClD,yBAAK,KAAK,IAAI,YAAY;AAAA,kBACpC;AACQ;AAAA,gBACF,KAAK,sBAAsB;AACzB,wBAAM,EAAE,eAAc,IAAK;AAC3B,wBAAM,gBAAgB,KAAK,SAAS,OAAO,aAAa;AACxD,wBAAM,cAAc;AAAA,oBAClB;AAAA,oBACA,SAAS;AAAA,oBACT,MAAM,IAAI,GAAG;AAAA,oBACb,QAAQ;AAAA,oBACR;AAAA,oBACA,eAAe;AAAA,oBACf,YAAY,mBAAmB,KAAK,0BAA2B,CAAC,iBAAiB,CAAC,eAAe,eAAe,IAAI,GAAG,IAAI;AAAA,oBAC3H,eAAe;AAAA,oBACf,WAAW;AAAA,oBACX,cAAc;AAAA,oBACd,QAAQ;AAAA;AAEV,sBAAI,CAAC,eAAe,IAAI,GAAG,IAAI,GAAG;AAChC,mCAAe,IAAI,GAAG,IAAI,IAAI;AAAA,kBACxC;AACQ,uBAAK,aAAa,KAAK,WAAW;AAClC,uBAAK,KAAK,IAAI,EAAE;AAChB,uBAAK,KAAK,IAAI,IAAI;AAClB;AAAA,gBACR;AAAA,gBACM,KAAK;AAAA,gBACL,KAAK;AACH,sBAAI,KAAK,gBAAgB,WAAW,GAAG;AACrC,yBAAK,KAAK,IAAI,IAAI;AAAA,kBAC5B,OAAe;AACL,yBAAK,UAAU,KAAK,GAAG;AAAA,kBACjC;AACQ;AAAA,gBACF,KAAK;AACH,uBAAK,KAAK,IAAI,IAAI;AAClB,uBAAK,KAAK,IAAI,UAAU;AACxB,sBAAI,IAAI,UAAW,MAAK,KAAK,IAAI,SAAS;AAC1C;AAAA,gBACF,KAAK,gBAAgB;AACnB,sBAAI;AACJ,wBAAM,UAAU,KAAK,WAAW,MAAM;AACpC,yBAAK,UAAU,OAAO,aAAa;AACnC,yBAAK,KAAK,IAAI,IAAI;AAClB,yBAAK,SAAS,OAAO,aAAa;AAElC,sCAAkB,KAAK,eAAe,MAAM;AAC1C,2BAAK,KAAK,IAAI,IAAI;AAAA,oBAC9B,CAAW;AAED,yBAAK,KAAK,IAAI,MAAM;AACpB,yBAAK,WAAW,MAAM;AACpB,2BAAK,KAAK,IAAI,IAAI;AAAA,oBAC9B,CAAW;AAAA,kBACX,CAAS;AAED,sBAAI,iBAAiB;AACnB,+BAAW,KAAK,SAAS;AACvB,0BAAI,MAAM,eAAgB;AAC1B,0BAAI,gBAAgB,QAAQ,CAAC,IAAI,IAAI;AACnC,gCAAQ,CAAC,EAAE,gBAAgB;AAAA,sBACzC;AAAA,oBACA;AAAA,kBACA;AACQ;AAAA,gBACR;AAAA,gBACM,KAAK;AAAA,gBACL,KAAK;AACH,uBAAK,WAAW,MAAM;AACpB,yBAAK,KAAK,IAAI,IAAI;AAClB,yBAAK,KAAK,IAAI,IAAI;AAAA,kBAC5B,CAAS;AACD;AAAA,gBACF,KAAK,cAAc;AACjB,sBAAI,KAAK,QAAQ,OAAO,gBAAgB,GAAG;AACzC,yBAAK,mBAAmB,KAAK,IAAI,IAAI;AAAA,kBAC/C;AACQ,uBAAK,YAAY,KAAK;AAAA,oBACpB,SAAS,KAAK;AAAA,oBACd,aAAa,KAAK,eAAe,IAAI,IAAI;AAAA,oBACzC;AAAA,kBACV,CAAS;AACD;AAAA,gBACR;AAAA,gBACM,KAAK;AACH,uBAAK,iBAAiB,KAAK,GAAG;AAC9B,uBAAK,KAAK,IAAI,QAAQ;AACtB;AAAA,gBACF,KAAK;AACH,uBAAK,UAAU,OAAO,gBAAgB;AACtC,uBAAK,KAAK,IAAI,MAAM;AACpB,uBAAK,KAAK,IAAI,QAAQ;AACtB,uBAAK,SAAS,OAAO,gBAAgB;AACrC;AAAA,gBACF,KAAK;AACH,uBAAK,KAAK,IAAI,UAAU;AACxB;AAAA,gBACF,KAAK;AACH,uBAAK,KAAK,IAAI,WAAW;AACzB;AAAA,gBACF,KAAK;AACH,uBAAK,cAAc,KAAK;AAAA,oBACtB,SAAS,KAAK;AAAA,oBACd;AAAA,kBACV,CAAS;AACD,uBAAK,KAAK,IAAI,SAAS;AACvB;AAAA,gBACF,KAAK;AACH,uBAAK,KAAK,IAAI,QAAQ;AACtB;AAAA,gBACF,KAAK;AACH,uBAAK,KAAK,IAAI,IAAI;AAClB,uBAAK,KAAK,IAAI,SAAS;AACvB,uBAAK,KAAK,IAAI,UAAU;AACxB;AAAA,gBACF,KAAK;AACH,uBAAK,KAAK,IAAI,YAAY;AAC1B,uBAAK,KAAK,IAAI,KAAK;AACnB;AAAA,gBACF,KAAK;AACH,uBAAK,KAAK,IAAI,IAAI;AAClB,uBAAK,KAAK,IAAI,UAAU;AACxB;AAAA,gBAEF,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH;AAAA,gBACF;AACE,wBAAM,IAAI,MAAM,mBAAmB,IAAI,IAAI,GAAG;AAAA,cACtD;AAAA,YACA;AAAA,UACA;AA1RqB;AAArB,cAAM,iBAAN;AA4RA,UAAAT,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,YAAW,IAAG,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACxD,gBAAM,EAAE,UAAS,IAAKE,SAAQ,YAAY;AAC1C,gBAAM,EAAE,MAAK,IAAKA,SAAQ,aAAa;AAEvC,mBAAS,qBAAqB,IAAI;AAChC,mBAAO,GAAG,SAAQ,EACf,QAAQ,MAAM,EAAE,EAChB,QAAQ,cAAc,EAAE,EACxB,QAAQ,aAAa,YAAY;AAAA,UACtC;AALS;AAOT,mBAAS,eAAe,QAAQ,MAAM,cAAc,oBAAoB,sBAAsB;AAC5F,gBAAI,CAAC,aAAa,OAAO;AACvB,2BAAa,MAAM,MAAM,cAAc,IAAI;AAAA,YAC/C;AACE,mBAAO,OAAO,MAAM,KAAK,IAAI,EAAE,IAAI,SAAO;AACxC,sBAAQ,OAAO,KAAG;AAAA,gBAChB,KAAK;AACH,yBAAO,IAAI,QAAQ,GAAG;AAAA,gBACxB,KAAK;AACH,yBAAO,IAAI,OAAO,GAAG;AAAA,gBACvB;AACE,yBAAO;AAAA,cACf;AAAA,YACA,CAAG,IAAI;AACL,kBAAM,iBAAiB,CAAA;AACvB,kBAAM,aAAa,CAAA;AACnB,kBAAM,UAAU,UAAU,aAAa,SAAS;AAAA,cAC9C,wBAAwB;AAAA,cACxB,cAAc,wBAAC,eAAe;AAC5B,oBAAI,OAAO,YAAY;AACrB,sBAAI,CAAC,+BAA+B;AAClC,+BAAW,KAAK,gCAAgC,gBAAgB,YAAY,MAAM,CAAC,KAAK;AACxF,oDAAgC;AAAA,kBAC1C,OAAe;AACL,0BAAM,WAAW,OAAO,WAAW,uBAAuB,EAAE;AAC5D,+BAAW,KAAK,aAAa,MAAM,QAAQ,IAAI,MAAM,WAAW,IAAI,QAAQ,GAAG,MAAM,gBAAgB,YAAY,MAAM,CAAC,GAAG;AAAA,kBACrI;AACQ,sBAAI,0BAA0B,OAAO,WAAW,QAAQ;AACtD,+BAAW,KAAK,oBAAoB;AAAA,kBAC9C;AACQ;AAAA,gBACR;AACM,oBAAI,YAAY;AACd,6BAAW,KAAK,cAAc,gBAAgB,YAAY,MAAM,CAAC,GAAG;AAAA,gBAC5E,OAAa;AACL,6BAAW,KAAK,kBAAkB;AAAA,gBAC1C;AAAA,cACA,GAnBkB;AAAA,cAoBd,8BAA8B,wBAAC,aAAa;AAC1C,sBAAM,eAAe,gBAAgB,UAAU,OAAO,iBAAiB,CAAA,GAAI,SAAS,cAAc;AAClG,oBAAI,cAAc;AAChB,yBAAO;AAAA,gBACf;AACM,sBAAM,eAAe,gBAAgB,UAAU,OAAO,iBAAiB,YAAY,OAAO,KAAK,SAAS,EAAE,IAAI,SAAO,UAAU,GAAG,CAAC,IAAI,CAAA,GAAI,SAAS,cAAc;AAClK,oBAAI,cAAc;AAChB,yBAAO;AAAA,gBACf;AACM,uBAAO;AAAA,cACb,GAVkC;AAAA,YAWlC,CAAG;AACD,gBAAI,gCAAgC;AACpC,gBAAI,wBAAwB;AAC5B,kBAAM;AAAA,cACJ;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACJ,IAAM;AACJ,kBAAM,SAAS,IAAI,OAAO,QAAQ;AAAA,cAChC;AAAA,cACA;AAAA,cACA,cAAc;AAAA,cACd;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACJ,CAAG;AACD,gBAAI,SAAS,CAAA;AACb,oBAAQ,UAAU,CAAC;AACnB,mBAAO,MAAM,MAAM,QAAQ,IAAI;AAC/B,mBAAO,KAAK,QAAQ,UAAU;AAC9B,oBAAQ,MAAK;AAEb,mBAAO,gBAAgB,QAAQ,CAAC,gBAAgB,MAAM;AACpD,sBAAQ,eAAe,MAAI;AAAA,gBACzB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,0BAAQ,eAAe,eAAe,eAAe,IAAI,IAAI,eAAe,WAAW;AACvF;AAAA,gBACF,KAAK;AACH,2BAAS,aAAa,GAAG,aAAa,KAAK,CAAC,EAAE,QAAQ,cAAc;AAClE,0BAAM,MAAM,KAAK,CAAC;AAClB,4BAAQ,eAAe,eAAe,eAAe,IAAI,IAAI,UAAU,KAAK,IAAI,UAAU,CAAC;AAAA,kBACrG;AACQ;AAAA,gBACF,KAAK;AACH,0BAAQ,eAAe,eAAe,eAAe,IAAI,IAAI,eAAe,WAAW;AACvF;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,0BAAQ,eAAe,eAAe,eAAe,IAAI,IAAI,KAAK,CAAC,EAAE,OAAO;AAC5E;AAAA,gBACF;AACE,wBAAM,IAAI,MAAM,gEAAgE,eAAe,IAAI,EAAE;AAAA,cAC7G;AAAA,YACA,CAAG;AACD,mBAAO,KAAK,qCAAqC;AACjD,mBAAO,KAAK,YAAY,qBAAqB,MAAM,SAAS,CAAC,EAAE;AAC/D,mBAAO,KAAK,YAAY,qBAAqB,MAAM,gBAAgB,CAAC,EAAE;AACtE,mBAAO,KAAK,YAAY,qBAAqB,MAAM,gBAAgB,CAAC,EAAE;AACtE,mBAAO,KAAK,YAAY,qBAAqB,MAAM,gBAAgB,CAAC,EAAE;AACtE,mBAAO,KAAK,YAAY,qBAAqB,MAAM,OAAO,CAAC,EAAE;AAC7D,gBAAI,OAAO,iBAAiB,OAAO,iBAAiB,OAAO,cAAc;AACvE,qBAAO;AAAA,gBACL,mCAAmC,qBAAqB,OAAO,YAAY,CAAC;AAAA;YAElF;AACE,mBAAO,KAAK,mCAAmC;AAC/C,mBAAO,KAAK,mCAAmC,OAAO,gBAAgB,IAAI,oBAAkB,eAAe,OAAO,EAAE,KAAK,IAAI,CAAC,KAAK;AACnI,oBAAQ,UAAU,CAAC;AACnB,mBAAO,IAAI,MAAM,QAAQ,IAAI;AAC7B,gBAAI,OAAO,eAAe;AACxB,qBAAO,cAAa;AAAA,YACxB,WAAa,OAAO,cAAc;AAC9B,qBAAO,aAAY;AAAA,YACvB;AACE,mBAAO,KAAK,mDAAmD;AAC/D,mBAAO,gBAAgB,QAAQ,oBAAkB;AAC/C,qBAAO,KAAK,SAAS,eAAe,sBAAqB,EAAG,MAAM,IAAI,EAAE,KAAK,QAAQ,CAAC;AAAA,YAC1F,CAAG;AACD,mBAAO,KAAK,iDAAiD;AAC7D,mBAAO,KAAK,QAAQ,UAAU;AAC9B,gBAAI,OAAO,iBAAiB,OAAO,eAAe;AAChD,sBAAQ,MAAK;AACb,oBAAM,kBAAkB,QAAQ,uBAAuB,OAAO,WAAW;AACzE,kBAAI,OAAO,eAAe;AACxB,sBAAM,UAAU,OAAO,cAAa;AACpC,sBAAM,cAAc,QAAQ,uBAAuB,OAAO,QAAQ,OAAO;AACzE,uBAAO,KAAK;AAAA;AAAA,mBAEE,WAAW;AAAA,iBACb,QAAQ,OAAO,IAAI;AAAA,mBACjB,iBAAiB,QAAQ,QAAQ,aAAa,eAAe,CAAC;AAAA,SACzE;AACH,sBAAM,EAAE,YAAA4B,aAAY,eAAc,IAAK;AACvC,yBAAS,IAAI,GAAG,IAAIA,YAAW,QAAQ,KAAK;AAC1C,wBAAM,UAAU,eAAe,CAAC;AAChC,wBAAM,YAAYA,YAAW,CAAC;AAC9B,wBAAM,kBAAkB,QAAQ,UAAU,QAAQ;AAClD,wBAAM,uBAAuB,QAAQ,uBAAuB,QAAQ,OAAO;AAC3E,yBAAO,KAAK;AAAA,QACZ,UAAU,QAAQ;AAAA,mBACN,oBAAoB;AAAA,iBACtB,gBAAgB,IAAI;AAAA,mBAClB,iBAAiB,iBAAiB,sBAAsB,eAAe,CAAC;AAAA,SACnF;AAAA,gBACT;AACM,uBAAO,KAAK,QAAQ;AAAA,cAC1B,OAAW;AACL,sBAAM,WAAW,OAAO,aAAY;AACpC,sBAAM,cAAc,QAAQ,uBAAuB,OAAO,QAAQ,OAAO;AACzE,uBAAO,KAAK;AAAA,mBACE,WAAW;AAAA,iBACb,SAAS,IAAI;AAAA,mBACX,iBAAiB,UAAU,aAAa,eAAe,CAAC;AAAA,SACnE;AAAA,cACT;AAAA,YACA;AACE,mBAAO,KAAK,OAAO,uBAAuB,OAAO,uBAAuB,SAAQ,EAAE,EAAE;AACpF,mBAAO,KAAK,WAAW,KAAK,IAAI,CAAC;AACjC,mBAAO,KAAK,MAAM;AAClB,gBAAI,OAAO,WAAW;AACpB,qBAAO,KAAK,mBAAmB,MAAM,CAAC;AACtC,qBAAO,KAAK,sCAAsC;AAAA,YACtD;AACE,mBAAO,KAAK,uBAAuB;AAEnC,gBAAI,kBAAkB,CAAA;AACtB,4BAAgB,QAAQ,CAAC,mBAAmB;AAC1C,8BAAgB,KAAK,GAAG,eAAe,sBAAqB,CAAE,EAAE;AAAA,YACpE,CAAG;AACD,mBAAO;AAAA;AAAA,IAEL,gBAAgB,KAAK,EAAE,CAAC;AAAA,IACxB,qBAAqB,qBAAqB,EAAE;AAAA,EAC9C,OAAO,KAAK,IAAI,CAAC;AAAA;AAAA,UAEnB;AAjOS;AAmOT,mBAAS,gBAAgB,YAAY,QAAQ;AAC3C,kBAAM,gBAAgB,OAAO,cAAc,WAAW,aAAa,oBAAoB,UAAU;AACjG,gBAAI,OAAO,OAAO,CAAC,GAAG;AACpB,qBAAO,gBAAgB,aAAa,KAAK,OAAO,OAAO,CAAC,CAAC,KAAK,OAAO,OAAO,CAAC,CAAC,KAAK,OAAO,OAAO,CAAC,CAAC;AAAA,YACvG;AACE,gBAAI,OAAO,OAAO,CAAC,GAAG;AACpB,qBAAO,gBAAgB,aAAa,KAAK,OAAO,OAAO,CAAC,CAAC,KAAK,OAAO,OAAO,CAAC,CAAC;AAAA,YAClF;AAEE,mBAAO,gBAAgB,aAAa,KAAK,OAAO,OAAO,CAAC,CAAC;AAAA,UAC3D;AAVS;AAYT,mBAAS,mBAAmB,QAAQ;AAClC,kBAAM,YAAY,OAAO,UAAU,SAAQ;AAC3C,kBAAM,qBAAqB,CAAC,YAAY,KAAK,SAAS;AACtD,mBAAO,MAAM,wBAAwB,GAAG,qBAAqB,cAAc,EAAE,GAAI,SAAS,IAAK;AAAA,cAC7F,gBAAgB,wBAAC,QAAQxB,UAAS;AAChC,oBAAI,WAAW,SAAS;AACtB,yBAAO,SAASA,KAAI,MAAM,MAAMA,KAAI,EAAE,SAAQ,CAAE;AAAA,gBACxD;AACM,uBAAO;AAAA,cACb,GALoB;AAAA,cAMhB,YAAY,wBAAC,aAAa;AACxB,oBAAI,aAAa,WAAW;AAC1B,yBAAO;AAAA,gBACf;AACM,oBAAI,OAAO,eAAe,QAAQ,GAAG;AACnC,yBAAO,KAAK,UAAU,OAAO,QAAQ,CAAC;AAAA,gBAC9C;AACM,sBAAM,IAAI,MAAM,wBAAyB,QAAQ,EAAG;AAAA,cAC1D,GARgB;AAAA,YAShB,CAAG;AAAA,UACH;AApBS;AAsBT,mBAAS,iBAAiB,cAAc,aAAa,iBAAiB;AACpE,kBAAM,UAAU,aAAa,QAAQ,SAAQ;AAC7C,kBAAM,qBAAqB,CAAC,YAAY,KAAK,OAAO;AACpD,kBAAM,qBAAqB,MAAM,wBAAwB,GAAG,qBAAqB,cAAc,EAAE,GAAI,OAAO,IAAK;AAAA,cAC/G,gBAAgB,wBAAC,QAAQA,UAAS;AAChC,oBAAI,WAAW,SAAS;AACtB,yBAAO,SAASA,KAAI,MAAM,MAAMA,KAAI,EAAE,SAAQ,CAAE;AAAA,gBACxD,WAAiB,WAAW,QAAQ;AAC5B,sBAAIA,UAAS,eAAe;AAC1B,2BAAO;AAAA,kBACjB;AACQ,yBAAO,GAAG,qBAAqB,cAAc,EAAE,GAAG,aAAaA,KAAI,EAAE,SAAQ,CAAE;AAAA,gBACvF,OAAa;AACL,wBAAM,IAAI,MAAM,sBAAsB;AAAA,gBAC9C;AAAA,cACA,GAXoB;AAAA,cAYhB,YAAY,wBAAC,UAAU,kBAAkB;AACvC,oBAAI,aAAa,WAAW;AAC1B,yBAAO;AAAA,gBACf;AACM,oBAAI,aAAa,WAAW;AAC1B,sBAAI,cAAe,QAAO;AAC1B,yBAAO;AAAA,gBACf;AACM,oBAAI,aAAa,eAAe,QAAQ,GAAG;AACzC,yBAAO,KAAK,UAAU,aAAa,QAAQ,CAAC;AAAA,gBACpD;AACM,sBAAM,IAAI,MAAM,wBAAyB,QAAQ,EAAG;AAAA,cAC1D,GAZgB;AAAA,YAahB,CAAG;AACD,mBAAO;AAAA,oCAC2B,eAAe;AAAA,IAC/C,kBAAkB;AAAA;AAAA;AAAA,UAGtB;AAnCS;AAqCT,mBAAS,gBAAgB,UAAU,cAAc,QAAQ,SAAS,gBAAgB;AAChF,gBAAI,aAAa,KAAM,QAAO;AAC9B,gBAAI,iBAAiB,KAAM,QAAO;AAClC,oBAAQ,OAAO,UAAQ;AAAA,cACrB,KAAK;AAAA,cACL,KAAK;AACH,uBAAO;AAAA,YACb;AACE,gBACE,OAAO,qBAAqB,eAC5B,oBAAoB,kBACpB;AACA,uBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,sBAAM,cAAc,aAAa,CAAC;AAClC,oBAAI,YAAY,SAAS,oBAAoB,YAAa;AAC1D,oBAAI,YAAY,gBAAgB,SAAU;AAC1C,sBAAM,gBAAgB,OAAO,CAAC,EAAE,QAAQ,QAAQ;AAChD,oBAAI,kBAAkB,GAAI;AAC1B,sBAAM,eAAe,eAAe,YAAY,IAAI,IAAI,aAAa;AACrE,wBAAQ,eAAe,cAAc,QAAQ;AAC7C,uBAAO;AAAA,cACb;AAAA,YACA;AAEE,qBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,oBAAM,cAAc,aAAa,CAAC;AAClC,kBAAI,aAAa,YAAY,YAAa;AAC1C,oBAAM,WAAW,eAAe,YAAY,IAAI;AAChD,sBAAQ,eAAe,UAAU,WAAW;AAC5C,qBAAO;AAAA,YACX;AACE,mBAAO;AAAA,UACT;AAhCS;AAkCT,UAAAT,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,eAAc,KAAI,cAAa,EAAC,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC1E,gBAAM,EAAE,OAAM,IAAKE,SAAQ,WAAW;AACtC,gBAAM,EAAE,MAAK,IAAKA,SAAQ,aAAa;AACvC,gBAAM,EAAE,qBAAoB,IAAKA,SAAQ,yBAAyB;AAClE,gBAAM,EAAE,uBAAsB,IAAKA,SAAQ,4BAA4B;AACvE,gBAAM,EAAE,uBAAsB,IAAKA,SAAQ,4BAA4B;AACvE,gBAAM,EAAE,qBAAoB,IAAKA,SAAQ,yBAAyB;AAClE,gBAAM,EAAE,uBAAsB,IAAKA,SAAQ,4BAA4B;AACvE,gBAAM,EAAE,uBAAsB,IAAKA,SAAQ,4BAA4B;AACvE,gBAAM,EAAE,qBAAoB,IAAKA,SAAQ,yBAAyB;AAClE,gBAAM,EAAE,uBAAsB,IAAKA,SAAQ,4BAA4B;AACvE,gBAAM,EAAE,uBAAsB,IAAKA,SAAQ,4BAA4B;AACvE,gBAAM,EAAE,eAAc,IAAKA,SAAQ,iBAAiB;AACpD,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,oBAAoB;AACzD,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,oBAAoB;AACzD,gBAAM,EAAE,yBAAwB,IAAKA,SAAQ,4BAA4B;AACzE,gBAAM,EAAE,2BAA0B,IAAKA,SAAQ,+BAA+B;AAC9E,gBAAM,EAAE,2BAA0B,IAAKA,SAAQ,+BAA+B;AAC9E,gBAAM,EAAE,kBAAiB,IAAKA,SAAQ,oBAAoB;AAC1D,gBAAM,EAAE,oBAAmB,IAAKA,SAAQ,uBAAuB;AAC/D,gBAAM,EAAE,oBAAmB,IAAKA,SAAQ,uBAAuB;AAC/D,gBAAM,EAAE,mBAAkB,IAAKA,SAAQ,qBAAqB;AAE5D,gBAAM,YAAN,MAAM,kBAAiB,OAAO;AAAA,YAC5B,WAAW,OAAO;AAChB,qBAAO;AAAA,YACX;AAAA,YAEE,OAAO,iBAAiB;AACtB,oBAAM,eAAe;AAAA;AAAA;AAGrB,oBAAM,SAAS,IAAI,KAAK,cAAc;AAAA,gBACpC,SAAS,KAAK;AAAA,gBACd,QAAQ,KAAK;AAAA,gBACb,UAAU;AAAA,gBACV,QAAQ,CAAC,CAAC;AAAA,gBACV,WAAW;AAAA,gBACX,YAAY;AAAA,gBACZ,QAAQ;AAAA,cACd,CAAK;AACD,qBAAO,MAAK;AACZ,qBAAO,IAAG;AACV,oBAAM,SAAS,OAAO,aAAY;AAClC,qBAAO,QAAQ,IAAI;AACnB,qBAAO,OAAO,CAAC,MAAM;AAAA,YACzB;AAAA,YAEE,OAAO,+BAA+B;AACpC,uBAAS,eAAe,IAAI,IAAI;AAC9B,uBAAO,GAAG,KAAK,OAAO,CAAC,IAAI,GAAG,KAAK,OAAO,CAAC;AAAA,cACjD;AAFa;AAGT,oBAAM,SAAS,IAAI,KAAK,eAAe,SAAQ,GAAI;AAAA,gBACjD,SAAS,KAAK;AAAA,gBACd,QAAQ,KAAK;AAAA,gBACb,UAAU;AAAA,gBACV,QAAQ,CAAC,CAAC;AAAA,gBACV,YAAY;AAAA,gBACZ,WAAW;AAAA,gBACX,QAAQ;AAAA,cACd,CAAK;AACD,oBAAM,OAAO;AAAA,gBACX,CAAC,GAAG,OAAO;AAAA,gBACX,CAAC,GAAG,IAAI;AAAA;AAEV,qBAAO,MAAM,MAAM,QAAQ,IAAI;AAC/B,qBAAO,IAAI,MAAM,QAAQ,IAAI;AAC7B,oBAAM,SAAS,OAAO,aAAY;AAClC,qBAAO,QAAQ,IAAI;AACnB,qBAAO,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM;AAAA,YAC5C;AAAA,YAEE,OAAO,4BAA4B;AACjC,uBAAS,eAAee,QAAO;AAC7B,uBAAOA,OAAM,KAAK,OAAO,CAAC;AAAA,cAChC;AAFa;AAGT,oBAAM,SAAS,IAAI,KAAK,eAAe,SAAQ,GAAI;AAAA,gBACjD,SAAS,KAAK;AAAA,gBACd,QAAQ,KAAK;AAAA,gBACb,UAAU;AAAA,gBACV,QAAQ,CAAC,CAAC;AAAA,gBACV,YAAY;AAAA,gBACZ,WAAW;AAAA,gBACX,QAAQ;AAAA,cACd,CAAK;AACD,oBAAM,OAAO;AAAA,gBACX,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA;AAEb,qBAAO,MAAM,MAAM,QAAQ,IAAI;AAC/B,qBAAO,IAAI,MAAM,QAAQ,IAAI;AAC7B,oBAAM,SAAS,OAAO,aAAY;AAClC,qBAAO,QAAQ,IAAI;AACnB,qBAAO,KAAK,MAAM,OAAO,CAAC,CAAC,MAAM,KAAK,KAAK,MAAM,OAAO,CAAC,CAAC,MAAM,KAAK,KAAK,MAAM,OAAO,CAAC,CAAC,MAAM,KAAK,KAAK,MAAM,OAAO,CAAC,CAAC,MAAM;AAAA,YAClI;AAAA,YAEE,WAAW,aAAa;AACtB,oBAAM,IAAI,MAAM,+BAAgC,KAAK,IAAI,EAAG;AAAA,YAChE;AAAA,YAEE,WAAW,cAAc;AACvB,oBAAM,IAAI,MAAM,gCAAiC,KAAK,IAAI,EAAG;AAAA,YACjE;AAAA,YAEE,OAAO,cAAc;AACnB,oBAAM,KAAK,KAAK;AAChB,oBAAM,gBAAgB,KAAK,iBAAgB;AAC3C,qBAAO,OAAO,OAAO;AAAA,gBACnB,aAAa,KAAK,eAAc;AAAA,gBAChC,2BAA2B,KAAK,6BAA4B;AAAA,gBAC5D,wBAAwB,KAAK,0BAAyB;AAAA,gBACtD,gBAAgB,KAAK,kBAAiB;AAAA,gBACtC;AAAA,gBACA,WAAW;AAAA,gBACX,cAAc,KAAK,gBAAe;AAAA,gBAClC,gBAAgB,KAAK,kBAAiB;AAAA,gBACtC,iBAAiB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,OAAO;AAAA,gBAC3E,mBAAmB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,SAAS;AAAA,gBAC/E,oBAAoB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,UAAU;AAAA,gBACjF,sBAAsB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,YAAY;AAAA,gBACrF,kBAAkB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,QAAQ;AAAA,gBAC7E,oBAAoB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,UAAU;AAAA,cACvF,CAAK;AAAA,YACL;AAAA,YAEE,OAAO,qBAAqB;AAC1B,oBAAM,IAAI,MAAM,uCAAwC,KAAK,IAAI,EAAG;AAAA,YACxE;AAAA,YAEE,OAAO,aAAa,QAAQ,eAAe;AACzC,qBAAO,OAAO,gCAAgC,cAAc,SAAS,IAAI,MAAM,cAAc,KAAK,GAAG,IAAI;AAAA,YAC7G;AAAA,YAEE,8BAA8B,KAAK;AACjC,mBAAK,6BAA6B;AAClC,qBAAO;AAAA,YACX;AAAA,YAEE,aAAa,MAAM;AACjB,mBAAK,YAAY;AACjB,qBAAO;AAAA,YACX;AAAA,YAEE,iBAAiB,MAAM;AACrB,oBAAM,eAAe,UAAU,oBAAoB,wBAAwB;AAC3E,mBAAK,gBAAgB;AACrB,qBAAO;AAAA,YACX;AAAA,YAEE,OAAO,wBAAwB,QAAQ;AACrC,oBAAM,gBAAgB,CAAA;AACtB,oBAAM,gBAAgB,CAAA;AACtB,oBAAM,SAAS,CAAA;AACf,oBAAM,yBAAyB;AAC/B,oBAAM,iBAAiB;AACvB,kBAAI,IAAI;AACR,kBAAI,eAAe;AACnB,kBAAI,eAAe;AACnB,qBAAO,IAAI,OAAO,QAAQ;AACxB,sBAAM,OAAO,OAAO,CAAC;AACrB,sBAAM,WAAW,OAAO,IAAI,CAAC;AAC7B,sBAAM,QAAQ,OAAO,SAAS,IAAI,OAAO,OAAO,SAAS,CAAC,IAAI;AAE9D,oBAAI,UAAU,wBAAwB,SAAS,OAAO,aAAa,KAAK;AACtE,yBAAO,KAAK,oBAAoB;AAChC,uBAAK;AACL;AAAA,gBACR,WAAiB,UAAU,wBAAwB,SAAS,OAAO,aAAa,KAAK;AAC7E,yBAAO,IAAG;AACV,uBAAK;AACL;AAAA,gBACR,WAEe,UAAU,wBAAwB,SAAS,OAAO,aAAa,KAAK;AAC3E,yBAAO,KAAK,SAAS;AACrB,uBAAK;AACL;AAAA,gBACR,WAAiB,UAAU,aAAa,SAAS,MAAM;AAC/C,yBAAO,IAAG;AACV;AACA;AAAA,gBACR,WAEe,UAAU,QAAQ,SAAS,KAAK;AACvC,yBAAO,KAAK,oBAAoB;AAChC;AACA;AAAA,gBACR,WAAiB,UAAU,sBAAsB;AACzC,sBAAI,SAAS,KAAK;AAChB,2BAAO,IAAG;AACV;AAAA,kBACV;AACQ,sBAAI,SAAS,OAAO,aAAa,OAAO,OAAO,IAAI,CAAC,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,KAAK;AACxI,2BAAO,KAAK,kBAAkB;AAC9B,mCAAe;AACf,mCAAe;AACf,yBAAK;AACL;AAAA,kBACV,WAAmB,SAAS,OAAO,aAAa,OAAO,OAAO,IAAI,CAAC,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,KAAK;AAC7F,2BAAO,KAAK,kBAAkB;AAC9B,mCAAe;AACf,mCAAe;AACf,yBAAK;AACL;AAAA,kBACV,WAAmB,SAAS,OAAO,aAAa,OAAO,OAAO,IAAI,CAAC,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,KAAK;AACtH,2BAAO,KAAK,kBAAkB;AAC9B,mCAAe;AACf,mCAAe;AACf,yBAAK;AACL;AAAA,kBACV,WAAmB,SAAS,OAAO,aAAa,OAAO,OAAO,IAAI,CAAC,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,KAAK;AACtH,2BAAO,KAAK,kBAAkB;AAC9B,mCAAe;AACf,mCAAe;AACf,yBAAK;AACL;AAAA,kBACV,WAAmB,SAAS,OAAO,aAAa,OAAO,OAAO,IAAI,CAAC,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,OAAO,OAAO,IAAI,CAAC,MAAM,KAAK;AACtH,2BAAO,KAAK,kBAAkB;AAC9B,mCAAe;AACf,mCAAe;AACf,yBAAK;AACL;AAAA,kBACV;AAAA,gBACA,WAEe,UAAU,oBAAoB;AACrC,sBAAI,iBAAiB,IAAI;AACvB,wBAAI,SAAS,KAAK;AAChB;AACA;AAAA,oBACZ;AACU,wBAAI,CAAC,uBAAuB,KAAK,IAAI,GAAG;AACtC,4BAAM,IAAI,MAAM,sCAAsC;AAAA,oBAClE;AAAA,kBACA;AACQ,kCAAgB;AAChB,sBAAI,CAAC,eAAe,KAAK,QAAQ,GAAG;AAClC,2BAAO,IAAG;AACV,kCAAc,KAAK,YAAY;AAC/B,kCAAc,KAAK,QAAQ,YAAY,CAAC;AAAA,kBAClD;AAAA,gBACA;AAEM;AAAA,cACN;AACI,kBAAI,OAAO,SAAS,GAAG;AACrB,sBAAM,IAAI,MAAM,gCAAgC;AAAA,cACtD;AACI,qBAAO;AAAA,gBACL;AAAA,gBACA;AAAA;YAEN;AAAA,YAEE,OAAO,yBAAyB,QAAQ;AACtC,qBAAO,QAAQ,OAAO,MAAM,oBAAoB,EAAE,CAAC,CAAC;AAAA,YACxD;AAAA,YAEE,OAAO,eAAe,gBAAgB,YAAY;AAChD,6BAAe,MAAM,MAAM,SAAS;AACpC,oBAAM;AAAA,gBACJ;AAAA,gBACA;AAAA,gBACA;AAAA,kBACE,WAAW;AACf,kBAAI;AACJ,kBAAI,WAAW,cAAc,UAAU;AACrC,sBAAM,IAAI,QAAQ,CAAC;AACnB,sBAAM,IAAI,KAAK,KAAK,QAAQ,CAAC,IAAI,CAAC;AAClC,yBAAS,IAAI,aAAa,IAAI,IAAI,IAAI,CAAC;AACvC,wBAAQ,WAAW,GAAG,GAAG,GAAG,IAAI,GAAG,QAAQ,MAAM,QAAQ,OAAO,MAAM;AAAA,cAC5E,OAAW;AACL,sBAAM,QAAQ,IAAI,WAAW,QAAQ,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC;AACxD,wBAAQ,WAAW,GAAG,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,QAAQ,MAAM,QAAQ,eAAe,KAAK;AAC3F,yBAAS,IAAI,aAAa,MAAM,MAAM;AAAA,cAC5C;AAEI,uBAAS,OAAO,SAAS,GAAG,UAAU,CAAC,IAAI,UAAU,CAAC,IAAI,UAAU,CAAC,CAAC;AAEtE,kBAAI,WAAW,OAAO,WAAW,GAAG;AAClC,uBAAO;AAAA,cACb,WAAe,WAAW,OAAO,WAAW,GAAG;AACzC,uBAAO,MAAM,WAAW,QAAQ,WAAW,OAAO,CAAC,CAAC;AAAA,cAC1D,WAAe,WAAW,OAAO,WAAW,GAAG;AACzC,sBAAM,OAAO,MAAM,WAAW,QAAQ,WAAW,OAAO,CAAC,IAAI,WAAW,OAAO,CAAC,CAAC;AACjF,uBAAO,KAAK,IAAI,SAAS,GAAG;AAC1B,yBAAO,MAAM,WAAW,GAAG,WAAW,OAAO,CAAC,CAAC;AAAA,gBACvD,CAAO;AAAA,cACP;AAAA,YACA;AAAA,YAEE,YAAY,QAAQ,UAAU;AAC5B,oBAAM,QAAQ,QAAQ;AACtB,mBAAK,iBAAiB;AACtB,mBAAK,eAAe;AACpB,mBAAK,qBAAqB;AAC1B,mBAAK,eAAe;AACpB,mBAAK,kBAAkB;AACvB,mBAAK,UAAU;AACf,mBAAK,mBAAmB;AACxB,mBAAK,yBAAyB;AAC9B,mBAAK,uBAAuB;AAC5B,mBAAK,mBAAmB;AACxB,mBAAK,mBAAmB;AACxB,mBAAK,yBAAyB;AAAA,YAClC;AAAA,YAEE,mBAAmB;AACjB,oBAAM,EAAE,aAAa,KAAK;AAC1B,kBAAI,KAAK,QAAQ,CAAC,IAAI,SAAS,kBAAkB,KAAK,QAAQ,CAAC,IAAI,SAAS,gBAAgB;AAC1F,sBAAM,IAAI,MAAM,iBAAiB,KAAK,QAAQ,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,wDAAwD,SAAS,cAAc,IAAI,SAAS,cAAc,GAAG;AAAA,cACtL;AAAA,YACA;AAAA,YAEE,kBAAkB;AAChB,oBAAM,IAAI,MAAM,oCAAoC,KAAK,YAAY,IAAI,EAAE;AAAA,YAC/E;AAAA,YAEE,mBAAmB,MAAM;AACvB,kBAAI,KAAK,WAAW;AAClB,qBAAK,kBAAkB,KAAK;AAC5B,qBAAK,iBAAiB,CAAC,WAAW;AAClC,qBAAK,qBAAqB;AAC1B,uBAAO;AAAA,cACb;AACI,kBAAI,KAAK,cAAc,YAAY;AACjC,qBAAK,kBAAkB,KAAK;AAC5B,qBAAK,iBAAiB,KAAK;AAC3B,oBAAI,KAAK,UAAU;AACjB,uBAAK,eAAe,KAAK;AACzB,sBAAI,KAAK,eAAe,MAAM;AAC5B,yBAAK,gBAAgB,KAAK;AAAA,kBACpC;AACQ,0BAAQ,KAAK,YAAU;AAAA,oBACrB,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AACH,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACY,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AACH,6BAAO,KAAK,gBAAgB,IAAI;AAAA,kBAC9C;AAAA,gBACA,OAAa;AACL,sBAAI,KAAK,eAAe,MAAM;AAC5B,yBAAK,gBAAgB,KAAK;AAAA,kBACpC;AACQ,0BAAQ,KAAK,YAAU;AAAA,oBACrB,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AACH,2BAAK,eAAe,KAAK;AACzB,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACY,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AACH,6BAAO,KAAK,gBAAgB,IAAI;AAAA,kBAC9C;AAAA,gBACA;AAAA,cACA,WAAe,KAAK,cAAc,UAAU;AACtC,qBAAK,kBAAkB,KAAK;AAC5B,qBAAK,iBAAiB,KAAK;AAC3B,oBAAI,KAAK,UAAU;AACjB,uBAAK,eAAe,KAAK;AACzB,sBAAI,KAAK,eAAe,MAAM;AAC5B,yBAAK,gBAAgB,KAAK;AAAA,kBACpC;AACQ,0BAAQ,KAAK,YAAU;AAAA,oBACrB,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK,WAAW;AACd,0BAAI,KAAK,qBAAqB;AAC5B,4BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,+BAAK,qBAAqB;AAC1B,iCAAO;AAAA,wBACvB,WAAyB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,+BAAK,qBAAqB;AAC1B,iCAAO;AAAA,wBACvB,OAAqB;AACL,+BAAK,qBAAqB;AAC1B,iCAAO;AAAA,wBACvB;AAAA,sBACA,OAAmB;AACL,4BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,+BAAK,qBAAqB;AAC1B,iCAAO;AAAA,wBACvB,WAAyB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,+BAAK,qBAAqB;AAC1B,iCAAO;AAAA,wBACvB,OAAqB;AACL,+BAAK,qBAAqB;AAC1B,iCAAO;AAAA,wBACvB;AAAA,sBACA;AAAA,oBACA;AAAA,oBACU,KAAK,YAAY;AACf,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACA;AAAA,oBACU,KAAK,YAAY;AACf,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACA;AAAA,oBACU,KAAK,YAAY;AACf,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACA;AAAA,kBACA;AAAA,gBACA;AACM,qBAAK,eAAe,KAAK;AACzB,oBAAI,KAAK,eAAe,MAAM;AAC5B,uBAAK,gBAAgB,KAAK;AAAA,gBAClC;AACM,oBAAI,KAAK,qBAAqB;AAC5B,0BAAQ,KAAK,YAAU;AAAA,oBACrB,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK,WAAW;AACd,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACA;AAAA,oBACU,KAAK,YAAY;AACf,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACA;AAAA,oBACU,KAAK,YAAY;AACf,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACA;AAAA,oBACU,KAAK,YAAY;AACf,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACA;AAAA,kBACA;AAAA,gBACA,OAAa;AACL,0BAAQ,KAAK,YAAU;AAAA,oBACrB,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK,WAAW;AACd,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACA;AAAA,oBACU,KAAK,YAAY;AACf,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACA;AAAA,oBACU,KAAK,YAAY;AACf,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACA;AAAA,oBACU,KAAK,YAAY;AACf,0BAAI,KAAK,OAAO,CAAC,IAAI,GAAG;AACtB,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,WAAuB,KAAK,OAAO,CAAC,IAAI,GAAG;AAC7B,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB,OAAmB;AACL,6BAAK,qBAAqB;AAC1B,6BAAK,eAAe,MAAM;AAC1B,+BAAO;AAAA,sBACrB;AAAA,oBACA;AAAA,kBACA;AAAA,gBACA;AAAA,cACA,OAAW;AACL,sBAAM,IAAI,MAAM,2BAA2B,KAAK,SAAS,GAAG;AAAA,cAClE;AAEI,oBAAM,IAAI,MAAM,0BAA0B,KAAK,UAAU,GAAG;AAAA,YAChE;AAAA,YAEE,kBAAkB;AAChB,oBAAM,IAAI,MAAM,sBAAsB;AAAA,YAC1C;AAAA,YAEE,uBAAuB;AACrB,sBAAQ,KAAK,YAAU;AAAA,gBACrB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,KAAK,2BAA0B;AAAA,gBACxC,KAAK;AACH,yBAAO,KAAK,2BAA0B;AAAA,gBACxC,KAAK;AACH,yBAAO,KAAK,2BAA0B;AAAA,gBACxC,KAAK;AACH,yBAAO,KAAK,2BAA0B;AAAA,gBACxC;AACE,wBAAM,IAAI,MAAM,6BAA8B,KAAK,UAAU,EAAG;AAAA,cACxE;AAAA,YACA;AAAA,YAEE,mCAAmC;AACjC,oBAAM,IAAI,MAAM,sBAAsB;AAAA,YAC1C;AAAA,YACE,sCAAsC;AACpC,oBAAM,IAAI,MAAM,sBAAsB;AAAA,YAC1C;AAAA,YACE,mCAAmC;AACjC,oBAAM,IAAI,MAAM,sBAAsB;AAAA,YAC1C;AAAA,YACE,sCAAsC;AACpC,oBAAM,IAAI,MAAM,sBAAsB;AAAA,YAC1C;AAAA,YACE,mCAAmC;AACjC,oBAAM,IAAI,MAAM,sBAAsB;AAAA,YAC1C;AAAA,YACE,sCAAsC;AACpC,oBAAM,IAAI,MAAM,sBAAsB;AAAA,YAC1C;AAAA,YACE,mCAAmC;AACjC,oBAAM,IAAI,MAAM,sBAAsB;AAAA,YAC1C;AAAA,YACE,sCAAsC;AACpC,oBAAM,IAAI,MAAM,sBAAsB;AAAA,YAC1C;AAAA,YACE,yBAAyB;AACvB,oBAAM,IAAI,MAAM,sBAAsB;AAAA,YAC1C;AAAA,YACE,qCAAqC;AACnC,oBAAM,IAAI,MAAM,sBAAsB;AAAA,YAC1C;AAAA,YACE,4BAA4B;AAC1B,oBAAM,IAAI,MAAM,sBAAsB;AAAA,YAC1C;AAAA,YAEE,sBAAsB;AACpB,kBAAI,KAAK,WAAW;AAClB,uBAAO,KAAK,uBAAsB;AAAA,cACxC,WAAe,KAAK,cAAc,UAAU;AACtC,oBAAI,KAAK,qBAAqB;AAC5B,yBAAO,KAAK,mCAAkC;AAAA,gBACtD;AACM,uBAAO,KAAK,qBAAoB;AAAA,cACtC,OAAW;AACL,uBAAO,KAAK,0BAAyB;AAAA,cAC3C;AAAA,YACA;AAAA,YAEE,6BAA6B;AAC3B,qBAAO,MAAM,cAAc,KAAK,iCAAgC,CAAE,IAChE,MAAM,cAAc,KAAK,qCAAqC;AAAA,YACpE;AAAA,YAEE,6BAA6B;AAC3B,qBAAO,MAAM,cAAc,KAAK,iCAAgC,CAAE,IAChE,MAAM,cAAc,KAAK,qCAAqC;AAAA,YACpE;AAAA,YAEE,6BAA6B;AAC3B,qBAAO,MAAM,cAAc,KAAK,iCAAgC,CAAE,IAChE,MAAM,cAAc,KAAK,qCAAqC;AAAA,YACpE;AAAA,YAEE,6BAA6B;AAC3B,qBAAO,MAAM,cAAc,KAAK,iCAAgC,CAAE,IAChE,MAAM,cAAc,KAAK,qCAAqC;AAAA,YACpE;AAAA,YAEE,4BAA4B;AAC1B,oBAAM,oBAAoB,KAAK,2BAA2B,KAAK,SAAS,KAAK,MAAM;AACnF,qBAAO,aAAa,iBAAiB;AAAA;AAAA,YACzC;AAAA,YAEE,0BAA0B;AACxB,qBAAO,aAAa,KAAK,2BAA2B,KAAK,SAAS,KAAK,QAAQ,IAAI,CAAC;AAAA;AAAA,YACxF;AAAA,YAEE,gCAAgC;AAC9B,qBAAO,aAAa,KAAK,2BAA2B,KAAK,SAAS,KAAK,MAAM,CAAC;AAAA;AAAA,YAClF;AAAA,YAEE,qCAAqC;AACnC,qBAAO,aAAa,KAAK,2BAA2B,KAAK,SAAS,KAAK,MAAM,CAAC;AAAA;AAAA,YAClF;AAAA,YAEE,gBAAgB;AACd,qBAAO,KAAK,YAAY,KAAK,QAAQ,MAAK,IAAK,KAAK;AAAA,YACxD;AAAA,YACE,+BAA+B;AAC7B,kBAAI,KAAK,cAAc,WAAY,OAAM,IAAI,MAAM,0CAA0C;AAC7F,oBAAM;AAAA,gBACJ;AAAA,gBACA,SAAS;AAAA,cACf,IAAQ;AACJ,oBAAM,SAAS,IAAI,WAAW,QAAQ,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC;AACzD,iBAAG,WAAW,GAAG,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,MAAM,GAAG,eAAe,MAAM;AAC7E,qBAAO;AAAA,YACX;AAAA,YAEE,iCAAiC;AAC/B,qBAAO,IAAI,aAAa,KAAK,6BAA4B,EAAG,MAAM;AAAA,YACtE;AAAA,YAEE,gCAAgC;AAC9B,kBAAI,KAAK,cAAc,SAAU,OAAM,IAAI,MAAM,wCAAwC;AACzF,oBAAM;AAAA,gBACJ;AAAA,gBACA,SAAS;AAAA,cACf,IAAQ;AACJ,oBAAM,IAAI,QAAQ,CAAC;AACnB,oBAAM,IAAI,QAAQ,CAAC;AACnB,oBAAM,SAAS,IAAI,aAAa,IAAI,IAAI,CAAC;AACzC,iBAAG,WAAW,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,MAAM;AACnD,qBAAO;AAAA,YACX;AAAA,YAEE,UAAU,MAAM;AACd,oBAAM;AAAA,gBACJ,SAAS;AAAA,gBACT;AAAA,cACN,IAAQ;AACJ,oBAAM,CAAC,OAAO,MAAM,IAAI;AACxB,oBAAM,SAAS,IAAI,WAAW,QAAQ,SAAS,CAAC;AAChD,iBAAG,WAAW,GAAG,GAAG,OAAO,QAAQ,GAAG,MAAM,GAAG,eAAe,MAAM;AACpE,qBAAO,IAAI,mBAAmB,OAAO,SAAS,MAAM,WAAW,QAAQ,OAAO,MAAM,GAAG,MAAM;AAAA,YACjG;AAAA,YAEE,wBAAwB;AACtB,oBAAM,SAAS;AAAA,gBACb,QAAQ,KAAK,aAAY;AAAA;AAE3B,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,uBAAO,KAAK,WAAW,CAAC,EAAE,QAAQ,IAAI,KAAK,eAAe,CAAC,EAAE,QAAO;AAAA,cAC1E;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,0BAA0B;AACxB,oBAAM,SAAS;AAAA,gBACb,QAAQ,KAAK,aAAY;AAAA;AAE3B,kBAAI,KAAK,WAAW;AAClB,yBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,yBAAO,KAAK,WAAW,CAAC,EAAE,QAAQ,IAAI,KAAK,eAAe,CAAC,EAAE,MAAK;AAAA,gBAC1E;AAAA,cACA,OAAW;AACL,yBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,yBAAO,KAAK,WAAW,CAAC,EAAE,QAAQ,IAAI,KAAK,eAAe,CAAC;AAAA,gBACnE;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,wBAAwB;AACtB,oBAAM,gBAAgB,KAAK;AAC3B,mBAAK,mBAAmB;AACxB,qBAAO;AAAA,YACX;AAAA,YAEE,UAAU,QAAQ;AAChB,oBAAM,YAAY,KAAK,eAAe,MAAM;AAC5C,kBAAI,KAAK,SAAS;AAChB,oBAAI,CAAC,KAAK,eAAe;AACvB,wBAAM,IAAI,MAAM,6DAA6D;AAAA,gBACrF;AACM,sBAAM,eAAe,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;AACxE,sBAAM,aAAa,MAAM,qBAAqB;AAAA,kBAC5C,qBAAqB,KAAK;AAAA,kBAC1B,WAAW,KAAK;AAAA,mBACf,YAAY;AACf,sBAAM,aAAa,KAAK;AACxB,oBAAI,YAAY;AACd,wBAAM,eAAe,KAAK,2BAA2B,YAAY,KAAK,MAAM;AAC5E,wBAAM,eAAe,KAAK,2BAA2B,YAAY,KAAK,MAAM;AAC5E,sBAAI,iBAAiB,cAAc;AACjC,wBAAI,KAAK,OAAO;AACd,8BAAQ,KAAK,iEAAiE;AAAA,oBAC1F;AACU,yBAAK,cAAc;AAAA,sBACjB,MAAM;AAAA,sBACN,WAAW;AAAA,sBACX,QAAQ;AAAA,oBACpB,CAAW;AACD;AAAA,kBACV;AAAA,gBACA;AACM,qBAAK,SAAS;AACd,qBAAK,YAAY;AACjB,qBAAK,UAAU;AACf,sBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,mBAAG,gBAAgB,GAAG,aAAa,KAAK,WAAW;AACnD,qBAAK,iBAAgB;AACrB,qBAAK,YAAY,QAAQ,KAAK,QAAQ,CAAC;AACvC,qBAAK,YAAY,SAAS,KAAK,QAAQ,CAAC;AACxC,mBAAG,SAAS,GAAG,GAAG,KAAK,WAAW,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC;AACxD,qBAAK,OAAO,QAAQ,KAAK,WAAW,CAAC;AACrC,qBAAK,OAAO,SAAS,KAAK,WAAW,CAAC;AACtC,oBAAI,KAAK,SAAS;AAChB,uBAAK,QAAQ,OAAM;AAAA,gBAC3B;AACM,qBAAK,UAAU;AACf,qBAAK,oBAAmB;AACxB,oBAAI,KAAK,kBAAkB,KAAK,eAAe,SAAS,GAAG;AACzD,2BAAS,IAAI,GAAG,IAAI,KAAK,eAAe,QAAQ,KAAK;AACnD,yBAAK,eAAe,CAAC,EAAE,OAAM;AAAA,kBACvC;AACQ,uBAAK,iBAAiB;AACtB,uBAAK,wBAAuB;AAAA,gBACpC;AAAA,cACA,OAAW;AACL,qBAAK,SAAS;AAAA,cACpB;AACI,qBAAO;AAAA,YACX;AAAA,YACE,eAAe;AACb,qBAAO,KAAK;AAAA,gBACV,KAAK,eAAc;AAAA,gBACnB,KAAK,OAAO,CAAC;AAAA,gBACb,KAAK,OAAO,CAAC;AAAA,gBACb,KAAK,OAAO,CAAC;AAAA;YAEnB;AAAA,YACE,cAAc,QAAQ;AACpB,kBAAI,KAAK,kBAAkB;AACzB,qBAAK,iBAAiB,KAAK,MAAM;AAAA,cACvC,OAAW;AACL,qBAAK,mBAAmB,CAAC,MAAM;AAAA,cACrC;AAAA,YACA;AAAA,YACE,2BAA2B,cAAc,KAAK,SAAS,SAAS,KAAK,QAAQ,QAAQ,OAAO;AAC1F,kBAAI,CAAC,QAAQ;AACX,oBAAI,CAAC,KAAK,YAAY,SAAS,uBAAwB,QAAO;AAC9D,sBAAM,MAAM,KAAK,YAAY,SAAS,QAAQ,oBAAoB,mBAAmB;AACrF,sBAAM,SAAS,KAAK,YAAY,SAAS,QAAQ,uBAAuB,sBAAsB;AAC9F,sBAAM,OAAO,KAAK,YAAY,SAAS,QAAQ,qBAAqB,oBAAoB;AACxF,sBAAM,eAAe,KAAK,KAAK,YAAY,CAAC,IAAI,YAAY,CAAC,CAAC;AAC9D,oBAAI,gBAAgB,IAAI,UAAU;AAChC,yBAAO;AAAA,gBACf,WAAiB,gBAAgB,OAAO,UAAU;AAC1C,yBAAO;AAAA,gBACf,WAAiB,gBAAgB,KAAK,UAAU;AACxC,yBAAO;AAAA,gBACf,OAAa;AACL,wBAAM,IAAI,MAAM,8DAA8D;AAAA,gBACtF;AAAA,cACA;AACI,sBAAQ,QAAM;AAAA,gBACZ,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAO;AAAA,gBACT;AACE,wBAAM,IAAI,MAAM,mBAAmB,MAAM,2DAA2D;AAAA,cAC5G;AAAA,YACA;AAAA,YAEE,0BAA0B,aAAa,KAAK;AAC1C,kBAAI,CAAC,KAAK,UAAW;AACrB,kBAAI,KAAK,QAAQ,YAAY,IAAI,SAAS;AACxC,sBAAM,EAAE,QAAO,IAAK;AACpB,oBAAI,SAAS;AACX,sBAAI,QAAQ,QAAQ,UAAU,GAAG;AAC/B,yBAAK,QAAQ,OAAM;AACnB,yBAAK,UAAU,QAAQ,MAAK;AAC5B,yBAAK,mBAAmB;AAAA,kBAClC;AACQ,0BAAQ,OAAM;AAAA,gBACtB;AACM,4BAAY,UAAU,IAAI,MAAK;AAAA,cACrC,WAAe,KAAK,kBAAkB,KAAK,eAAe,SAAS,GAAG;AAChE,sBAAM,EAAE,eAAc,IAAK;AAC3B,yBAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,wBAAM,gBAAgB,eAAe,CAAC;AACtC,sBAAI,cAAc,YAAY,IAAI,SAAS;AACzC,0BAAM,EAAE,QAAO,IAAK;AACpB,wBAAI,SAAS;AACX,0BAAI,QAAQ,QAAQ,UAAU,GAAG;AAC/B,sCAAc,OAAM;AACpB,uCAAe,CAAC,IAAI,QAAQ,MAAK;AACjC,6BAAK,uBAAuB,CAAC,IAAI;AAAA,sBAC/C;AACY,8BAAQ,OAAM;AAAA,oBAC1B;AACU,gCAAY,UAAU,IAAI,MAAK;AAC/B;AAAA,kBACV;AAAA,gBACA;AAAA,cACA;AAAA,YACA;AAAA,YAEE,WAAW,gBAAgB;AACzB,mBAAK,mBAAmB;AACxB,mBAAK,UAAU,eAAe;AAC9B,kBAAI,KAAK,gBAAgB;AACvB,yBAAS,IAAI,GAAG,IAAI,KAAK,eAAe,QAAQ,KAAK;AACnD,uBAAK,uBAAuB,CAAC,IAAI;AAAA,gBACzC;AACM,qBAAK,iBAAiB,eAAe;AAAA,cAC3C;AAAA,YACA;AAAA,YAEE,aAAa;AAAA,YAAA;AAAA,UACf;AAt4B8B;AAA9B,cAAM,WAAN;AAw4BA,gBAAM,UAAU;AAAA,YACd,KAAK;AAAA,YACL,OAAO;AAAA,YACP,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA;AAGR,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,eAAc,KAAI,aAAY,IAAG,2BAA0B,IAAG,8BAA6B,IAAG,8BAA6B,IAAG,2BAA0B,IAAG,8BAA6B,IAAG,8BAA6B,IAAG,2BAA0B,IAAG,8BAA6B,IAAG,8BAA6B,IAAG,mBAAkB,IAAG,sBAAqB,IAAG,sBAAqB,IAAG,uBAAsB,IAAG,8BAA6B,IAAG,iCAAgC,IAAG,iCAAgC,IAAG,sBAAqB,IAAG,yBAAwB,IAAG,yBAAwB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACnnB,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,0BAAN,MAAM,gCAA+B,eAAe;AAAA,YAClD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,cAAc,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YAClF;AAAA,UACA;AARoD;AAApD,cAAM,yBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,0BAAN,MAAM,gCAA+B,eAAe;AAAA,YAClD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,cAAc,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YAClG;AAAA,UACA;AARoD;AAApD,cAAM,yBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,wBAAN,MAAM,8BAA6B,eAAe;AAAA,YAChD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,YAAY,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YAChF;AAAA,UACA;AARkD;AAAlD,cAAM,uBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,0BAAN,MAAM,gCAA+B,eAAe;AAAA,YAClD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,cAAc,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YAClF;AAAA,UACA;AARoD;AAApD,cAAM,yBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,0BAAN,MAAM,gCAA+B,eAAe;AAAA,YAClD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,cAAc,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YAClG;AAAA,UACA;AARoD;AAApD,cAAM,yBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,wBAAN,MAAM,8BAA6B,eAAe;AAAA,YAChD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,YAAY,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,CAAC;AAAA,YAChE;AAAA,UACA;AARkD;AAAlD,cAAM,uBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,0BAAN,MAAM,gCAA+B,eAAe;AAAA,YAClD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,cAAc,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YAClF;AAAA,UACA;AARoD;AAApD,cAAM,yBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,0BAAN,MAAM,gCAA+B,eAAe;AAAA,YAClD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,cAAc,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YAClG;AAAA,UACA;AARoD;AAApD,cAAM,yBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,wBAAN,MAAM,8BAA6B,eAAe;AAAA,YAChD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,YAAY,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,CAAC;AAAA,YAChE;AAAA,UACA;AARkD;AAAlD,cAAM,uBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,oBAAN,MAAM,0BAAyB,eAAe;AAAA,YAC5C,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,aAAa,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YACjF;AAAA,UACA;AAR8C;AAA9C,cAAM,mBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,oBAAN,MAAM,0BAAyB,eAAe;AAAA,YAC5C,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,aAAa,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YACjG;AAAA,UACA;AAR8C;AAA9C,cAAM,mBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,UAAS,IAAKA,SAAQ,SAAS;AAEvC,gBAAM,kBAAN,MAAM,wBAAuB,UAAU;AAAA,YACrC,IAAI,cAAc;AAChB,qBAAO,KAAK,QAAQ;AAAA,YACxB;AAAA,YACE,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,kBAAkB;AAChB,oBAAM,KAAK,KAAK;AAChB,oBAAM,OAAO,KAAK;AAClB,iBAAG,gBAAgB,GAAG,aAAa,KAAK,YAAW,CAAE;AACrD,iBAAG;AAAA,gBACD,GAAG;AAAA,gBACH,GAAG;AAAA,gBACH,GAAG;AAAA,gBACH,KAAK;AAAA,gBACL;AAAA;AAEF,oBAAM,SAAS,IAAI,aAAa,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC;AACrD,iBAAG,WAAW,GAAG,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,MAAM,GAAG,OAAO,MAAM;AAC/D,qBAAO;AAAA,YACX;AAAA,YACE,eAAe;AACb,kBAAI,KAAK,SAAU,QAAO;AAC1B,qBAAO,KAAK,gBAAe;AAAA,YAC/B;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,WAAW,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,CAAC;AAAA,YAC/D;AAAA,UACA;AA9BuC;AAAvC,cAAM,iBAAN;AAgCA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,kBAAiB,IAAKE,SAAQ,YAAY;AAElD,gBAAM,sBAAN,MAAM,4BAA2B,kBAAkB;AAAA,YACjD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,KAAK,aAAY;AAAA,YAC5B;AAAA,UACA;AARmD;AAAnD,cAAM,qBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,cAAa,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACzD,gBAAM,EAAE,QAAO,IAAKE,SAAQ,kBAAkB;AAE9C,gBAAM,aAAN,MAAM,mBAAkB,QAAQ;AAAA,YAC9B,IAAI,cAAc;AAChB,oBAAM,IAAI,MAAM,oCAAqC,KAAK,IAAI,EAAG;AAAA,YACrE;AAAA,YAEE,QAAQ;AACN,qBAAO,IAAI,KAAK,YAAY,IAAI;AAAA,YACpC;AAAA,YAEE,eAAe;AACb,kBAAI,KAAK,QAAQ,QAAQ,GAAG;AAC1B,qBAAK,WAAU;AACf,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,eAAe;AACb,mBAAK,QAAQ;AACb,oBAAM,EAAE,SAAS,IAAI,MAAM,SAAS,OAAM,IAAK;AAC/C,kBAAI,OAAO,OAAO;AAChB,wBAAQ,KAAK,0BAA0B;AAAA,cAC7C;AACI,iBAAG,gBAAgB,GAAG,aAAa,KAAK,YAAW,CAAE;AACrD,4BAAc,IAAI,OAAO;AACzB,iBAAG,qBAAqB,GAAG,aAAa,GAAG,mBAAmB,GAAG,YAAY,SAAS,CAAC;AACvF,oBAAM,SAAS,GAAG,cAAa;AAC/B,4BAAc,IAAI,MAAM;AACxB,iBAAG,WAAW,GAAG,YAAY,GAAG,KAAK,gBAAgB,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,eAAe,KAAK,aAAa,IAAI;AACpH,iBAAG,kBAAkB,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AACnE,qBAAO,QAAQ;AACf,mBAAK,UAAU;AAAA,YACnB;AAAA,YAEE,aAAa;AACX,mBAAK,QAAQ;AACb,oBAAM,KAAK,KAAK;AAChB,oBAAM,OAAO,KAAK;AAClB,oBAAM,SAAS,KAAK;AACpB,kBAAI,OAAO,OAAO;AAChB,wBAAQ,KAAK,sBAAsB;AAAA,cACzC;AACI,oBAAM,SAAS,GAAG,cAAa;AAC/B,4BAAc,IAAI,MAAM;AACxB,iBAAG,WAAW,GAAG,YAAY,GAAG,KAAK,gBAAgB,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,eAAe,KAAK,aAAa,IAAI;AACpH,qBAAO,QAAQ;AACf,mBAAK,UAAU;AAAA,YACnB;AAAA,YAEE,QAAQ;AACN,kBAAI,KAAK,QAAQ,OAAO;AACtB,qBAAK,QAAQ;AACb,sBAAM6B,MAAK,KAAK;AAChB,sBAAM,SAAS,KAAK,UAAUA,IAAG,cAAa;AAC9C,8BAAcA,KAAI,MAAM;AACxB,sBAAM,OAAO,KAAK;AAClB,uBAAO,QAAQ;AACf,gBAAAA,IAAG,WAAWA,IAAG,YAAY,GAAG,KAAK,gBAAgB,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,eAAe,KAAK,aAAa,IAAI;AAAA,cAC1H;AACI,oBAAM,EAAE,SAAS,IAAI,QAAO,IAAK;AACjC,iBAAG,gBAAgB,GAAG,aAAa,KAAK,YAAW,CAAE;AACrD,iBAAG,YAAY,GAAG,YAAY,OAAO;AACrC,4BAAc,IAAI,OAAO;AACzB,iBAAG,qBAAqB,GAAG,aAAa,GAAG,mBAAmB,GAAG,YAAY,SAAS,CAAC;AACvF,iBAAG,WAAW,GAAG,GAAG,GAAG,CAAC;AACxB,iBAAG,MAAM,GAAG,mBAAmB,GAAG,gBAAgB;AAAA,YACtD;AAAA,YAEE,SAAS;AACP,kBAAI,KAAK,SAAU;AACnB,mBAAK,WAAW;AAChB,kBAAI,KAAK,QAAQ,OAAO;AACtB,qBAAK,QAAQ;AACb,oBAAI,KAAK,QAAQ,MAAO;AAAA,cAC9B;AACI,mBAAK,QAAQ,cAAc,KAAK,OAAO;AAAA,YAC3C;AAAA,YAEE,cAAc;AACZ,kBAAI,CAAC,KAAK,cAAc;AACtB,qBAAK,eAAe,KAAK,OAAO,uBAAuB,KAAK,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC;AAAA,cACvF;AACI,qBAAO,KAAK;AAAA,YAChB;AAAA,UACA;AApFgC;AAAhC,cAAM,YAAN;AAsFA,mBAAS,cAAc,IAAI,SAAS;AAClC,eAAG,cAAc,GAAG,SAAS;AAC7B,eAAG,YAAY,GAAG,YAAY,OAAO;AACrC,eAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,eAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,eAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AACjE,eAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AAAA,UACnE;AAPS;AAST,UAAAlC,QAAO,UAAU,EAAE,UAAS;AAAA,QAC5B,GAAE,EAAC,oBAAmB,IAAG,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAChE,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,8BAAN,MAAM,oCAAmC,eAAe;AAAA,YACtD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,4BAA4B,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YAChG;AAAA,UACA;AARwD;AAAxD,cAAM,6BAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,8BAAN,MAAM,oCAAmC,eAAe;AAAA,YACtD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,4BAA4B,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YAChH;AAAA,UACA;AARwD;AAAxD,cAAM,6BAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,SAAS;AAE5C,gBAAM,4BAAN,MAAM,kCAAiC,eAAe;AAAA,YACpD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,0BAA0B,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,CAAC;AAAA,YAC9E;AAAA,UACA;AARsD;AAAtD,cAAM,2BAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,kBAAiB,IAAKA,SAAQ,YAAY;AAElD,gBAAM,uBAAN,MAAM,6BAA4B,kBAAkB;AAAA,YAClD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,mBAAmB,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YACvF;AAAA,UACA;AARoD;AAApD,cAAM,sBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,cAAa,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC9E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,kBAAiB,IAAKA,SAAQ,YAAY;AAElD,gBAAM,uBAAN,MAAM,6BAA4B,kBAAkB;AAAA,YAClD,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,mBAAmB,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,YACvG;AAAA,UACA;AARoD;AAApD,cAAM,sBAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,cAAa,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC9E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,UAAS,IAAKA,SAAQ,SAAS;AAEvC,gBAAM,qBAAN,MAAM,2BAA0B,UAAU;AAAA,YACxC,IAAI,cAAc;AAChB,qBAAO,KAAK,QAAQ;AAAA,YACxB;AAAA,YACE,YAAY,UAAU;AACpB,oBAAM,QAAQ;AACd,mBAAK,OAAO;AAAA,YAChB;AAAA,YACE,kBAAkB;AAChB,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,iBAAG,gBAAgB,GAAG,aAAa,KAAK,YAAW,CAAE;AACrD,iBAAG;AAAA,gBACD,GAAG;AAAA,gBACH,GAAG;AAAA,gBACH,GAAG;AAAA,gBACH,KAAK;AAAA,gBACL;AAAA;AAEF,oBAAM,SAAS,IAAI,WAAW,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC;AAC7D,iBAAG,WAAW,GAAG,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,MAAM,GAAG,eAAe,MAAM;AACjF,qBAAO;AAAA,YACX;AAAA,YACE,eAAe;AACb,kBAAI,KAAK,SAAU,QAAO;AAC1B,qBAAO,IAAI,aAAa,KAAK,gBAAe,EAAG,MAAM;AAAA,YACzD;AAAA,YACE,UAAU;AACR,qBAAO,MAAM,iBAAiB,KAAK,aAAY,GAAI,KAAK,OAAO,CAAC,CAAC;AAAA,YACrE;AAAA,UACA;AA7B0C;AAA1C,cAAM,oBAAN;AA+BA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,aAAaE,SAAQ,IAAI;AAC/B,gBAAM,EAAE,YAAW,IAAKA,SAAQ,kBAAkB;AAClD,gBAAM,EAAE,eAAc,IAAKA,SAAQ,qBAAqB;AAExD,cAAI,cAAc;AAClB,cAAI,aAAa;AACjB,cAAI,cAAc;AAClB,cAAI,iBAAiB;AACrB,cAAI,WAAW;AAEf,gBAAM,oBAAN,MAAM,0BAAyB,YAAY;AAAA,YACzC,WAAW,cAAc;AACvB,kBAAI,gBAAgB,KAAM,QAAO;AACjC,mBAAK,mBAAkB;AACvB,4BAAc,gBAAgB;AAC9B,qBAAO;AAAA,YACX;AAAA,YAEE,OAAO,qBAAqB;AAC1B,2BAAa;AACb,+BAAiB;AACjB,kBAAI,OAAO,eAAe,WAAY;AACtC,kBAAI;AACF,8BAAc,WAAW,GAAG,GAAG;AAAA,kBAC7B,uBAAuB;AAAA,gBAC/B,CAAO;AACD,oBAAI,CAAC,eAAe,CAAC,YAAY,aAAc;AAC/C,iCAAiB;AAAA,kBACf,8BAA8B,YAAY,aAAa,8BAA8B;AAAA,kBACrF,yBAAyB,YAAY,aAAa,yBAAyB;AAAA,kBAC3E,mBAAmB,YAAY,aAAa,mBAAmB;AAAA,kBAC/D,0BAA0B,YAAY,aAAa,0BAA0B;AAAA,kBAC7E,wBAAwB,YAAY,aAAa,wBAAwB;AAAA,kBACzE,oBAAoB,YAAY,aAAa,oBAAoB;AAAA,kBACjE,0BAA0B,YAAY,aAAa,0BAA0B;AAAA;AAE/E,2BAAW,KAAK,YAAW;AAAA,cACjC,SAAa,GAAG;AACV,wBAAQ,KAAK,CAAC;AAAA,cACpB;AAAA,YACA;AAAA,YAEE,OAAO,eAAe,SAAS;AAC7B,kBAAI;AACF,uBAAO,QAAQ,aAAa,QAAQ,QAAQ,MAAM;AAAA,cACxD,SAAa,GAAG;AACV,uBAAO;AAAA,cACb;AAAA,YACA;AAAA,YAEE,OAAO,oBAAoB;AACzB,qBAAO,QAAQ,eAAe,iBAAiB;AAAA,YACnD;AAAA,YAEE,OAAO,mBAAmB;AACxB,qBAAO,QAAQ,eAAe,kBAAkB;AAAA,YACpD;AAAA,YAEE,OAAO,kBAAkB;AACvB,qBAAO,eAAe,qBACpB,YAAY,aAAa,eAAe,mBAAmB,sBAAsB,IACjF;AAAA,YACN;AAAA,YAEE,OAAO,oBAAoB;AACzB,qBAAO,YAAY,aAAa,YAAY,gBAAgB;AAAA,YAChE;AAAA,YAEE,WAAW,aAAa;AACtB,qBAAO;AAAA,YACX;AAAA,YAEE,WAAW,cAAc;AACvB,qBAAO;AAAA,YACX;AAAA,YAEE,WAAW,WAAW;AACpB,qBAAO;AAAA,YACX;AAAA,YAEE,aAAa;AACX,qBAAO,CAAA;AAAA,YACX;AAAA,YAEE,cAAc;AACZ,qBAAO,WAAW,GAAG,GAAG;AAAA,gBACtB,uBAAuB;AAAA,cAC7B,CAAK;AAAA,YACL;AAAA,YAEE,iBAAiB;AACf,mBAAK,aAAa;AAAA,gBAChB,8BAA8B,KAAK,QAAQ,aAAa,8BAA8B;AAAA,gBACtF,yBAAyB,KAAK,QAAQ,aAAa,yBAAyB;AAAA,gBAC5E,mBAAmB,KAAK,QAAQ,aAAa,mBAAmB;AAAA,gBAChE,0BAA0B,KAAK,QAAQ,aAAa,0BAA0B;AAAA,gBAC9E,wBAAwB,KAAK,QAAQ,aAAa,wBAAwB;AAAA,gBAC1E,oBAAoB,KAAK,QAAQ,aAAa,oBAAoB;AAAA;YAExE;AAAA,YAEE,QAAQ;AACN,oBAAM,MAAM,MAAM,MAAM,SAAS;AACjC,kBAAI,CAAC,KAAK,mBAAmB;AAC3B,qBAAK,WAAW,6BAA6B,OAAO,KAAK,WAAW,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC;AAAA,cAChG;AAAA,YACA;AAAA,YAEE,oBAAoB;AAClB,mBAAK,WAAW,+BAA+B;AAC/C,mBAAK,WAAW,0BAA0B;AAC1C,mBAAK,WAAW,oBAAoB;AACpC,mBAAK,WAAW,2BAA2B;AAC3C,mBAAK,WAAW,yBAAyB;AACzC,mBAAK,WAAW,qBAAqB;AAAA,YACzC;AAAA,YAEE,OAAO,eAAe,SAAS;AAC7B,oBAAM,YAAY,QAAQ,aAAa,yBAAyB;AAChE,kBAAI,aAAa,UAAU,SAAS;AAClC,0BAAU,QAAO;AAAA,cACvB;AAAA,YACA;AAAA,YAEE,WAAW;AACT,oBAAM,qBAAqB;AAAA;AAC3B,oBAAM,uBAAuB;AAAA;AAC7B,qBAAO,eAAe,KAAK,aAAa,WAAW,MAAM,oBAAoB,oBAAoB;AAAA,YACrG;AAAA,YAEE,UAAU,QAAQ;AAChB,oBAAM,UAAU,MAAM;AACtB,kBAAI,KAAK,aAAa,KAAK,WAAW,8BAA8B;AAClE,qBAAK,WAAW,6BAA6B,OAAO,KAAK,WAAW,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC;AAAA,cAChG;AACI,qBAAO;AAAA,YACX;AAAA,UACA;AA/H2C;AAA3C,cAAM,mBAAN;AAiIA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,uBAAsB,IAAG,oBAAmB,IAAG,MAAK,EAAC,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC/F,gBAAM,eAAN,MAAM,aAAY;AAAA,YAChB,YAAYiB,QAAO,UAAU;AAC3B,oBAAM;AAAA,gBACJ,MAAAX;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cACN,IAAQ;AACJ,kBAAI,CAACA,OAAM;AACT,sBAAM,IAAI,MAAM,cAAc;AAAA,cACpC;AACI,kBAAI,CAAC,MAAM;AACT,sBAAM,IAAI,MAAM,cAAc;AAAA,cACpC;AACI,kBAAI,CAAC,QAAQ;AACX,sBAAM,IAAI,MAAM,gBAAgB;AAAA,cACtC;AACI,kBAAI,WAAW,UAAU,WAAW,aAAa;AAC/C,sBAAM,IAAI,MAAM,kDAAmD,MAAM,GAAI;AAAA,cACnF;AACI,kBAAI,CAAC,wBAAwB;AAC3B,sBAAM,IAAI,MAAM,mCAAmC;AAAA,cACzD;AACI,mBAAK,OAAOA;AACZ,mBAAK,SAAS;AACd,mBAAK,SAAS;AACd,mBAAK,UAAU,WAAW,cAAc,aAAaA,KAAI,KAAKA;AAC9D,mBAAK,SAAS;AACd,mBAAK,iBAAiB;AACtB,mBAAK,OAAOW,OAAM,QAAQ;AAC1B,mBAAK,OAAOA,OAAM,QAAQ;AAC1B,mBAAK,QAAQ;AACb,mBAAK,UAAU;AACf,mBAAK,eAAe,iBAAiB,QAAQ,iBAAiB,SAAY,eAAe;AACzF,mBAAK,gBAAgB;AACrB,mBAAK,yBAAyB;AAC9B,mBAAK,wBAAwB;AAC7B,mBAAK,qBAAqB;AAAA,YAC9B;AAAA,YAEE,IAAI,KAAK;AACP,qBAAO,GAAG,KAAK,MAAM,IAAI,IAAI;AAAA,YACjC;AAAA,YAEE,YAAY;AACV,oBAAM,IAAI,MAAM,8BAA+B,KAAK,YAAY,IAAI,EAAG;AAAA,YAC3E;AAAA,YAEE,YAAYA,QAAO;AACjB,oBAAM,IAAI,MAAM,gCAAiC,KAAK,YAAY,IAAI,EAAG;AAAA,YAC7E;AAAA,UACA;AAzDkB;AAAlB,cAAM,cAAN;AA2DA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,CAAA,CAAE,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC1C,gBAAM,EAAE,MAAK,IAAKE,SAAQ,UAAU;AACpC,gBAAM,EAAE,MAAK,IAAKA,SAAQ,UAAU;AAEpC,gBAAM,UAAN,MAAM,QAAO;AAAA,YACX,WAAW,cAAc;AACvB,oBAAM,IAAI,MAAM,oCAAqC,KAAK,IAAI,EAAG;AAAA,YACrE;AAAA,YAEE,OAAO,eAAe,SAAS;AAC7B,oBAAM,IAAI,MAAM,uCAAwC,KAAK,IAAI,EAAG;AAAA,YACxE;AAAA,YAEE,OAAO,cAAc;AACnB,oBAAM,IAAI,MAAM,oCAAqC,KAAK,IAAI,EAAG;AAAA,YACrE;AAAA,YAEE,OAAO,eAAe,SAAS;AAC7B,oBAAM,IAAI,MAAM,8BAA+B,KAAK,IAAI,EAAG;AAAA,YAC/D;AAAA,YAEE,OAAO,0BAA0B;AAC/B,oBAAM,IAAI,MAAM,uCAAwC,KAAK,IAAI,EAAG;AAAA,YACxE;AAAA,YAEE,OAAO,2BAA2B;AAChC,oBAAM,IAAI,MAAM,wCAAyC,KAAK,IAAI,EAAG;AAAA,YACzE;AAAA,YAEE,OAAO,iBAAiB;AACtB,oBAAM,IAAI,MAAM,8BAA+B,KAAK,IAAI,EAAG;AAAA,YAC/D;AAAA,YAEE,YAAY,QAAQ,UAAU;AAC5B,kBAAI,OAAO,WAAW,UAAU;AAC9B,oBAAI,OAAO,WAAW,UAAU;AAC9B,wBAAM,IAAI,MAAM,qBAAqB;AAAA,gBAC7C;AACM,oBAAI,CAAC,MAAM,iBAAiB,MAAM,GAAG;AACnC,wBAAM,IAAI,MAAM,8BAA8B;AAAA,gBACtD;AAAA,cACA;AACI,mBAAK,mBAAmB;AACxB,mBAAK,oBAAoB;AACzB,mBAAK,oBAAoB;AAEzB,mBAAK,gBAAgB,OAAO,WAAW,WAAW,MAAM,2BAA2B,MAAM,IAAI;AAC7F,mBAAK,gBAAgB;AACrB,mBAAK,gBAAgB;AACrB,mBAAK,oBAAoB;AACzB,mBAAK,kBAAkB;AACvB,mBAAK,kBAAkB;AACvB,mBAAK,6BAA6B;AAGlC,mBAAK,SAAS;AAEd,mBAAK,SAAS;AAEd,mBAAK,QAAQ;AAEb,mBAAK,YAAY;AAEjB,mBAAK,oBAAoB;AAEzB,mBAAK,YAAY;AAEjB,mBAAK,gBAAgB;AAErB,mBAAK,oBAAoB;AAEzB,mBAAK,mBAAmB;AAExB,mBAAK,gBAAgB;AAErB,mBAAK,SAAS;AAEd,mBAAK,UAAU;AAEf,mBAAK,eAAe;AAEpB,mBAAK,MAAM;AAEX,mBAAK,YAAY;AAEjB,mBAAK,kBAAkB;AAEvB,mBAAK,iBAAiB;AAEtB,mBAAK,aAAa;AAElB,mBAAK,WAAW;AAEhB,mBAAK,YAAY;AAEjB,mBAAK,WAAW;AAEhB,mBAAK,YAAY;AAEjB,mBAAK,SAAS;AAEd,mBAAK,UAAU;AAEf,mBAAK,aAAa;AAClB,mBAAK,yBAAyB;AAC9B,mBAAK,2BAA2B;AAChC,mBAAK,sBAAsB;AAC3B,mBAAK,iBAAiB;AACtB,mBAAK,6BAA6B;AAClC,mBAAK,QAAQ;AACb,mBAAK,YAAY;AAAA,YACrB;AAAA,YAEE,cAAc,UAAU;AACtB,uBAAS,KAAK,UAAU;AACtB,oBAAI,CAAC,SAAS,eAAe,CAAC,KAAK,CAAC,KAAK,eAAe,CAAC,EAAG;AAC5D,wBAAQ,GAAC;AAAA,kBACP,KAAK;AACH,wBAAI,CAAC,MAAM,QAAQ,SAAS,MAAM,GAAG;AACnC,2BAAK,UAAU,SAAS,MAAM;AAC9B;AAAA,oBACZ;AACU;AAAA,kBACF,KAAK;AACH,yBAAK,YAAY,CAAA;AACjB,6BAAS,IAAI,GAAG,IAAI,SAAS,UAAU,QAAQ,KAAK;AAClD,2BAAK,YAAY,SAAS,UAAU,CAAC,CAAC;AAAA,oBAClD;AACU;AAAA,kBACF,KAAK;AACH,wBAAI,SAAS,CAAC,KAAK,CAAC,SAAS,eAAe,WAAW,GAAG;AACxD,2BAAK,YAAY;AAAA,oBAC7B;AACU,yBAAK,CAAC,IAAI,SAAS,CAAC;AACpB;AAAA,kBACF,KAAK;AACH,wBAAI,CAAC,SAAS,gBAAiB;AAC/B,yBAAK,kBAAkB,CAAA;AACvB,6BAAS,IAAI,GAAG,IAAI,SAAS,gBAAgB,QAAQ,KAAK;AACxD,4BAAM,IAAI,SAAS,gBAAgB,CAAC;AACpC,4BAAM,EAAE,MAAAI,OAAM,OAAM,IAAK;AACzB,2BAAK,kBAAkBA,OAAM,QAAQ,CAAC;AAAA,oBAClD;AACU;AAAA,gBACV;AACM,qBAAK,CAAC,IAAI,SAAS,CAAC;AAAA,cAC1B;AAEI,kBAAI,CAAC,KAAK,OAAQ,MAAK,SAAS,KAAK,WAAU;AAC/C,kBAAI,CAAC,KAAK,QAAS,MAAK,UAAU,KAAK,YAAW;AAClD,kBAAI,CAAC,KAAK,QAAS,MAAK,UAAU,KAAK,YAAY,QAAQ;AAAA,YAC/D;AAAA,YACE,QAAQ;AACN,oBAAM,IAAI,MAAM,0BAA2B,KAAK,YAAY,IAAI,EAAG;AAAA,YACvE;AAAA,YAEE,MAAM;AACJ,oBAAM,IAAI,MAAM,wBAAyB,KAAK,YAAY,MAAO;AAAA,YACrE;AAAA,YAEE,aAAa;AACX,oBAAM,IAAI,MAAM,+BAAgC,KAAK,YAAY,IAAI,EAAG;AAAA,YAC5E;AAAA,YAEE,cAAc;AACZ,oBAAM,IAAI,MAAM,gCAAiC,KAAK,YAAY,IAAI,EAAG;AAAA,YAC7E;AAAA,YAEE,YAAY,UAAU;AACpB,oBAAM,IAAI,MAAM,gCAAiC,KAAK,YAAY,IAAI,EAAG;AAAA,YAC7E;AAAA,YAEE,YAAY,QAAQ,WAAW,IAAI;AACjC,kBAAI,OAAO,QAAQ,OAAO,UAAU,OAAO,iBAAiB,gBAAgB,QAAQ;AAClF,qBAAK,UAAU,KAAK,MAAM;AAAA,cAChC,WAAe,cAAc,UAAU,YAAY,QAAQ;AACrD,qBAAK,UAAU,KAAK,KAAK,uBAAuB,OAAO,QAAQ,OAAO,QAAQ,CAAC;AAAA,cACrF,WAAe,OAAO,WAAW,YAAY,OAAO,WAAW,YAAY;AACrE,qBAAK,UAAU,KAAK,KAAK,uBAAuB,QAAQ,QAAQ,CAAC;AAAA,cACvE,OAAW;AACL,sBAAM,IAAI,MAAM,+BAA+B;AAAA,cACrD;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkBA,OAAM,QAAQ,WAAW,CAAA,GAAI;AAC7C,oBAAM,EAAE,eAAe,cAAa,IAAK,SAAS,gBAChD,mBAAmB,SAAS,aAAa,IACzC,KAAK,YAAY,wBAAwB,MAAM,KAAK,CAAA;AACtD,mBAAK,gBAAgB,KAAK;AAAA,gBACxB,MAAAA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,YAAY,SAAS,cAAc,KAAK,YAAY,yBAAyB,MAAM;AAAA,cACzF,CAAK;AACD,qBAAO;AAAA,YACX;AAAA,YAEE,eAAe,MAAM;AACnB,mBAAK,kBAAkB,CAAA;AACvB,kBAAI,CAAC,KAAK,eAAe;AACvB,oBAAI,CAAC,KAAK,eAAe;AACvB,uBAAK,gBAAgB,CAAA;AACrB,2BAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,0BAAM,UAAU,MAAM,gBAAgB,KAAK,CAAC,GAAG,KAAK,cAAc;AAClE,0BAAM,OAAO,YAAY,YAAY,WAAW;AAChD,yBAAK,cAAc,KAAK,IAAI;AAC5B,yBAAK,gBAAgB,KAAK;AAAA,sBACxB;AAAA,oBACZ,CAAW;AAAA,kBACX;AAAA,gBACA;AAAA,cACA,OAAW;AACL,yBAAS,IAAI,GAAG,IAAI,KAAK,cAAc,QAAQ,KAAK;AAClD,uBAAK,gBAAgB,KAAK;AAAA,oBACxB,MAAM,KAAK,cAAc,CAAC;AAAA,kBACpC,CAAS;AAAA,gBACT;AAAA,cACA;AAEI,mBAAK,gBAAgB,IAAI,MAAM,KAAK,MAAM;AAC1C,mBAAK,oBAAoB,IAAI,WAAW,KAAK,MAAM;AAEnD,uBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,sBAAM,MAAM,KAAK,CAAC;AAClB,qBAAK,cAAc,CAAC,IAAI,IAAI,gBAAgB,QAAQ,IAAI,OAAO;AAC/D,qBAAK,kBAAkB,CAAC,IAAI,KAAK,YAAY,GAAG;AAAA,cACtD;AAEI,kBAAI,KAAK,cAAc,WAAW,KAAK,QAAQ;AAC7C,sBAAM,IAAI,MAAM,4BAA4B;AAAA,cAClD;AAAA,YACA;AAAA,YAEE,iBAAiB;AACf,mBAAK,kBAAkB,CAAA;AACvB,kBAAI,qBAAqB,KAAK,kBAAkB;AAChD,kBAAI,oBAAoB;AACtB,qBAAK,gBAAgB,CAAA;AAAA,cAC3B;AACI,mBAAK,oBAAoB,CAAA;AACzB,kBAAI,KAAK,WAAW;AAClB,yBAASA,SAAQ,KAAK,WAAW;AAC/B,sBAAI,oBAAoB;AACtB,0BAAM,OAAO,MAAM,gBAAgB,KAAK,UAAUA,KAAI,GAAG,KAAK,cAAc;AAC5E,yBAAK,cAAcA,KAAI,IAAI;AAC3B,yBAAK,gBAAgB,KAAK;AAAA,sBACxB,MAAAA;AAAA,sBACA;AAAA,oBACZ,CAAW;AAAA,kBACX,OAAe;AACL,yBAAK,gBAAgB,KAAK;AAAA,sBACxB,MAAAA;AAAA,sBACA,MAAM,KAAK,cAAcA,KAAI;AAAA,oBACzC,CAAW;AAAA,kBACX;AACQ,uBAAK,kBAAkBA,KAAI,IAAI,KAAK,YAAY,KAAK,UAAUA,KAAI,CAAC;AAAA,gBAC5E;AAAA,cACA;AAAA,YACA;AAAA,YAEE,uBAAuB,MAAM;AAC3B,mBAAK,sBAAsB;AAC3B,qBAAO;AAAA,YACX;AAAA,YAEE,eAAe,QAAQ;AACrB,kBAAI,OAAO,eAAe,GAAG,GAAG;AAC9B,oBAAI,OAAO,eAAe,GAAG,GAAG;AAC9B,sBAAI,OAAO,eAAe,GAAG,GAAG;AAC9B,2BAAO,CAAC,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;AAAA,kBAC9C,OAAe;AACL,2BAAO,CAAC,OAAO,GAAG,OAAO,CAAC;AAAA,kBACpC;AAAA,gBACA,OAAa;AACL,yBAAO,CAAC,OAAO,CAAC;AAAA,gBACxB;AAAA,cACA,OAAW;AACL,uBAAO;AAAA,cACb;AAAA,YACA;AAAA,YAEE,UAAU,QAAQ;AAChB,mBAAK,SAAS,KAAK,eAAe,MAAM;AACxC,qBAAO;AAAA,YACX;AAAA,YAEE,SAAS,MAAM;AACb,mBAAK,QAAQ;AACb,qBAAO;AAAA,YACX;AAAA,YAEE,aAAa,MAAM;AACjB,mBAAK,YAAY;AACjB,mBAAK,YAAY;AACjB,qBAAO;AAAA,YACX;AAAA,YAEE,qBAAqB,KAAK;AACxB,mBAAK,oBAAoB;AACzB,qBAAO;AAAA,YACX;AAAA,YAEE,aAAa,WAAW;AACtB,mBAAK,YAAY;AACjB,qBAAO;AAAA,YACX;AAAA,YAEE,iBAAiB,eAAe;AAC9B,mBAAK,gBAAgB;AACrB,qBAAO;AAAA,YACX;AAAA,YAEE,aAAa,WAAW;AACtB,uBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,qBAAK,YAAY,UAAU,CAAC,CAAC;AAAA,cACnC;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,mBAAmB,iBAAiB;AAClC,uBAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,sBAAM,WAAW,gBAAgB,CAAC;AAClC,sBAAM,EAAE,MAAAA,OAAM,OAAM,IAAK;AACzB,qBAAK,kBAAkBA,OAAM,QAAQ,QAAQ;AAAA,cACnD;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkB,gBAAgB;AAChC,mBAAK,iBAAiB;AACtB,qBAAO;AAAA,YACX;AAAA,YAEE,YAAY,MAAM;AAChB,mBAAK,WAAW;AAChB,qBAAO;AAAA,YACX;AAAA,YAEE,aAAa,MAAM;AACjB,mBAAK,YAAY;AACjB,qBAAO;AAAA,YACX;AAAA,YAEE,cAAc,MAAM;AAClB,oBAAM,eAAe,UAAU,iBAAiB,WAAW;AAC3D,mBAAK,SAAS;AACd,qBAAO;AAAA,YACX;AAAA,YAEE,mBAAmB,MAAM;AACvB,oBAAM,eAAe,UAAU,sBAAsB,aAAa;AAClE,mBAAK,WAAW;AAChB,qBAAO;AAAA,YACX;AAAA,YAEE,aAAa,MAAM;AACjB,mBAAK,YAAY;AACjB,qBAAO;AAAA,YACX;AAAA,YAEE,UAAU,QAAQ;AAChB,mBAAK,SAAS;AACd,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkB,MAAM;AACtB,mBAAK,iBAAiB;AACtB,qBAAO;AAAA,YACX;AAAA,YAEE,iBAAiB,MAAM;AACrB,mBAAK,gBAAgB;AACrB,qBAAO;AAAA,YACX;AAAA,YAEE,qBAAqB,MAAM;AACzB,oBAAM,eAAe,UAAU,sBAAsB;AACrD,mBAAK,iBAAiB,IAAI;AAC1B,mBAAK,oBAAoB,IAAI;AAC7B,qBAAO;AAAA,YACX;AAAA,YAEE,oBAAoB,MAAM;AACxB,mBAAK,mBAAmB;AACxB,qBAAO;AAAA,YACX;AAAA,YAEE,oBAAoB,MAAM;AACxB,mBAAK,mBAAmB;AACxB,qBAAO;AAAA,YACX;AAAA,YAEE,gBAAgB,MAAM;AACpB,oBAAM,eAAe,UAAU,iBAAiB;AAChD,qBAAO;AAAA,YACX;AAAA,YAEE,YAAY;AACV,oBAAM,eAAe,UAAU,WAAW;AAC1C,qBAAO,KAAK;AAAA,YAChB;AAAA,YAEE,WAAW;AACT,oBAAM,eAAe,UAAU,UAAU;AACzC,qBAAO,KAAK;AAAA,YAChB;AAAA,YAEE,WAAW,SAAS;AAClB,mBAAK,UAAU;AACf,qBAAO;AAAA,YACX;AAAA,YAEE,iBAAiB,eAAe;AAC9B,kBAAI,MAAM,QAAQ,aAAa,GAAG;AAChC,qBAAK,gBAAgB;AAAA,cAC3B,OAAW;AACL,qBAAK,gBAAgB,CAAA;AACrB,2BAAW,KAAK,eAAe;AAC7B,sBAAI,CAAC,cAAc,eAAe,CAAC,EAAG;AACtC,wBAAM,gBAAgB,KAAK,cAAc,QAAQ,CAAC;AAClD,sBAAI,kBAAkB,GAAI,OAAM,IAAI,MAAM,2BAA4B,CAAC,EAAG;AAC1E,uBAAK,cAAc,aAAa,IAAI,cAAc,CAAC;AAAA,gBAC3D;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,UAAU,QAAQ;AAChB,mBAAK,SAAS;AACd,qBAAO;AAAA,YACX;AAAA,YAEE,gBAAgB,MAAM;AACpB,kBAAI,CAAC,KAAK,mBAAmB;AAC3B,sBAAM,IAAI,MAAM,sCAAuC,KAAK,YAAY,IAAI,EAAG;AAAA,cACrF;AACI,mBAAK,oBAAoB;AACzB,qBAAO,KAAK,kBAAkB,IAAI;AAAA,YACtC;AAAA,YAEE,mBAAmB;AACjB,oBAAM,IAAI,MAAM,qCAAsC,KAAK,YAAY,IAAI,EAAG;AAAA,YAClF;AAAA,YAEE,aAAa,WAAW;AACtB,kBAAI,KAAK,eAAe,MAAM;AAC5B,qBAAK,aAAa,CAAA;AAAA,cACxB;AACI,kBAAI,CAAC,UAAU,OAAQ,OAAM,IAAI,MAAM,qCAAqC;AAC5E,kBAAI,CAAC,UAAU,YAAY,MAAM,UAAU,QAAQ,EAAG,OAAM,IAAI,MAAM,uCAAuC;AAC7G,kBAAI,CAAC,UAAU,KAAM,OAAM,IAAI,MAAM,mCAAmC;AACxE,mBAAK,WAAW,KAAK,SAAS;AAC9B,qBAAO;AAAA,YACX;AAAA,YAEE,QAAQ,wBAAwB;AAC9B,oBAAM,IAAI,MAAM,uBAAwB,KAAK,YAAY,IAAI,EAAG;AAAA,YACpE;AAAA,YAEE,YAAYW,QAAO;AACjB,kBAAI,KAAK,cAAc,UAAU;AAC/B,uBAAO;AAAA,cACb,WAAe,MAAM,QAAQA,OAAM,CAAC,CAAC,GAAG;AAClC,uBAAO,KAAK,YAAYA,OAAM,CAAC,CAAC;AAAA,cACtC,WAAeA,OAAM,gBAAgB,OAAO;AACtC,uBAAO,KAAK,YAAYA,OAAM,KAAK;AAAA,cACzC;AACI,sBAAQA,OAAM,aAAW;AAAA,gBACvB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL;AACE,yBAAO;AAAA,cACf;AAAA,YACA;AAAA,YAEE,UAAU,MAAM;AACd,oBAAM,IAAI,MAAM,yBAA0B,KAAK,YAAY,IAAI,EAAG;AAAA,YACtE;AAAA,YAEE,cAAc;AACZ,kBAAI,CAAC,KAAK,UAAU,CAAC,MAAM,QAAQ,KAAK,MAAM,EAAG,OAAM,IAAI,MAAM,4BAA4B;AAC7F,kBAAI,KAAK,OAAO,SAAS,EAAG,OAAM,IAAI,MAAM,gDAAgD;AAC5F,uBAAS,IAAI,GAAG,IAAI,KAAK,OAAO,QAAQ,KAAK;AAC3C,oBAAI,MAAM,KAAK,OAAO,CAAC,CAAC,KAAK,KAAK,OAAO,CAAC,IAAI,GAAG;AAC/C,wBAAM,IAAI,MAAM,GAAI,KAAK,YAAY,IAAI,WAAa,CAAC,8BAAgC,KAAK,OAAO,CAAC,CAAC,6CAA8C;AAAA,gBAC3J;AAAA,cACA;AAAA,YACA;AAAA,YAEE,cAAcA,QAAO;AACnB,oBAAM,IAAI,MAAM,6BAA8B,KAAK,YAAY,IAAI,EAAG;AAAA,YAC1E;AAAA,YAEE,iBAAiBA,QAAO;AACtB,oBAAM,IAAI,MAAM,gCAAiC,KAAK,YAAY,IAAI,EAAG;AAAA,YAC7E;AAAA,YAEE,SAAS;AACP,qBAAO;AAAA,gBACL,UAAU;AAAA,kBACR,QAAQ,KAAK;AAAA,kBACb,UAAU,KAAK;AAAA,kBACf,eAAe,KAAK;AAAA,kBACpB,gBAAgB,KAAK;AAAA,kBACrB,WAAW,KAAK;AAAA,kBAChB,aAAa,KAAK,UAAU,KAAK,QAAQ,IAAI,YAAU,OAAO,IAAI,IAAI;AAAA,kBACtE,YAAY,KAAK;AAAA,gBACzB;AAAA;YAEA;AAAA,YAEE,eAAe,MAAM;AACnB,oBAAM,cAAc,KAAK;AACzB,mBAAK,YAAY,YAAY,aAAa,MAAM,YAAY,iBAAiB,MAAM,IAAI,CAAC;AAAA,YAC5F;AAAA,YAEE,OAAO,iBAAiB,QAAQ,MAAM;AACpC,oBAAM,gBAAgB,IAAI,MAAM,KAAK,MAAM;AAC3C,uBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,sBAAM,MAAM,KAAK,CAAC;AAClB,sBAAM,OAAO,OAAO,cAAc,CAAC;AACnC,oBAAI,IAAI,MAAM;AACZ,gCAAc,CAAC,IAAI,IAAI;AAAA,gBAC/B,OAAa;AACL,0BAAQ,MAAI;AAAA,oBACV,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AACH,oCAAc,CAAC,IAAI,MAAM,gBAAgB,GAAG;AAC5C;AAAA,oBACF;AACE,oCAAc,CAAC,IAAI;AAAA,kBAC/B;AAAA,gBACA;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,OAAO,aAAa,QAAQ,eAAe;AACzC,oBAAM,IAAI,MAAM,qCAAsC,KAAK,IAAI,EAAG;AAAA,YACtE;AAAA,YAEE,uBAAuB,QAAQ,WAAW,IAAI;AAC5C,kBAAI,OAAO,WAAW,YAAY,OAAO,WAAW,WAAY,OAAM,IAAI,MAAM,iCAAiC;AACjH,oBAAM,eAAe,OAAO,WAAW,WAAW,SAAS,OAAO,SAAQ;AAC1E,kBAAI,gBAAgB,CAAA;AAEpB,kBAAI,MAAM,QAAQ,SAAS,aAAa,GAAG;AACzC,gCAAgB,SAAS;AAAA,cAC/B,WAAe,OAAO,SAAS,kBAAkB,UAAU;AACrD,gCAAgB,MAAM,2BAA2B,YAAY,EAC1D,IAAI,CAAAX,UAAQ,SAAS,cAAcA,KAAI,CAAC,KAAK,CAAA;AAAA,cACtD,OAAW;AACL,gCAAgB,SAAS,iBAAiB,CAAA;AAAA,cAChD;AAEI,qBAAO;AAAA,gBACL,MAAM,MAAM,0BAA0B,YAAY,KAAK;AAAA,gBACvD,QAAQ;AAAA,gBACR;AAAA,gBACA,YAAY,SAAS,cAAc;AAAA;YAEzC;AAAA,YAEE,WAAW,gBAAgB;AAAA,YAAA;AAAA,UAC7B;AA5jBa;AAAb,cAAM,SAAN;AA8jBA,mBAAS,mBAAmB,qBAAqB;AAC/C,kBAAM,gBAAgB,OAAO,KAAK,mBAAmB;AACrD,kBAAM,gBAAgB,CAAA;AACtB,qBAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,oBAAM,eAAe,cAAc,CAAC;AACpC,4BAAc,KAAK,oBAAoB,YAAY,CAAC;AAAA,YACxD;AACE,mBAAO,EAAE,eAAe,cAAa;AAAA,UACvC;AARS;AAUT,UAAAT,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,YAAW,KAAI,YAAW,IAAG,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACvE,gBAAM,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAiBP,KAAK,CAAC,cAAc,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA6B1B,KAAK,CAAC,cAAc,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA,ebrB,UAAAH,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,CAAA,CAAE,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC1C,gBAAM,EAAE,MAAK,IAAKE,SAAQ,aAAa;AACvC,gBAAM,EAAE,aAAY,IAAKA,SAAQ,kBAAkB;AAEnD,gBAAM,qBAAN,MAAM,2BAA0B,aAAa;AAAA,YAC3C,YAAY,QAAQ,UAAU;AAC5B,oBAAM,QAAQ,QAAQ;AACtB,kBAAI,YAAY,SAAS,eAAe,4BAA4B,GAAG;AACrE,qBAAK,6BAA6B,SAAS;AAAA,cACjD;AAAA,YACA;AAAA,YAEE,yBAAyB,KAAK,QAAQ;AACpC,kBAAI,IAAI,SAAS,yBAAyB;AACxC,sBAAM,KAAK,eAAe,gCAAgC,GAAG;AAAA,cACnE;AACI,oBAAM,iBAAiB,KAAK,QAAQ,IAAI,UAAU;AAClD,oBAAM,gBAAgB,KAAK,QAAQ,IAAI,SAAS;AAChD,kBAAI,mBAAmB,QAAQ,kBAAkB,MAAM;AACrD,uBAAO,KAAK,MAAM;AAClB,qBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,uBAAO,KAAK,KAAK;AACjB,qBAAK,WAAW,IAAI,YAAY,MAAM;AACtC,uBAAO,KAAK,GAAG;AACf,uBAAO,KAAK,UAAU;AACtB,qBAAK,WAAW,IAAI,WAAW,MAAM;AACrC,uBAAO,KAAK,GAAG;AACf,uBAAO,KAAK,GAAG;AACf,uBAAO;AAAA,cACb;AACI,qBAAO,KAAK,GAAG;AACf,mBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,qBAAO,KAAK,GAAG;AACf,mBAAK,WAAW,IAAI,YAAY,MAAM;AACtC,qBAAO,KAAK,GAAG;AACf,mBAAK,WAAW,IAAI,WAAW,MAAM;AACrC,qBAAO,KAAK,GAAG;AACf,qBAAO;AAAA,YACX;AAAA,YAEE,YAAY,KAAK,QAAQ;AACvB,kBAAI,KAAK,cAAc;AACrB,uBAAO,KAAK,MAAM;AAAA,cACxB,OAAW;AACL,oBAAI,CAAC,KAAK,YAAY;AACpB,wBAAM,aAAa,KAAK,eAAc;AACtC,sBAAI,YAAY;AACd,yBAAK,aAAa,KAAK,QAAQ,IAAI,IAAI;AACvC,wBAAI,KAAK,eAAe,kBAAkB;AACxC,2BAAK,aAAa;AAAA,oBAC9B;AAAA,kBACA;AAAA,gBACA;AAEM,sBAAM,EAAE,WAAU,IAAK;AACvB,oBAAI,CAAC,YAAY;AACf,yBAAO,KAAK,MAAM;AAAA,gBAC1B,OAAa;AACL,wBAAM,OAAO,QAAQ,UAAU;AAC/B,sBAAI,CAAC,MAAM;AACT,0BAAM,IAAI,MAAM,gBAAgB,UAAU,EAAE;AAAA,kBACtD;AACQ,yBAAO,KAAK,IAAI;AAAA,gBACxB;AAAA,cACA;AACI,qBAAO,KAAK,GAAG;AACf,qBAAO,KAAK,KAAK,IAAI;AACrB,qBAAO,KAAK,GAAG;AAEf,kBAAI,CAAC,KAAK,cAAc;AACtB,yBAAS,IAAI,GAAG,IAAI,KAAK,cAAc,QAAQ,EAAE,GAAG;AAClD,wBAAM,eAAe,KAAK,cAAc,CAAC;AAEzC,sBAAI,IAAI,GAAG;AACT,2BAAO,KAAK,IAAI;AAAA,kBAC1B;AACQ,sBAAI,eAAe,KAAK,cAAc,KAAK,cAAc,QAAQ,YAAY,CAAC;AAC9E,sBAAI,CAAC,cAAc;AACjB,0BAAM,KAAK,eAAe,oBAAoB,YAAY,SAAS,GAAG;AAAA,kBAChF;AACQ,sBAAI,iBAAiB,kBAAkB;AACrC,yBAAK,cAAc,CAAC,IAAI,eAAe;AAAA,kBACjD;AACQ,wBAAM,OAAO,QAAQ,YAAY;AACjC,sBAAI,CAAC,MAAM;AACT,0BAAM,KAAK,eAAe,yBAAyB,GAAG;AAAA,kBAChE;AACQ,wBAAMI,QAAO,MAAM,aAAa,YAAY;AAC5C,sBAAI,SAAS,eAAe,SAAS,kBAAkB;AACrD,2BAAO,KAAK,GAAG,IAAI,SAASA,KAAI,eAAeA,KAAI,mBAAmBA,KAAI,KAAK;AAAA,kBACzF,OAAe;AACL,2BAAO,KAAK,GAAG,IAAI,SAASA,KAAI,EAAE;AAAA,kBAC5C;AAAA,gBACA;AAAA,cACA;AAEI,qBAAO,KAAK,OAAO;AAEnB,uBAAS,IAAI,GAAG,IAAI,IAAI,KAAK,KAAK,QAAQ,EAAE,GAAG;AAC7C,qBAAK,WAAW,IAAI,KAAK,KAAK,CAAC,GAAG,MAAM;AACxC,uBAAO,KAAK,IAAI;AAAA,cACtB;AAEI,qBAAO,KAAK,KAAK;AACjB,qBAAO;AAAA,YACX;AAAA,YAEE,mBAAmB,KAAK,QAAQ;AAC9B,kBAAI,CAAC,IAAI,SAAU,OAAM,KAAK,eAAe,+BAA+B,GAAG;AAC/E,mBAAK,UAAU,yBAAyB;AACxC,oBAAM,OAAO,KAAK,QAAQ,IAAI,QAAQ;AACtC,mBAAK,SAAS,yBAAyB;AAEvC,oBAAM,SAAS,CAAA;AAEf,kBAAI,CAAC,KAAK,YAAY;AACpB,oBAAI,SAAS,oBAAoB,SAAS,WAAW;AACnD,uBAAK,aAAa;AAAA,gBAC1B,OAAa;AACL,uBAAK,aAAa;AAAA,gBAC1B;AAAA,cACA;AAEI,sBAAQ,KAAK,YAAU;AAAA,gBACrB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,0BAAQ,MAAI;AAAA,oBACV,KAAK;AACH,6BAAO,KAAK,QAAQ;AACpB,2BAAK,WAAW,IAAI,UAAU,MAAM;AACpC,6BAAO,KAAK,GAAG;AACf;AAAA,oBACF,KAAK;AACH,2BAAK,mBAAmB,IAAI,UAAU,MAAM;AAE5C,0BAAI,KAAK,QAAQ,GAAG,MAAM,WAAW;AACnC,+BAAO,QAAQ,QAAQ;AACvB,+BAAO,KAAK,GAAG;AAAA,sBAC7B;AACY;AAAA,oBACF;AACE,2BAAK,WAAW,IAAI,UAAU,MAAM;AAAA,kBAChD;AACQ;AAAA,gBACF,KAAK;AACH,0BAAQ,MAAI;AAAA,oBACV,KAAK;AAAA,oBACL,KAAK;AACH,2BAAK,mBAAmB,IAAI,UAAU,MAAM;AAC5C;AAAA,oBACF,KAAK;AACH,2BAAK,qBAAqB,IAAI,UAAU,MAAM;AAC9C;AAAA,oBACF;AACE,2BAAK,WAAW,IAAI,UAAU,MAAM;AAAA,kBAChD;AACQ;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,uBAAK,WAAW,IAAI,UAAU,MAAM;AACpC;AAAA,gBACF;AACE,wBAAM,KAAK,eAAe,yBAAyB,KAAK,UAAU,IAAI,GAAG;AAAA,cACjF;AAEI,kBAAI,KAAK,cAAc;AACrB,uBAAO,KAAK,kBAAmB,OAAO,KAAK,EAAE,CAAC,GAAI;AAClD,uBAAO,KAAK,SAAS;AAAA,cAC3B,WAAe,KAAK,aAAa;AAC3B,uBAAO,KAAK,mBAAoB,KAAK,IAAI,MAAQ,OAAO,KAAK,EAAE,CAAC,GAAI;AACpE,uBAAO,KAAK,0BAA2B,KAAK,IAAI,GAAI;AAAA,cAC1D,OAAW;AACL,uBAAO,KAAK,UAAW,OAAO,KAAK,EAAE,CAAC,GAAI;AAAA,cAChD;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,WAAW,KAAK,QAAQ;AACtB,kBAAI,MAAM,IAAI,KAAK,GAAG;AACpB,sBAAM,KAAK;AAAA,kBACT,yCAAyC,IAAI;AAAA,kBAC7C;AAAA;cAER;AAEI,oBAAM,MAAM,KAAK,OAAO,GAAG;AAC3B,kBAAI,OAAO,UAAU,IAAI,KAAK,GAAG;AAC/B,oBAAI,KAAK,QAAQ,oBAAoB,KAAK,KAAK,QAAQ,kBAAkB,GAAG;AAC1E,uBAAK,aAAa,GAAG,IAAI;AACzB,yBAAO,KAAK,GAAG,IAAI,KAAK,EAAE;AAAA,gBAClC,WAAiB,KAAK,QAAQ,kBAAkB,KAAK,KAAK,QAAQ,gBAAgB,GAAG;AAC7E,uBAAK,aAAa,GAAG,IAAI;AACzB,yBAAO,KAAK,GAAG,IAAI,KAAK,IAAI;AAAA,gBACpC,OAAa;AACL,uBAAK,aAAa,GAAG,IAAI;AACzB,yBAAO,KAAK,GAAG,IAAI,KAAK,IAAI;AAAA,gBACpC;AAAA,cACA,WAAe,KAAK,QAAQ,oBAAoB,KAAK,KAAK,QAAQ,kBAAkB,GAAG;AACjF,qBAAK,aAAa,GAAG,IAAI;AACzB,uBAAO,KAAK,KAAK,MAAM,IAAI,KAAK,CAAC;AAAA,cACvC,OAAW;AACL,qBAAK,aAAa,GAAG,IAAI;AACzB,uBAAO,KAAK,GAAG,IAAI,KAAK,EAAE;AAAA,cAChC;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,oBAAoB,KAAK,QAAQ;AAC/B,kBAAI,KAAK,0BAA0B,KAAK,MAAM,GAAG;AAC/C,uBAAO;AAAA,cACb;AAEI,kBAAI,KAAK,8BAA8B,IAAI,aAAa,KAAK;AAC3D,uBAAO,KAAK,kBAAkB;AAC9B,qBAAK,UAAU,gBAAgB;AAC/B,wBAAQ,KAAK,QAAQ,IAAI,IAAI,GAAC;AAAA,kBAC5B,KAAK;AACH,yBAAK,iBAAiB,IAAI,MAAM,MAAM;AACtC;AAAA,kBACF,KAAK;AACH,yBAAK,mBAAmB,IAAI,MAAM,MAAM;AACxC;AAAA,kBACF;AACE,yBAAK,WAAW,IAAI,MAAM,MAAM;AAAA,gBAC1C;AACM,uBAAO,KAAK,IAAI;AAChB,wBAAQ,KAAK,QAAQ,IAAI,KAAK,GAAC;AAAA,kBAC7B,KAAK;AACH,yBAAK,iBAAiB,IAAI,OAAO,MAAM;AACvC;AAAA,kBACF,KAAK;AACH,yBAAK,mBAAmB,IAAI,OAAO,MAAM;AACzC;AAAA,kBACF;AACE,yBAAK,WAAW,IAAI,OAAO,MAAM;AAAA,gBAC3C;AACM,qBAAK,SAAS,gBAAgB;AAC9B,uBAAO,KAAK,GAAG;AACf,uBAAO;AAAA,cACb;AAEI,qBAAO,KAAK,GAAG;AACf,oBAAM,WAAW,KAAK,QAAQ,IAAI,IAAI,KAAK;AAC3C,oBAAM,YAAY,KAAK,QAAQ,IAAI,KAAK,KAAK;AAC7C,kBAAI,CAAC,YAAY,CAAC,WAAW;AAC3B,sBAAM,KAAK,eAAe,+BAA+B,GAAG;AAAA,cAClE;AACI,oBAAM,MAAM,WAAW,QAAQ;AAC/B,sBAAQ,KAAG;AAAA,gBACT,KAAK;AACH,uBAAK,UAAU,kBAAkB;AACjC,uBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,yBAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,uBAAK,WAAW,IAAI,OAAO,MAAM;AACjC,uBAAK,SAAS,kBAAkB;AAChC;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,uBAAK,UAAU,gBAAgB;AAC/B,uBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,yBAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,uBAAK,WAAW,IAAI,OAAO,MAAM;AACjC,uBAAK,SAAS,gBAAgB;AAC9B;AAAA,gBACF,KAAK;AACH,sBAAI,KAAK,QAAQ,oBAAoB,KAAK,KAAK,QAAQ,kBAAkB,GAAG;AAC1E,yBAAK,UAAU,kBAAkB;AACjC,yBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,2BAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,yBAAK,WAAW,IAAI,OAAO,MAAM;AACjC,yBAAK,SAAS,kBAAkB;AAAA,kBAC1C,OAAe;AACL,yBAAK,UAAU,gBAAgB;AAC/B,yBAAK,mBAAmB,IAAI,MAAM,MAAM;AACxC,2BAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,yBAAK,mBAAmB,IAAI,OAAO,MAAM;AACzC,yBAAK,SAAS,gBAAgB;AAAA,kBACxC;AACQ;AAAA,gBAEF,KAAK;AAAA,gBACL,KAAK;AACH,sBAAI,IAAI,aAAa,OAAO,IAAI,aAAa,OAAO,IAAI,MAAM,SAAS,WAAW;AAChF,wBAAI,CAAC,OAAO,UAAU,IAAI,MAAM,KAAK,GAAG;AACtC,2BAAK,UAAU,gBAAgB;AAC/B,2BAAK,iBAAiB,IAAI,MAAM,MAAM;AACtC,6BAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,2BAAK,WAAW,IAAI,OAAO,MAAM;AACjC,2BAAK,SAAS,gBAAgB;AAC9B;AAAA,oBACZ;AAAA,kBACA;AACQ,uBAAK,UAAU,kBAAkB;AACjC,uBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,yBAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,uBAAK,UAAU,oBAAoB;AACnC,sBAAI,IAAI,MAAM,SAAS,WAAW;AAChC,0BAAM,gBAAgB,CAAA;AACtB,yBAAK,WAAW,IAAI,OAAO,aAAa;AACxC,0BAAM,cAAc,KAAK,QAAQ,IAAI,KAAK;AAC1C,wBAAI,gBAAgB,WAAW;AAC7B,6BAAO,KAAK,cAAc,KAAK,EAAE,CAAC;AAAA,oBAC9C,OAAiB;AACL,4BAAM,KAAK,eAAe,4CAA4C,GAAG;AAAA,oBACrF;AAAA,kBACA,OAAe;AACL,2BAAO,KAAK,MAAM;AAClB,yBAAK,WAAW,IAAI,OAAO,MAAM;AACjC,2BAAO,KAAK,GAAG;AAAA,kBACzB;AACQ,uBAAK,SAAS,oBAAoB;AAClC,uBAAK,SAAS,kBAAkB;AAChC;AAAA,gBACF,KAAK;AACH,uBAAK,UAAU,kBAAkB;AACjC,uBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,yBAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,uBAAK,qBAAqB,IAAI,OAAO,MAAM;AAC3C,uBAAK,SAAS,kBAAkB;AAChC;AAAA,gBAEF,KAAK;AACH,uBAAK,UAAU,gBAAgB;AAC/B,uBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,yBAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,uBAAK,iBAAiB,IAAI,OAAO,MAAM;AACvC,uBAAK,SAAS,gBAAgB;AAC9B;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AACH,uBAAK,UAAU,gBAAgB;AAC/B,uBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,yBAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,uBAAK,mBAAmB,IAAI,OAAO,MAAM;AACzC,uBAAK,SAAS,gBAAgB;AAC9B;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AACH,sBAAI,KAAK,QAAQ,oBAAoB,GAAG;AACtC,yBAAK,UAAU,kBAAkB;AACjC,yBAAK,qBAAqB,IAAI,MAAM,MAAM;AAC1C,2BAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,yBAAK,mBAAmB,IAAI,OAAO,MAAM;AACzC,yBAAK,SAAS,kBAAkB;AAAA,kBAC1C,OAAe;AACL,yBAAK,UAAU,gBAAgB;AAC/B,yBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,2BAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,yBAAK,UAAU,kBAAkB;AACjC,yBAAK,WAAW,IAAI,OAAO,MAAM;AACjC,yBAAK,SAAS,kBAAkB;AAChC,yBAAK,SAAS,gBAAgB;AAAA,kBACxC;AACQ;AAAA,gBACF,KAAK;AACH,uBAAK,UAAU,kBAAkB;AACjC,uBAAK,qBAAqB,IAAI,MAAM,MAAM;AAC1C,yBAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,uBAAK,WAAW,IAAI,OAAO,MAAM;AACjC,uBAAK,SAAS,kBAAkB;AAChC;AAAA,gBAEF,KAAK;AACH,uBAAK,UAAU,kBAAkB;AACjC,uBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,yBAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,uBAAK,WAAW,IAAI,OAAO,MAAM;AACjC,uBAAK,SAAS,kBAAkB;AAChC;AAAA,gBAEF,KAAK;AACH,uBAAK,UAAU,gBAAgB;AAC/B,uBAAK,WAAW,IAAI,MAAM,MAAM;AAChC,yBAAO,KAAK,YAAY,IAAI,QAAQ,KAAK,IAAI,QAAQ;AACrD,uBAAK,iBAAiB,IAAI,OAAO,MAAM;AACvC,uBAAK,SAAS,gBAAgB;AAC9B;AAAA,gBAEF;AACE,wBAAM,KAAK,eAAe,uCAAuC,GAAG,IAAI,GAAG;AAAA,cACnF;AACI,qBAAO,KAAK,GAAG;AAEf,qBAAO;AAAA,YACX;AAAA,YAEE,0BAA0B,KAAK,QAAQ;AACrC,oBAAM,gBAAgB,KAAK,kCAAkC,KAAK,MAAM;AACxE,kBAAI,eAAe;AACjB,uBAAO;AAAA,cACb;AACI,oBAAM,yBAAyB;AAAA,gBAC7B,KAAK,KAAK,6BAA6B,4BAA4B;AAAA,gBACnE,MAAM;AAAA;AAER,oBAAM,gBAAgB,uBAAuB,IAAI,QAAQ;AACzD,kBAAI,CAAC,cAAe,QAAO;AAC3B,qBAAO,KAAK,aAAa;AACzB,qBAAO,KAAK,GAAG;AACf,sBAAQ,KAAK,QAAQ,IAAI,IAAI,GAAC;AAAA,gBAC5B,KAAK;AACH,uBAAK,iBAAiB,IAAI,MAAM,MAAM;AACtC;AAAA,gBACF,KAAK;AACH,uBAAK,mBAAmB,IAAI,MAAM,MAAM;AACxC;AAAA,gBACF;AACE,uBAAK,WAAW,IAAI,MAAM,MAAM;AAAA,cACxC;AACI,qBAAO,KAAK,GAAG;AACf,sBAAQ,KAAK,QAAQ,IAAI,KAAK,GAAC;AAAA,gBAC7B,KAAK;AACH,uBAAK,iBAAiB,IAAI,OAAO,MAAM;AACvC;AAAA,gBACF,KAAK;AACH,uBAAK,mBAAmB,IAAI,OAAO,MAAM;AACzC;AAAA,gBACF;AACE,uBAAK,WAAW,IAAI,OAAO,MAAM;AAAA,cACzC;AACI,qBAAO,KAAK,GAAG;AACf,qBAAO;AAAA,YACX;AAAA,YAEE,kCAAkC,KAAK,QAAQ;AAC7C,oBAAM,yBAAyB;AAAA,gBAC7B,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,OAAO;AAAA;AAET,oBAAM,gBAAgB,uBAAuB,IAAI,QAAQ;AACzD,kBAAI,CAAC,cAAe,QAAO;AAC3B,qBAAO,KAAK,aAAa;AACzB,qBAAO,KAAK,GAAG;AACf,oBAAM,WAAW,KAAK,QAAQ,IAAI,IAAI;AACtC,sBAAQ,UAAQ;AAAA,gBACd,KAAK;AAAA,gBACL,KAAK;AACH,uBAAK,mBAAmB,IAAI,MAAM,MAAM;AACxC;AAAA,gBACF,KAAK;AACH,uBAAK,qBAAqB,IAAI,MAAM,MAAM;AAC1C;AAAA,gBACF;AACE,uBAAK,WAAW,IAAI,MAAM,MAAM;AAAA,cACxC;AACI,qBAAO,KAAK,GAAG;AACf,oBAAM,YAAY,KAAK,QAAQ,IAAI,KAAK;AACxC,sBAAQ,WAAS;AAAA,gBACf,KAAK;AAAA,gBACL,KAAK;AACH,uBAAK,mBAAmB,IAAI,OAAO,MAAM;AACzC;AAAA,gBACF,KAAK;AACH,uBAAK,qBAAqB,IAAI,OAAO,MAAM;AAC3C;AAAA,gBACF;AACE,uBAAK,WAAW,IAAI,OAAO,MAAM;AAAA,cACzC;AACI,qBAAO,KAAK,GAAG;AACf,qBAAO;AAAA,YACX;AAAA,YAEE,8BAA8B,KAAK,QAAQ;AACzC,oBAAM,yBAAyB;AAAA,gBAC7B,KAAK;AAAA;AAEP,oBAAM,gBAAgB,uBAAuB,IAAI,QAAQ;AACzD,kBAAI,CAAC,cAAe,QAAO;AAC3B,qBAAO,KAAK,aAAa;AACzB,qBAAO,KAAK,GAAG;AACf,sBAAQ,KAAK,QAAQ,IAAI,QAAQ,GAAC;AAAA,gBAChC,KAAK;AAAA,gBACL,KAAK;AACH,uBAAK,mBAAmB,IAAI,UAAU,MAAM;AAC5C;AAAA,gBACF,KAAK;AACH,uBAAK,qBAAqB,IAAI,UAAU,MAAM;AAC9C;AAAA,gBACF;AACE,uBAAK,WAAW,IAAI,UAAU,MAAM;AAAA,cAC5C;AACI,qBAAO,KAAK,GAAG;AACf,qBAAO;AAAA,YACX;AAAA,YAEE,qBAAqB,KAAK,QAAQ;AAChC,mBAAK,UAAU,oBAAoB;AACnC,mBAAK,WAAW,KAAK,MAAM;AAC3B,mBAAK,SAAS,oBAAoB;AAClC,qBAAO;AAAA,YACX;AAAA,YAEE,mBAAmB,KAAK,QAAQ;AAC9B,mBAAK,UAAU,kBAAkB;AACjC,mBAAK,WAAW,KAAK,MAAM;AAC3B,mBAAK,SAAS,kBAAkB;AAChC,qBAAO;AAAA,YACX;AAAA,YAEE,mBAAmB,KAAK,QAAQ;AAC9B,mBAAK,UAAU,oBAAoB;AACnC,qBAAO,KAAK,MAAM;AAClB,mBAAK,WAAW,KAAK,MAAM;AAC3B,qBAAO,KAAK,GAAG;AACf,mBAAK,SAAS,oBAAoB;AAClC,qBAAO;AAAA,YACX;AAAA,YAEE,iBAAiB,KAAK,QAAQ;AAC5B,mBAAK,UAAU,kBAAkB;AACjC,qBAAO,KAAK,QAAQ;AACpB,mBAAK,WAAW,KAAK,MAAM;AAC3B,qBAAO,KAAK,GAAG;AACf,mBAAK,SAAS,kBAAkB;AAChC,qBAAO;AAAA,YACX;AAAA,YAEE,wBAAwB,SAAS,QAAQ;AACvC,kBAAI,QAAQ,SAAS,cAAc;AACjC,sBAAM,KAAK,eAAe,4CAA4C,OAAO;AAAA,cACnF;AAEI,oBAAM,OAAO,KAAK,QAAQ,OAAO;AAEjC,oBAAMA,QAAO,MAAM,aAAa,QAAQ,IAAI;AAC5C,kBAAI,QAAQ,SAAS,YAAY;AAC/B,uBAAO,KAAK,iBAAiB;AAAA,cACnC,WAAe,SAAS,WAAW;AAC7B,oBAAI,KAAK,cAAc,QAAQA,KAAI,IAAI,IAAI;AACzC,yBAAO,KAAK,aAAaA,KAAI,GAAG;AAAA,gBACxC,OAAa;AACL,yBAAO,KAAK,QAAQA,KAAI,EAAE;AAAA,gBAClC;AAAA,cACA,OAAW;AACL,uBAAO,KAAK,QAAQA,KAAI,EAAE;AAAA,cAChC;AAEI,qBAAO;AAAA,YACX;AAAA,YAEE,gBAAgB,SAAS,QAAQ;AAC/B,kBAAI,QAAQ,SAAS,gBAAgB;AACnC,sBAAM,KAAK,eAAe,yBAAyB,OAAO;AAAA,cAChE;AAEI,oBAAM,UAAU,CAAA;AAChB,oBAAM,UAAU,CAAA;AAChB,oBAAM,YAAY,CAAA;AAClB,oBAAM,UAAU,CAAA;AAChB,kBAAI,SAAS;AAEb,kBAAI,QAAQ,MAAM;AAChB,sBAAM,EAAE,iBAAiB,QAAQ;AACjC,oBAAI,aAAa,SAAS,GAAG;AAC3B,2BAAS;AAAA,gBACjB;AACM,qBAAK,WAAW,QAAQ,MAAM,OAAO;AACrC,yBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,sBAAI,aAAa,CAAC,EAAE,QAAQ,aAAa,CAAC,EAAE,KAAK,SAAS,WAAW;AACnE,6BAAS;AAAA,kBACnB;AAAA,gBACA;AAAA,cACA,OAAW;AACL,yBAAS;AAAA,cACf;AAEI,kBAAI,QAAQ,MAAM;AAChB,qBAAK,WAAW,QAAQ,MAAM,OAAO;AAAA,cAC3C,OAAW;AACL,yBAAS;AAAA,cACf;AAEI,kBAAI,QAAQ,QAAQ;AAClB,qBAAK,WAAW,QAAQ,QAAQ,SAAS;AAAA,cAC/C,OAAW;AACL,yBAAS;AAAA,cACf;AAEI,kBAAI,QAAQ,MAAM;AAChB,qBAAK,UAAU,WAAW;AAC1B,qBAAK,WAAW,QAAQ,MAAM,OAAO;AACrC,qBAAK,SAAS,WAAW;AAAA,cAC/B;AAEI,kBAAI,WAAW,MAAM;AACnB,yBAAS,KAAK,OAAO,QAAQ,IAAI,KAAK,KAAK,OAAO,QAAQ,IAAI;AAAA,cACpE;AAEI,kBAAI,QAAQ;AACV,sBAAM,aAAa,QAAQ,KAAK,EAAE;AAClC,sBAAM,qBAAqB,WAAW,WAAW,SAAS,CAAC,MAAM;AACjE,uBAAO,KAAK,QAAQ,UAAU,GAAG,qBAAqB,MAAM,EAAE,GAAG,QAAQ,KAAK,EAAE,CAAC,IAAI,UAAU,KAAK,EAAE,CAAC;AAAA,CAAM;AAC7G,uBAAO,KAAK,QAAQ,KAAK,EAAE,CAAC;AAC5B,uBAAO,KAAK,KAAK;AAAA,cACvB,OAAW;AACL,sBAAM,gBAAgB,KAAK,wBAAwB,OAAO;AAC1D,oBAAI,QAAQ,SAAS,GAAG;AACtB,yBAAO,KAAK,QAAQ,KAAK,EAAE,GAAG,IAAI;AAAA,gBAC1C;AACM,uBAAO,KAAK,YAAY,aAAa,MAAM,aAAa,aAAa,aAAa;AAAA,CAAQ;AAC1F,oBAAI,QAAQ,SAAS,GAAG;AACtB,yBAAO,KAAK,QAAQ,QAAQ,KAAK,EAAE,CAAC;AAAA,CAAY;AAAA,gBACxD;AACM,uBAAO,KAAK,QAAQ,KAAK,EAAE,CAAC;AAC5B,uBAAO,KAAK;AAAA,EAAK,UAAU,KAAK,EAAE,CAAC,GAAG;AACtC,uBAAO,KAAK,KAAK;AAAA,cACvB;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkB,WAAW,QAAQ;AACnC,kBAAI,UAAU,SAAS,kBAAkB;AACvC,sBAAM,KAAK,eAAe,2BAA2B,SAAS;AAAA,cACpE;AAEI,oBAAM,gBAAgB,KAAK,wBAAwB,OAAO;AAC1D,qBAAO,KAAK,YAAY,aAAa,MAAM,aAAa,aAAa,aAAa;AAAA,CAAQ;AAC1F,qBAAO,KAAK,OAAO;AACnB,mBAAK,WAAW,UAAU,MAAM,MAAM;AACtC,qBAAO,KAAK,YAAY;AACxB,mBAAK,WAAW,UAAU,MAAM,MAAM;AACtC,qBAAO,KAAK,KAAK;AAEjB,qBAAO;AAAA,YACX;AAAA,YAEE,oBAAoB,aAAa,QAAQ;AACvC,kBAAI,YAAY,SAAS,oBAAoB;AAC3C,sBAAM,KAAK,eAAe,2BAA2B,WAAW;AAAA,cACtE;AAEI,oBAAM,gBAAgB,KAAK,wBAAwB,OAAO;AAC1D,qBAAO,KAAK,YAAY,aAAa,MAAM,aAAa,aAAa,aAAa;AAAA,CAAQ;AAC1F,mBAAK,WAAW,YAAY,MAAM,MAAM;AACxC,qBAAO,KAAK,OAAO;AACnB,mBAAK,WAAW,YAAY,MAAM,MAAM;AACxC,qBAAO,KAAK,YAAY;AACxB,qBAAO,KAAK,KAAK;AAEjB,qBAAO;AAAA,YACX;AAAA,YAGE,wBAAwB,SAAS,QAAQ;AACvC,kBAAI,QAAQ,aAAa,MAAM;AAC7B,qBAAK,WAAW,QAAQ,MAAM,MAAM;AACpC,uBAAO,KAAK,GAAG;AACf,uBAAO,KAAK,MAAM;AAClB,qBAAK,WAAW,QAAQ,MAAM,MAAM;AACpC,uBAAO,KAAK,GAAG;AACf,qBAAK,WAAW,QAAQ,OAAO,MAAM;AACrC,uBAAO,KAAK,GAAG;AAAA,cACrB,WAAe,QAAQ,aAAa,OAAO;AACrC,qBAAK,WAAW,QAAQ,MAAM,MAAM;AACpC,uBAAO,KAAK,GAAG;AACf,uBAAO,KAAK,MAAM;AAClB,qBAAK,WAAW,QAAQ,MAAM,MAAM;AACpC,uBAAO,KAAK,GAAG;AACf,qBAAK,WAAW,QAAQ,OAAO,MAAM;AACrC,uBAAO,KAAK,GAAG;AAAA,cACrB,OAAW;AACL,sBAAM,WAAW,KAAK,QAAQ,QAAQ,IAAI;AAC1C,sBAAM,YAAY,KAAK,QAAQ,QAAQ,KAAK;AAC5C,qBAAK,WAAW,QAAQ,MAAM,MAAM;AACpC,uBAAO,KAAK,QAAQ,QAAQ;AAC5B,oBAAI,aAAa,aAAa,cAAc,WAAW;AACrD,yBAAO,KAAK,QAAQ;AACpB,uBAAK,WAAW,QAAQ,OAAO,MAAM;AACrC,yBAAO,KAAK,GAAG;AAAA,gBACvB,OAAa;AACL,uBAAK,WAAW,QAAQ,OAAO,MAAM;AAAA,gBAC7C;AACM,uBAAO;AAAA,cACb;AAAA,YACA;AAAA,YAEE,kBAAkB,OAAO,QAAQ;AAC/B,kBAAI,KAAK,QAAQ,WAAW,GAAG;AAC7B,qBAAK,UAAU,YAAY;AAC3B,yBAAS,IAAI,GAAG,IAAI,MAAM,KAAK,QAAQ,KAAK;AAC1C,uBAAK,WAAW,MAAM,KAAK,CAAC,GAAG,MAAM;AAAA,gBAC7C;AACM,qBAAK,SAAS,YAAY;AAAA,cAChC,OAAW;AACL,uBAAO,KAAK,KAAK;AACjB,yBAAS,IAAI,GAAG,IAAI,MAAM,KAAK,QAAQ,KAAK;AAC1C,uBAAK,WAAW,MAAM,KAAK,CAAC,GAAG,MAAM;AAAA,gBAC7C;AACM,uBAAO,KAAK,KAAK;AAAA,cACvB;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,uBAAuB,YAAY,QAAQ;AACzC,oBAAM,eAAe,WAAW;AAChC,kBAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,MAAM;AAC9D,sBAAM,KAAK,eAAe,yBAAyB,UAAU;AAAA,cACnE;AACI,oBAAM,SAAS,CAAA;AACf,kBAAI,WAAW;AACf,oBAAM,kBAAkB,CAAA;AACxB,kBAAI,iBAAiB,CAAA;AACrB,uBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,sBAAM,cAAc,aAAa,CAAC;AAClC,sBAAM,OAAO,YAAY;AACzB,sBAAM,OAAO,KAAK,eAAe,YAAY,EAAE;AAC/C,sBAAM,aAAa,KAAK,QAAQ,YAAY,IAAI;AAChD,oBAAI,OAAO;AACX,oBAAI,SAAS,kBAAkB;AAC7B,sBAAI,KAAK,kBAAkB,WAAW;AACpC,2BAAO;AAAA,kBACjB,OAAe;AACL,2BAAO;AAAA,kBACjB;AAAA,gBACA;AACM,sBAAM,aAAa,QAAQ,IAAI;AAC/B,oBAAI,CAAC,YAAY;AACf,wBAAM,KAAK,eAAe,eAAgB,IAAI,gBAAiB,UAAU;AAAA,gBACjF;AACM,sBAAM,oBAAoB,CAAA;AAC1B,oBAAI,eAAe,aAAa,SAAS,WAAW;AAClD,uBAAK,YAAY;AACjB,sBAAI,MAAM,KAAK,aAAa,MAAM;AAChC,sCAAkB,KAAK,QAAQ;AAAA,kBACzC,WAAmB,SAAS,UAAU;AAC5B,0BAAM,IAAI,MAAM,uBAAuB;AAAA,kBACjD;AACQ,6BAAW;AACX,oCAAkB,KAAK,QAAQ,MAAM,aAAa,YAAY,GAAG,IAAI,CAAC,GAAG;AACzE,oCAAkB,KAAK,QAAQ;AAC/B,uBAAK,WAAW,MAAM,iBAAiB;AACvC,oCAAkB,KAAK,GAAG;AAAA,gBAClC,OAAa;AACL,uBAAK,YAAY;AACjB,sBAAI,MAAM,KAAK,aAAa,MAAM;AAChC,sCAAkB,KAAK,GAAG,UAAU,GAAG;AAAA,kBACjD,WAAmB,SAAS,UAAU;AAC5B,oCAAgB,KAAK,eAAe,KAAK,GAAG,CAAC;AAC7C,qCAAiB,CAAA;AACjB,sCAAkB,KAAK,GAAG,UAAU,GAAG;AAAA,kBACjD;AACQ,6BAAW;AACX,oCAAkB,KAAK,QAAQ,MAAM,aAAa,YAAY,GAAG,IAAI,CAAC,GAAG;AACzE,sBAAI,eAAe,YAAY,SAAS,WAAW;AACjD,wBAAI,KAAK,QAAQ,KAAK,KAAK,SAAS,WAAW;AAC7C,2BAAK,WAAW,MAAM,iBAAiB;AAAA,oBACnD,OAAiB;AACL,wCAAkB,KAAK,MAAM;AAC7B,2BAAK,WAAW,MAAM,iBAAiB;AACvC,wCAAkB,KAAK,GAAG;AAAA,oBACtC;AAAA,kBACA,WAAmB,eAAe,oBAAoB,SAAS,WAAW;AAChE,yBAAK,qBAAqB,MAAM,iBAAiB;AAAA,kBAC3D,OAAe;AACL,yBAAK,WAAW,MAAM,iBAAiB;AAAA,kBACjD;AAAA,gBACA;AACM,+BAAe,KAAK,kBAAkB,KAAK,EAAE,CAAC;AAAA,cACpD;AAEI,kBAAI,eAAe,SAAS,GAAG;AAC7B,gCAAgB,KAAK,eAAe,KAAK,GAAG,CAAC;AAAA,cACnD;AAEI,qBAAO,KAAK,gBAAgB,KAAK,GAAG,CAAC;AAErC,qBAAO,KAAK,OAAO,KAAK,EAAE,CAAC;AAC3B,qBAAO,KAAK,GAAG;AACf,qBAAO;AAAA,YACX;AAAA,YAEE,eAAe,QAAQ,QAAQ;AAC7B,qBAAO,KAAK,MAAM;AAClB,mBAAK,WAAW,OAAO,MAAM,MAAM;AACnC,qBAAO,KAAK,GAAG;AACf,kBAAI,OAAO,WAAW,SAAS,kBAAkB;AAC/C,qBAAK,WAAW,OAAO,YAAY,MAAM;AAAA,cAC/C,OAAW;AACL,uBAAO,KAAK,MAAM;AAClB,qBAAK,WAAW,OAAO,YAAY,MAAM;AACzC,uBAAO,KAAK,OAAO;AAAA,cACzB;AAEI,kBAAI,OAAO,WAAW;AACpB,uBAAO,KAAK,OAAO;AACnB,oBAAI,OAAO,UAAU,SAAS,oBAAoB,OAAO,UAAU,SAAS,eAAe;AACzF,uBAAK,WAAW,OAAO,WAAW,MAAM;AAAA,gBAChD,OAAa;AACL,yBAAO,KAAK,MAAM;AAClB,uBAAK,WAAW,OAAO,WAAW,MAAM;AACxC,yBAAO,KAAK,OAAO;AAAA,gBAC3B;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,mBAAmB,KAAK,QAAQ;AAC9B,kBAAI,IAAI,SAAS,mBAAmB;AAClC,sBAAM,KAAK,eAAe,4BAA4B,GAAG;AAAA,cAC/D;AACI,oBAAM,EAAE,cAAc,MAAK,IAAK;AAChC,oBAAM,OAAO,KAAK,QAAQ,YAAY;AACtC,oBAAM,UAAU,qBAAqB,KAAK,OAAO,KAAK,GAAG,CAAC;AAC1D,sBAAQ,MAAI;AAAA,gBACV,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,KAAK,SAAS,OAAO,KAAK;AACjC,uBAAK,WAAW,cAAc,MAAM;AACpC,yBAAO,KAAK,KAAK;AACjB;AAAA,gBACF,KAAK;AACH,yBAAO,KAAK,OAAO,OAAO,KAAK;AAC/B,uBAAK,WAAW,cAAc,MAAM;AACpC,yBAAO,KAAK,KAAK;AACjB;AAAA,cACR;AACI,kBAAI,MAAM,WAAW,KAAK,CAAC,MAAM,CAAC,EAAE,MAAM;AACxC,qBAAK,WAAW,MAAM,CAAC,EAAE,YAAY,MAAM;AAC3C,uBAAO;AAAA,cACb;AAEI,kBAAI,iBAAiB;AACrB,kBAAI,gBAAgB,CAAA;AACpB,kBAAI,qBAAqB;AACzB,kBAAI,cAAc;AAClB,uBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,oBAAI,CAAC,MAAM,CAAC,EAAE,MAAM;AAClB,sBAAI,MAAM,SAAS,IAAI,GAAG;AACxB,yCAAqB;AACrB,yBAAK,WAAW,MAAM,CAAC,EAAE,YAAY,aAAa;AAClD;AAAA,kBACV,OAAe;AACL,2BAAO,KAAK,WAAW;AAAA,kBACjC;AAAA,gBACA,OAAa;AACL,sBAAI,MAAM,KAAK,CAAC,aAAa;AAC3B,kCAAc;AACd,2BAAO,KAAK,OAAO,OAAO,MAAM;AAAA,kBAC1C,OAAe;AACL,wBAAI,gBAAgB;AAClB,6BAAO,KAAK,GAAG,OAAO,MAAM;AAC5B,uCAAiB;AAAA,oBAC7B,OAAiB;AACL,6BAAO,KAAK,aAAa,OAAO,MAAM;AAAA,oBAClD;AAAA,kBACA;AACQ,sBAAI,SAAS,WAAW;AACtB,0BAAM,WAAW,KAAK,QAAQ,MAAM,CAAC,EAAE,IAAI;AAC3C,4BAAQ,UAAQ;AAAA,sBACd,KAAK;AAAA,sBACL,KAAK;AACH,6BAAK,mBAAmB,MAAM,CAAC,EAAE,MAAM,MAAM;AAC7C;AAAA,sBACF,KAAK;AACH,6BAAK,qBAAqB,MAAM,CAAC,EAAE,MAAM,MAAM;AAC/C;AAAA,oBACd;AAAA,kBACA,WAAmB,SAAS,SAAS;AAC3B,0BAAM,WAAW,KAAK,QAAQ,MAAM,CAAC,EAAE,IAAI;AAC3C,4BAAQ,UAAQ;AAAA,sBACd,KAAK;AACH,6BAAK,mBAAmB,MAAM,CAAC,EAAE,MAAM,MAAM;AAC7C;AAAA,sBACF,KAAK;AACH,6BAAK,iBAAiB,MAAM,CAAC,EAAE,MAAM,MAAM;AAC3C;AAAA,oBACd;AAAA,kBACA,OAAe;AACL,0BAAM,IAAI,MAAM,WAAW;AAAA,kBACrC;AACQ,sBAAI,CAAC,MAAM,CAAC,EAAE,cAAc,MAAM,CAAC,EAAE,WAAW,WAAW,GAAG;AAC5D,qCAAiB;AACjB,2BAAO,KAAK,MAAM;AAClB;AAAA,kBACV;AACQ,yBAAO,KAAK;AAAA,CAAO;AAAA,gBAC3B;AACM,qBAAK,WAAW,MAAM,CAAC,EAAE,YAAY,MAAM;AAC3C,uBAAO,KAAK,KAAK;AAAA,cACvB;AACI,kBAAI,oBAAoB;AACtB,uBAAO,KAAK,SAAS;AACrB,uBAAO,KAAK,cAAc,KAAK,EAAE,CAAC;AAClC,uBAAO,KAAK,GAAG;AAAA,cACrB;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkB,OAAO,QAAQ;AAC/B,qBAAO,KAAK,MAAM;AAClB,qBAAO;AAAA,YACX;AAAA,YAEE,oBAAoB,OAAO,QAAQ;AACjC,oBAAM;AAAA,gBACJ;AAAA,gBACA,MAAAA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cACN,IAAQ,KAAK,2BAA2B,KAAK;AACzC,sBAAQ,WAAS;AAAA,gBACf,KAAK;AAAA,gBACL,KAAK;AACH,sBAAIA,UAAS,OAAOA,UAAS,OAAOA,UAAS,KAAK;AAChD,0BAAM,KAAK,eAAe,wFAAwF,KAAK;AAAA,kBACjI;AACQ,yBAAO,KAAK,YAAYA,KAAI,EAAE;AAC9B,yBAAO;AAAA,gBACT,KAAK;AACH,sBAAI,KAAK,eAAe;AACtB,4BAAQA,OAAI;AAAA,sBACV,KAAK;AACH,4BAAI,KAAK,QAAQ,kBAAkB,GAAG;AACpC,iCAAO,KAAK,qBAAqB;AAAA,wBACjD,OAAqB;AACL,iCAAO,KAAK,cAAc;AAAA,wBAC1C;AACc;AAAA,sBACF,KAAK;AACH,4BAAI,KAAK,QAAQ,kBAAkB,GAAG;AACpC,iCAAO,KAAK,qBAAqB;AAAA,wBACjD,OAAqB;AACL,iCAAO,KAAK,cAAc;AAAA,wBAC1C;AACc;AAAA,sBACF,KAAK;AACH,4BAAI,KAAK,QAAQ,kBAAkB,GAAG;AACpC,iCAAO,KAAK,qBAAqB;AAAA,wBACjD,OAAqB;AACL,iCAAO,KAAK,cAAc;AAAA,wBAC1C;AACc;AAAA,sBACF;AACE,8BAAM,KAAK,eAAe,yBAAyB,KAAK;AAAA,oBACtE;AAAA,kBACA,OAAe;AACL,4BAAQA,OAAI;AAAA,sBACV,KAAK;AACH,4BAAI,KAAK,QAAQ,oBAAoB,GAAG;AACtC,iCAAO,KAAK,KAAK,OAAO,CAAC,CAAC;AAAA,wBAC1C,OAAqB;AACL,iCAAO,KAAK,KAAK,OAAO,CAAC,GAAG,IAAI;AAAA,wBAChD;AACc;AAAA,sBACF,KAAK;AACH,4BAAI,KAAK,QAAQ,oBAAoB,GAAG;AACtC,iCAAO,KAAK,KAAK,OAAO,CAAC,CAAC;AAAA,wBAC1C,OAAqB;AACL,iCAAO,KAAK,KAAK,OAAO,CAAC,GAAG,IAAI;AAAA,wBAChD;AACc;AAAA,sBACF,KAAK;AACH,4BAAI,KAAK,QAAQ,oBAAoB,GAAG;AACtC,iCAAO,KAAK,KAAK,OAAO,CAAC,CAAC;AAAA,wBAC1C,OAAqB;AACL,iCAAO,KAAK,KAAK,OAAO,CAAC,GAAG,IAAI;AAAA,wBAChD;AACc;AAAA,sBACF;AACE,8BAAM,KAAK,eAAe,yBAAyB,KAAK;AAAA,oBACtE;AAAA,kBACA;AACQ,yBAAO;AAAA,gBACT,KAAK;AACH,wBAAM,KAAK,eAAe,yBAAyB,KAAK;AAAA,gBAC1D,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,sBAAI,WAAW,QAAQ;AACrB,2BAAO,KAAK,KAAKA,KAAI,CAAC;AACtB,2BAAO;AAAA,kBACjB;AACQ,wBAAM,YAAY,MAAM,aAAaA,KAAI;AACzC,0BAAQ,UAAQ;AAAA,oBACd,KAAK;AACH,6BAAO,KAAK,QAAS,SAAS,IAAK;AACnC,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO,KAAK,QAAS,SAAS,IAAK;AACnC,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO,KAAK,QAAS,SAAS,IAAK;AACnC,6BAAO;AAAA,oBACT,KAAK;AACH,6BAAO,KAAK,QAAS,SAAS,IAAK;AACnC,6BAAO;AAAA,kBACnB;AACQ;AAAA,gBACF,KAAK;AACH,sBAAI,OAAO,cAAc,aAAa;AACpC,4BAAQ,MAAI;AAAA,sBACV,KAAK;AAAA,sBACL,KAAK;AAAA,sBACL,KAAK;AACH,+BAAO,KAAK,aAAc,MAAM,aAAaA,KAAI,CAAC,EAAG;AACrD,+BAAO;AAAA,oBACrB;AAAA,kBACA;AAAA,gBACQ,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH;AAAA,gBACF,KAAK;AACH,uBAAK,kBAAkB,MAAM,QAAQ,MAAM;AAC3C,yBAAO,KAAK,GAAG;AACf,yBAAO,KAAK,KAAK,+BAA+B,QAAQ,CAAC;AACzD,yBAAO,KAAK,GAAG;AACf,yBAAO;AAAA,gBACT,KAAK;AACH,uBAAK,kBAAkB,MAAM,OAAO,QAAQ,MAAM;AAClD,yBAAO,KAAK,GAAG;AACf,yBAAO,KAAK,KAAK,+BAA+B,MAAM,OAAO,QAAQ,CAAC;AACtE,yBAAO,KAAK,GAAG;AACf,yBAAO,KAAK,GAAG;AACf,yBAAO,KAAK,KAAK,+BAA+B,MAAM,QAAQ,CAAC;AAC/D,yBAAO,KAAK,GAAG;AACf,yBAAO;AAAA,gBACT,KAAK;AACH,uBAAK,mBAAmB,MAAM,QAAQ,MAAM;AAC5C,yBAAO,KAAK,GAAG;AACf,yBAAO,KAAK,KAAK,+BAA+B,QAAQ,CAAC;AACzD,yBAAO,KAAK,GAAG;AACf,yBAAO;AAAA,gBACT;AACE,wBAAM,KAAK,eAAe,yBAAyB,KAAK;AAAA,cAClE;AAEI,kBAAI,MAAM,aAAa,OAAO;AAC5B,wBAAQ,MAAI;AAAA,kBACV,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACH,2BAAO,KAAK,GAAG,MAAM,IAAI,MAAM,aAAaA,KAAI,CAAC,EAAE;AACnD,2BAAO;AAAA,gBACjB;AAAA,cACA;AAEI,oBAAM,aAAa,GAAG,MAAM,IAAI,MAAM,aAAaA,KAAI,CAAC;AAExD,sBAAQ,MAAI;AAAA,gBACV,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,uBAAK,WAAW,MAAM,QAAQ,MAAM;AACpC,yBAAO,KAAK,GAAG;AACf,yBAAO,KAAK,KAAK,+BAA+B,SAAS,CAAC;AAC1D,yBAAO,KAAK,GAAG;AACf;AAAA,gBACF,KAAK;AACH,yBAAO,KAAK,cAAe,UAAU,KAAO,mBAAqB,UAAU,OAAQ;AACnF,uBAAK,oBAAoB,WAAW,WAAW,WAAW,MAAM;AAChE,yBAAO,KAAK,GAAG;AACf;AAAA,gBACF,KAAK;AACH,yBAAO,KAAK,yBAA0B,UAAU,KAAO,mBAAqB,UAAU,OAAQ;AAC9F,uBAAK,oBAAoB,WAAW,WAAW,WAAW,MAAM;AAChE,yBAAO,KAAK,GAAG;AACf;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,KAAK,0BAA2B,UAAU,KAAO,mBAAqB,UAAU,OAAQ;AAC/F,uBAAK,oBAAoB,WAAW,WAAW,WAAW,MAAM;AAChE,yBAAO,KAAK,GAAG;AACf;AAAA,gBACF,KAAK;AACH,yBAAO,KAAK,wBAAyB,UAAU,KAAO,mBAAqB,UAAU,OAAQ;AAC7F,uBAAK,oBAAoB,WAAW,WAAW,WAAW,MAAM;AAChE,yBAAO,KAAK,GAAG;AACf;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,KAAK,0BAA2B,UAAU,KAAO,mBAAqB,UAAU,OAAQ;AAC/F,uBAAK,oBAAoB,WAAW,WAAW,WAAW,MAAM;AAChE,yBAAO,KAAK,GAAG;AACf;AAAA,gBACF,KAAK;AACH,yBAAO,KAAK,wBAAyB,UAAU,KAAO,mBAAqB,UAAU,OAAQ;AAC7F,uBAAK,oBAAoB,WAAW,WAAW,WAAW,MAAM;AAChE,yBAAO,KAAK,GAAG;AACf;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,KAAK,0BAA2B,UAAU,KAAO,mBAAqB,UAAU,OAAQ;AAC/F,uBAAK,oBAAoB,WAAW,WAAW,WAAW,MAAM;AAChE,yBAAO,KAAK,GAAG;AACf;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,KAAK,wBAAyB,UAAU,KAAO,mBAAqB,UAAU,OAAQ;AAC7F,uBAAK,oBAAoB,WAAW,WAAW,WAAW,MAAM;AAChE,yBAAO,KAAK,GAAG;AACf;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,sBAAI,KAAK,cAAc,UAAU;AAC/B,2BAAO,KAAK,wBAAwB,UAAU,KAAK,UAAU,SAAS,UAAU,OAAO;AACvF,yBAAK,oBAAoB,WAAW,WAAW,WAAW,MAAM;AAChE,2BAAO,KAAK,GAAG;AAAA,kBACzB,OAAe;AACL,0BAAM,WAAY,WAAW,SAC3B,KAAK,+BAA+B,KAAK,MAAMA,KAAI,IACnD,KAAK,kBAAkBA,KAAI;AAE7B,4BAAQ,UAAQ;AAAA,sBACd,KAAK;AACH,+BAAO,KAAK,QAAQ,UAAU,KAAK,UAAU,SAAS,UAAU,OAAO;AACvE;AAAA,sBACF,KAAK;AACH,+BAAO,KAAK,SAAS,UAAU,KAAK,UAAU,SAAS,UAAU,OAAO;AACxE;AAAA,sBACF,KAAK;AAAA,sBACL,KAAK;AACH,+BAAO,KAAK,SAAS,UAAU,KAAK,UAAU,SAAS,UAAU,OAAO;AACxE;AAAA,sBACF;AACE,8BAAM,IAAI,MAAM,0BAA0B,QAAQ,EAAE;AAAA,oBAClE;AACU,yBAAK,oBAAoB,WAAW,WAAW,WAAW,MAAM;AAChE,2BAAO,KAAK,GAAG;AAAA,kBACzB;AACQ;AAAA,gBACF,KAAK;AACH,yBAAO,KAAK,wBAAyB,UAAU,KAAO,mBAAqB,UAAU,OAAQ;AAC7F,uBAAK,oBAAoB,WAAW,WAAW,WAAW,MAAM;AAChE,yBAAO,KAAK,GAAG;AACf;AAAA,gBACF,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,KAAK,GAAG,UAAU,IAAI,KAAK,+BAA+B,SAAS,CAAC,GAAG;AAC9E,sBAAI,WAAW;AACb,2BAAO,KAAK,IAAI,KAAK,+BAA+B,SAAS,CAAC,GAAG;AAAA,kBAC3E;AACQ;AAAA,gBACF;AACE,wBAAM,IAAI,MAAM,gCAAiC,IAAI,GAAI;AAAA,cACjE;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkB,KAAK,QAAQ;AAC7B,kBAAI,CAAC,IAAI,QAAQ;AACf,sBAAM,KAAK,eAAe,0BAA0B,GAAG;AAAA,cAC7D;AAEI,kBAAI,eAAe;AACnB,oBAAM,iBAAiB,KAAK,kBAAkB,GAAG;AAEjD,kBAAI,kBAAmB,IAAI,OAAO,UAAU,IAAI,OAAO,OAAO,SAAS,kBAAmB;AACxF,+BAAe,IAAI,OAAO,SAAS;AAAA,cACzC,WACa,IAAI,OAAO,SAAS,wBAAwB,IAAI,OAAO,YAAY,CAAC,EAAE,SAAS,aAAa,CAAC,MAAM,IAAI,OAAO,YAAY,CAAC,EAAE,GAAG,GAAG;AAC1I,+BAAe,IAAI,OAAO,YAAY,CAAC,EAAE,SAAS;AAAA,cACxD,OAAW;AACL,+BAAe,IAAI,OAAO;AAAA,cAChC;AAEI,kBAAI,CAAC,cAAc;AACjB,sBAAM,KAAK,eAAe,0CAA0C,GAAG;AAAA,cAC7E;AAEI,sBAAQ,cAAY;AAAA,gBAClB,KAAK;AACH,iCAAe;AACf;AAAA,gBACF,KAAK;AACH,iCAAe;AACf;AAAA,cACR;AAEI,kBAAI,KAAK,gBAAgB,QAAQ,YAAY,IAAI,GAAG;AAClD,qBAAK,gBAAgB,KAAK,YAAY;AAAA,cAC5C;AAEI,kBAAI,iBAAiB,YAAY,KAAK,WAAW,KAAK,QAAQ,SAAS,GAAG;AACxE,yBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC5C,wBAAM,SAAS,KAAK,QAAQ,CAAC;AAC7B,sBAAI,OAAO,kBAAkB,mBAAmB,OAAO,iBAAiB;AACtE,2BAAO,KAAK,OAAO,eAAe;AAClC,2BAAO;AAAA,kBACjB;AAAA,gBACA;AAAA,cACA;AAEI,kBAAI,KAAK,gBAAgB;AACvB,qBAAK,eAAe,KAAK,MAAM,cAAc,IAAI,SAAS;AAAA,cAChE;AAEI,qBAAO,KAAK,YAAY;AAExB,qBAAO,KAAK,GAAG;AAEf,kBAAI,gBAAgB;AAClB,yBAAS,IAAI,GAAG,IAAI,IAAI,UAAU,QAAQ,EAAE,GAAG;AAC7C,wBAAM,WAAW,IAAI,UAAU,CAAC;AAChC,wBAAM,eAAe,KAAK,QAAQ,QAAQ;AAC1C,sBAAI,IAAI,GAAG;AACT,2BAAO,KAAK,IAAI;AAAA,kBAC1B;AAEQ,0BAAQ,cAAY;AAAA,oBAClB,KAAK;AACH,2BAAK,iBAAiB,UAAU,MAAM;AACtC;AAAA,oBACF;AACE,2BAAK,WAAW,UAAU,MAAM;AAChC;AAAA,kBACZ;AAAA,gBACA;AAAA,cACA,OAAW;AACL,sBAAM,cAAc,KAAK,4BAA4B,YAAY,KAAK,CAAA;AACtE,yBAAS,IAAI,GAAG,IAAI,IAAI,UAAU,QAAQ,EAAE,GAAG;AAC7C,wBAAM,WAAW,IAAI,UAAU,CAAC;AAChC,sBAAI,aAAa,YAAY,CAAC;AAC9B,sBAAI,IAAI,GAAG;AACT,2BAAO,KAAK,IAAI;AAAA,kBAC1B;AACQ,wBAAM,eAAe,KAAK,QAAQ,QAAQ;AAC1C,sBAAI,CAAC,YAAY;AACf,yBAAK,yBAAyB,cAAc,GAAG,cAAc,IAAI;AACjE,iCAAa;AAAA,kBACvB;AACQ,0BAAQ,cAAY;AAAA,oBAClB,KAAK;AACH,2BAAK,WAAW,UAAU,MAAM;AAChC;AAAA,oBACF,KAAK;AAAA,oBACL,KAAK;AACH,0BAAI,eAAe,WAAW;AAC5B,+BAAO,KAAK,MAAM;AAClB,6BAAK,WAAW,UAAU,MAAM;AAChC,+BAAO,KAAK,GAAG;AACf;AAAA,sBACd,WAAuB,eAAe,YAAY,eAAe,SAAS;AAC5D,6BAAK,WAAW,UAAU,MAAM;AAChC;AAAA,sBACd,WAAuB,eAAe,kBAAkB;AAC1C,6BAAK,mBAAmB,UAAU,MAAM;AACxC;AAAA,sBACd;AACY;AAAA,oBACF,KAAK;AACH,0BAAI,eAAe,YAAY,eAAe,SAAS;AACrD,+BAAO,KAAK,QAAQ;AACpB,6BAAK,WAAW,UAAU,MAAM;AAChC,+BAAO,KAAK,GAAG;AACf;AAAA,sBACd,WAAuB,eAAe,WAAW;AACnC,6BAAK,WAAW,UAAU,MAAM;AAChC;AAAA,sBACd;AACY;AAAA,oBACF,KAAK;AACH,0BAAI,eAAe,WAAW;AAC5B,6BAAK,qBAAqB,UAAU,MAAM;AAC1C;AAAA,sBACd,WAAuB,eAAe,YAAY,eAAe,SAAS;AAC5D,6BAAK,mBAAmB,UAAU,MAAM;AACxC;AAAA,sBACd,WAAuB,eAAe,kBAAkB;AAC1C,6BAAK,WAAW,UAAU,MAAM;AAChC;AAAA,sBACd;AACY;AAAA,oBACF,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AACH,0BAAI,eAAe,cAAc;AAC/B,4BAAI,SAAS,SAAS,cAAc;AAClC,iCAAO,KAAK,QAAQ,MAAM,aAAa,SAAS,IAAI,CAAC,EAAE;AAAA,wBACvE,WAAyB,SAAS,SAAS,qBAAqB,SAAS,SAAS,sBAAsB,SAAS,SAAS,kBAAkB;AAC5H,+BAAK,WAAW,UAAU,MAAM;AAAA,wBAChD,OAAqB;AACL,gCAAM,KAAK,eAAe,2BAA4B,SAAS,IAAI,IAAK,GAAG;AAAA,wBAC3F;AACc;AAAA,sBACd;AACY;AAAA,oBACF,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AACH,0BAAI,eAAe,cAAc;AAC/B,4BAAI,SAAS,SAAS,aAAc,OAAM,KAAK,eAAe,2BAA4B,SAAS,IAAI,IAAK,GAAG;AAC/G,6BAAK,6BAA6B,KAAK,MAAM,SAAS,MAAM,cAAc,CAAC;AAC3E,8BAAMA,QAAO,MAAM,aAAa,SAAS,IAAI;AAC7C,+BAAO,KAAK,QAAQA,KAAI,SAASA,KAAI,aAAaA,KAAI,KAAK;AAC3D;AAAA,sBACd;AACY;AAAA,kBACZ;AACQ,wBAAM,KAAK,eAAe,qCAAsC,YAAY,QAAU,UAAU,wBAA0B,SAAS,SAAU,GAAG;AAAA,gBACxJ;AAAA,cACA;AACI,qBAAO,KAAK,GAAG;AAEf,qBAAO;AAAA,YACX;AAAA,YAEE,mBAAmB,SAAS,QAAQ;AAClC,oBAAM,aAAa,KAAK,QAAQ,OAAO;AAEvC,oBAAM,SAAS,QAAQ,SAAS;AAEhC,sBAAQ,YAAU;AAAA,gBAChB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,KAAK,MAAM,MAAM,GAAG;AAC3B;AAAA,gBACF;AACE,yBAAO,KAAK,MAAM,MAAM,GAAG;AAAA,cACnC;AACI,uBAAS,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC/B,oBAAI,IAAI,GAAG;AACT,yBAAO,KAAK,IAAI;AAAA,gBACxB;AACM,sBAAM,UAAU,QAAQ,SAAS,CAAC;AAClC,qBAAK,WAAW,SAAS,MAAM;AAAA,cACrC;AACI,qBAAO,KAAK,GAAG;AAEf,qBAAO;AAAA,YACX;AAAA,YAEE,oBAAoB,GAAG,GAAG,GAAG,QAAQ;AACnC,kBAAI,GAAG;AACL,uBAAO,KAAK,KAAK,+BAA+B,CAAC,GAAG,IAAI;AAAA,cAC9D,OAAW;AACL,uBAAO,KAAK,KAAK;AAAA,cACvB;AACI,kBAAI,GAAG;AACL,uBAAO,KAAK,KAAK,+BAA+B,CAAC,GAAG,IAAI;AAAA,cAC9D,OAAW;AACL,uBAAO,KAAK,KAAK;AAAA,cACvB;AACI,qBAAO,KAAK,KAAK,+BAA+B,CAAC,CAAC;AAClD,qBAAO;AAAA,YACX;AAAA,YAEE,+BAA+B,UAAU;AACvC,kBAAI,CAAC,UAAU;AACb,sBAAM,IAAI,MAAM,kBAAkB;AAAA,cACxC;AACI,oBAAM,OAAO,KAAK,QAAQ,QAAQ;AAClC,oBAAM,SAAS,CAAA;AACf,sBAAQ,MAAI;AAAA,gBACV,KAAK;AAAA,gBACL,KAAK;AACH,uBAAK,mBAAmB,UAAU,MAAM;AACxC;AAAA,gBACF,KAAK;AACH,uBAAK,qBAAqB,UAAU,MAAM;AAC1C;AAAA,gBACF;AACE,uBAAK,WAAW,UAAU,MAAM;AAAA,cACxC;AACI,qBAAO,OAAO,KAAK,EAAE;AAAA,YACzB;AAAA,UACA;AAv3C6C;AAA7C,cAAM,oBAAN;AAy3CA,gBAAM,UAAU;AAAA,YACd,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,aAAa;AAAA,YACb,aAAa;AAAA,YACb,aAAa;AAAA,YACb,WAAW;AAAA,YACX,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS;AAAA,YACT,SAAS;AAAA,YACT,WAAW;AAAA,YACX,UAAU;AAAA,YACV,kBAAkB;AAAA,YAClB,iBAAiB;AAAA,YACjB,gCAAgC;AAAA,YAChC,mBAAmB;AAAA,YACnB,mBAAmB;AAAA,YACnB,mBAAmB;AAAA,YACnB,mBAAmB;AAAA,YACnB,aAAa;AAAA,YACb,cAAc;AAAA,YACd,mBAAmB;AAAA,YACnB,aAAa;AAAA,YACb,eAAe;AAAA,YACf,aAAa;AAAA,YACb,kBAAkB;AAAA;AAGpB,gBAAM,cAAc;AAAA,YAClB,OAAO;AAAA,YACP,OAAO;AAAA;AAGT,UAAAT,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,eAAc,KAAI,oBAAmB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACjF,gBAAM,EAAE,wBAAuB,IAAKE,SAAQ,wBAAwB;AACpE,gBAAM,EAAE,sBAAqB,IAAKA,SAAQ,sBAAsB;AAChE,gBAAM,EAAE,wBAAuB,IAAKA,SAAQ,wBAAwB;AAEpE,gBAAM,EAAE,0BAAyB,IAAKA,SAAQ,2BAA2B;AACzE,gBAAM,EAAE,iCAAgC,IAAKA,SAAQ,mCAAmC;AAExF,gBAAM,EAAE,0BAAyB,IAAKA,SAAQ,2BAA2B;AACzE,gBAAM,EAAE,iCAAgC,IAAKA,SAAQ,mCAAmC;AAExF,gBAAM,EAAE,4BAA2B,IAAKA,SAAQ,6BAA6B;AAC7E,gBAAM,EAAE,mCAAkC,IAAKA,SAAQ,qCAAqC;AAE5F,gBAAM,EAAE,8BAA6B,IAAKA,SAAQ,+BAA+B;AACjF,gBAAM,EAAE,qCAAoC,IAAKA,SAAQ,uCAAuC;AAEhG,gBAAM,EAAE,6CAA4C,IAAKA,SAAQ,gDAAgD;AACjH,gBAAM,EAAE,oDAAmD,IAAKA,SAAQ,wDAAwD;AAEhI,gBAAM,EAAE,8BAA6B,IAAKA,SAAQ,+BAA+B;AACjF,gBAAM,EAAE,qCAAoC,IAAKA,SAAQ,uCAAuC;AAEhG,gBAAM,EAAE,4BAA2B,IAAKA,SAAQ,6BAA6B;AAC7E,gBAAM,EAAE,mCAAkC,IAAKA,SAAQ,qCAAqC;AAE5F,gBAAM,EAAE,+BAA8B,IAAKA,SAAQ,iCAAiC;AACpF,gBAAM,EAAE,sCAAqC,IAAKA,SAAQ,yCAAyC;AAEnG,gBAAM,EAAE,+BAA8B,IAAKA,SAAQ,iCAAiC;AACpF,gBAAM,EAAE,sCAAqC,IAAKA,SAAQ,yCAAyC;AAEnG,gBAAM,EAAE,+BAA8B,IAAKA,SAAQ,iCAAiC;AACpF,gBAAM,EAAE,sCAAqC,IAAKA,SAAQ,yCAAyC;AAEnG,gBAAM,EAAE,uBAAsB,IAAKA,SAAQ,uBAAuB;AAClE,gBAAM,EAAE,uBAAsB,IAAKA,SAAQ,uBAAuB;AAClE,gBAAM,EAAE,uBAAsB,IAAKA,SAAQ,uBAAuB;AAElE,gBAAM,EAAE,8BAA6B,IAAKA,SAAQ,+BAA+B;AACjF,gBAAM,EAAE,qCAAoC,IAAKA,SAAQ,uCAAuC;AAEhG,gBAAM,kBAAkB;AAAA,YACtB,UAAU;AAAA,cACR,SAAS;AAAA,gBACP,WAAW;AAAA,gBACX,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,SAAS;AAAA,gBACT,iBAAiB;AAAA,gBACjB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,gCAAgC;AAAA,gBAChC,cAAc;AAAA,gBACd,mBAAmB;AAAA,gBACnB,aAAa;AAAA,gBACb,eAAe;AAAA,gBACf,aAAa;AAAA,gBACb,kBAAkB;AAAA,gBAClB,aAAa;AAAA;cAEf,QAAQ;AAAA,gBACN,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,SAAS;AAAA,gBACT,iBAAiB;AAAA,gBACjB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,gCAAgC;AAAA,gBAChC,cAAc;AAAA,gBACd,mBAAmB;AAAA,gBACnB,aAAa;AAAA,gBACb,eAAe;AAAA,gBACf,aAAa;AAAA,gBACb,kBAAkB;AAAA,gBAClB,aAAa;AAAA,cACnB;AAAA;YAEE,QAAQ;AAAA,cACN,SAAS;AAAA,gBACP,WAAW;AAAA,gBACX,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,SAAS;AAAA,gBACT,iBAAiB;AAAA,gBACjB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,gCAAgC;AAAA,gBAChC,cAAc;AAAA,gBACd,mBAAmB;AAAA,gBACnB,aAAa;AAAA,gBACb,eAAe;AAAA,gBACf,aAAa;AAAA,gBACb,kBAAkB;AAAA,gBAClB,aAAa;AAAA;cAEf,QAAQ;AAAA,gBACN,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,SAAS;AAAA,gBACT,iBAAiB;AAAA,gBACjB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,gCAAgC;AAAA,gBAChC,cAAc;AAAA,gBACd,mBAAmB;AAAA,gBACnB,aAAa;AAAA,gBACb,eAAe;AAAA,gBACf,aAAa;AAAA,gBACb,kBAAkB;AAAA,gBAClB,aAAa;AAAA,cACnB;AAAA;;AAIA,mBAAS,sBAAsB,MAAM,SAAS,WAAWe,QAAO;AAC9D,gBAAI,CAAC,MAAM;AACT,oBAAM,IAAI,MAAM,cAAc;AAAA,YAClC;AACE,gBAAI,CAAC,SAAS;AACZ,oBAAM,IAAI,MAAM,iBAAiB;AAAA,YACrC;AACE,gBAAI,CAAC,WAAW;AACd,oBAAM,IAAI,MAAM,mBAAmB;AAAA,YACvC;AACE,gBAAIA,OAAM,MAAM;AACd,qBAAOA,OAAM;AAAA,YACjB;AACE,kBAAM,QAAQ,gBAAgB,SAAS,EAAE,OAAO;AAChD,gBAAI,MAAM,IAAI,MAAM,OAAO;AACzB,qBAAO;AAAA,YACX,WAAa,MAAM,IAAI,MAAM,QAAW;AACpC,oBAAM,IAAI,MAAM,oCAAqC,IAAI,EAAG;AAAA,YAChE;AACE,mBAAO,MAAM,IAAI;AAAA,UACnB;AApBS;AAsBT,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA,YACA;AAAA;QAEF,GAAE,EAAC,yBAAwB,IAAG,yBAAwB,IAAG,yBAAwB,IAAG,0BAAyB,IAAG,qCAAoC,IAAG,qCAAoC,IAAG,0DAAyD,IAAG,yCAAwC,IAAG,uCAAsC,IAAG,2CAA0C,IAAG,2CAA0C,IAAG,2CAA0C,IAAG,uCAAsC,IAAG,yCAAwC,IAAG,yCAAwC,IAAG,wBAAuB,IAAG,6BAA4B,IAAG,6BAA4B,IAAG,0BAAyB,IAAG,kDAAiD,IAAG,iCAAgC,IAAG,+BAA8B,IAAG,mCAAkC,IAAG,mCAAkC,IAAG,mCAAkC,IAAG,+BAA8B,IAAG,iCAAgC,IAAG,iCAAgC,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC5jC,gBAAM,EAAE,iBAAgB,IAAKE,SAAQ,SAAS;AAC9C,gBAAM,EAAE,MAAK,IAAKA,SAAQ,gBAAgB;AAE1C,gBAAM,oBAAN,MAAM,0BAAyB,iBAAiB;AAAA,YAC9C,UAAU,OAAO,QAAQ;AACvB,kBAAI,CAAC,KAAK,OAAO,SAAU;AAC3B,oBAAM,EAAE,eAAc,IAAK,KAAK,OAAO,YAAY;AACnD,kBAAI,QAAQ,kBAAkB,SAAS,gBAAgB;AACrD,oBAAI,QAAQ,QAAQ;AAClB,wBAAM,IAAI,MAAM,6BAA6B,KAAK,gCAAgC,cAAc,eAAe;AAAA,gBACvH,WAAiB,QAAQ,QAAQ;AACzB,wBAAM,IAAI,MAAM,8BAA8B,MAAM,gCAAgC,cAAc,eAAe;AAAA,gBACzH,OAAa;AACL,wBAAM,IAAI,MAAM,wCAAwC,MAAM,gCAAgC,cAAc,eAAe;AAAA,gBACnI;AAAA,cACA;AAAA,YACA;AAAA,YAEE,QAAQ;AACN,mBAAK,eAAc;AACnB,mBAAK,aAAY;AACjB,mBAAK,cAAa;AAAA,YACtB;AAAA,YAEE,iBAAiB;AACf,mBAAK,UAAU,KAAK,iBAAgB;AAAA,YACxC;AAAA,YAEE,gBAAgB;AACd,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,iBAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,iBAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AACjE,iBAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AAAA,YACrE;AAAA,YAEE,eAAe;AACb,mBAAK,gBAAgB,KAAK,uBAAsB;AAChD,mBAAK,QAAQ,KAAK,eAAc;AAChC,mBAAK,eAAe,KAAK,KAAK;AAC9B,mBAAK,SAAS,KAAK,KAAK;AAAA,YAC5B;AAAA,YAEE,YAAYe,QAAO;AACjB,kBAAI,MAAM,QAAQA,OAAM,CAAC,CAAC,GAAG;AAC3B,uBAAO,KAAK,YAAYA,OAAM,CAAC,CAAC;AAAA,cACtC,WAAeA,OAAM,gBAAgB,OAAO;AACtC,uBAAO,KAAK,YAAYA,OAAM,KAAK;AAAA,cACzC;AACI,sBAAQA,OAAM,aAAW;AAAA,gBACvB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL;AACE,yBAAO;AAAA,cACf;AAAA,YACA;AAAA,YAEE,UAAU;AACR,kBAAI,KAAK,SAAS;AAChB,qBAAK,QAAQ,OAAM;AAAA,cACzB;AACI,mBAAK,QAAQ,cAAc,KAAK,OAAO;AAAA,YAC3C;AAAA,UACA;AArEgD;AAAhD,cAAM,mBAAN;AAuEA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,iBAAgB,IAAKE,SAAQ,SAAS;AAE9C,gBAAM,0BAAN,MAAM,gCAA+B,iBAAiB;AAAA,YACpD,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,cAAcA;AAAA,YACvB;AAAA,YACE,UAAUA,QAAO;AACf,kBAAI,KAAK,WAAW,aAAa;AAC/B,uBAAO,cAAc,KAAK,EAAE,WAAWA,OAAM,CAAC,CAAC,IAAIA,OAAM,CAAC,CAAC;AAAA;AAAA,cACjE;AACI,qBAAO,gBAAgB,KAAK,EAAE;AAAA;AAAA,YAClC;AAAA,YAEE,wBAAwB;AACtB,kBAAI,KAAK,WAAW,YAAa,QAAO;AACxC,qBAAO,qBAAqB,KAAK,IAAI,MAAM,KAAK,OAAO;AAAA;AAAA,YAC3D;AAAA,YAEE,YAAYA,QAAO;AACjB,kBAAI,KAAK,WAAW,YAAa;AACjC,mBAAK,OAAO,cAAc,KAAK,IAAI,KAAK,cAAcA,MAAK;AAAA,YAC/D;AAAA,UACA;AArBsD;AAAtD,cAAM,yBAAN;AAuBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACtD,gBAAM,EAAE,iBAAgB,IAAKE,SAAQ,SAAS;AAE9C,gBAAM,0BAAN,MAAM,gCAA+B,iBAAiB;AAAA,YACpD,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,cAAcA;AAAA,YACvB;AAAA,YACE,UAAUA,QAAO;AACf,kBAAI,KAAK,WAAW,aAAa;AAC/B,uBAAO,cAAc,KAAK,EAAE,WAAWA,OAAM,CAAC,CAAC,IAAIA,OAAM,CAAC,CAAC,IAAIA,OAAM,CAAC,CAAC;AAAA;AAAA,cAC7E;AACI,qBAAO,gBAAgB,KAAK,EAAE;AAAA;AAAA,YAClC;AAAA,YAEE,wBAAwB;AACtB,kBAAI,KAAK,WAAW,YAAa,QAAO;AACxC,qBAAO,qBAAqB,KAAK,IAAI,MAAM,KAAK,OAAO;AAAA;AAAA,YAC3D;AAAA,YAEE,YAAYA,QAAO;AACjB,kBAAI,KAAK,WAAW,YAAa;AACjC,mBAAK,OAAO,cAAc,KAAK,IAAI,KAAK,cAAcA,MAAK;AAAA,YAC/D;AAAA,UACA;AArBsD;AAAtD,cAAM,yBAAN;AAuBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACtD,gBAAM,EAAE,iBAAgB,IAAKE,SAAQ,SAAS;AAE9C,gBAAM,0BAAN,MAAM,gCAA+B,iBAAiB;AAAA,YACpD,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,cAAcA;AAAA,YACvB;AAAA,YACE,UAAUA,QAAO;AACf,kBAAI,KAAK,WAAW,aAAa;AAC/B,uBAAO,cAAc,KAAK,EAAE,WAAWA,OAAM,CAAC,CAAC,IAAIA,OAAM,CAAC,CAAC,IAAIA,OAAM,CAAC,CAAC,IAAIA,OAAM,CAAC,CAAC;AAAA;AAAA,cACzF;AACI,qBAAO,gBAAgB,KAAK,EAAE;AAAA;AAAA,YAClC;AAAA,YAEE,wBAAwB;AACtB,kBAAI,KAAK,WAAW,YAAa,QAAO;AACxC,qBAAO,qBAAqB,KAAK,IAAI,MAAM,KAAK,OAAO;AAAA;AAAA,YAC3D;AAAA,YAEE,YAAYA,QAAO;AACjB,kBAAI,KAAK,WAAW,YAAa;AACjC,mBAAK,OAAO,cAAc,KAAK,IAAI,KAAK,cAAcA,MAAK;AAAA,YAC/D;AAAA,UACA;AArBsD;AAAtD,cAAM,yBAAN;AAuBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACtD,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAE9C,gBAAM,2BAAN,MAAM,iCAAgC,iBAAiB;AAAA,YACrD,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,cAAcA;AAAA,YACvB;AAAA,YACE,UAAUA,QAAO;AACf,kBAAI,KAAK,WAAW,aAAa;AAC/B,uBAAO,cAAc,KAAK,EAAE,MAAMA,MAAK;AAAA;AAAA,cAC7C;AACI,qBAAO,gBAAgB,KAAK,EAAE;AAAA;AAAA,YAClC;AAAA,YAEE,wBAAwB;AACtB,qBAAO,qBAAqB,KAAK,IAAI,MAAM,KAAK,OAAO;AAAA;AAAA,YAC3D;AAAA,YAEE,YAAYA,QAAO;AACjB,kBAAI,KAAK,WAAW,YAAa;AACjC,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,cAAcA,MAAK;AAAA,YAC9D;AAAA,UACA;AApBuD;AAAvD,cAAM,0BAAN;AAsBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,0BAAyB,IAAKA,SAAQ,cAAc;AAE5D,gBAAM,oCAAN,MAAM,0CAAyC,0BAA0B;AAAA,YACvE,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,iBAAiB,KAAK,MAAM;AAAA,gBAC5B,iBAAiB,KAAK,YAAY;AAAA,cACxC,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,oBAAM,EAAE,OAAO,OAAM,IAAKA;AAC1B,mBAAK,UAAU,OAAO,MAAM;AAC5B,mBAAK,aAAa,CAAC,OAAO,QAAQ,CAAC;AACnC,mBAAK,cAAc,CAAC,OAAO,MAAM;AACjC,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AAlByE;AAAzE,cAAM,mCAAN;AAoBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,gBAAe,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAChF,gBAAM,EAAE,iCAAgC,IAAKE,SAAQ,sBAAsB;AAE3E,gBAAM,oCAAN,MAAM,0CAAyC,iCAAiC;AAAA,UAAA;AAAA;AAAhF,cAAM,mCAAN;AAEA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,wBAAuB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACnE,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,6CAA4C,IAAKA,SAAQ,mCAAmC;AAEpG,gBAAM,uDAAN,MAAM,6DAA4D,6CAA6C;AAAA,YAC7G,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,iBAAiB,KAAK,MAAM;AAAA,gBAC5B,iBAAiB,KAAK,YAAY;AAAA,cACxC,CAAK;AAAA,YACL;AAAA,YAEE,YAAY,cAAc;AACxB,mBAAK,aAAa,aAAa;AAC/B,mBAAK,UAAU,aAAa,KAAK,CAAC,GAAG,aAAa,KAAK,CAAC,CAAC;AACzD,mBAAK,cAAc,aAAa;AAChC,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAY,YAAY;AAAA,YAClC;AAAA,UACA;AAjB+G;AAA/G,cAAM,sDAAN;AAmBA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,qCAAoC,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACrG,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,8BAA6B,IAAKA,SAAQ,kBAAkB;AAEpE,gBAAM,wCAAN,MAAM,8CAA6C,8BAA8B;AAAA,YAC/E,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,iBAAiB,KAAK,MAAM;AAAA,gBAC5B,iBAAiB,KAAK,YAAY;AAAA,cACxC,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,mBAAK,aAAaA,OAAM;AACxB,mBAAK,UAAUA,OAAM,KAAK,CAAC,GAAGA,OAAM,KAAK,CAAC,CAAC;AAC3C,mBAAK,cAAcA,OAAM;AACzB,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AAjBiF;AAAjF,cAAM,uCAAN;AAmBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,oBAAmB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACpF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,4BAA2B,IAAKA,SAAQ,gBAAgB;AAEhE,gBAAM,sCAAN,MAAM,4CAA2C,4BAA4B;AAAA,YAC3E,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,iBAAiB,KAAK,MAAM;AAAA,gBAC5B,iBAAiB,KAAK,YAAY;AAAA,cACxC,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,mBAAK,aAAa,MAAM,cAAcA,QAAO,IAAI;AACjD,mBAAK,cAAc,MAAM,mCAAmC,KAAK,YAAY,KAAK,QAAQ;AAC1F,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,KAAK;AAC1E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,mBAAK,cAAc,IAAI,aAAa,KAAK,iBAAiB;AAC1D,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AAnB6E;AAA7E,cAAM,qCAAN;AAqBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,kBAAiB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAClF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,+BAA8B,IAAKA,SAAQ,oBAAoB;AAEvE,gBAAM,yCAAN,MAAM,+CAA8C,+BAA+B;AAAA,YACjF,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,iBAAiB,KAAK,MAAM;AAAA,gBAC5B,iBAAiB,KAAK,YAAY;AAAA,cACxC,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,mBAAK,SAASA,MAAK;AACnB,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AAfmF;AAAnF,cAAM,wCAAN;AAiBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,sBAAqB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACtF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,+BAA8B,IAAKA,SAAQ,oBAAoB;AAEvE,gBAAM,yCAAN,MAAM,+CAA8C,+BAA+B;AAAA,YACjF,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,iBAAiB,KAAK,MAAM;AAAA,gBAC5B,iBAAiB,KAAK,YAAY;AAAA,cACxC,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,mBAAK,SAASA,MAAK;AACnB,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AAfmF;AAAnF,cAAM,wCAAN;AAiBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,sBAAqB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACtF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,+BAA8B,IAAKA,SAAQ,oBAAoB;AAEvE,gBAAM,yCAAN,MAAM,+CAA8C,+BAA+B;AAAA,YACjF,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,iBAAiB,KAAK,MAAM;AAAA,gBAC5B,iBAAiB,KAAK,YAAY;AAAA,cACxC,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,mBAAK,SAASA,MAAK;AACnB,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AAfmF;AAAnF,cAAM,wCAAN;AAiBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,sBAAqB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACtF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,4BAA2B,IAAKA,SAAQ,gBAAgB;AAEhE,gBAAM,sCAAN,MAAM,4CAA2C,4BAA4B;AAAA,YAC3E,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,iBAAiB,KAAK,MAAM;AAAA,gBAC5B,iBAAiB,KAAK,YAAY;AAAA,cACxC,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,kBAAI,CAAC,GAAG,GAAG,CAAC,IAAIA,OAAM;AACtB,mBAAK,aAAa,IAAI,WAAW,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;AACzD,mBAAK,cAAc,MAAM,mCAAmC,KAAK,YAAY,KAAK,QAAQ;AAC1F,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,KAAK;AAC1E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,mBAAK,cAAc,IAAI,aAAa,KAAK,iBAAiB;AAC1D,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AApB6E;AAA7E,cAAM,qCAAN;AAsBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,kBAAiB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAClF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,8BAA6B,IAAKA,SAAQ,kBAAkB;AAEpE,gBAAM,wCAAN,MAAM,8CAA6C,8BAA8B;AAAA,YAC/E,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,iBAAiB,KAAK,MAAM;AAAA,gBAC5B,iBAAiB,KAAK,YAAY;AAAA,cACxC,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,mBAAK,aAAa,MAAM,cAAcA,QAAO,IAAI;AACjD,mBAAK,cAAc,MAAM,oCAAoC,KAAK,YAAY,KAAK,QAAQ;AAC3F,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,KAAK,IAAI,KAAK;AAC/E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,oBAAM,OAAO,KAAK,qBAAqBA,MAAK;AAC5C,mBAAK,iBAAiB,IAAI,KAAK,KAAK,iBAAiB;AACrD,mBAAK,cAAc,IAAI,WAAW,KAAK,eAAe,MAAM;AAC5D,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AArBiF;AAAjF,cAAM,uCAAN;AAuBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,oBAAmB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACpF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,8BAA6B,IAAKA,SAAQ,kBAAkB;AAEpE,gBAAM,wCAAN,MAAM,8CAA6C,8BAA8B;AAAA,YAC/E,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,iBAAiB,KAAK,MAAM;AAAA,gBAC5B,iBAAiB,KAAK,YAAY;AAAA,cACxC,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,kBAAI,CAAC,GAAG,GAAG,CAAC,IAAIA,OAAM;AACtB,mBAAK,aAAa,IAAI,WAAW,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;AACzD,mBAAK,cAAc,MAAM,oCAAoC,KAAK,YAAY,KAAK,QAAQ;AAC3F,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,KAAK,IAAI,KAAK;AAC/E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,oBAAM,OAAO,KAAK,qBAAqBA,OAAM,KAAK;AAClD,mBAAK,iBAAiB,IAAI,KAAK,KAAK,iBAAiB;AACrD,mBAAK,cAAc,IAAI,WAAW,KAAK,eAAe,MAAM;AAC5D,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AAtBiF;AAAjF,cAAM,uCAAN;AAwBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,oBAAmB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACpF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAE9C,gBAAM,yBAAN,MAAM,+BAA8B,iBAAiB;AAAA,YACnD,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,cAAcA;AAAA,YACvB;AAAA,YACE,wBAAwB;AACtB,qBAAO,qBAAqB,KAAK,IAAI,MAAM,KAAK,OAAO;AAAA;AAAA,YAC3D;AAAA,YACE,UAAUA,QAAO;AACf,kBAAI,KAAK,WAAW,aAAa;AAC/B,oBAAI,OAAO,UAAUA,MAAK,GAAG;AAC3B,yBAAO,eAAe,KAAK,EAAE,MAAMA,MAAK;AAAA;AAAA,gBAChD;AACM,uBAAO,eAAe,KAAK,EAAE,MAAMA,MAAK;AAAA;AAAA,cAC9C;AACI,qBAAO,iBAAiB,KAAK,EAAE;AAAA;AAAA,YACnC;AAAA,YAEE,YAAYA,QAAO;AACjB,kBAAI,KAAK,WAAW,YAAa;AACjC,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,cAAcA,MAAK;AAAA,YAC9D;AAAA,UACA;AAtBqD;AAArD,cAAM,wBAAN;AAwBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAE9C,gBAAM,6BAAN,MAAM,mCAAkC,iBAAiB;AAAA,YACvD,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,oBAAM,EAAE,OAAO,OAAM,IAAKA;AAC1B,mBAAK,UAAU,OAAO,MAAM;AAC5B,mBAAK,aAAa,CAAC,OAAO,QAAQ,CAAC;AACnC,mBAAK,cAAc,CAAC,OAAO,MAAM;AACjC,mBAAK,cAAcA;AAAA,YACvB;AAAA,YAEE,wBAAwB;AACtB,qBAAO,qBAAqB,KAAK,IAAI,MAAM,KAAK,OAAO;AAAA;AAAA,YAC3D;AAAA,YAEE,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,SAAS,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAC3E,SAAS,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cAC5G,CAAK;AAAA,YACL;AAAA,YAEE,YAAY,YAAY;AACtB,kBAAI,WAAW,gBAAgB,KAAK,yBAAyB;AAC3D,qBAAK,sBAAsB,WAAW,WAAW;AACjD;AAAA,cACN;AACI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,IAAI;AAC3C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,GAAG,MAAM,GAAG,eAAe,KAAK,cAAc,UAAU;AACjG,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AAlCyD;AAAzD,cAAM,4BAAN;AAoCA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,0BAAyB,IAAKE,SAAQ,cAAc;AAE5D,gBAAM,6BAAN,MAAM,mCAAkC,0BAA0B;AAAA,UAAA;AAAA;AAAlE,cAAM,4BAAN;AAEA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,gBAAe,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3D,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,YAAW,IAAKA,SAAQ,oBAAoB;AAEpD,gBAAM,oBAAN,MAAM,0BAAyB,YAAY;AAAA,YACzC,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,eAAe;AACpB,mBAAK,SAAS;AACd,mBAAK,0BAA0BA,OAAM;AACrC,mBAAK,mBAAmB,SAAS;AACjC,mBAAK,iBAAiB,SAAS;AAC/B,mBAAK,cAAc;AACnB,mBAAK,cAAc;AACnB,mBAAK,WAAW;AAChB,mBAAK,UAAU;AAAA,YACnB;AAAA,YAEE,IAAI,KAAK;AACP,qBAAO,GAAG,KAAK,MAAM,IAAI,MAAM,aAAa,KAAK,IAAI,CAAC;AAAA,YAC1D;AAAA,YAEE,QAAQ;AAAA,YAAA;AAAA,YAER,qBAAqBA,QAAO;AAC1B,kBAAI,MAAM,QAAQA,OAAM,CAAC,CAAC,GAAG;AAC3B,uBAAO,KAAK,qBAAqBA,OAAM,CAAC,CAAC;AAAA,cAC/C;AACI,sBAAQA,OAAM,aAAW;AAAA,gBACvB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAOA,OAAM;AAAA,cACrB;AACI,sBAAQ,KAAK,wGAAwG;AACrH,qBAAOA,OAAM;AAAA,YACjB;AAAA,YAEE,wBAAwB;AACtB,oBAAM,IAAI,MAAM,8CAA8C,KAAK,YAAY,IAAI,EAAE;AAAA,YACzF;AAAA,YAEE,6BAA6B;AAC3B,qBAAO,KAAK,OAAO,2BAA2B,KAAK,eAAe,QAAW,KAAK,UAAU,MAAS;AAAA,YACzG;AAAA,YAEE,UAAU;AAAA,YAAA;AAAA,UACZ;AAnD2C;AAA3C,cAAM,mBAAN;AAqDA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,sBAAqB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACtF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAE9C,gBAAM,2BAAN,MAAM,iCAAgC,iBAAiB;AAAA,YACrD,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,cAAcA;AAAA,YACvB;AAAA,YACE,wBAAwB;AACtB,qBAAO,qBAAqB,KAAK,IAAI,MAAM,KAAK,OAAO;AAAA;AAAA,YAC3D;AAAA,YACE,UAAUA,QAAO;AACf,kBAAI,KAAK,WAAW,aAAa;AAC/B,uBAAO,aAAa,KAAK,EAAE,MAAO,SAASA,MAAK,CAAC;AAAA;AAAA,cACvD;AACI,qBAAO,eAAe,KAAK,EAAE;AAAA;AAAA,YACjC;AAAA,YAEE,YAAYA,QAAO;AACjB,kBAAI,KAAK,WAAW,YAAa;AACjC,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,cAAcA,MAAK;AAAA,YAC9D;AAAA,UACA;AAnBuD;AAAvD,cAAM,0BAAN;AAqBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAE9C,gBAAM,YAAY;AAElB,gBAAM,gDAAN,MAAM,sDAAqD,iBAAiB;AAAA,YAC1E,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,oBAAM,CAAC,OAAO,MAAM,IAAIA,OAAM;AAC9B,mBAAK,UAAU,OAAO,MAAM;AAC5B,mBAAK,aAAaA,OAAM;AACxB,mBAAK,cAAcA,OAAM;AACzB,mBAAK,cAAcA,OAAM;AACzB,mBAAK,qBAAqB;AAAA,YAC9B;AAAA,YAEE,QAAQ;AACN,mBAAK,aAAY;AAAA,YACrB;AAAA,YAEE,wBAAwB;AACtB,qBAAO,qBAAqB,KAAK,IAAI,MAAM,KAAK,OAAO;AAAA;AAAA,YAC3D;AAAA,YAEE,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,SAAS,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAC3E,SAAS,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cAC5G,CAAK;AAAA,YACL;AAAA,YAEE,YAAY,cAAc;AACxB,kBAAI,aAAa,gBAAgB,KAAK,yBAAyB;AAC7D,qBAAK,sBAAsB,aAAa,WAAW;AACnD;AAAA,cACN;AACI,kBAAI,KAAK,gBAAgB,aAAa,YAAY,KAAK,SAAS;AAC9D,sBAAM,IAAI,MAAM,SAAS,KAAK,IAAI,KAAK,KAAK,IAAI,6BAA6B;AAAA,cACnF;AAEI,oBAAM,EAAE,QAAQ,SAAS,GAAE,IAAK;AAChC,kBAAI,OAAO,UAAU;AACnB,oBAAI,OAAO,WAAW;AACpB,yBAAO,0BAA0B,MAAM,YAAY;AAAA,gBAC3D,OAAa;AACL,sBAAI,OAAO,WAAW,OAAO,QAAQ,YAAY,aAAa,SAAS;AACrE,0BAAM,IAAI,MAAM,SAAS;AAAA,kBACnC,WAAmB,OAAO,gBAAgB;AAChC,0BAAM,EAAE,eAAc,IAAK;AAC3B,6BAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,0BAAI,eAAe,CAAC,EAAE,YAAY,aAAa,SAAS;AACtD,8BAAM,IAAI,MAAM,SAAS;AAAA,sBACvC;AAAA,oBACA;AAAA,kBACA;AAAA,gBACA;AAAA,cACA;AAEI,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,cAAc,aAAa,OAAO;AACrE,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AA1D4E;AAA5E,cAAM,+CAAN;AA4DA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA,YACA;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAC9C,gBAAM,EAAE,UAAS,IAAKA,SAAQ,mCAAmC;AAEjE,gBAAM,iCAAN,MAAM,uCAAsC,iBAAiB;AAAA,YAC3D,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,oBAAM,CAAC,OAAO,MAAM,IAAIA,OAAM;AAC9B,mBAAK,UAAU,OAAO,MAAM;AAC5B,oBAAM,EAAE,MAAM,aAAa,WAAU,IAAKA;AAC1C,mBAAK,WAAW,KAAK,YAAYA,MAAK;AACtC,mBAAK,aAAa;AAClB,mBAAK,cAAc;AACnB,mBAAK,cAAcA,OAAM;AACzB,mBAAK,qBAAqB;AAAA,YAC9B;AAAA,YAEE,QAAQ;AACN,mBAAK,aAAY;AAAA,YACrB;AAAA,YAEE,wBAAwB;AACtB,qBAAO,qBAAqB,KAAK,IAAI,MAAM,KAAK,OAAO;AAAA;AAAA,YAC3D;AAAA,YAEE,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,SAAS,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAC3E,SAAS,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cAC5G,CAAK;AAAA,YACL;AAAA,YAEE,YAAY,cAAc;AACxB,kBAAI,aAAa,gBAAgB,KAAK,yBAAyB;AAC7D,qBAAK,sBAAsB,aAAa,WAAW;AACnD;AAAA,cACN;AACI,kBAAI,KAAK,gBAAgB,aAAa,YAAY,KAAK,SAAS;AAC9D,sBAAM,IAAI,MAAM,SAAS,KAAK,IAAI,KAAK,KAAK,IAAI,6BAA6B;AAAA,cACnF;AAEI,oBAAM,EAAE,QAAQ,SAAS,GAAE,IAAK;AAChC,kBAAI,OAAO,UAAU;AACnB,oBAAI,OAAO,WAAW;AACpB,yBAAO,0BAA0B,MAAM,YAAY;AAAA,gBAC3D,OAAa;AACL,sBAAI,OAAO,WAAW,OAAO,QAAQ,YAAY,aAAa,SAAS;AACrE,0BAAM,IAAI,MAAM,SAAS;AAAA,kBACnC,WAAmB,OAAO,gBAAgB;AAChC,0BAAM,EAAE,eAAc,IAAK;AAC3B,6BAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,0BAAI,eAAe,CAAC,EAAE,YAAY,aAAa,SAAS;AACtD,8BAAM,IAAI,MAAM,SAAS;AAAA,sBACvC;AAAA,oBACA;AAAA,kBACA;AAAA,gBACA;AAAA,cACA;AAEI,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,cAAc,aAAa,OAAO;AACrE,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AA5D6D;AAA7D,cAAM,gCAAN;AA8DA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,IAAG,qCAAoC,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAClH,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAE9C,gBAAM,+BAAN,MAAM,qCAAoC,iBAAiB;AAAA,YACzD,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,WAAW;AAChB,mBAAK,aAAa,MAAM,cAAcA,QAAO,IAAI;AACjD,mBAAK,cAAc,MAAM,mCAAmC,KAAK,YAAY,KAAK,QAAQ;AAC1F,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,KAAK;AAC1E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,mBAAK,cAAc,IAAI,aAAa,KAAK,iBAAiB;AAAA,YAC9D;AAAA,YAEE,wBAAwB;AACtB,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,IAAI,uBAAuB,KAAK,iBAAiB;AAAA,gBAC3E,aAAa,KAAK,OAAO,iBAAiB,KAAK,IAAI;AAAA,cACzD,CAAK;AAAA,YACL;AAAA,YAEE,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,SAAS,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAC3E,SAAS,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cAC5G,CAAK;AAAA,YACL;AAAA,YAEE,YAAYA,QAAO;AACjB,kBAAIA,OAAM,gBAAgB,KAAK,yBAAyB;AACtD,qBAAK,sBAAsBA,OAAM,WAAW;AAC5C;AAAA,cACN;AACI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,oBAAM,UAAUA,QAAO,KAAK,WAAW;AACvC,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,KAAK;AAC5C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,KAAK,WAAW;AACzH,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AAvC2D;AAA3D,cAAM,8BAAN;AAyCA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAE9C,gBAAM,kCAAN,MAAM,wCAAuC,iBAAiB;AAAA,YAC5D,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,WAAW;AAChB,mBAAK,SAASA,MAAK;AAAA,YACvB;AAAA,YAEE,SAASA,QAAO;AACd,oBAAM,kBAAkB,MAAM,cAAcA,QAAO,IAAI;AACvD,mBAAK,cAAc,MAAM,mCAAmC,iBAAiB,KAAK,QAAQ;AAC1F,mBAAK,aAAa,IAAI,WAAW,CAAC,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC;AAC3D,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,KAAK;AAC1E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,mBAAK,cAAc,IAAI,aAAa,KAAK,iBAAiB;AAAA,YAC9D;AAAA,YAEE,wBAAwB;AACtB,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,IAAI,uBAAuB,KAAK,iBAAiB;AAAA,gBAC3E,aAAa,KAAK,OAAO,iBAAiB,KAAK,IAAI;AAAA,cACzD,CAAK;AAAA,YACL;AAAA,YAEE,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,SAAS,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAC3E,SAAS,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cAC5G,CAAK;AAAA,YACL;AAAA,YAEE,YAAYA,QAAO;AACjB,kBAAIA,OAAM,gBAAgB,KAAK,yBAAyB;AACtD,qBAAK,sBAAsBA,OAAM,WAAW;AAC5C;AAAA,cACN;AACI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,oBAAM,iBAAiBA,QAAO,KAAK,WAAW;AAC9C,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,KAAK;AAC5C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,KAAK,WAAW;AACzH,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AA5C8D;AAA9D,cAAM,iCAAN;AA8CA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAE9C,gBAAM,kCAAN,MAAM,wCAAuC,iBAAiB;AAAA,YAC5D,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,WAAW;AAChB,mBAAK,SAASA,MAAK;AAAA,YACvB;AAAA,YAEE,SAASA,QAAO;AACd,oBAAM,kBAAkB,MAAM,cAAcA,QAAO,IAAI;AACvD,mBAAK,cAAc,MAAM,mCAAmC,iBAAiB,KAAK,QAAQ;AAC1F,mBAAK,aAAa,IAAI,WAAW,CAAC,gBAAgB,CAAC,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;AAC5E,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,KAAK;AAC1E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,mBAAK,cAAc,IAAI,aAAa,KAAK,iBAAiB;AAAA,YAC9D;AAAA,YAEE,wBAAwB;AACtB,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,IAAI,uBAAuB,KAAK,iBAAiB;AAAA,gBAC3E,aAAa,KAAK,OAAO,iBAAiB,KAAK,IAAI;AAAA,cACzD,CAAK;AAAA,YACL;AAAA,YAEE,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,SAAS,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAC3E,SAAS,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cAC5G,CAAK;AAAA,YACL;AAAA,YAEE,YAAYA,QAAO;AACjB,kBAAIA,OAAM,gBAAgB,KAAK,yBAAyB;AACtD,qBAAK,sBAAsBA,OAAM,WAAW;AAC5C;AAAA,cACN;AACI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,oBAAM,iBAAiBA,QAAO,KAAK,WAAW;AAC9C,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,KAAK;AAC5C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,KAAK,WAAW;AACzH,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AA5C8D;AAA9D,cAAM,iCAAN;AA8CA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAE9C,gBAAM,kCAAN,MAAM,wCAAuC,iBAAiB;AAAA,YAC5D,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,WAAW;AAChB,mBAAK,SAASA,MAAK;AAAA,YACvB;AAAA,YAEE,SAASA,QAAO;AACd,oBAAM,kBAAkB,MAAM,cAAcA,QAAO,IAAI;AACvD,mBAAK,cAAc,MAAM,mCAAmC,iBAAiB,KAAK,QAAQ;AAC1F,mBAAK,aAAa,IAAI,WAAW,CAAC,gBAAgB,CAAC,GAAG,gBAAgB,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC;AAC7F,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,KAAK;AAC1E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,mBAAK,cAAc,IAAI,aAAa,KAAK,iBAAiB;AAAA,YAC9D;AAAA,YAEE,wBAAwB;AACtB,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,IAAI,uBAAuB,KAAK,iBAAiB;AAAA,gBAC3E,aAAa,KAAK,OAAO,iBAAiB,KAAK,IAAI;AAAA,cACzD,CAAK;AAAA,YACL;AAAA,YAEE,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,SAAS,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAC3E,SAAS,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cAC5G,CAAK;AAAA,YACL;AAAA,YAEE,YAAYA,QAAO;AACjB,kBAAIA,OAAM,gBAAgB,KAAK,yBAAyB;AACtD,qBAAK,sBAAsBA,OAAM,WAAW;AAC5C;AAAA,cACN;AACI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,oBAAM,iBAAiBA,QAAO,KAAK,WAAW;AAC9C,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,KAAK;AAC5C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,KAAK,WAAW;AACzH,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AA5C8D;AAA9D,cAAM,iCAAN;AA8CA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAE9C,gBAAM,+BAAN,MAAM,qCAAoC,iBAAiB;AAAA,YACzD,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,WAAW;AAChB,kBAAI,CAAC,GAAG,GAAG,CAAC,IAAIA,OAAM;AACtB,mBAAK,aAAa,IAAI,WAAW,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;AACzD,mBAAK,cAAc,MAAM,mCAAmC,KAAK,YAAY,KAAK,QAAQ;AAC1F,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,KAAK;AAC1E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,mBAAK,cAAc,IAAI,aAAa,KAAK,iBAAiB;AAAA,YAC9D;AAAA,YAEE,wBAAwB;AACtB,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,IAAI,uBAAuB,KAAK,iBAAiB;AAAA,gBAC3E,aAAa,KAAK,OAAO,uBAAuB,KAAK,IAAI;AAAA,cAC/D,CAAK;AAAA,YACL;AAAA,YAEE,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,SAAS,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAC3E,SAAS,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cAC5G,CAAK;AAAA,YACL;AAAA,YAEE,YAAY,OAAO;AACjB,kBAAI,MAAM,gBAAgB,KAAK,yBAAyB;AACtD,qBAAK,sBAAsB,MAAM,WAAW;AAC5C;AAAA,cACN;AACI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,oBAAM,UAAU,MAAM,OAAO,KAAK,WAAW;AAC7C,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,KAAK;AAC5C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,KAAK,WAAW;AACzH,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AAxC2D;AAA3D,cAAM,8BAAN;AA0CA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAE9C,gBAAM,iCAAN,MAAM,uCAAsC,iBAAiB;AAAA,YAC3D,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,WAAW,KAAK,YAAYA,MAAK;AACtC,mBAAK,aAAa,MAAM,cAAcA,QAAO,IAAI;AACjD,mBAAK,cAAc,MAAM,oCAAoC,KAAK,YAAY,KAAK,QAAQ;AAC3F,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,KAAK,IAAI,KAAK;AAC/E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,mBAAK,mBAAmB,KAAK,qBAAqBA,MAAK;AACvD,mBAAK,iBAAiB,IAAI,KAAK,iBAAiB,KAAK,iBAAiB;AACtE,mBAAK,cAAc,IAAI,WAAW,KAAK,eAAe,MAAM;AAAA,YAChE;AAAA,YAEE,wBAAwB;AACtB,qBAAO,MAAM,cAAc;AAAA,gBACzB,wBAAwB,KAAK,IAAI,UAAU,KAAK,iBAAiB,IAAI,IAAI,KAAK,iBAAiB;AAAA,gBAC/F,qBAAqB,KAAK,IAAI,oCAAoC,KAAK,IAAI;AAAA,gBAC3E,aAAa,KAAK,OAAO,oBAAoB,KAAK,IAAI;AAAA,cAC5D,CAAK;AAAA,YACL;AAAA,YAEE,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,SAAS,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAC3E,SAAS,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cAC5G,CAAK;AAAA,YACL;AAAA,YAEE,YAAYA,QAAO;AACjB,kBAAIA,OAAM,gBAAgB,KAAK,yBAAyB;AACtD,qBAAK,sBAAsBA,OAAM,WAAW;AAC5C;AAAA,cACN;AACI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,oBAAM,UAAUA,QAAO,KAAK,cAAc;AAC1C,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,KAAK;AAC5C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,eAAe,KAAK,WAAW;AACjI,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AA1C6D;AAA7D,cAAM,gCAAN;AA4CA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,SAAS;AAE9C,gBAAM,iCAAN,MAAM,uCAAsC,iBAAiB;AAAA,YAC3D,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,WAAW,KAAK,YAAYA,MAAK;AACtC,oBAAM,CAAC,GAAG,GAAG,CAAC,IAAIA,OAAM;AACxB,mBAAK,aAAa,IAAI,WAAW,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;AACzD,mBAAK,cAAc,MAAM,oCAAoC,KAAK,YAAY,KAAK,QAAQ;AAC3F,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,KAAK,IAAI,KAAK;AAC/E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,mBAAK,mBAAmB,KAAK,qBAAqBA,OAAM,KAAK;AAC7D,mBAAK,iBAAiB,IAAI,KAAK,iBAAiB,KAAK,iBAAiB;AACtE,mBAAK,cAAc,IAAI,WAAW,KAAK,eAAe,MAAM;AAAA,YAChE;AAAA,YAEE,wBAAwB;AACtB,qBAAO,MAAM,cAAc;AAAA,gBACzB,wBAAwB,KAAK,IAAI,UAAU,KAAK,iBAAiB,IAAI,IAAI,KAAK,iBAAiB;AAAA,gBAC/F,qBAAqB,KAAK,IAAI,oCAAoC,KAAK,IAAI;AAAA,gBAC3E,aAAa,KAAK,OAAO,0BAA0B,KAAK,IAAI;AAAA,cAClE,CAAK;AAAA,YACL;AAAA,YAEE,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,SAAS,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAC3E,SAAS,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cAC5G,CAAK;AAAA,YACL;AAAA,YAEE,YAAY,OAAO;AACjB,kBAAI,MAAM,gBAAgB,KAAK,yBAAyB;AACtD,qBAAK,sBAAsB,MAAM,WAAW;AAC5C;AAAA,cACN;AACI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,oBAAM,UAAU,MAAM,OAAO,KAAK,cAAc;AAChD,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,KAAK;AAC5C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,eAAe,KAAK,WAAW;AACjI,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AA3C6D;AAA7D,cAAM,gCAAN;AA6CA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,WAAU,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3E,gBAAM,EAAE,SAAQ,IAAKE,SAAQ,cAAc;AAC3C,gBAAM,EAAE,gBAAe,IAAKA,SAAQ,qBAAqB;AACzD,gBAAM,EAAE,kBAAiB,IAAKA,SAAQ,iBAAiB;AACvD,gBAAM,EAAE,MAAK,IAAKA,SAAQ,aAAa;AACvC,gBAAM,OAAOA,SAAQ,iDAAiD;AACtE,gBAAM,EAAE,eAAc,IAAKA,SAAQ,mBAAmB;AACtD,gBAAM,EAAE,aAAY,IAAKA,SAAQ,iBAAiB;AAClD,gBAAM,EAAE,eAAc,IAAKA,SAAQ,qBAAqB;AACxD,gBAAM,EAAE,sBAAqB,IAAKA,SAAQ,qBAAqB;AAE/D,cAAI,cAAc;AAClB,cAAI,aAAa;AACjB,cAAI,cAAc;AAClB,cAAI,iBAAiB;AACrB,cAAI,WAAW;AAEf,gBAAM,UAAU,CAAC,IAAI;AACrB,gBAAM,WAAW,CAAA;AACjB,gBAAM,cAAc,CAAA;AAGpB,gBAAM,eAAN,MAAM,qBAAoB,SAAS;AAAA,YACjC,WAAW,cAAc;AACvB,kBAAI,gBAAgB,MAAM;AACxB,uBAAO;AAAA,cACb;AACI,mBAAK,mBAAkB;AACvB,4BAAc,KAAK,eAAe,WAAW;AAC7C,qBAAO;AAAA,YACX;AAAA,YAEE,OAAO,qBAAqB;AAC1B,kBAAI,OAAO,aAAa,aAAa;AACnC,6BAAa,SAAS,cAAc,QAAQ;AAAA,cAClD,WAAe,OAAO,oBAAoB,aAAa;AACjD,6BAAa,IAAI,gBAAgB,GAAG,CAAC;AAAA,cAC3C;AACI,kBAAI,CAAC,WAAY;AACjB,4BAAc,WAAW,WAAW,OAAO,KAAK,WAAW,WAAW,oBAAoB;AAC1F,kBAAI,CAAC,eAAe,CAAC,YAAY,aAAc;AAC/C,+BAAiB;AAAA,gBACf,mBAAmB,YAAY,aAAa,mBAAmB;AAAA,gBAC/D,0BAA0B,YAAY,aAAa,0BAA0B;AAAA,gBAC7E,wBAAwB,YAAY,aAAa,wBAAwB;AAAA,gBACzE,oBAAoB,YAAY,aAAa,oBAAoB;AAAA;AAEnE,yBAAW,KAAK,YAAW;AAAA,YAC/B;AAAA,YAEE,OAAO,eAAe,SAAS;AAC7B,kBAAI,OAAO,0BAA0B,aAAa;AAChD,uBAAO,mBAAmB;AAAA,cAChC;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,OAAO,oBAAoB;AACzB,qBAAO,QAAQ,eAAe,iBAAiB;AAAA,YACnD;AAAA,YAEE,OAAO,mBAAmB;AACxB,qBAAO,QAAQ,eAAe,kBAAkB;AAAA,YACpD;AAAA,YAEE,OAAO,kBAAkB;AACvB,qBAAO,eAAe,qBACpB,YAAY,aAAa,eAAe,mBAAmB,sBAAsB,IACjF;AAAA,YACN;AAAA,YAEE,OAAO,oBAAoB;AACzB,qBAAO,YAAY,aAAa,YAAY,gBAAgB;AAAA,YAChE;AAAA,YAEE,OAAO,sBAAsB,MAAM,SAAS,WAAWe,QAAO;AAC5D,qBAAO,sBAAsB,MAAM,SAAS,WAAWA,MAAK;AAAA,YAChE;AAAA,YAEE,WAAW,aAAa;AACtB,qBAAO;AAAA,YACX;AAAA,YAEE,WAAW,cAAc;AACvB,qBAAO;AAAA,YACX;AAAA,YAEE,WAAW,WAAW;AACpB,qBAAO;AAAA,YACX;AAAA,YAEE,WAAW,iBAAiB;AAC1B,qBAAO;AAAA,YACX;AAAA,YAEE,WAAW,eAAe;AACxB,qBAAO;AAAA,YACX;AAAA,YAEE,YAAY,QAAQ,UAAU;AAC5B,oBAAM,QAAQ,QAAQ;AACtB,mBAAK,UAAU;AACf,mBAAK,WAAW,SAAS;AACzB,mBAAK,aAAa,MAAM,iBAAgB;AACxC,mBAAK,aAAa,CAAA;AAClB,mBAAK,uBAAuB;AAC5B,mBAAK,uBAAuB;AAC5B,mBAAK,aAAa;AAClB,mBAAK,aAAa;AAClB,mBAAK,iBAAiB;AAEtB,mBAAK,aAAa;AAClB,mBAAK,wBAAwB;AAE7B,mBAAK,UAAU;AACf,mBAAK,iBAAiB;AACtB,mBAAK,cAAc,OAAO,YAAY,QAAQ;AAE9C,mBAAK,YAAY;AACjB,mBAAK,cAAc;AACnB,mBAAK,SAAS;AAEd,mBAAK,eAAe,CAAA;AACpB,mBAAK,8BAA8B,CAAA;AACnC,mBAAK,iBAAiB,CAAA;AACtB,mBAAK,iBAAiB,CAAA;AACtB,mBAAK,iBAAiB,CAAA;AACtB,mBAAK,kBAAkB,CAAA;AACvB,mBAAK,kBAAkB,CAAA;AACvB,mBAAK,kBAAkB,CAAA;AACvB,mBAAK,kBAAkB,CAAA;AACvB,mBAAK,kBAAkB,CAAA;AACvB,mBAAK,kBAAkB,CAAA;AAAA,YAC3B;AAAA,YAEE,aAAa;AACX,kBAAI,OAAO,aAAa,aAAa;AACnC,sBAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,uBAAO,QAAQ;AACf,uBAAO,SAAS;AAChB,uBAAO;AAAA,cACb,WAAe,OAAO,oBAAoB,aAAa;AACjD,uBAAO,IAAI,gBAAgB,GAAG,CAAC;AAAA,cACrC;AAAA,YACA;AAAA,YAEE,cAAc;AACZ,oBAAM,WAAW;AAAA,gBACf,OAAO;AAAA,gBACP,OAAO;AAAA,gBACP,WAAW;AAAA;AAEb,qBAAO,KAAK,OAAO,WAAW,SAAS,QAAQ,KAAK,KAAK,OAAO,WAAW,sBAAsB,QAAQ;AAAA,YAC7G;AAAA,YAEE,YAAY,UAAU;AACpB,oBAAM,eAAe,CAAA;AACrB,oBAAM,EAAE,OAAM,IAAK;AACnB,kBAAI,OAAO,WAAW,UAAU;AAC9B,yBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,wBAAM,SAAS,QAAQ,CAAC;AACxB,sBAAI,OAAO,MAAM,OAAO,aAAa,GAAG;AACtC,iCAAa,KAAK,MAAM;AAAA,kBAClC;AAAA,gBACA;AAAA,cACA,WAAe,OAAO,WAAW,UAAU;AACrC,oBAAI,SAAS,aAAa;AACxB,2BAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,0BAAM,SAAS,QAAQ,CAAC;AACxB,0BAAM,YAAY,SAAS,YAAY,KAAK,gBAAc,eAAe,OAAO,IAAI;AACpF,wBAAI,WAAW;AACb,mCAAa,KAAK,MAAM;AAAA,oBACpC;AAAA,kBACA;AAAA,gBACA;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,iBAAiB;AACf,mBAAK,aAAa;AAAA,gBAChB,mBAAmB,KAAK,QAAQ,aAAa,mBAAmB;AAAA,gBAChE,0BAA0B,KAAK,QAAQ,aAAa,0BAA0B;AAAA,gBAC9E,wBAAwB,KAAK,QAAQ,aAAa,wBAAwB;AAAA,gBAC1E,oBAAoB,KAAK,QAAQ,aAAa,oBAAoB;AAAA,gBAClE,0BAA0B,KAAK,QAAQ,aAAa,0BAA0B;AAAA;YAEpF;AAAA,YAEE,iBAAiB,MAAM;AACrB,kBAAI,CAAC,KAAK,UAAU;AAClB,qBAAK,UAAU,MAAM,qBAAqB;AAAA,kBACxC,qBAAqB,KAAK;AAAA,kBAC1B,WAAW,KAAK;AAAA,gBACxB,GAAS,KAAK,MAAM;AACd;AAAA,cACN;AAEI,oBAAM,EAAE,UAAAe,cAAa,KAAK;AAE1B,kBAAI,KAAK,wBAAwB,QAAQ,CAACA,UAAS,gBAAgB;AACjE,sBAAM,IAAI,MAAM,kCAAkC;AAAA,cACxD,WAAe,KAAK,cAAc,YAAY,CAACA,UAAS,aAAa;AAC/D,sBAAM,IAAI,MAAM,gCAAgC;AAAA,cACtD,WAAe,CAAC,KAAK,aAAa,KAAK,cAAc,QAAQA,UAAS,gBAAgB;AAChF,qBAAK,YAAYA,UAAS,cAAc,WAAW;AAAA,cACzD;AAEI,kBAAI,KAAK,cAAc,KAAK,WAAW,SAAS,KAAK,CAAC,KAAK,WAAW,oBAAoB;AACxF,sBAAM,IAAI,MAAM,8CAA8C;AAAA,cACpE;AAEI,kBAAI,KAAK,+BAA+B,MAAM;AAC5C,qBAAK,6BAA6B,CAACA,UAAS;AAAA,cAClD,WAAe,KAAK,8BAA8BA,UAAS,2BAA2B;AAChF,qBAAK,6BAA6B;AAAA,cACxC;AAEI,mBAAK,YAAW;AAEhB,kBAAI,CAAC,KAAK,UAAU,KAAK,OAAO,WAAW,GAAG;AAC5C,oBAAI,KAAK,WAAW,GAAG;AACrB,wBAAM,IAAI,MAAM,4DAA4D;AAAA,gBACpF;AAEM,sBAAM,UAAU,MAAM,gBAAgB,KAAK,CAAC,GAAG,KAAK,cAAc;AAClE,wBAAQ,SAAO;AAAA,kBACb,KAAK;AACH,yBAAK,SAAS,MAAM,cAAc,OAAO;AACzC;AAAA,kBACF,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACH,yBAAK,SAAS,KAAK,CAAC,EAAE;AACtB;AAAA,kBACF;AACE,0BAAM,IAAI,MAAM,+CAA+C,OAAO;AAAA,gBAChF;AAAA,cACA;AAEI,kBAAI,KAAK,WAAW;AAClB,oBAAI,KAAK,OAAO,WAAW,GAAG;AAC5B,wBAAM,IAAI,MAAM,iDAAiD;AAAA,gBACzE;AAEM,oBAAI,KAAK,cAAc,aAAa;AAClC,uBAAK,YAAY;AACjB,0BAAQ,KAAK,iEAAiE;AAAA,gBACtF;AAEM,qBAAK,UAAU,MAAM,MAAM,KAAK,MAAM;AACtC;AAAA,cACN,WAAe,KAAK,cAAc,QAAQA,UAAS,gBAAgB;AAC7D,qBAAK,YAAY;AAAA,cACvB;AAEI,mBAAK,UAAU,MAAM,qBAAqB;AAAA,gBACxC,qBAAqB,KAAK;AAAA,gBAC1B,WAAW,KAAK;AAAA,cACtB,GAAO,KAAK,MAAM;AAEd,mBAAK,iBAAgB;AAAA,YACzB;AAAA,YAEE,mBAAmB;AACjB,oBAAM,EAAE,SAAS,OAAM,IAAK;AAC5B,kBAAI,KAAK,eAAe,MAAM;AAC5B,oBAAI,cAAc,SAAS,QAAQ,MAAM;AACzC,oBAAI,gBAAgB,IAAI;AACtB,gCAAc,SAAS;AACvB,2BAAS,KAAK,MAAM;AACpB,8BAAY,WAAW,IAAI,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;AAAA,gBAC1D;AACM,qBAAK,aAAa,YAAY,WAAW;AAAA,cAC/C;AACI,kBAAI,KAAK,WAAW,CAAC,IAAI,QAAQ,CAAC,GAAG;AACnC,qBAAK,WAAW,CAAC,IAAI,QAAQ,CAAC;AAAA,cACpC;AACI,kBAAI,KAAK,WAAW,CAAC,IAAI,QAAQ,CAAC,GAAG;AACnC,qBAAK,WAAW,CAAC,IAAI,QAAQ,CAAC;AAAA,cACpC;AAAA,YACA;AAAA,YAEE,eAAe,MAAM;AACnB,mBAAK,kBAAkB,CAAA;AACvB,mBAAK,uBAAuB;AAC5B,oBAAM,qBAAqB,KAAK,kBAAkB;AAClD,kBAAI,oBAAoB;AACtB,qBAAK,gBAAgB,CAAA;AAAA,cAC3B;AACI,mBAAK,gBAAgB,CAAA;AACrB,mBAAK,oBAAoB,CAAA;AAEzB,kBAAI,KAAK,SAAS,KAAK,cAAc,QAAQ;AAC3C,sBAAM,IAAI,MAAM,iCAAiC;AAAA,cACvD,WAAe,KAAK,SAAS,KAAK,cAAc,QAAQ;AAClD,sBAAM,IAAI,MAAM,+BAA+B;AAAA,cACrD;AAEI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,kBAAI,iBAAiB;AAErB,oBAAM,mBAAmB,6BAAM;AAC7B,uBAAO,KAAK,cAAa;AAAA,cAC/B,GAF6B;AAGzB,oBAAM,iBAAiB,6BAAM;AAC3B,uBAAO,KAAK,uBAAuB;AAAA,cACzC,GAF2B;AAGvB,oBAAM,wBAAwB,wBAAC,gBAAgB;AAC7C,qBAAK,cAAc;AAAA,kBACjB,MAAM;AAAA,kBACN,QAAQ;AAAA,gBAChB,CAAO;AAAA,cACP,GALkC;AAM9B,oBAAM,yBAAyB,6BAAM;AACnC,uBAAO,GAAG,WAAW,KAAK,uBAAuB,KAAK;AAAA,cAC5D,GAFmC;AAI/B,uBAASb,SAAQ,GAAGA,SAAQ,KAAK,QAAQA,UAAS;AAChD,sBAAMF,SAAQ,KAAKE,MAAK;AACxB,sBAAMb,QAAO,KAAK,cAAca,MAAK;AACrC,oBAAI;AACJ,oBAAI,oBAAoB;AACtB,yBAAO,MAAM,gBAAgBF,QAAO,KAAK,cAAc;AACvD,uBAAK,cAAc,KAAK,IAAI;AAAA,gBACpC,OAAa;AACL,yBAAO,KAAK,cAAcE,MAAK;AAAA,gBACvC;AACM,sBAAM,cAAc,KAAK,YAAY,sBAAsB,MAAM,KAAK,mBAAmB,YAAY,UAAU,KAAK,WAAW,KAAKA,MAAK,CAAC;AAC1I,oBAAI,gBAAgB,MAAM;AACxB,yBAAO,KAAK,gBAAgB,IAAI;AAAA,gBACxC;AACM,sBAAM,iBAAiB,IAAI,YAAYF,QAAO;AAAA,kBAC5C,MAAAX;AAAA,kBACA;AAAA,kBACA,QAAQ,KAAK;AAAA,kBACb,QAAQ;AAAA,kBACR,SAAS;AAAA,kBACT,cAAc,KAAK;AAAA,kBACnB,QAAQ;AAAA,kBACR,gBAAgB,KAAK;AAAA,kBACrB;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,gBACR,CAAO;AACD,qBAAK,gBAAgB,KAAK,cAAc;AACxC,+BAAe,MAAK;AACpB,qBAAK,cAAc,KAAK,eAAe,WAAW;AAClD,qBAAK,kBAAkBa,MAAK,IAAI,eAAe;AAAA,cACrD;AAAA,YACA;AAAA,YAEE,gBAAgB;AACd,oBAAM,UAAU,KAAK,QAAQ,cAAa;AAC1C,mBAAK,aAAa,KAAK,OAAO;AAC9B,qBAAO;AAAA,YACX;AAAA,YAEE,eAAe,MAAM;AACnB,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,mBAAK,kBAAkB,CAAA;AACvB,mBAAK,6BAA6B,CAAA;AAClC,kBAAI,qBAAqB,KAAK,kBAAkB;AAChD,kBAAI,oBAAoB;AACtB,qBAAK,gBAAgB,CAAA;AAAA,cAC3B;AACI,mBAAK,oBAAoB,CAAA;AACzB,kBAAI,iBAAiB;AACrB,yBAAWb,SAAQ,KAAK,WAAW;AACjC,sBAAMW,SAAQ,KAAK,UAAUX,KAAI;AACjC,oBAAI;AACJ,oBAAI,oBAAoB;AACtB,yBAAO,MAAM,gBAAgBW,QAAO,KAAK,cAAc;AACvD,uBAAK,cAAcX,KAAI,IAAI;AAAA,gBACnC,OAAa;AACL,yBAAO,KAAK,cAAcA,KAAI;AAAA,gBACtC;AACM,sBAAM,cAAc,KAAK,YAAY,sBAAsB,MAAM,UAAU,KAAK,WAAWW,MAAK;AAChG,oBAAI,gBAAgB,MAAM;AACxB,yBAAO,KAAK,gBAAgB,IAAI;AAAA,gBACxC;AACM,sBAAM,cAAc,IAAI,YAAYA,QAAO;AAAA,kBACzC,MAAAX;AAAA,kBACA;AAAA,kBACA,QAAQ,KAAK;AAAA,kBACb,QAAQ;AAAA,kBACR,SAAS,KAAK;AAAA,kBACd,cAAc,KAAK;AAAA,kBACnB,QAAQ;AAAA,kBACR,gBAAgB,KAAK;AAAA,kBACrB,kBAAkB,6BAAM;AACtB,2BAAO,KAAK,cAAa;AAAA,kBACnC,GAF0B;AAAA,kBAGlB,gBAAgB,6BAAM;AACpB,2BAAO;AAAA,kBACjB,GAFwB;AAAA,kBAGhB,wBAAwB,6BAAM;AAC5B,2BAAO,GAAG,WAAW,KAAK;AAAA,kBACpC,GAFgC;AAAA,gBAGhC,CAAO;AACD,qBAAK,kBAAkBA,KAAI,IAAI,YAAY;AAC3C,qBAAK,gBAAgB,KAAK,WAAW;AACrC,4BAAY,MAAK;AACjB,oBAAI,YAAY,oBAAoB;AAClC,uBAAK,2BAA2B,KAAK,WAAW;AAAA,gBACxD;AAAA,cACA;AAAA,YACA;AAAA,YAEE,QAAQ;AACN,kBAAI,KAAK,MAAO;AAChB,mBAAK,eAAc;AACnB,mBAAK,iBAAiB,SAAS;AAC/B,mBAAK,eAAe,SAAS;AAC7B,kBAAI,KAAK,kBAAmB;AAC5B,mBAAK,eAAe,SAAS;AAC7B,kBAAI,KAAK,kBAAmB;AAC5B,mBAAK,iBAAgB;AACrB,mBAAK,gBAAe;AACpB,oBAAM,gBAAgB,KAAK,mBAAmB,SAAS;AACvD,kBAAI,eAAe;AACjB,uBAAO;AAAA,cACb;AACI,oBAAM,EAAE,SAAS,SAAS,IAAI,OAAM,IAAK;AACzC,iBAAG,OAAO,GAAG,YAAY;AACzB,kBAAI,KAAK,YAAY,KAAK,cAAc,UAAU;AAChD,mBAAG,SAAS,GAAG,GAAG,KAAK,WAAW,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC;AACxD,uBAAO,QAAQ,KAAK,WAAW,CAAC;AAChC,uBAAO,SAAS,KAAK,WAAW,CAAC;AAAA,cACvC,OAAW;AACL,mBAAG,SAAS,GAAG,GAAG,KAAK,WAAW,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC;AACxD,uBAAO,QAAQ,KAAK,WAAW,CAAC;AAChC,uBAAO,SAAS,KAAK,WAAW,CAAC;AAAA,cACvC;AACI,oBAAM,YAAY,KAAK,YAAY,MAAM,KAAK,KAAK,MAAM;AACzD,qBAAO,UAAU,SAAS,GAAG;AAC3B,0BAAU,KAAK,CAAC;AAAA,cACtB;AAEI,oBAAM,uBAAuB,KAAK,gBAAgB,SAAS;AAC3D,oBAAM,aAAa,GAAG,aAAa,GAAG,aAAa;AACnD,iBAAG,aAAa,YAAY,oBAAoB;AAChD,iBAAG,cAAc,UAAU;AAC3B,mBAAK,aAAa;AAElB,oBAAM,yBAAyB,KAAK,kBAAkB,SAAS;AAC/D,oBAAM,aAAa,GAAG,aAAa,GAAG,eAAe;AACrD,iBAAG,aAAa,YAAY,sBAAsB;AAClD,iBAAG,cAAc,UAAU;AAC3B,mBAAK,aAAa;AAElB,kBAAI,KAAK,OAAO;AACd,wBAAQ,IAAI,qBAAqB;AACjC,wBAAQ,IAAI,sBAAsB;AAAA,cACxC;AAEI,kBAAI,CAAC,GAAG,mBAAmB,YAAY,GAAG,cAAc,GAAG;AACzD,sBAAM,IAAI,MAAM,oCAAoC,GAAG,iBAAiB,UAAU,CAAC;AAAA,cACzF;AACI,kBAAI,CAAC,GAAG,mBAAmB,YAAY,GAAG,cAAc,GAAG;AACzD,sBAAM,IAAI,MAAM,sCAAsC,GAAG,iBAAiB,UAAU,CAAC;AAAA,cAC3F;AAEI,oBAAM,UAAU,KAAK,UAAU,GAAG,cAAa;AAC/C,iBAAG,aAAa,SAAS,UAAU;AACnC,iBAAG,aAAa,SAAS,UAAU;AACnC,iBAAG,YAAY,OAAO;AACtB,mBAAK,cAAc,GAAG,kBAAiB;AACvC,mBAAK,YAAY,QAAQ,QAAQ,CAAC;AAClC,mBAAK,YAAY,SAAS,QAAQ,CAAC;AACnC,mBAAK,uBAAuB,CAAA;AAE5B,oBAAM,WAAW,IAAI,aAAa;AAAA,gBAAC;AAAA,gBAAI;AAAA,gBACrC;AAAA,gBAAG;AAAA,gBAAI;AAAA,gBAAI;AAAA,gBACX;AAAA,gBAAG;AAAA,cACT,CAAK;AACD,oBAAM,YAAY,IAAI,aAAa;AAAA,gBACjC;AAAA,gBAAG;AAAA,gBACH;AAAA,gBAAG;AAAA,gBACH;AAAA,gBAAG;AAAA,gBACH;AAAA,gBAAG;AAAA,cACT,CAAK;AAED,oBAAM,iBAAiB,SAAS;AAEhC,kBAAI,SAAS,KAAK;AAClB,kBAAI,CAAC,QAAQ;AACX,yBAAS,KAAK,SAAS,GAAG,aAAY;AACtC,mBAAG,WAAW,GAAG,cAAc,MAAM;AACrC,mBAAG,WAAW,GAAG,cAAc,SAAS,aAAa,UAAU,YAAY,GAAG,WAAW;AAAA,cAC/F,OAAW;AACL,mBAAG,WAAW,GAAG,cAAc,MAAM;AAAA,cAC3C;AAEI,iBAAG,cAAc,GAAG,cAAc,GAAG,QAAQ;AAC7C,iBAAG,cAAc,GAAG,cAAc,gBAAgB,SAAS;AAE3D,oBAAM,UAAU,GAAG,kBAAkB,KAAK,SAAS,MAAM;AACzD,iBAAG,wBAAwB,OAAO;AAClC,iBAAG,oBAAoB,SAAS,GAAG,GAAG,OAAO,OAAO,GAAG,CAAC;AACxD,oBAAM,eAAe,GAAG,kBAAkB,KAAK,SAAS,WAAW;AACnE,iBAAG,wBAAwB,YAAY;AACvC,iBAAG,oBAAoB,cAAc,GAAG,GAAG,OAAO,OAAO,GAAG,cAAc;AAC1E,iBAAG,gBAAgB,GAAG,aAAa,KAAK,WAAW;AAEnD,kBAAI,IAAI;AACR,iBAAG,WAAW,KAAK,OAAO;AAC1B,uBAAS,KAAK,KAAK,WAAW;AAC5B,qBAAK,gBAAgB,GAAG,EAAE,YAAY,KAAK,UAAU,CAAC,CAAC;AAAA,cAC7D;AAEI,mBAAK,oBAAmB;AACxB,kBACE,KAAK,eAAe,QACpB,KAAK,WAAW,SAAS,GACzB;AACA,qBAAK,yBAAyB,CAAA;AAC9B,qBAAK,wBAAuB;AAAA,cAClC;AACI,mBAAK,eAAe,SAAS;AAC7B,mBAAK,QAAQ;AAAA,YACjB;AAAA,YAEE,kBAAkB;AAChB,oBAAM,kBAAkB,gBAAgB,WAAW,MAAM,mBAAmB;AAAA,gBAC1E,4BAA4B,KAAK;AAAA,cACvC,CAAK;AACD,mBAAK,mBAAmB,gBAAgB,mBAAmB,QAAQ;AACnE,mBAAK,iBAAiB,eAAe;AAAA,YACzC;AAAA,YAEE,iBAAiB,iBAAiB;AAChC,kBAAI,CAAC,KAAK,aAAa,CAAC,KAAK,YAAY;AACvC,qBAAK,aAAa,gBAAgB,oBAAmB;AAAA,cAC3D;AAEI,kBAAI,KAAK,cAAc,KAAK,WAAW,SAAS,GAAG;AACjD,yBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,wBAAM,YAAY,KAAK,WAAW,CAAC;AACnC,sBAAI,CAAC,UAAU,YAAY;AACzB,8BAAU,aAAa,gBAAgB,uBAAuB,CAAC;AAAA,kBACzE;AAAA,gBACA;AAAA,cACA;AAAA,YACA;AAAA,YAEE,MAAM;AACJ,oBAAM,EAAE,iBAAiB,SAAS,4BAA4B,SAAS,GAAE,IAAK;AAE9E,iBAAG,WAAW,KAAK,OAAO;AAC1B,iBAAG,QAAQ,GAAG,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;AACvC,kBAAI,KAAK,eAAe;AACtB,qBAAK,cAAc,cAAc,IAAI,WAAW,KAAK,SAAS,CAAC;AAC/D,qBAAK,cAAc,YAAY,OAAO;AAAA,cAC5C;AAEI,mBAAK,aAAa,SAAS,QAAQ,CAAC,IAAI,KAAK,WAAW,CAAC,GAAG,QAAQ,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC;AAE3F,uBAAS,IAAI,GAAG,IAAI,2BAA2B,QAAQ,KAAK;AAC1D,sBAAM,WAAW,2BAA2B,CAAC;AAC7C,yBAAS,YAAY,KAAK,UAAU,SAAS,IAAI,CAAC;AAClD,oBAAI,KAAK,iBAAkB;AAAA,cACjC;AACI,uBAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,gCAAgB,CAAC,EAAE,YAAY,UAAU,CAAC,CAAC;AAC3C,oBAAI,KAAK,iBAAkB;AAAA,cACjC;AAEI,kBAAI,KAAK,SAAS;AAChB,yBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC5C,wBAAM,SAAS,KAAK,QAAQ,CAAC;AAC7B,sBAAI,OAAO,aAAa;AACtB,2BAAO,YAAY,IAAI;AAAA,kBACjC;AAAA,gBACA;AAAA,cACA;AAEI,kBAAI,KAAK,WAAW;AAClB,oBAAI,KAAK,UAAU;AACjB,qBAAG,iBAAiB,GAAG,cAAc,IAAI;AACzC,qBAAG,gBAAgB,GAAG,aAAa,KAAK,WAAW;AACnD,sBAAI,KAAK,WAAW;AAClB,yBAAK,sBAAqB;AAAA,kBACpC;AACQ,qBAAG,WAAW,GAAG,gBAAgB,GAAG,CAAC;AACrC,yBAAO,KAAK,YAAY,KAAK,QAAQ,MAAK,IAAK,KAAK;AAAA,gBAC5D;AACM,mBAAG,iBAAiB,GAAG,cAAc,IAAI;AACzC,mBAAG,gBAAgB,GAAG,aAAa,IAAI;AACvC,mBAAG,WAAW,GAAG,gBAAgB,GAAG,CAAC;AACrC;AAAA,cACN;AAEI,iBAAG,gBAAgB,GAAG,aAAa,KAAK,WAAW;AACnD,kBAAI,KAAK,WAAW;AAClB,qBAAK,sBAAqB;AAAA,cAChC;AAEI,kBAAI,KAAK,eAAe,MAAM;AAC5B,oBAAI,KAAK,WAAW;AAClB,uBAAK,0BAAyB;AAAA,gBACtC;AACM,qBAAK,YAAW;AAAA,cACtB;AAEI,iBAAG,WAAW,GAAG,gBAAgB,GAAG,CAAC;AAAA,YACzC;AAAA,YAEE,cAAc;AACZ,mBAAK,WAAW,mBAAmB,iBAAiB,KAAK,cAAc;AAAA,YAC3E;AAAA,YAEE,oBAAoB;AAClB,qBAAO,KAAK,QAAQ;AAAA,YACxB;AAAA,YACE,mBAAmB;AACjB,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,sBAAQ,KAAK,kBAAiB,GAAE;AAAA,gBAC9B,KAAK,GAAG;AACN,yBAAO,GAAG;AAAA,gBACZ;AACE,wBAAM,IAAI,MAAM,yBAAyB;AAAA,cACjD;AAAA,YACA;AAAA,YAEE,wBAAwB;AACtB,kBAAI,KAAK,QAAQ,aAAY,KAAM,KAAK,kBAAkB;AACxD,sBAAM,KAAK,KAAK;AAChB,mBAAG,qBAAqB,GAAG,aAAa,GAAG,mBAAmB,GAAG,YAAY,KAAK,QAAQ,SAAS,CAAC;AACpG,qBAAK,mBAAmB;AAAA,cAC9B;AAAA,YACA;AAAA,YAEE,sBAAsB;AACpB,oBAAM,KAAK,KAAK;AAChB,oBAAM,UAAU,KAAK;AACrB,kBAAI,KAAK,SAAS;AAChB,mBAAG,qBAAqB,GAAG,aAAa,GAAG,mBAAmB,GAAG,YAAY,KAAK,QAAQ,SAAS,CAAC;AACpG;AAAA,cACN;AACI,oBAAM,UAAU,KAAK,cAAa;AAClC,iBAAG,cAAc,GAAG,WAAW,KAAK,uBAAuB,KAAK,oBAAoB;AACpF,iBAAG,YAAY,GAAG,YAAY,OAAO;AACrC,iBAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,iBAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,iBAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AACjE,iBAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AACjE,oBAAM,SAAS,KAAK,kBAAiB;AACrC,kBAAI,KAAK,cAAc,UAAU;AAC/B,mBAAG,WAAW,GAAG,YAAY,GAAG,QAAQ,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,IAAI;AAAA,cAChG,OAAW;AACL,mBAAG,WAAW,GAAG,YAAY,GAAG,QAAQ,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,QAAQ,GAAG,eAAe,IAAI;AAAA,cACvG;AACI,iBAAG,qBAAqB,GAAG,aAAa,GAAG,mBAAmB,GAAG,YAAY,SAAS,CAAC;AACvF,mBAAK,UAAU,IAAI,KAAK,mBAAmB;AAAA,gBACzC;AAAA,gBACA,MAAM;AAAA,gBACN,YAAY,KAAK;AAAA,gBACjB,QAAQ,KAAK;AAAA,gBACb,SAAS,KAAK;AAAA,gBACd,gBAAgB,KAAK,kBAAiB;AAAA,gBACtC,eAAe,KAAK,iBAAgB;AAAA,gBACpC,QAAQ;AAAA,cACd,CAAK;AAAA,YACL;AAAA,YAEE,4BAA4B;AAC1B,oBAAM,KAAK,KAAK;AAChB,uBAAS,IAAI,GAAG,IAAI,KAAK,eAAe,QAAQ,KAAK;AACnD,sBAAM,gBAAgB,KAAK,eAAe,CAAC;AAC3C,oBAAI,cAAc,aAAY,KAAM,KAAK,uBAAuB,CAAC,GAAG;AAClE,qBAAG,qBAAqB,GAAG,aAAa,GAAG,oBAAoB,IAAI,GAAG,GAAG,YAAY,cAAc,SAAS,CAAC;AAC7G,uBAAK,uBAAuB,CAAC,IAAI;AAAA,gBACzC;AAAA,cACA;AAAA,YACA;AAAA,YAEE,0BAA0B;AACxB,oBAAM,KAAK,KAAK;AAChB,kBAAI,KAAK,gBAAgB;AACvB,yBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,qBAAG,qBAAqB,GAAG,aAAa,GAAG,oBAAoB,IAAI,GAAG,GAAG,YAAY,KAAK,eAAe,CAAC,EAAE,SAAS,CAAC;AAAA,gBAC9H;AACM;AAAA,cACN;AACI,oBAAM,UAAU,KAAK;AACrB,mBAAK,iBAAiB,CAAC,GAAG,iBAAiB;AAC3C,mBAAK,iBAAiB,CAAA;AACtB,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,sBAAM,UAAU,KAAK,cAAa;AAClC,qBAAK,eAAe,KAAK,GAAG,oBAAoB,IAAI,CAAC;AACrD,mBAAG,cAAc,GAAG,WAAW,KAAK,uBAAuB,KAAK,uBAAuB,CAAC;AACxF,mBAAG,YAAY,GAAG,YAAY,OAAO;AACrC,mBAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,mBAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,mBAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AACjE,mBAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AACjE,oBAAI,KAAK,cAAc,UAAU;AAC/B,qBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,IAAI;AAAA,gBACnG,OAAa;AACL,qBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,eAAe,IAAI;AAAA,gBAC3G;AACM,mBAAG,qBAAqB,GAAG,aAAa,GAAG,oBAAoB,IAAI,GAAG,GAAG,YAAY,SAAS,CAAC;AAE/F,qBAAK,eAAe,KAAK,IAAI,KAAK,mBAAmB;AAAA,kBACnD;AAAA,kBACA,MAAM;AAAA,kBACN,YAAY,KAAK;AAAA,kBACjB,QAAQ,KAAK;AAAA,kBACb,SAAS,KAAK;AAAA,kBACd,gBAAgB,KAAK,kBAAiB;AAAA,kBACtC,eAAe,KAAK,iBAAgB;AAAA,kBACpC,QAAQ;AAAA,gBAChB,CAAO,CAAC;AAAA,cACR;AAAA,YACA;AAAA,YAEE,aAAaA,OAAMW,QAAO;AACxB,kBAAI,KAAK,eAAe,eAAeX,KAAI,GAAG;AAC5C,sBAAM,QAAQ,KAAK,eAAeA,KAAI;AACtC,oBAAIW,WAAU,OAAO;AACnB;AAAA,gBACR;AAAA,cACA;AACI,mBAAK,eAAeX,KAAI,IAAIW;AAC5B,oBAAM,MAAM,KAAK,mBAAmBX,KAAI;AACxC,mBAAK,QAAQ,UAAU,KAAKW,MAAK;AAAA,YACrC;AAAA,YAEE,aAAaX,OAAMW,QAAO;AACxB,kBAAI,KAAK,eAAe,eAAeX,KAAI,GAAG;AAC5C,sBAAM,QAAQ,KAAK,eAAeA,KAAI;AACtC,oBAAIW,WAAU,OAAO;AACnB;AAAA,gBACR;AAAA,cACA;AACI,mBAAK,eAAeX,KAAI,IAAIW;AAC5B,oBAAM,MAAM,KAAK,mBAAmBX,KAAI;AACxC,mBAAK,QAAQ,UAAU,KAAKW,MAAK;AAAA,YACrC;AAAA,YAEE,aAAaX,OAAM,QAAQ,QAAQ;AACjC,kBAAI,KAAK,eAAe,eAAeA,KAAI,GAAG;AAC5C,sBAAM,QAAQ,KAAK,eAAeA,KAAI;AACtC,oBACE,WAAW,MAAM,CAAC,KAClB,WAAW,MAAM,CAAC,GAClB;AACA;AAAA,gBACR;AAAA,cACA;AACI,mBAAK,eAAeA,KAAI,IAAI,CAAC,QAAQ,MAAM;AAC3C,oBAAM,MAAM,KAAK,mBAAmBA,KAAI;AACxC,mBAAK,QAAQ,UAAU,KAAK,QAAQ,MAAM;AAAA,YAC9C;AAAA,YAEE,cAAcA,OAAMW,QAAO;AACzB,kBAAI,KAAK,gBAAgB,eAAeX,KAAI,GAAG;AAC7C,sBAAM,QAAQ,KAAK,gBAAgBA,KAAI;AACvC,oBACEW,OAAM,CAAC,MAAM,MAAM,CAAC,KACpBA,OAAM,CAAC,MAAM,MAAM,CAAC,GACpB;AACA;AAAA,gBACR;AAAA,cACA;AACI,mBAAK,gBAAgBX,KAAI,IAAIW;AAC7B,oBAAM,MAAM,KAAK,mBAAmBX,KAAI;AACxC,mBAAK,QAAQ,WAAW,KAAKW,MAAK;AAAA,YACtC;AAAA,YAEE,cAAcX,OAAMW,QAAO;AACzB,kBAAI,KAAK,gBAAgB,eAAeX,KAAI,GAAG;AAC7C,sBAAM,QAAQ,KAAK,gBAAgBA,KAAI;AACvC,oBACEW,OAAM,CAAC,MAAM,MAAM,CAAC,KACpBA,OAAM,CAAC,MAAM,MAAM,CAAC,GACpB;AACA;AAAA,gBACR;AAAA,cACA;AACI,mBAAK,gBAAgBX,KAAI,IAAIW;AAC7B,oBAAM,MAAM,KAAK,mBAAmBX,KAAI;AACxC,mBAAK,QAAQ,WAAW,KAAKW,MAAK;AAAA,YACtC;AAAA,YAEE,cAAcX,OAAMW,QAAO;AACzB,kBAAI,KAAK,gBAAgB,eAAeX,KAAI,GAAG;AAC7C,sBAAM,QAAQ,KAAK,gBAAgBA,KAAI;AACvC,oBACEW,OAAM,CAAC,MAAM,MAAM,CAAC,KACpBA,OAAM,CAAC,MAAM,MAAM,CAAC,KACpBA,OAAM,CAAC,MAAM,MAAM,CAAC,GACpB;AACA;AAAA,gBACR;AAAA,cACA;AACI,mBAAK,gBAAgBX,KAAI,IAAIW;AAC7B,oBAAM,MAAM,KAAK,mBAAmBX,KAAI;AACxC,mBAAK,QAAQ,WAAW,KAAKW,MAAK;AAAA,YACtC;AAAA,YAEE,cAAcX,OAAMW,QAAO;AACzB,kBAAI,KAAK,gBAAgB,eAAeX,KAAI,GAAG;AAC7C,sBAAM,QAAQ,KAAK,gBAAgBA,KAAI;AACvC,oBACEW,OAAM,CAAC,MAAM,MAAM,CAAC,KACpBA,OAAM,CAAC,MAAM,MAAM,CAAC,KACpBA,OAAM,CAAC,MAAM,MAAM,CAAC,GACpB;AACA;AAAA,gBACR;AAAA,cACA;AACI,mBAAK,gBAAgBX,KAAI,IAAIW;AAC7B,oBAAM,MAAM,KAAK,mBAAmBX,KAAI;AACxC,mBAAK,QAAQ,WAAW,KAAKW,MAAK;AAAA,YACtC;AAAA,YAEE,cAAcX,OAAMW,QAAO;AACzB,kBAAI,KAAK,gBAAgB,eAAeX,KAAI,GAAG;AAC7C,sBAAM,QAAQ,KAAK,gBAAgBA,KAAI;AACvC,oBACEW,OAAM,CAAC,MAAM,MAAM,CAAC,KACpBA,OAAM,CAAC,MAAM,MAAM,CAAC,KACpBA,OAAM,CAAC,MAAM,MAAM,CAAC,KACpBA,OAAM,CAAC,MAAM,MAAM,CAAC,GACpB;AACA;AAAA,gBACR;AAAA,cACA;AACI,mBAAK,gBAAgBX,KAAI,IAAIW;AAC7B,oBAAM,MAAM,KAAK,mBAAmBX,KAAI;AACxC,mBAAK,QAAQ,WAAW,KAAKW,MAAK;AAAA,YACtC;AAAA,YAEE,cAAcX,OAAMW,QAAO;AACzB,kBAAI,KAAK,gBAAgB,eAAeX,KAAI,GAAG;AAC7C,sBAAM,QAAQ,KAAK,gBAAgBA,KAAI;AACvC,oBACEW,OAAM,CAAC,MAAM,MAAM,CAAC,KACpBA,OAAM,CAAC,MAAM,MAAM,CAAC,KACpBA,OAAM,CAAC,MAAM,MAAM,CAAC,KACpBA,OAAM,CAAC,MAAM,MAAM,CAAC,GACpB;AACA;AAAA,gBACR;AAAA,cACA;AACI,mBAAK,gBAAgBX,KAAI,IAAIW;AAC7B,oBAAM,MAAM,KAAK,mBAAmBX,KAAI;AACxC,mBAAK,QAAQ,WAAW,KAAKW,MAAK;AAAA,YACtC;AAAA,YAEE,mBAAmBX,OAAM;AACvB,kBAAI,KAAK,4BAA4B,eAAeA,KAAI,GAAG;AACzD,uBAAO,KAAK,4BAA4BA,KAAI;AAAA,cAClD;AACI,qBAAO,KAAK,4BAA4BA,KAAI,IAAI,KAAK,QAAQ,mBAAmB,KAAK,SAASA,KAAI;AAAA,YACtG;AAAA,YAEE,0BAA0B,MAAM;AAC9B,qBAAO;AAAA,gBACL,QAAQ,KAAK,iBAAgB;AAAA,gBAC7B,UAAU,KAAK,kBAAiB;AAAA,gBAChC,SAAS,KAAK,kBAAiB;AAAA,gBAC/B,WAAW,KAAK,oBAAmB;AAAA,gBACnC,qBAAqB,KAAK,6BAA4B;AAAA,gBACtD,qBAAqB,KAAK,6BAA4B;AAAA,gBACtD,2BAA2B,KAAK,iCAAgC;AAAA,gBAChE,iBAAiB,KAAK,mBAAkB;AAAA,gBACxC,gBAAgB,KAAK,wBAAuB;AAAA,gBAC5C,gBAAgB,KAAK,wBAAwB,IAAI;AAAA,gBACjD,QAAQ,KAAK,gBAAe;AAAA,gBAC5B,aAAa,KAAK,oBAAmB;AAAA,gBACrC,0BAA0B,KAAK,0BAAyB;AAAA,gBACxD,wBAAwB,KAAK,wBAAuB;AAAA,gBACpD,+BAA+B,KAAK,8BAA6B;AAAA,gBACjE,qCAAqC,KAAK,mCAAkC;AAAA;YAElF;AAAA,YAEE,0BAA0B,MAAM;AAC9B,qBAAO;AAAA,gBACL,0BAA0B,KAAK,0BAAyB;AAAA,gBACxD,wBAAwB,KAAK,wBAAuB;AAAA,gBACpD,+BAA+B,KAAK,8BAA6B;AAAA,gBACjE,qCAAqC,KAAK,mCAAkC;AAAA;YAElF;AAAA,YAEE,mBAAmB;AACjB,qBACE,KAAK,eAAe,OACpB,+CACA;AAAA,YAEN;AAAA,YAEE,oBAAoB;AAClB,qBACE,KAAK,oBACL,IAAI,SAAS,KAAK,iBAAiB,CAAC;AAAA,IACpC;AAAA,YAEN;AAAA,YAEE,oBAAoB;AAClB,kBAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,qBAAO,KAAK,QAAQ,IAAI,YAAU,OAAO,UAAU,KAAK,OAAO,MAAM,OAAO,aAAa,IAAI,OAAO,SAAS,EAAE,EAAE,KAAK,IAAI;AAAA,YAC9H;AAAA,YAEE,sBAAsB;AACpB,oBAAM,SAAS,CAAA;AACf,oBAAM,EAAE,WAAW,QAAO,IAAK;AAC/B,kBAAI,KAAK,eAAe;AACtB,uBAAO;AAAA,kBACL;AAAA,kBACA;AAAA;cAER,OAAW;AACL,uBAAO;AAAA,kBACL,4BAA4B,UAAU,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC;AAAA,kBAC1E,0BAA0B,QAAQ,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC;AAAA;cAE3D;AACI,qBAAO,MAAM,cAAc,MAAM;AAAA,YACrC;AAAA,YAEE,wBAAwB;AACtB,oBAAM,aAAa,KAAK;AACxB,kBAAI,eAAe,QAAQ,WAAW,SAAS,GAAG;AAChD,uBAAO;AAAA,cACb,OAAW;AACL,uBAAO;AAAA,cACb;AAAA,YACA;AAAA,YAEE,+BAA+B;AAC7B,qBACE,KAAK,eAAe,OACpB,KACA;AAAA,YAEN;AAAA,YAEE,+BAA+B;AAC7B,qBACE,KAAK,eAAe,OACpB,KACA;AAAA,YAEN;AAAA,YAEE,mCAAmC;AACjC,qBAAO,KAAK,6BACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoBA;AAAA,YACN;AAAA,YAEE,wBAAwB,MAAM;AAC5B,oBAAM,UAAU,CAAA;AAChB,oBAAM,EAAE,cAAa,IAAK;AAC1B,uBAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,wBAAQ,KAAK,KAAK,gBAAgB,CAAC,EAAE,UAAU,KAAK,CAAC,CAAC,CAAC;AAAA,cAC7D;AACI,qBAAO,QAAQ,KAAK,EAAE;AAAA,YAC1B;AAAA,YAEE,qBAAqB;AACnB,qBAAO,KAAK,kBAAkB;AAAA,YAClC;AAAA,YAEE,0BAA0B;AACxB,oBAAM,SAAS,CAAA;AACf,oBAAM,EAAE,UAAS,IAAK;AACtB,kBAAI,WAAW;AACb,oBAAI,IAAI;AACR,2BAAWA,SAAQ,WAAW;AAC5B,sBAAI,CAAC,KAAK,UAAU,eAAeA,KAAI,EAAG;AAC1C,yBAAO,KAAK,KAAK,gBAAgB,GAAG,EAAE,UAAU,KAAK,UAAUA,KAAI,CAAC,CAAC;AAAA,gBAC7E;AAAA,cACA;AACI,qBAAO,OAAO,KAAK,EAAE;AAAA,YACzB;AAAA,YAEE,uBAAuB,OAAO,QAAQ;AACpC,kBAAI,CAAC,KAAK,qBAAqB,KAAK,GAAG;AACrC,qBAAK,qBAAqB,KAAK,IAAI,CAAA;AAAA,cACzC;AACI,kBAAI,CAAC,KAAK,qBAAqB,KAAK,EAAE,MAAM,GAAG;AAC7C,sBAAM,cAAc,KAAK,QAAQ,kBAAiB;AAClD,4BAAY,QAAQ;AACpB,4BAAY,SAAS;AACrB,qBAAK,qBAAqB,KAAK,EAAE,MAAM,IAAI;AAAA,cACjD;AACI,qBAAO,KAAK,qBAAqB,KAAK,EAAE,MAAM;AAAA,YAClD;AAAA,YAEE,6BAA6B;AAC3B,sBAAQ,KAAK,YAAU;AAAA,gBACrB,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO;AAAA,gBACT;AACE,sBAAI,KAAK,WAAW;AAClB,2BAAO;AAAA,kBACjB,OAAe;AACL,0BAAM,IAAI,MAAM,6BAA8B,KAAK,UAAU,GAAI;AAAA,kBAC3E;AAAA,cACA;AAAA,YACA;AAAA,YACE,kBAAkB;AAChB,oBAAM,SAAS,CAAC,KAAK,4BAA4B;AACjD,oBAAM,EAAE,WAAU,IAAK;AACvB,kBAAI,eAAe,MAAM;AACvB,wBAAQ,KAAK,YAAU;AAAA,kBACrB,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACH,6BAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,4BAAM,YAAY,WAAW,CAAC;AAC9B,6BAAO;AAAA,wBACL,UAAU,eAAe,YACzB,uBAAwB,UAAU,IAAI,SACtC,yBAA0B,UAAU;;oBAElD;AACU;AAAA,kBACF,KAAK;AACH,6BAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,6BAAO;AAAA,wBACL,wBAAyB,WAAW,CAAC,EAAE,IAAI;AAAA;oBAEzD;AACU;AAAA,kBACF,KAAK;AACH,6BAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,6BAAO;AAAA,wBACL,wBAAyB,WAAW,CAAC,EAAE,IAAI;AAAA;oBAEzD;AACU;AAAA,kBACF,KAAK;AACH,6BAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,6BAAO;AAAA,wBACL,wBAAyB,WAAW,CAAC,EAAE,IAAI;AAAA;oBAEzD;AACU;AAAA,gBACV;AAAA,cACA;AAEI,qBAAO,MAAM,cAAc,MAAM,IAAI,KAAK;AAAA,YAC9C;AAAA,YAEE,yBAAyB;AACvB,qBAAO,MAAM,cAAc;AAAA,gBACzB;AAAA,gBACA;AAAA,gBACA;AAAA,cACN,CAAK;AAAA,YACL;AAAA,YAEE,4BAA4B;AAC1B,sBAAQ,KAAK,YAAU;AAAA,gBACrB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,KAAK,gCAA+B,IACzC,KAAK,mCAAkC;AAAA,gBAC3C;AACE,wBAAM,IAAI,MAAM,4CAA4C,KAAK,UAAU,aAAa;AAAA,cAChG;AAAA,YACA;AAAA,YAEE,kCAAkC;AAChC,qBAAO,MAAM,cAAc;AAAA,gBACzB;AAAA,gBACA;AAAA,gBACA,sBAAsB,KAAK,mBAAmB,mBAAmB,UAAU;AAAA,cACjF,CAAK;AAAA,YACL;AAAA,YAEE,qCAAqC;AACnC,oBAAM,SAAS,CAAA;AACf,kBAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,sBAAM,YAAY,KAAK,WAAW,CAAC;AACnC,oBAAI,UAAU,eAAe,WAAW;AACtC,yBAAO;AAAA,oBACL,iBAAiB,IAAI,CAAC,OAAO,KAAK,mBAAmB,mBAAmB,UAAU,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;gBAE7I,OAAa;AACL,yBAAO;AAAA,oBACL,iBAAiB,IAAI,CAAC,OAAO,KAAK,mBAAmB,mBAAmB,UAAU,oBAAoB,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;gBAEvI;AAAA,cACA;AACI,qBAAO,MAAM,cAAc,MAAM;AAAA,YACrC;AAAA,YAEE,qCAAqC;AACnC,oBAAM,SAAS;AAAA,gBACb;AAAA;AAGF,sBAAQ,KAAK,YAAU;AAAA,gBACrB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,wBAAM,WAAW,CAAC,KAAK,KAAK,KAAK,GAAG;AACpC,2BAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,0BAAM,UAAU,SAAS,CAAC;AAC1B,yBAAK,yCAAyC,QAAQ,OAAO;AAC7D,yBAAK,4CAA4C,QAAQ,OAAO;AAChE,wBAAI,IAAI,IAAI,SAAS,QAAQ;AAC3B,6BAAO,KAAK,cAAc;AAAA,oBACtC;AAAA,kBACA;AACQ;AAAA,gBACF;AACE,wBAAM,IAAI,MAAM,8CAA8C,KAAK,UAAU,YAAY;AAAA,cACjG;AAEI,qBAAO,MAAM,cAAc,MAAM;AAAA,YACrC;AAAA,YAEE,yCAAyC,QAAQ,SAAS;AACxD,qBAAO;AAAA,gBACL;AAAA,gBACA;AAAA,gBACA,oBAAoB,OAAO;AAAA;YAEjC;AAAA,YAEE,4CAA4C,QAAQ,SAAS;AAC3D,kBAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,sBAAM,YAAY,KAAK,WAAW,CAAC;AACnC,oBAAI,UAAU,eAAe,WAAW;AACtC,yBAAO;AAAA,oBACL,iBAAiB,IAAI,CAAC,KAAK,OAAO,4BAA4B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;gBAE/F,OAAa;AACL,yBAAO;AAAA,oBACL,iBAAiB,IAAI,CAAC,KAAK,OAAO,sBAAsB,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;gBAEzF;AAAA,cACA;AAAA,YACA;AAAA,YAEE,mCAAmC;AACjC,qBAAO;AAAA,gBACL;AAAA,gBACA;AAAA,gBACA;AAAA;YAEN;AAAA,YAEE,sCAAsC;AACpC,oBAAM,SAAS,CAAA;AACf,kBAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,EAAE,GAAG;AAC/C,sBAAM,YAAY,KAAK,WAAW,CAAC;AACnC,oBAAI,UAAU,eAAe,WAAW;AACtC,yBAAO;AAAA,oBACL,iBAAiB,IAAI,CAAC,gCAAgC,UAAU,IAAI;AAAA;gBAE9E,OAAa;AACL,yBAAO;AAAA,oBACL,iBAAiB,IAAI,CAAC,0BAA0B,UAAU,IAAI;AAAA;gBAExE;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,mCAAmC;AACjC,qBAAO;AAAA,gBACL;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA;YAEN;AAAA,YAEE,sCAAsC;AACpC,oBAAM,SAAS,CAAA;AACf,kBAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,EAAE,GAAG;AAC/C,uBAAO;AAAA,kBACL,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA,kBACvE,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;cAE/E;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,mCAAmC;AACjC,qBAAO;AAAA,gBACL;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA;YAEN;AAAA,YAEE,sCAAsC;AACpC,oBAAM,SAAS,CAAA;AACf,kBAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,EAAE,GAAG;AAC/C,uBAAO;AAAA,kBACL,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA,kBACvE,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA,kBACvE,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;cAE/E;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,mCAAmC;AACjC,qBAAO;AAAA,gBACL;AAAA,gBACA;AAAA,gBACA;AAAA;YAEN;AAAA,YAEE,sCAAsC;AACpC,oBAAM,SAAS,CAAA;AACf,kBAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,sBAAQ,KAAK,YAAU;AAAA,gBACrB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,2BAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,EAAE,GAAG;AAC/C,0BAAM,YAAY,KAAK,WAAW,CAAC;AACnC,wBAAI,UAAU,eAAe,WAAW;AACtC,6BAAO;AAAA,wBACL,iBAAiB,IAAI,CAAC,6BAA6B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;oBAExF,OAAiB;AACL,6BAAO;AAAA,wBACL,iBAAiB,IAAI,CAAC,uBAAuB,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;oBAElF;AAAA,kBACA;AACQ;AAAA,gBACF,KAAK;AACH,2BAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,EAAE,GAAG;AAC/C,2BAAO;AAAA,sBACL,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA,sBACvE,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;kBAEnF;AACQ;AAAA,gBACF,KAAK;AACH,2BAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,EAAE,GAAG;AAC/C,2BAAO;AAAA,sBACL,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA,sBACvE,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA,sBACvE,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;kBAEnF;AACQ;AAAA,gBACF,KAAK;AACH,2BAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,EAAE,GAAG;AAC/C,2BAAO;AAAA,sBACL,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA,sBACvE,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA,sBACvE,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA,sBACvE,iBAAiB,IAAI,CAAC,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;kBAEnF;AACQ;AAAA,cACR;AAEI,qBAAO;AAAA,YACX;AAAA,YAEE,iBAAiB,KAAK,KAAK;AACzB,qBAAO,IAAI,QAAQ,iDAAiD,CAAC,OAAO,aAAa;AACvF,oBAAI,IAAI,eAAe,QAAQ,GAAG;AAChC,yBAAO,IAAI,QAAQ;AAAA,gBAC3B;AACM,sBAAM,sBAAsB,QAAQ;AAAA,cAC1C,CAAK;AAAA,YACL;AAAA,YAEE,kBAAkB,MAAM;AACtB,kBAAI,KAAK,2BAA2B,MAAM;AACxC,uBAAO,KAAK;AAAA,cAClB;AACI,qBAAO,KAAK,yBAAyB,KAAK,iBAAiB,KAAK,YAAY,gBAAgB,KAAK,0BAA0B,IAAI,CAAC;AAAA,YACpI;AAAA,YAEE,gBAAgB,MAAM;AACpB,kBAAI,KAAK,yBAAyB,MAAM;AACtC,uBAAO,KAAK;AAAA,cAClB;AACI,qBAAO,KAAK,uBAAuB,KAAK,iBAAiB,KAAK,YAAY,cAAc,KAAK,0BAA0B,IAAI,CAAC;AAAA,YAChI;AAAA,YAEE,WAAW;AACT,oBAAM,qBAAqB,MAAM,cAAc;AAAA,gBAC7C;AAAA,cACN,CAAK;AACD,qBAAO,eAAe,KAAK,aAAa,WAAW,MAAM,kBAAkB;AAAA,YAC/E;AAAA,YAEE,QAAQ,wBAAwB;AAC9B,kBAAI,CAAC,KAAK,QAAS;AACnB,kBAAI,KAAK,QAAQ;AACf,qBAAK,QAAQ,aAAa,KAAK,MAAM;AAAA,cAC3C;AACI,kBAAI,KAAK,aAAa;AACpB,qBAAK,QAAQ,kBAAkB,KAAK,WAAW;AAAA,cACrD;AACI,yBAAW,SAAS,KAAK,sBAAsB;AAC7C,2BAAW,UAAU,KAAK,qBAAqB,KAAK,GAAG;AACrD,uBAAK,QAAQ,kBAAkB,KAAK,qBAAqB,KAAK,EAAE,MAAM,CAAC;AACvE,yBAAO,KAAK,qBAAqB,KAAK,EAAE,MAAM;AAAA,gBACtD;AACM,uBAAO,KAAK,qBAAqB,KAAK;AAAA,cAC5C;AACI,kBAAI,KAAK,YAAY;AACnB,qBAAK,QAAQ,aAAa,KAAK,UAAU;AAAA,cAC/C;AACI,kBAAI,KAAK,YAAY;AACnB,qBAAK,QAAQ,aAAa,KAAK,UAAU;AAAA,cAC/C;AACI,kBAAI,KAAK,SAAS;AAChB,qBAAK,QAAQ,cAAc,KAAK,OAAO;AAAA,cAC7C;AACI,kBAAI,KAAK,SAAS;AAChB,qBAAK,QAAQ,OAAM;AACnB,sBAAM,oBAAoB,KAAK,aAAa,QAAQ,KAAK,QAAQ,OAAO;AACxE,oBAAI,oBAAoB,IAAI;AAC1B,uBAAK,aAAa,OAAO,mBAAmB,CAAC;AAAA,gBACrD;AACM,qBAAK,UAAU;AAAA,cACrB;AACI,kBAAI,KAAK,kBAAkB,KAAK,eAAe,QAAQ;AACrD,yBAASL,KAAI,GAAGA,KAAI,KAAK,eAAe,QAAQA,MAAK;AACnD,wBAAM,gBAAgB,KAAK,eAAeA,EAAC;AAC3C,gCAAc,OAAM;AACpB,wBAAM,oBAAoB,KAAK,aAAa,QAAQ,cAAc,OAAO;AACzE,sBAAI,oBAAoB,IAAI;AAC1B,yBAAK,aAAa,OAAO,mBAAmB,CAAC;AAAA,kBACvD;AAAA,gBACA;AACM,qBAAK,iBAAiB;AAAA,cAC5B;AACI,kBAAI,KAAK,iBAAiB;AACxB,yBAASA,KAAI,GAAGA,KAAI,KAAK,gBAAgB,QAAQA,MAAK;AACpD,uBAAK,gBAAgBA,EAAC,EAAE,QAAO;AAAA,gBACvC;AAAA,cACA;AACI,kBAAI,KAAK,iBAAiB;AACxB,yBAASA,KAAI,GAAGA,KAAI,KAAK,gBAAgB,QAAQA,MAAK;AACpD,uBAAK,gBAAgBA,EAAC,EAAE,QAAO;AAAA,gBACvC;AAAA,cACA;AACI,qBAAO,KAAK,aAAa,SAAS,GAAG;AACnC,sBAAM,UAAU,KAAK,aAAa,IAAG;AACrC,qBAAK,QAAQ,cAAc,OAAO;AAAA,cACxC;AACI,kBAAI,wBAAwB;AAC1B,sBAAM,MAAM,SAAS,QAAQ,KAAK,MAAM;AACxC,oBAAI,OAAO,GAAG;AACZ,2BAAS,GAAG,IAAI;AAChB,8BAAY,GAAG,IAAI;AAAA,gBAC3B;AAAA,cACA;AACI,mBAAK,kBAAiB;AACtB,qBAAO,KAAK;AACZ,qBAAO,KAAK;AACZ,kBAAI,CAAC,KAAK,IAAK;AACf,oBAAM,IAAI,KAAK,IAAI,QAAQ,QAAQ,IAAI;AACvC,kBAAI,MAAM,GAAI;AACd,mBAAK,IAAI,QAAQ,OAAO,GAAG,CAAC;AAAA,YAChC;AAAA,YAEE,oBAAoB;AAClB,mBAAK,WAAW,oBAAoB;AACpC,mBAAK,WAAW,2BAA2B;AAC3C,mBAAK,WAAW,yBAAyB;AACzC,mBAAK,WAAW,qBAAqB;AAAA,YACzC;AAAA,YAEE,OAAO,eAAe,SAAS;AAC7B,oBAAM,YAAY,QAAQ,aAAa,oBAAoB;AAC3D,kBAAI,WAAW;AACb,0BAAU,YAAW;AAAA,cAC3B;AAAA,YACA;AAAA,YAEE,SAAS;AACP,oBAAM,OAAO,MAAM,OAAM;AACzB,mBAAK,gBAAgB,gBAAgB,WAAW,MAAM,iBAAiB,EAAE,OAAM;AAC/E,mBAAK,SAAS,YAAY,KAAK;AAC/B,qBAAO;AAAA,YACX;AAAA,UACA;AAr4CmC;AAAnC,cAAM,cAAN;AAu4CA,UAAAJ,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,mDAAkD,KAAI,eAAc,KAAI,uBAAsB,GAAE,gBAAe,IAAG,uBAAsB,IAAG,qBAAoB,IAAG,mBAAkB,IAAG,uBAAsB,IAAG,mBAAkB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC9Q,gBAAM,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAerB,UAAAH,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,CAAA,CAAE,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC1C,gBAAM,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA4BR,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoarB,UAAAH,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,CAAA,CAAE,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC1C,gBAAM,EAAE,MAAK,IAAKE,SAAQ,aAAa;AACvC,gBAAM,EAAE,kBAAiB,IAAKA,SAAQ,yBAAyB;AAE/D,gBAAM,sBAAN,MAAM,4BAA2B,kBAAkB;AAAA,YAEjD,wBAAwB,SAAS,QAAQ;AACvC,kBAAI,QAAQ,SAAS,cAAc;AACjC,sBAAM,KAAK;AAAA,kBACT;AAAA,kBACA;AAAA;cAER;AAEI,oBAAM,OAAO,KAAK,QAAQ,OAAO;AAEjC,oBAAMI,QAAO,MAAM,aAAa,QAAQ,IAAI;AAC5C,kBAAI,QAAQ,SAAS,YAAY;AAC/B,uBAAO,KAAK,4BAA4B;AAAA,cAC9C,WAAe,SAAS,WAAW;AAC7B,oBAAI,KAAK,cAAc,QAAQA,KAAI,IAAI,IAAI;AACzC,yBAAO,KAAK,aAAaA,KAAI,GAAG;AAAA,gBACxC,OAAa;AACL,yBAAO,KAAK,QAAQA,KAAI,EAAE;AAAA,gBAClC;AAAA,cACA,OAAW;AACL,uBAAO,KAAK,QAAQA,KAAI,EAAE;AAAA,cAChC;AAEI,qBAAO;AAAA,YACX;AAAA,UACA;AA3BmD;AAAnD,cAAM,qBAAN;AA6BA,UAAAT,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,eAAc,KAAI,2BAA0B,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACxF,gBAAM,EAAE,yBAAwB,IAAKE,SAAQ,wBAAwB;AACrE,gBAAM,EAAE,uBAAsB,IAAKA,SAAQ,sBAAsB;AACjE,gBAAM,EAAE,yBAAwB,IAAKA,SAAQ,wBAAwB;AAErE,gBAAM,EAAE,2BAA0B,IAAKA,SAAQ,2BAA2B;AAC1E,gBAAM,EAAE,kCAAiC,IAAKA,SAAQ,mCAAmC;AAEzF,gBAAM,EAAE,gCAA+B,IAAKA,SAAQ,iCAAiC;AACrF,gBAAM,EAAE,uCAAsC,IAAKA,SAAQ,yCAAyC;AAEpG,gBAAM,EAAE,2BAA0B,IAAKA,SAAQ,2BAA2B;AAC1E,gBAAM,EAAE,kCAAiC,IAAKA,SAAQ,mCAAmC;AAEzF,gBAAM,EAAE,6BAA4B,IAAKA,SAAQ,6BAA6B;AAC9E,gBAAM,EAAE,oCAAmC,IAAKA,SAAQ,qCAAqC;AAE7F,gBAAM,EAAE,+BAA8B,IAAKA,SAAQ,+BAA+B;AAClF,gBAAM,EAAE,sCAAqC,IAAKA,SAAQ,uCAAuC;AAEjG,gBAAM,EAAE,8CAA6C,IAAKA,SAAQ,gDAAgD;AAClH,gBAAM,EAAE,qDAAoD,IAAKA,SAAQ,wDAAwD;AAEjI,gBAAM,EAAE,+BAA8B,IAAKA,SAAQ,+BAA+B;AAClF,gBAAM,EAAE,sCAAqC,IAAKA,SAAQ,uCAAuC;AAEjG,gBAAM,EAAE,6BAA4B,IAAKA,SAAQ,6BAA6B;AAC9E,gBAAM,EAAE,oCAAmC,IAAKA,SAAQ,qCAAqC;AAE7F,gBAAM,EAAE,gCAA+B,IAAKA,SAAQ,iCAAiC;AACrF,gBAAM,EAAE,uCAAsC,IAAKA,SAAQ,yCAAyC;AAEpG,gBAAM,EAAE,gCAA+B,IAAKA,SAAQ,iCAAiC;AACrF,gBAAM,EAAE,uCAAsC,IAAKA,SAAQ,yCAAyC;AAEpG,gBAAM,EAAE,gCAA+B,IAAKA,SAAQ,iCAAiC;AACrF,gBAAM,EAAE,uCAAsC,IAAKA,SAAQ,yCAAyC;AAEpG,gBAAM,EAAE,wBAAuB,IAAKA,SAAQ,uBAAuB;AACnE,gBAAM,EAAE,wBAAuB,IAAKA,SAAQ,uBAAuB;AACnE,gBAAM,EAAE,wBAAuB,IAAKA,SAAQ,uBAAuB;AAEnE,gBAAM,EAAE,+BAA8B,IAAKA,SAAQ,+BAA+B;AAClF,gBAAM,EAAE,sCAAqC,IAAKA,SAAQ,uCAAuC;AAEjG,gBAAM,kBAAkB;AAAA,YACtB,UAAU;AAAA,cACR,SAAS;AAAA,gBACP,WAAW;AAAA,gBACX,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,SAAS;AAAA,gBACT,iBAAiB;AAAA,gBACjB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,gCAAgC;AAAA,gBAChC,cAAc;AAAA,gBACd,mBAAmB;AAAA,gBACnB,aAAa;AAAA,gBACb,eAAe;AAAA,gBACf,aAAa;AAAA,gBACb,kBAAkB;AAAA,gBAClB,aAAa;AAAA;cAEf,QAAQ;AAAA,gBACN,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,SAAS;AAAA,gBACT,iBAAiB;AAAA,gBACjB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,gCAAgC;AAAA,gBAChC,cAAc;AAAA,gBACd,mBAAmB;AAAA,gBACnB,aAAa;AAAA,gBACb,eAAe;AAAA,gBACf,aAAa;AAAA,gBACb,kBAAkB;AAAA,gBAClB,aAAa;AAAA,cACnB;AAAA;YAEE,QAAQ;AAAA,cACN,SAAS;AAAA,gBACP,WAAW;AAAA,gBACX,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,SAAS;AAAA,gBACT,iBAAiB;AAAA,gBACjB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,gCAAgC;AAAA,gBAChC,cAAc;AAAA,gBACd,mBAAmB;AAAA,gBACnB,aAAa;AAAA,gBACb,eAAe;AAAA,gBACf,aAAa;AAAA,gBACb,kBAAkB;AAAA,gBAClB,aAAa;AAAA;cAEf,QAAQ;AAAA,gBACN,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,WAAW;AAAA,gBACX,SAAS;AAAA,gBACT,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,YAAY;AAAA,gBACZ,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,SAAS;AAAA,gBACT,iBAAiB;AAAA,gBACjB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,mBAAmB;AAAA,gBACnB,gCAAgC;AAAA,gBAChC,cAAc;AAAA,gBACd,mBAAmB;AAAA,gBACnB,aAAa;AAAA,gBACb,eAAe;AAAA,gBACf,aAAa;AAAA,gBACb,kBAAkB;AAAA,gBAClB,aAAa;AAAA,cACnB;AAAA;;AAIA,mBAAS,sBAAsB,MAAM,SAAS,WAAWe,QAAO;AAC9D,gBAAI,CAAC,MAAM;AACT,oBAAM,IAAI,MAAM,cAAc;AAAA,YAClC;AACE,gBAAI,CAAC,SAAS;AACZ,oBAAM,IAAI,MAAM,iBAAiB;AAAA,YACrC;AACE,gBAAI,CAAC,WAAW;AACd,oBAAM,IAAI,MAAM,mBAAmB;AAAA,YACvC;AACE,gBAAIA,OAAM,MAAM;AACd,qBAAOA,OAAM;AAAA,YACjB;AACE,kBAAM,QAAQ,gBAAgB,SAAS,EAAE,OAAO;AAChD,gBAAI,MAAM,IAAI,MAAM,OAAO;AACzB,qBAAO;AAAA,YACX,WAAa,MAAM,IAAI,MAAM,QAAW;AACpC,oBAAM,IAAI,MAAM,oCAAqC,IAAI,EAAG;AAAA,YAChE;AACE,mBAAO,MAAM,IAAI;AAAA,UACnB;AApBS;AAsBT,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA,YACA;AAAA;QAEF,GAAE,EAAC,yBAAwB,IAAG,yBAAwB,IAAG,yBAAwB,IAAG,0BAAyB,IAAG,qCAAoC,IAAG,2CAA0C,IAAG,qCAAoC,IAAG,0DAAyD,IAAG,yCAAwC,IAAG,uCAAsC,IAAG,2CAA0C,IAAG,2CAA0C,IAAG,2CAA0C,IAAG,uCAAsC,IAAG,yCAAwC,IAAG,yCAAwC,IAAG,wBAAuB,IAAG,6BAA4B,IAAG,mCAAkC,IAAG,6BAA4B,IAAG,0BAAyB,IAAG,kDAAiD,IAAG,iCAAgC,IAAG,+BAA8B,IAAG,mCAAkC,IAAG,mCAAkC,KAAI,mCAAkC,KAAI,+BAA8B,KAAI,iCAAgC,KAAI,iCAAgC,IAAG,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACnpC,gBAAM,EAAE,uBAAsB,IAAKE,SAAQ,kCAAkC;AAE7E,gBAAM,2BAAN,MAAM,iCAAgC,uBAAuB;AAAA,UAAA;AAAA;AAA7D,cAAM,0BAAN;AAEA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,oCAAmC,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC/E,gBAAM,EAAE,uBAAsB,IAAKE,SAAQ,kCAAkC;AAE7E,gBAAM,2BAAN,MAAM,iCAAgC,uBAAuB;AAAA,UAAA;AAAA;AAA7D,cAAM,0BAAN;AAEA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,oCAAmC,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC/E,gBAAM,EAAE,uBAAsB,IAAKE,SAAQ,kCAAkC;AAE7E,gBAAM,2BAAN,MAAM,iCAAgC,uBAAuB;AAAA,UAAA;AAAA;AAA7D,cAAM,0BAAN;AAEA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,oCAAmC,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC/E,gBAAM,EAAE,wBAAuB,IAAKE,SAAQ,mCAAmC;AAE/E,gBAAM,4BAAN,MAAM,kCAAiC,wBAAwB;AAAA,UAAA;AAAA;AAA/D,cAAM,2BAAN;AAEA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,qCAAoC,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAChF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,gCAA+B,IAAKA,SAAQ,oBAAoB;AAExE,gBAAM,0CAAN,MAAM,gDAA+C,gCAAgC;AAAA,YACnF,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,mBAAoB,KAAK,EAAE;AAAA,gBACxD,WAAY,iBAAiB,UAAW,KAAK,MAAM;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,YAAY;AAAA,cAC/D,CAAK;AAAA,YACL;AAAA,YAEE,YAAY,QAAQ;AAClB,oBAAM,EAAE,OAAO,WAAW,OAAO,CAAC;AAClC,mBAAK,UAAU,OAAO,MAAM;AAC5B,mBAAK,aAAa,CAAC,OAAO,QAAQ,OAAO,MAAM;AAC/C,mBAAK,cAAc,CAAC,OAAO,MAAM;AACjC,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAY,MAAM;AAAA,YAC5B;AAAA,UACA;AAnBqF;AAArF,cAAM,yCAAN;AAqBA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,sBAAqB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACtF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iCAAgC,IAAKA,SAAQ,8CAA8C;AAEnG,gBAAM,qCAAN,MAAM,2CAA0C,iCAAiC;AAAA,YAC/E,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,MAAM;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,YAAY;AAAA,cAC/D,CAAK;AAAA,YACL;AAAA,UACA;AATiF;AAAjF,cAAM,oCAAN;AAWA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,gDAA+C,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAChH,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,kCAAiC,IAAKA,SAAQ,sBAAsB;AAE5E,gBAAM,qCAAN,MAAM,2CAA0C,kCAAkC;AAAA,UAAA;AAAA;AAAlF,cAAM,oCAAN;AAEA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,wBAAuB,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACxF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,oDAAmD,IAAKA,SAAQ,mEAAmE;AAE3I,gBAAM,wDAAN,MAAM,8DAA6D,oDAAoD;AAAA,YACrH,YAAY;AACV,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,KAAK,EAAE;AAAA,gBAC5B,iBAAiB,KAAK,MAAM;AAAA,gBAC5B,iBAAiB,KAAK,YAAY;AAAA,cACxC,CAAK;AAAA,YACL;AAAA,UACA;AARuH;AAAvH,cAAM,uDAAN;AAUA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,qEAAoE,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACrI,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,qCAAoC,IAAKA,SAAQ,kDAAkD;AAE3G,gBAAM,yCAAN,MAAM,+CAA8C,qCAAqC;AAAA,YACvF,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,MAAM;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,YAAY;AAAA,cAC/D,CAAK;AAAA,YACL;AAAA,UACA;AATyF;AAAzF,cAAM,wCAAN;AAWA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,oDAAmD,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACpH,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,6BAA4B,IAAKA,SAAQ,yCAAyC;AAE1F,gBAAM,uCAAN,MAAM,6CAA4C,6BAA6B;AAAA,YAC7E,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,MAAM;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,YAAY;AAAA,cAC/D,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,mBAAK,aAAa,MAAM,cAAcA,QAAO,IAAI;AACjD,mBAAK,cAAc,MAAM,mCAAmC,KAAK,YAAY,KAAK,QAAQ;AAC1F,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,KAAK;AAC1E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,mBAAK,cAAc,IAAI,aAAa,KAAK,iBAAiB;AAC1D,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AApB+E;AAA/E,cAAM,sCAAN;AAsBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,2CAA0C,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3G,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,gCAA+B,IAAKA,SAAQ,6CAA6C;AAEjG,gBAAM,0CAAN,MAAM,gDAA+C,gCAAgC;AAAA,YACnF,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,MAAM;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,YAAY;AAAA,cAC/D,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,mBAAK,SAASA,MAAK;AACnB,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AAhBqF;AAArF,cAAM,yCAAN;AAkBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,+CAA8C,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC/G,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,gCAA+B,IAAKA,SAAQ,6CAA6C;AAEjG,gBAAM,0CAAN,MAAM,gDAA+C,gCAAgC;AAAA,YACnF,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,MAAM;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,YAAY;AAAA,cAC/D,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,mBAAK,SAASA,MAAK;AACnB,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AAhBqF;AAArF,cAAM,yCAAN;AAkBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,+CAA8C,IAAG,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAChH,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,gCAA+B,IAAKA,SAAQ,6CAA6C;AAEjG,gBAAM,0CAAN,MAAM,gDAA+C,gCAAgC;AAAA,YACnF,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,MAAM;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,YAAY;AAAA,cAC/D,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,mBAAK,SAASA,MAAK;AACnB,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AAhBqF;AAArF,cAAM,yCAAN;AAkBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,+CAA8C,IAAG,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAChH,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,6BAA4B,IAAKA,SAAQ,yCAAyC;AAE1F,gBAAM,uCAAN,MAAM,6CAA4C,6BAA6B;AAAA,YAC7E,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,MAAM;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,YAAY;AAAA,cAC/D,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,kBAAI,CAAC,GAAG,GAAG,CAAC,IAAIA,OAAM;AACtB,mBAAK,aAAa,IAAI,WAAW,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;AACzD,mBAAK,cAAc,MAAM,mCAAmC,KAAK,YAAY,KAAK,QAAQ;AAC1F,mBAAK,oBAAoB,KAAK,YAAY,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,KAAK;AAC1E,mBAAK,UAAU,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC;AACvD,mBAAK,cAAc,IAAI,aAAa,KAAK,iBAAiB;AAC1D,mBAAK,OAAO,cAAc,KAAK,cAAc,KAAK,UAAU;AAC5D,mBAAK,OAAO,cAAc,KAAK,QAAQ,KAAK,WAAW;AACvD,oBAAM,YAAYA,MAAK;AAAA,YAC3B;AAAA,UACA;AArB+E;AAA/E,cAAM,sCAAN;AAuBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,2CAA0C,IAAG,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC5G,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,qCAAoC,IAAKA,SAAQ,kDAAkD;AAE3G,gBAAM,yCAAN,MAAM,+CAA8C,qCAAqC;AAAA,YACvF,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,MAAM;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,YAAY;AAAA,cAC/D,CAAK;AAAA,YACL;AAAA,UACA;AATyF;AAAzF,cAAM,wCAAN;AAWA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,oDAAmD,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACpH,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,qCAAoC,IAAKA,SAAQ,kDAAkD;AAE3G,gBAAM,yCAAN,MAAM,+CAA8C,qCAAqC;AAAA,YACvF,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,MAAM;AAAA,gBACnD,WAAY,iBAAiB,UAAW,KAAK,YAAY;AAAA,cAC/D,CAAK;AAAA,YACL;AAAA,UACA;AATyF;AAAzF,cAAM,wCAAN;AAWA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,oDAAmD,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACpH,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,sBAAqB,IAAKA,SAAQ,iCAAiC;AAE3E,gBAAM,0BAAN,MAAM,gCAA+B,sBAAsB;AAAA,UAAA;AAAA;AAA3D,cAAM,yBAAN;AAEA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,mCAAkC,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACnG,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,iCAAiC;AAEtE,gBAAM,mCAAN,MAAM,yCAAwC,iBAAiB;AAAA,YAC7D,YAAYe,QAAO,UAAU;AAC3B,oBAAMA,QAAO,QAAQ;AACrB,mBAAK,UAAUA,OAAM,CAAC,EAAE,OAAOA,OAAM,CAAC,EAAE,MAAM;AAC9C,mBAAK,aAAa,CAACA,OAAM,CAAC,EAAE,OAAOA,OAAM,CAAC,EAAE,QAAQA,OAAM,MAAM;AAChE,mBAAK,cAAc,CAACA,OAAM,CAAC,EAAE,OAAOA,OAAM,CAAC,EAAE,MAAM;AAAA,YACvD;AAAA,YACE,gBAAgB;AACd,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,kBAAkB,KAAK,OAAO;AAChD,iBAAG,cAAc,GAAG,kBAAkB,GAAG,oBAAoB,GAAG,OAAO;AACvE,iBAAG,cAAc,GAAG,kBAAkB,GAAG,oBAAoB,GAAG,OAAO;AAAA,YAC3E;AAAA,YAEE,wBAAwB;AACtB,qBAAO,qBAAqB,KAAK,IAAI,MAAM,KAAK,OAAO;AAAA;AAAA,YAC3D;AAAA,YACE,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,mBAAoB,KAAK,EAAE;AAAA,gBACxD,GAAI,iBAAiB,UAAW,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAClG,GAAI,iBAAiB,UAAW,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cACnI,CAAK;AAAA,YACL;AAAA,YAEE,YAAY,QAAQ;AAClB,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,kBAAkB,KAAK,OAAO;AAChD,iBAAG,YAAY,GAAG,qBAAqB,IAAI;AAC3C,iBAAG;AAAA,gBACD,GAAG;AAAA,gBACH;AAAA,gBACA,GAAG;AAAA,gBACH,OAAO,CAAC,EAAE;AAAA,gBACV,OAAO,CAAC,EAAE;AAAA,gBACV,OAAO;AAAA,gBACP;AAAA,gBACA,GAAG;AAAA,gBACH,GAAG;AAAA,gBACH;AAAA;AAEF,uBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,sBAAM,UAAU;AAChB,sBAAM,UAAU;AAChB,sBAAM,aAAa;AACnB,mBAAG;AAAA,kBACD,GAAG;AAAA,kBACH;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA,OAAO,CAAC,EAAE;AAAA,kBACV,OAAO,CAAC,EAAE;AAAA,kBACV;AAAA,kBACA,GAAG;AAAA,kBACH,GAAG;AAAA,kBACH,KAAK,cAAc,OAAO,CAAC;AAAA;cAEnC;AACI,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AAhE+D;AAA/D,cAAM,kCAAN;AAkEA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,mCAAkC,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACnG,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,0BAAyB,IAAKA,SAAQ,sCAAsC;AAEpF,gBAAM,8BAAN,MAAM,oCAAmC,0BAA0B;AAAA,YACjE,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,GAAI,iBAAiB,UAAW,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAClG,GAAI,iBAAiB,UAAW,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cACnI,CAAK;AAAA,YACL;AAAA,UACA;AATmE;AAAnE,cAAM,6BAAN;AAWA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,wCAAuC,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACxG,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,2BAA0B,IAAKA,SAAQ,cAAc;AAE7D,gBAAM,8BAAN,MAAM,oCAAmC,2BAA2B;AAAA,UAAA;AAAA;AAApE,cAAM,6BAAN;AAEA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,gBAAe,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAChF,gBAAM,EAAE,wBAAuB,IAAKE,SAAQ,mCAAmC;AAE/E,gBAAM,4BAAN,MAAM,kCAAiC,wBAAwB;AAAA,YAC7D,UAAUe,QAAO;AACf,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,kBAAI,KAAK,WAAW,aAAa;AAC/B,uBAAO,SAAU,iBAAiB,QAAS,KAAK,EAAE,MAAO,SAASA,MAAK,CAAC;AAAA;AAAA,cAC9E;AACI,qBAAO,WAAY,iBAAiB,QAAS,KAAK,EAAE;AAAA;AAAA,YACxD;AAAA,YAEE,YAAYA,QAAO;AACjB,kBAAI,KAAK,WAAW,YAAa;AACjC,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,cAAcA,MAAK;AAAA,YAC9D;AAAA,UACA;AAb+D;AAA/D,cAAM,2BAAN;AAeA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,qCAAoC,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAChF,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,6CAA4C,IAAKA,SAAQ,2DAA2D;AAE5H,gBAAM,iDAAN,MAAM,uDAAsD,6CAA6C;AAAA,YACvG,YAAY;AACV,oBAAM,EAAE,IAAI,QAAQ,aAAa,cAAc,WAAU,IAAK;AAC9D,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,qBAAqB,EAAE;AAAA,gBACvB,GAAI,iBAAiB,UAAW,MAAM,YAAY,YAAY,CAAC,CAAC,KAAK,YAAY,CAAC,CAAC;AAAA,gBACnF,GAAI,iBAAiB,UAAW,YAAY,YAAY,WAAW,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC;AAAA,cAC/G,CAAK;AAAA,YACL;AAAA,UACA;AAVyG;AAAzG,cAAM,gDAAN;AAYA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,6DAA4D,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC7H,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,8BAA6B,IAAKA,SAAQ,0CAA0C;AAE5F,gBAAM,kCAAN,MAAM,wCAAuC,8BAA8B;AAAA,YACzE,YAAY;AACV,oBAAM,EAAE,IAAI,QAAQ,aAAa,cAAc,WAAU,IAAK;AAC9D,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,+BAAgC,EAAE;AAAA,gBAC9C,GAAI,iBAAiB,UAAW,MAAM,YAAY,YAAY,CAAC,CAAC,KAAK,YAAY,CAAC,CAAC;AAAA,gBACnF,GAAI,iBAAiB,UAAW,YAAY,YAAY,WAAW,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC;AAAA,cAC/G,CAAK;AAAA,YACL;AAAA,UACA;AAV2E;AAA3E,cAAM,iCAAN;AAYA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,4CAA2C,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC5G,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,4BAA2B,IAAKA,SAAQ,wCAAwC;AAExF,gBAAM,gCAAN,MAAM,sCAAqC,4BAA4B;AAAA,YACrE,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,GAAI,iBAAiB,UAAW,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAClG,GAAI,iBAAiB,UAAW,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cACnI,CAAK;AAAA,YACL;AAAA,YAEE,YAAYe,QAAO;AACjB,kBAAIA,OAAM,gBAAgB,KAAK,yBAAyB;AACtD,qBAAK,sBAAsBA,OAAM,WAAW;AAC5C;AAAA,cACN;AACI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,oBAAM,UAAUA,QAAO,KAAK,WAAW;AACvC,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,KAAK;AAC5C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,SAAS,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,KAAK,WAAW;AAC5H,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AAvBuE;AAAvE,cAAM,+BAAN;AAyBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,0CAAyC,GAAE,CAAC,GAAE,IAAG,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC1G,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,+BAA8B,IAAKA,SAAQ,4CAA4C;AAE/F,gBAAM,mCAAN,MAAM,yCAAwC,+BAA+B;AAAA,YAC3E,YAAYe,QAAO;AACjB,kBAAIA,OAAM,gBAAgB,KAAK,yBAAyB;AACtD,qBAAK,sBAAsBA,OAAM,WAAW;AAC5C;AAAA,cACN;AACI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,oBAAM,UAAUA,QAAO,KAAK,WAAW;AACvC,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,KAAK;AAC5C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,SAAS,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,KAAK,WAAW;AAC5H,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AAd6E;AAA7E,cAAM,kCAAN;AAgBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,8CAA6C,GAAE,CAAC,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC/G,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,+BAA8B,IAAKA,SAAQ,4CAA4C;AAE/F,gBAAM,mCAAN,MAAM,yCAAwC,+BAA+B;AAAA,YAC3E,YAAYe,QAAO;AACjB,kBAAIA,OAAM,gBAAgB,KAAK,yBAAyB;AACtD,qBAAK,sBAAsBA,OAAM,WAAW;AAC5C;AAAA,cACN;AACI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,oBAAM,UAAUA,QAAO,KAAK,WAAW;AACvC,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,KAAK;AAC5C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,SAAS,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,KAAK,WAAW;AAC5H,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AAd6E;AAA7E,cAAM,kCAAN;AAgBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,8CAA6C,GAAE,CAAC,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC/G,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,+BAA8B,IAAKA,SAAQ,4CAA4C;AAE/F,gBAAM,mCAAN,MAAM,yCAAwC,+BAA+B;AAAA,YAC3E,YAAYe,QAAO;AACjB,kBAAIA,OAAM,gBAAgB,KAAK,yBAAyB;AACtD,qBAAK,sBAAsBA,OAAM,WAAW;AAC5C;AAAA,cACN;AACI,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,oBAAM,UAAUA,QAAO,KAAK,WAAW;AACvC,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,KAAK;AAC5C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,SAAS,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,KAAK,WAAW;AAC5H,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AAd6E;AAA7E,cAAM,kCAAN;AAgBA,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,8CAA6C,GAAE,CAAC,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC/G,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,4BAA2B,IAAKA,SAAQ,wCAAwC;AAExF,gBAAM,gCAAN,MAAM,sCAAqC,4BAA4B;AAAA,YACrE,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,GAAI,iBAAiB,UAAW,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAClG,GAAI,iBAAiB,UAAW,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cACnI,CAAK;AAAA,YACL;AAAA,YAEE,YAAY,OAAO;AACjB,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,oBAAM,UAAU,MAAM,OAAO,KAAK,WAAW;AAC7C,iBAAG,cAAc,KAAK,aAAa;AACnC,iBAAG,YAAY,GAAG,YAAY,KAAK,OAAO;AAC1C,iBAAG,YAAY,GAAG,qBAAqB,KAAK;AAC5C,iBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,SAAS,KAAK,YAAY,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO,KAAK,WAAW;AAC5H,mBAAK,OAAO,aAAa,KAAK,IAAI,KAAK,KAAK;AAAA,YAChD;AAAA,UACA;AAnBuE;AAAvE,cAAM,+BAAN;AAqBA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,0CAAyC,GAAE,CAAC,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3G,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,8BAA6B,IAAKA,SAAQ,0CAA0C;AAE5F,gBAAM,kCAAN,MAAM,wCAAuC,8BAA8B;AAAA,YACzE,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,GAAI,iBAAiB,UAAW,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAClG,GAAI,iBAAiB,UAAW,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cACnI,CAAK;AAAA,YACL;AAAA,UACA;AAT2E;AAA3E,cAAM,iCAAN;AAWA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,4CAA2C,GAAE,CAAC,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC7G,gBAAM,EAAE,MAAK,IAAKE,SAAQ,gBAAgB;AAC1C,gBAAM,EAAE,8BAA6B,IAAKA,SAAQ,0CAA0C;AAE5F,gBAAM,kCAAN,MAAM,wCAAuC,8BAA8B;AAAA,YACzE,YAAY;AACV,oBAAM,oBAAoB,KAAK,2BAA0B;AACzD,qBAAO,MAAM,cAAc;AAAA,gBACzB,WAAY,iBAAiB,cAAe,KAAK,EAAE;AAAA,gBACnD,GAAI,iBAAiB,UAAW,KAAK,MAAM,YAAY,KAAK,YAAY,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC;AAAA,gBAClG,GAAI,iBAAiB,UAAW,KAAK,YAAY,YAAY,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;AAAA,cACnI,CAAK;AAAA,YACL;AAAA,UACA;AAT2E;AAA3E,cAAM,iCAAN;AAWA,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,kBAAiB,KAAI,4CAA2C,GAAE,CAAC,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC7G,gBAAM,EAAE,YAAW,IAAKE,SAAQ,kBAAkB;AAClD,gBAAM,EAAE,mBAAkB,IAAKA,SAAQ,iBAAiB;AACxD,gBAAM,EAAE,gBAAe,IAAKA,SAAQ,qBAAqB;AACzD,gBAAM,EAAE,MAAK,IAAKA,SAAQ,aAAa;AACvC,gBAAM,EAAE,eAAc,IAAKA,SAAQ,mBAAmB;AACtD,gBAAM,EAAE,aAAY,IAAKA,SAAQ,iBAAiB;AAClD,gBAAM,EAAE,sBAAqB,IAAKA,SAAQ,qBAAqB;AAE/D,cAAI,cAAc;AAClB,cAAI,aAAa;AACjB,cAAI,cAAc;AAClB,cAAI,iBAAiB;AAErB,cAAI,WAAW;AAEf,gBAAM,gBAAN,MAAM,sBAAqB,YAAY;AAAA,YACrC,WAAW,cAAc;AACvB,kBAAI,gBAAgB,MAAM;AACxB,uBAAO;AAAA,cACb;AACI,mBAAK,mBAAkB;AACvB,4BAAc,KAAK,eAAe,WAAW;AAC7C,qBAAO;AAAA,YACX;AAAA,YAEE,OAAO,qBAAqB;AAC1B,kBAAI,OAAO,aAAa,aAAa;AACnC,6BAAa,SAAS,cAAc,QAAQ;AAAA,cAClD,WAAe,OAAO,oBAAoB,aAAa;AACjD,6BAAa,IAAI,gBAAgB,GAAG,CAAC;AAAA,cAC3C;AACI,kBAAI,CAAC,WAAY;AACjB,4BAAc,WAAW,WAAW,QAAQ;AAC5C,kBAAI,CAAC,eAAe,CAAC,YAAY,aAAc;AAC/C,+BAAiB;AAAA,gBACf,wBAAwB,YAAY,aAAa,wBAAwB;AAAA,gBACzE,0BAA0B,YAAY,aAAa,0BAA0B;AAAA;AAE/E,yBAAW,KAAK,YAAW;AAAA,YAC/B;AAAA,YAEE,OAAO,eAAe,SAAS;AAC7B,kBAAI,OAAO,2BAA2B,aAAa;AACjD,uBAAO,mBAAmB;AAAA,cAChC;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,OAAO,cAAc;AACnB,oBAAM,KAAK,KAAK;AAChB,qBAAO,OAAO,OAAO;AAAA,gBACnB,aAAa,KAAK,eAAc;AAAA,gBAChC,2BAA2B,KAAK,6BAA4B;AAAA,gBAC5D,wBAAwB,KAAK,0BAAyB;AAAA,gBACtD,WAAW;AAAA,gBACX,gBAAgB;AAAA,gBAChB,eAAe;AAAA,gBACf,cAAc,KAAK,gBAAe;AAAA,gBAClC,gBAAgB,KAAK,kBAAiB;AAAA,gBACtC,iBAAiB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,OAAO;AAAA,gBAC3E,mBAAmB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,SAAS;AAAA,gBAC/E,oBAAoB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,UAAU;AAAA,gBACjF,sBAAsB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,YAAY;AAAA,gBACrF,kBAAkB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,QAAQ;AAAA,gBAC7E,oBAAoB,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,UAAU;AAAA,cACvF,CAAK;AAAA,YACL;AAAA,YAEE,OAAO,oBAAoB;AACzB,qBAAO;AAAA,YACX;AAAA,YAEE,OAAO,kBAAkB;AACvB,qBAAO,YAAY,aAAa,YAAY,gBAAgB;AAAA,YAChE;AAAA,YAEE,OAAO,oBAAoB;AACzB,qBAAO,YAAY,aAAa,YAAY,gBAAgB;AAAA,YAChE;AAAA,YAEE,OAAO,sBAAsB,MAAM,SAAS,WAAWe,QAAO;AAC5D,qBAAO,sBAAsB,MAAM,SAAS,WAAWA,MAAK;AAAA,YAChE;AAAA,YAEE,WAAW,aAAa;AACtB,qBAAO;AAAA,YACX;AAAA,YAEE,WAAW,cAAc;AACvB,qBAAO;AAAA,YACX;AAAA,YAEE,WAAW,WAAW;AACpB,qBAAO;AAAA,YACX;AAAA,YAEE,WAAW,iBAAiB;AAC1B,qBAAO;AAAA,YACX;AAAA,YACE,WAAW,eAAe;AACxB,qBAAO;AAAA,YACX;AAAA,YAEE,cAAc;AACZ,oBAAM,WAAW;AAAA,gBACf,OAAO;AAAA,gBACP,OAAO;AAAA,gBACP,WAAW;AAAA;AAEb,qBAAO,KAAK,OAAO,WAAW,UAAU,QAAQ;AAAA,YACpD;AAAA,YAEE,iBAAiB;AACf,mBAAK,aAAa;AAAA,gBAChB,wBAAwB,KAAK,QAAQ,aAAa,wBAAwB;AAAA,gBAC1E,0BAA0B,KAAK,QAAQ,aAAa,0BAA0B;AAAA;YAEpF;AAAA,YAEE,iBAAiB,MAAM;AACrB,kBAAI,CAAC,KAAK,UAAU;AAClB,qBAAK,UAAU,MAAM,qBAAqB;AAAA,kBACxC,qBAAqB,KAAK;AAAA,kBAC1B,WAAW,KAAK;AAAA,gBACxB,GAAS,KAAK,MAAM;AACd;AAAA,cACN;AAEI,oBAAM,EAAE,UAAAe,cAAa,KAAK;AAC1B,kBAAI,KAAK,cAAc,YAAY,CAACA,UAAS,aAAa;AACxD,sBAAM,IAAI,MAAM,yCAAyC;AAAA,cAC/D,WAAe,CAAC,KAAK,aAAa,KAAK,cAAc,MAAM;AACrD,qBAAK,YAAYA,UAAS,cAAc,WAAW;AAAA,cACzD;AAEI,kBAAI,KAAK,+BAA+B,MAAM;AAC5C,qBAAK,6BAA6B,CAACA,UAAS;AAAA,cAClD,WAAe,KAAK,8BAA8BA,UAAS,2BAA2B;AAChF,qBAAK,6BAA6B;AAAA,cACxC;AAEI,mBAAK,YAAW;AAEhB,kBAAI,CAAC,KAAK,UAAU,KAAK,OAAO,WAAW,GAAG;AAC5C,oBAAI,KAAK,WAAW,GAAG;AACrB,wBAAM,IAAI,MAAM,4DAA4D;AAAA,gBACpF;AAEM,sBAAM,UAAU,MAAM,gBAAgB,KAAK,CAAC,GAAG,KAAK,cAAc;AAClE,wBAAQ,SAAO;AAAA,kBACb,KAAK;AACH,yBAAK,SAAS,MAAM,cAAc,OAAO;AACzC;AAAA,kBACF,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACH,yBAAK,SAAS,KAAK,CAAC,EAAE;AACtB;AAAA,kBACF;AACE,0BAAM,IAAI,MAAM,+CAA+C,OAAO;AAAA,gBAChF;AAAA,cACA;AAEI,kBAAI,KAAK,WAAW;AAClB,oBAAI,KAAK,OAAO,WAAW,GAAG;AAC5B,wBAAM,IAAI,MAAM,iDAAiD;AAAA,gBACzE;AAEM,oBAAI,KAAK,cAAc,UAAU;AAC/B,0BAAQ,KAAK,iEAAiE;AAC9E,uBAAK,YAAY;AAAA,gBACzB;AAEM,qBAAK,UAAU,MAAM,MAAM,KAAK,MAAM;AACtC;AAAA,cACN,WAAe,CAAC,KAAK,aAAa,KAAK,cAAc,QAAQA,UAAS,gBAAgB;AAChF,qBAAK,YAAY;AAAA,cACvB;AAEI,mBAAK,UAAU,MAAM,qBAAqB;AAAA,gBACxC,qBAAqB,KAAK;AAAA,gBAC1B,WAAW,KAAK;AAAA,cACtB,GAAO,KAAK,MAAM;AAEd,mBAAK,iBAAgB;AAAA,YACzB;AAAA,YAEE,kBAAkB;AAChB,oBAAM,kBAAkB,gBAAgB,WAAW,MAAM,oBAAoB;AAAA,gBAC3E,4BAA4B,KAAK;AAAA,cACvC,CAAK;AACD,mBAAK,mBAAmB,gBAAgB,mBAAmB,QAAQ;AACnE,mBAAK,iBAAiB,eAAe;AAAA,YACzC;AAAA,YAEE,cAAc;AACZ,mBAAK,QAAQ,YAAY,KAAK,cAAc;AAAA,YAChD;AAAA,YAEE,mBAAmB;AACjB,oBAAM,EAAE,SAAS,GAAE,IAAK;AACxB,sBAAQ,KAAK,kBAAiB,GAAE;AAAA,gBAC9B,KAAK,GAAG;AACN,yBAAO,GAAG;AAAA,gBACZ,KAAK,GAAG;AACN,yBAAO,GAAG;AAAA,gBACZ,KAAK,GAAG;AACN,yBAAO,GAAG;AAAA,gBACZ,KAAK,GAAG;AACN,yBAAO,GAAG;AAAA,gBACZ;AACE,wBAAM,IAAI,MAAM,yBAAyB;AAAA,cACjD;AAAA,YACA;AAAA,YACE,oBAAoB;AAClB,oBAAM,EAAE,SAAS,GAAE,IAAK;AAExB,kBAAI,KAAK,cAAc,UAAU;AAC/B,oBAAI,KAAK,UAAU;AACjB,0BAAQ,KAAK,YAAU;AAAA,oBACrB,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AACH,0BAAI,KAAK,qBAAqB;AAC5B,+BAAO,GAAG;AAAA,sBACxB,OAAmB;AACL,+BAAO,GAAG;AAAA,sBACxB;AAAA,oBACY,KAAK;AACH,6BAAO,GAAG;AAAA,oBACZ,KAAK;AAAA,oBACL,KAAK;AACH,6BAAO,GAAG;AAAA,oBACZ;AACE,4BAAM,IAAI,MAAM,uBAAuB;AAAA,kBACrD;AAAA,gBACA;AACM,uBAAO,GAAG;AAAA,cAChB;AACI,qBAAO,GAAG;AAAA,YACd;AAAA,YAEE,sBAAsB;AACpB,oBAAM,KAAK,KAAK;AAChB,kBAAI,KAAK,SAAS;AAChB,mBAAG,qBAAqB,GAAG,aAAa,GAAG,mBAAmB,GAAG,YAAY,KAAK,QAAQ,SAAS,CAAC;AACpG;AAAA,cACN;AACI,iBAAG,gBAAgB,GAAG,aAAa,KAAK,WAAW;AACnD,oBAAM,UAAU,GAAG,cAAa;AAChC,oBAAM,UAAU,KAAK;AACrB,iBAAG,cAAc,GAAG,WAAW,KAAK,uBAAuB,KAAK,oBAAoB;AACpF,iBAAG,YAAY,GAAG,YAAY,OAAO;AACrC,iBAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,MAAM;AAC5D,iBAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,MAAM;AAC5D,iBAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AACjE,iBAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AACjE,oBAAM,SAAS,KAAK,kBAAiB;AACrC,kBAAI,KAAK,cAAc,UAAU;AAC/B,mBAAG,aAAa,GAAG,YAAY,GAAG,QAAQ,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;AAAA,cACtE,OAAW;AACL,mBAAG,WAAW,GAAG,YAAY,GAAG,QAAQ,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,QAAQ,GAAG,eAAe,IAAI;AAAA,cACvG;AACI,iBAAG,qBAAqB,GAAG,aAAa,GAAG,mBAAmB,GAAG,YAAY,SAAS,CAAC;AACvF,mBAAK,UAAU,IAAI,KAAK,mBAAmB;AAAA,gBACzC;AAAA,gBACA,MAAM;AAAA,gBACN,YAAY,KAAK;AAAA,gBACjB,QAAQ,KAAK;AAAA,gBACb,SAAS,KAAK;AAAA,gBACd,gBAAgB,KAAK,kBAAiB;AAAA,gBACtC,eAAe,KAAK,iBAAgB;AAAA,gBACpC,QAAQ;AAAA,cACd,CAAK;AAAA,YACL;AAAA,YAEE,0BAA0B;AACxB,oBAAM,KAAK,KAAK;AAChB,kBAAI,KAAK,gBAAgB;AACvB,yBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,qBAAG,qBAAqB,GAAG,aAAa,GAAG,oBAAoB,IAAI,GAAG,GAAG,YAAY,KAAK,eAAe,CAAC,EAAE,SAAS,CAAC;AAAA,gBAC9H;AACM;AAAA,cACN;AACI,oBAAM,UAAU,KAAK;AACrB,mBAAK,iBAAiB,CAAC,GAAG,iBAAiB;AAC3C,mBAAK,iBAAiB,CAAA;AACtB,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,sBAAM,UAAU,KAAK,cAAa;AAClC,qBAAK,eAAe,KAAK,GAAG,oBAAoB,IAAI,CAAC;AACrD,mBAAG,cAAc,GAAG,WAAW,KAAK,uBAAuB,KAAK,uBAAuB,CAAC;AACxF,mBAAG,YAAY,GAAG,YAAY,OAAO;AACrC,mBAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,mBAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,mBAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AACjE,mBAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AACjE,sBAAM,SAAS,KAAK,kBAAiB;AACrC,oBAAI,KAAK,cAAc,UAAU;AAC/B,qBAAG,aAAa,GAAG,YAAY,GAAG,QAAQ,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;AAAA,gBACxE,OAAa;AACL,qBAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,eAAe,IAAI;AAAA,gBAC3G;AACM,mBAAG,qBAAqB,GAAG,aAAa,GAAG,oBAAoB,IAAI,GAAG,GAAG,YAAY,SAAS,CAAC;AAE/F,qBAAK,eAAe,KAAK,IAAI,KAAK,mBAAmB;AAAA,kBACnD;AAAA,kBACA,MAAM;AAAA,kBACN,YAAY,KAAK;AAAA,kBACjB,QAAQ,KAAK;AAAA,kBACb,SAAS,KAAK;AAAA,kBACd,gBAAgB,KAAK,kBAAiB;AAAA,kBACtC,eAAe,KAAK,iBAAgB;AAAA,kBACpC,QAAQ;AAAA,gBAChB,CAAO,CAAC;AAAA,cACR;AAAA,YACA;AAAA,YAEE,mBAAmB;AACjB,qBAAO;AAAA,YACX;AAAA,YAEE,wBAAwB;AACtB,oBAAM,aAAa,KAAK;AACxB,oBAAM,oBAAoB,KAAK,2BAA2B,KAAK,SAAS,KAAK,MAAM;AACnF,kBAAI,eAAe,QAAQ,WAAW,SAAS,GAAG;AAChD,uBAAO,MAAO,iBAAiB;AAAA;AAAA,cACrC,OAAW;AACL,uBAAO,OAAQ,iBAAiB;AAAA;AAAA,cACtC;AAAA,YACA;AAAA,YAEE,wBAAwB,MAAM;AAC5B,oBAAM,SAAS,CAAA;AACf,oBAAM,gBAAgB,KAAK;AAC3B,uBAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,uBAAO,KAAK,KAAK,gBAAgB,CAAC,EAAE,UAAU,KAAK,CAAC,CAAC,CAAC;AAAA,cAC5D;AACI,qBAAO,OAAO,KAAK,EAAE;AAAA,YACzB;AAAA,YAEE,kBAAkB;AAChB,oBAAM,SAAS,CAAC,KAAK,4BAA4B;AACjD,oBAAM,aAAa,KAAK;AACxB,kBAAI,eAAe,MAAM;AACvB,uBAAO;AAAA,kBACL;AAAA;AAEF,wBAAQ,KAAK,YAAU;AAAA,kBACrB,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACH,6BAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,4BAAM,YAAY,WAAW,CAAC;AAC9B,6BAAO;AAAA,wBACL,UAAU,eAAe,YACzB,uBAAwB,UAAU,IAAI,SACtC,yBAA0B,UAAU,IAAI;AAAA,wBACxC,qBAAsB,IAAI,CAAC,kBAAoB,IAAI,CAAC;AAAA;oBAElE;AACU;AAAA,kBACF,KAAK;AACH,6BAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,6BAAO;AAAA,wBACL,wBAAyB,WAAW,CAAC,EAAE,IAAI;AAAA,wBAC3C,qBAAsB,IAAI,CAAC,kBAAoB,IAAI,CAAC;AAAA;oBAElE;AACU;AAAA,kBACF,KAAK;AACH,6BAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,6BAAO;AAAA,wBACL,wBAAyB,WAAW,CAAC,EAAE,IAAI;AAAA,wBAC3C,qBAAsB,IAAI,CAAC,kBAAoB,IAAI,CAAC;AAAA;oBAElE;AACU;AAAA,kBACF,KAAK;AACH,6BAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,6BAAO;AAAA,wBACL,wBAAyB,WAAW,CAAC,EAAE,IAAI;AAAA,wBAC3C,qBAAsB,IAAI,CAAC,kBAAoB,IAAI,CAAC;AAAA;oBAElE;AACU;AAAA,gBACV;AAAA,cACA,OAAW;AACL,uBAAO;AAAA,kBACL;AAAA;cAER;AAEI,qBAAO,MAAM,cAAc,MAAM,IAAI,KAAK;AAAA,YAC9C;AAAA,YAEE,yBAAyB;AACvB,qBAAO,MAAM,cAAc;AAAA,gBACzB;AAAA,gBACA;AAAA,gBACA;AAAA,cACN,CAAK;AAAA,YACL;AAAA,YAEE,4BAA4B;AAC1B,sBAAQ,KAAK,YAAU;AAAA,gBACrB,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AAAA,gBACL,KAAK;AACH,yBAAO,KAAK,gCAA+B,IACzC,KAAK,mCAAkC;AAAA,gBAC3C;AACE,wBAAM,IAAI,MAAM,4CAA4C,KAAK,UAAU,aAAa;AAAA,cAChG;AAAA,YACA;AAAA,YAEE,kCAAkC;AAChC,qBAAO,MAAM,cAAc;AAAA,gBACzB;AAAA,gBACA;AAAA,gBACA,aAAa,KAAK,mBAAmB,mBAAmB,UAAU;AAAA,cACxE,CAAK;AAAA,YACL;AAAA,YAEE,qCAAqC;AACnC,oBAAM,SAAS,CAAA;AACf,kBAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,sBAAM,YAAY,KAAK,WAAW,CAAC;AACnC,oBAAI,UAAU,eAAe,WAAW;AACtC,yBAAO;AAAA,oBACL,SAAS,IAAI,CAAC,MAAM,KAAK,mBAAmB,mBAAmB,UAAU,0BAA0B,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;gBAEpI,OAAa;AACL,yBAAO;AAAA,oBACL,SAAS,IAAI,CAAC,MAAM,KAAK,mBAAmB,mBAAmB,UAAU,oBAAoB,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;gBAE9H;AAAA,cACA;AACI,qBAAO,MAAM,cAAc,MAAM;AAAA,YACrC;AAAA,YAEE,yCAAyC,QAAQ,SAAS;AACxD,qBAAO;AAAA,gBACL;AAAA,gBACA;AAAA,gBACA,WAAW,OAAO;AAAA;YAExB;AAAA,YAEE,4CAA4C,QAAQ,SAAS;AAC3D,kBAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,sBAAM,YAAY,KAAK,WAAW,CAAC;AACnC,oBAAI,UAAU,eAAe,WAAW;AACtC,yBAAO;AAAA,oBACL,SAAS,IAAI,CAAC,IAAI,OAAO,4BAA4B,UAAU,IAAI;AAAA;gBAE7E,OAAa;AACL,yBAAO;AAAA,oBACL,SAAS,IAAI,CAAC,IAAI,OAAO,sBAAsB,UAAU,IAAI;AAAA;gBAEvE;AAAA,cACA;AAAA,YACA;AAAA,YAEE,mCAAmC;AACjC,qBAAO;AAAA,gBACL;AAAA,gBACA;AAAA,gBACA;AAAA;YAEN;AAAA,YAEE,sCAAsC;AACpC,oBAAM,SAAS,CAAA;AACf,kBAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,EAAE,GAAG;AAC/C,sBAAM,YAAY,KAAK,WAAW,CAAC;AACnC,oBAAI,UAAU,eAAe,WAAW;AACtC,yBAAO;AAAA,oBACL,SAAS,IAAI,CAAC,+BAA+B,UAAU,IAAI;AAAA;gBAErE,OAAa;AACL,yBAAO;AAAA,oBACL,SAAS,IAAI,CAAC,yBAAyB,UAAU,IAAI;AAAA;gBAE/D;AAAA,cACA;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,mCAAmC;AACjC,qBAAO;AAAA,gBACL;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA;YAEN;AAAA,YAEE,sCAAsC;AACpC,oBAAM,SAAS,CAAA;AACf,kBAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,EAAE,GAAG;AAC/C,sBAAM,YAAY,KAAK,WAAW,CAAC;AACnC,uBAAO;AAAA,kBACL,SAAS,IAAI,CAAC,yBAAyB,UAAU,IAAI;AAAA,kBACrD,SAAS,IAAI,CAAC,yBAAyB,UAAU,IAAI;AAAA;cAE7D;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,mCAAmC;AACjC,qBAAO;AAAA,gBACL;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA;YAEN;AAAA,YAEE,sCAAsC;AACpC,oBAAM,SAAS,CAAA;AACf,kBAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,EAAE,GAAG;AAC/C,sBAAM,YAAY,KAAK,WAAW,CAAC;AACnC,uBAAO;AAAA,kBACL,SAAS,IAAI,CAAC,yBAAyB,UAAU,IAAI;AAAA,kBACrD,SAAS,IAAI,CAAC,yBAAyB,UAAU,IAAI;AAAA,kBACrD,SAAS,IAAI,CAAC,yBAAyB,UAAU,IAAI;AAAA;cAE7D;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,mCAAmC;AACjC,qBAAO;AAAA,gBACL;AAAA,gBACA;AAAA,gBACA;AAAA;YAEN;AAAA,YAEE,sCAAsC;AACpC,oBAAM,SAAS,CAAA;AACf,kBAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,uBAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,EAAE,GAAG;AAC/C,uBAAO;AAAA,kBACL,SAAS,IAAI,CAAC,sBAAsB,KAAK,WAAW,CAAC,EAAE,IAAI;AAAA;cAEnE;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,oBAAoB;AAClB,mBAAK,WAAW,yBAAyB;AACzC,mBAAK,WAAW,2BAA2B;AAAA,YAC/C;AAAA,YAEE,SAAS;AACP,oBAAM,OAAO,MAAM,OAAM;AACzB,mBAAK,gBAAgB,gBAAgB,WAAW,MAAM,kBAAkB,EAAE,OAAM;AAChF,mBAAK,SAAS,YAAY,KAAK;AAC/B,qBAAO;AAAA,YACX;AAAA,UACA;AA5iBuC;AAAvC,cAAM,eAAN;AA8iBA,UAAAnC,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,eAAc,KAAI,uBAAsB,GAAE,oBAAmB,IAAG,qBAAoB,IAAG,mBAAkB,IAAG,uBAAsB,IAAG,mBAAkB,IAAG,CAAC,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACrM,gBAAM,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBrB,UAAAH,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,CAAA,CAAE,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3C,gBAAM,MAAME,SAAQ,SAAS;AAC7B,gBAAM,MAAM,IAAI;AAChB,qBAAW,KAAK,KAAK;AACnB,gBAAI,CAAC,IAAI,eAAe,CAAC,EAAG;AAC5B,gBAAI,MAAM,MAAO;AACjB,gBAAI,CAAC,IAAI,IAAI,CAAC;AAAA,UAChB;AAEA,cAAI,OAAO,WAAW,aAAa;AACjC,mBAAO,MAAM;AAAA,UACf;AACA,cAAI,OAAO,SAAS,aAAa;AAC/B,mBAAO,IAAI;AAAA,UACb;AAEA,mBAAS,OAAO,QAAQ;AACtB,gBAAI,OAAO,IAAK;AAChB,mBAAO,eAAe,QAAQ,OAAO;AAAA,cACnC,MAAM;AACJ,uBAAO;AAAA,cACb;AAAA,YACA,CAAG;AAAA,UACH;AAPS;AAST,UAAAL,QAAO,UAAU;AAAA,QACjB,GAAE,EAAC,WAAU,IAAG,CAAC,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACxD,gBAAM,EAAE,QAAO,IAAKE,SAAQ,aAAa;AACzC,gBAAM,EAAE,MAAK,IAAKA,SAAQ,SAAS;AACnC,gBAAM,EAAE,OAAM,IAAKA,SAAQ,kBAAkB;AAC7C,gBAAM,EAAE,UAAS,IAAKA,SAAQ,sBAAsB;AACpD,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,8BAA8B;AACnE,gBAAM,EAAE,aAAY,IAAKA,SAAQ,0BAA0B;AAC3D,gBAAM,EAAE,YAAW,IAAKA,SAAQ,yBAAyB;AACzD,gBAAM,EAAE,kBAAiB,IAAKA,SAAQ,uBAAuB;AAG7D,gBAAM,cAAc,CAAC,kBAAkB,cAAc,WAAW;AAEhE,gBAAM,cAAc,CAAC,OAAO,KAAK;AAEjC,gBAAM,kBAAkB;AAAA,YACtB,cAAc;AAAA,YACd,UAAU;AAAA,YACV,SAAS;AAAA;AAGX,cAAI,WAAW;AAEf,gBAAM,OAAN,MAAM,KAAI;AAAA,YACR,OAAO,oBAAoB;AACzB,yBAAW;AAAA,YACf;AAAA,YAEE,OAAO,mBAAmB;AACxB,yBAAW;AAAA,YACf;AAAA,YAEE,WAAW,iBAAiB;AAC1B,qBAAO,YAAY,KAAK,CAAA+B,YAAUA,QAAO,WAAW;AAAA,YACxD;AAAA,YAEE,WAAW,uBAAuB;AAChC,qBAAO,YAAY,KAAK,CAAAA,YAAUA,QAAO,eAAeA,QAAO,SAAS,SAAS;AAAA,YACrF;AAAA,YAEE,WAAW,6BAA6B;AACtC,qBAAQ,OAAO,WAAW,eAAe,OAAO,oBAAoB,eAAgB,OAAO,kBAAkB;AAAA,YACjH;AAAA,YAEE,WAAW,mBAAmB;AAC5B,qBAAO,YAAY;AAAA,YACvB;AAAA,YAEE,WAAW,oBAAoB;AAC7B,qBAAO,aAAa;AAAA,YACxB;AAAA,YAEE,WAAW,wBAAwB;AACjC,qBAAO,iBAAiB;AAAA,YAC5B;AAAA,YAEE,WAAW,oBAAoB;AAC7B,qBAAO,OAAO,sBAAsB;AAAA,YACxC;AAAA,YAEE,WAAW,+BAA+B;AACxC,qBAAO,aAAa;AAAA,YACxB;AAAA,YAEE,WAAW,6BAA6B;AACtC,qBAAO,YAAY,KAAK,CAAAA,YAAUA,QAAO,eAAeA,QAAO,SAAS,eAAeA,QAAO,SAAS,cAAc;AAAA,YACzH;AAAA,YAEE,YAAY,UAAU;AACpB,yBAAW,YAAY,CAAA;AACvB,mBAAK,SAAS,SAAS,UAAU;AACjC,mBAAK,UAAU,SAAS,WAAW;AACnC,mBAAK,OAAO,SAAS;AACrB,mBAAK,SAAS;AACd,mBAAK,UAAU,CAAA;AACf,mBAAK,YAAY,CAAA;AACjB,mBAAK,kBAAkB,CAAA;AACvB,mBAAK,iBAAiB;AACtB,kBAAI,KAAK,SAAS,MAAO;AACzB,mBAAK,aAAY;AACjB,kBAAI,SAAS,WAAW;AACtB,yBAAS,IAAI,GAAG,IAAI,SAAS,UAAU,QAAQ,KAAK;AAClD,uBAAK,YAAY,SAAS,UAAU,CAAC,CAAC;AAAA,gBAC9C;AAAA,cACA;AAEI,kBAAI,SAAS,iBAAiB;AAC5B,2BAAW,KAAK,SAAS,iBAAiB;AACxC,sBAAI,CAAC,SAAS,gBAAgB,eAAe,CAAC,EAAG;AACjD,wBAAM,IAAI,SAAS,gBAAgB,CAAC;AACpC,wBAAM,EAAE,MAAA3B,OAAM,OAAM,IAAK;AACzB,uBAAK,kBAAkBA,OAAM,QAAQ,CAAC;AAAA,gBAC9C;AAAA,cACA;AAAA,YACA;AAAA,YAEE,eAAe;AACb,kBAAI,KAAK,OAAQ;AAEjB,kBAAI2B,UAAS;AAEb,kBAAI,KAAK,SAAS;AAChB,yBAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,wBAAM,iBAAiB,YAAY,CAAC;AACpC,sBAAI,eAAe,eAAe,KAAK,OAAO,GAAG;AAC/C,wBAAI,CAAC,eAAe,aAAa;AAC/B,4BAAM,IAAI,MAAM,eAAe,eAAe,IAAI,gBAAgB;AAAA,oBAC9E;AACU,oBAAAA,UAAS;AACT;AAAA,kBACV;AAAA,gBACA;AACM,oBAAIA,YAAW,MAAM;AACnB,wBAAM,IAAI,MAAM,iBAAiB;AAAA,gBACzC;AAAA,cACA,WAAe,KAAK,MAAM;AACpB,oBAAI,KAAK,QAAQ,iBAAiB;AAChC,sBAAI,CAAC,YAAY,gBAAgB,KAAK,IAAI,EAAE,aAAa;AACvD,oBAAAA,UAAS,gBAAgB,KAAK,IAAI;AAAA,kBAC5C;AAAA,gBACA,WAAiB,KAAK,SAAS,OAAO;AAC9B,2BAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,wBAAI,YAAY,CAAC,EAAE,aAAa;AAC9B,sBAAAA,UAAS,YAAY,CAAC;AACtB;AAAA,oBACZ;AAAA,kBACA;AAAA,gBACA,WAAiB,KAAK,SAAS,OAAO;AAC9B,kBAAAA,UAAS;AAAA,gBACjB;AACM,oBAAI,CAACA,SAAQ;AACX,wBAAM,IAAI,MAAM,wBAAwB,KAAK,IAAI,wBAAwB;AAAA,gBACjF;AAAA,cACA,OAAW;AACL,yBAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,sBAAI,YAAY,CAAC,EAAE,aAAa;AAC9B,oBAAAA,UAAS,YAAY,CAAC;AACtB;AAAA,kBACV;AAAA,gBACA;AACM,oBAAI,CAACA,SAAQ;AACX,kBAAAA,UAAS;AAAA,gBACjB;AAAA,cACA;AAEI,kBAAI,CAAC,KAAK,MAAM;AACd,qBAAK,OAAOA,QAAO;AAAA,cACzB;AACI,mBAAK,SAASA;AAAA,YAClB;AAAA,YAEE,aAAa,QAAQ,UAAU;AAC7B,kBAAI,OAAO,WAAW,aAAa;AACjC,sBAAM,IAAI,MAAM,0BAA0B;AAAA,cAChD;AACI,kBAAI,OAAO,WAAW,YAAY,CAAC,MAAM,WAAW,MAAM,KAAK,OAAO,WAAW,UAAU;AACzF,sBAAM,IAAI,MAAM,iCAAiC;AAAA,cACvD;AAEI,oBAAM,UAAU,KAAK;AACrB,kBAAI,KAAK,SAAS,OAAO;AACvB,sBAAM,YAAY,QAAQ,QAAQ,sCAAsC,QAAQ,CAAC;AACjF,wBAAQ,KAAK,SAAS;AACtB,uBAAO;AAAA,cACb;AAEI,uBAAS,OAAO,WAAW,aAAa,OAAO,SAAQ,IAAK;AAC5D,oBAAM,oBAAoB,CAAA;AAC1B,oBAAM,eAAe,sCAAsC,QAAQ,KAAK,CAAA;AACxE,kBAAI,YAAY,OAAO,SAAS,kBAAkB,UAAU;AAC1D,6BAAa,gBAAgB,OAAO,KAAK,SAAS,aAAa,EAAE,IAAI,kBAAgB,SAAS,cAAc,YAAY,CAAC;AAAA,cAC/H;AAEI,uBAAS,kBAAkB,MAAM;AAC/B,wBAAQ,KAAK,qBAAqB;AAClC,sBAAM,iBAAiB,IAAI,UAAU,QAAQ;AAAA,kBAC3C,eAAe,UAAU;AAAA,kBACzB,eAAe,UAAU;AAAA,kBACzB,WAAW,UAAU;AAAA,kBACrB,mBAAmB,UAAU;AAAA,kBAC7B,WAAW,UAAU;AAAA,kBACrB,eAAe,UAAU;AAAA,kBACzB,iBAAiB,UAAU;AAAA,kBAC3B,QAAQ,UAAU;AAAA,kBAClB,WAAW,UAAU;AAAA,kBACrB,UAAU,UAAU;AAAA,kBACpB,WAAW,UAAU;AAAA,kBACrB,qBAAqB,UAAU;AAAA,kBAC/B,4BAA4B,UAAU;AAAA,kBACtC,WAAW,UAAU;AAAA,kBACrB,iBAAiB,UAAU;AAAA,kBAC3B,gBAAgB,UAAU;AAAA,kBAC1B,YAAY,UAAU;AAAA,kBACtB,gBAAgB,UAAU;AAAA,kBAC1B,OAAO,UAAU;AAAA,gBACzB,CAAO;AACD,+BAAe,MAAM,MAAM,gBAAgB,IAAI;AAC/C,sBAAM,SAAS,eAAe,IAAI,MAAM,gBAAgB,IAAI;AAC5D,0BAAU,cAAc,cAAc;AACtC,uBAAO;AAAA,cACb;AA3Ba;AA6BT,uBAAS,sBAAsB,SAAS,MAAM,SAAS;AACrD,oBAAI,QAAQ,OAAO;AACjB,0BAAQ,KAAK,mBAAmB;AAAA,gBACxC;AACM,oBAAI,YAAY;AAChB,oBAAI,QAAQ,aAAa,CAAC,kBAAkB,QAAQ,SAAS,GAAG;AAC9D,oCAAkB,QAAQ,SAAS,IAAI;AAAA,gBAC/C;AACM,oBAAI,QAAQ,eAAe;AACzB,2BAAS,IAAI,QAAQ,SAAS,GAAG,KAAK,GAAG,KAAK;AAC5C,0BAAM,SAAS,QAAQ,CAAC;AACxB,wBAAI,OAAO,SAAS,2BAA2B;AAC7C,kCAAY,OAAO;AAAA,oBAC/B;AAAA,kBACA;AAAA,gBACA;AAEM,sBAAM,cAAc,QAAQ;AAC5B,sBAAM,gBAAgB,YAAY,iBAAiB,SAAS,IAAI;AAChE,sBAAM,YAAY,YAAY,aAAa,SAAS,aAAa;AACjE,sBAAM,iBAAiB,kBAAkB,SAAS;AAClD,oBAAI,gBAAgB;AAClB,iCAAe,WAAW,OAAO;AACjC,yBAAO;AAAA,gBACf;AAEM,sBAAM,YAAY,kBAAkB,SAAS,IAAI,IAAI,YAAY,QAAQ;AAAA,kBACvE;AAAA,kBACA,eAAe,QAAQ;AAAA,kBACvB,WAAW,QAAQ;AAAA,kBACnB,mBAAmB,QAAQ;AAAA,kBAC3B,WAAW,QAAQ;AAAA,kBACnB,eAAe,QAAQ;AAAA,kBACvB,iBAAiB,QAAQ;AAAA,kBACzB,SAAS,QAAQ;AAAA,kBACjB,QAAQ,QAAQ;AAAA,kBAChB,QAAQ,aAAa,QAAQ;AAAA,kBAC7B,WAAW,QAAQ;AAAA,kBACnB,UAAU,QAAQ;AAAA,kBAClB,WAAW,QAAQ;AAAA,kBACnB,qBAAqB,QAAQ;AAAA,kBAC7B,4BAA4B,QAAQ;AAAA,kBACpC,WAAW,QAAQ;AAAA,kBACnB,iBAAiB,QAAQ;AAAA,kBACzB,gBAAgB,QAAQ;AAAA,kBACxB,YAAY,QAAQ;AAAA,kBACpB,gBAAgB,QAAQ;AAAA,kBACxB,OAAO,QAAQ;AAAA,kBACf,KAAK,QAAQ;AAAA,kBACb;AAAA,kBACA,YAAY,QAAQ;AAAA,kBACpB,QAAQ,QAAQ;AAAA,kBAChB;AAAA,kBACA;AAAA,kBACA,SAAS,QAAQ;AAAA,kBACjB,gBAAgB,QAAQ;AAAA,kBACxB,gBAAgB,QAAQ;AAAA,gBAChC,CAAO;AACD,0BAAU,MAAM,MAAM,WAAW,IAAI;AACrC,0BAAU,cAAc,SAAS;AACjC,wBAAQ,KAAK,SAAS;AACtB,uBAAO;AAAA,cACb;AA9Da;AA+DT,oBAAM,iBAAiB,OAAO,OAAO;AAAA,gBACnC,SAAS,KAAK;AAAA,gBACd,QAAQ,KAAK;AAAA,gBACb,WAAW,KAAK;AAAA,gBAChB,iBAAiB,KAAK;AAAA,gBACtB,gBAAgB,KAAK;AAAA,gBACrB,KAAK;AAAA,gBACL;AAAA,gBACA;AAAA,gBACA;AAAA,iBACC,YAAY;AAEf,oBAAM,SAAS,IAAI,KAAK,OAAO,QAAQ,cAAc;AACrD,oBAAM,YAAY,kBAAkB,MAAM;AAE1C,kBAAI,CAAC,KAAK,QAAQ;AAChB,qBAAK,SAAS,OAAO;AAAA,cAC3B;AAEI,kBAAI,CAAC,KAAK,SAAS;AACjB,qBAAK,UAAU,OAAO;AAAA,cAC5B;AAEI,sBAAQ,KAAK,MAAM;AAEnB,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkB;AAChB,kBAAI;AACJ,kBAAI;AACJ,oBAAM,gBAAgB,OAAO,UAAU,UAAU,SAAS,CAAC;AAC3D,kBAAI,kBAAkB,cAAc,kBAAkB,UAAU;AAC9D,qBAAK,UAAU,UAAU,SAAS,CAAC;AACnC,2BAAW,UAAU,UAAU,SAAS,CAAC;AAAA,cAC/C,OAAW;AACL,qBAAK,UAAU,UAAU,SAAS,CAAC;AAAA,cACzC;AAEI,kBAAI,KAAK,SAAS,OAAO;AACvB,oBAAI,CAAC,KAAK,OAAO,eAAe,CAAC,KAAK,OAAO,SAAS,WAAW;AAC/D,sBAAI,KAAK,QAAQ,YAAY,QAAQ,KAAK,IAAI,IAAI,GAAG;AACnD,0BAAM,IAAI,MAAM,8BAA8B,KAAK,OAAO,IAAI,EAAE;AAAA,kBAC1E;AAAA,gBACA;AAAA,cACA;AAEI,oBAAM,eAAe,sCAAsC,QAAQ;AACnE,kBAAI,YAAY,OAAO,SAAS,kBAAkB,UAAU;AAC1D,6BAAa,gBAAgB,OAAO,KAAK,SAAS,aAAa,EAAE,IAAI,kBAAgB,SAAS,cAAc,YAAY,CAAC;AAAA,cAC/H;AAEI,kBAAI,MAAM,QAAQ,UAAU,CAAC,CAAC,GAAG;AAC/B,6BAAa,aAAa,CAAA;AAC1B,sBAAM,YAAY,UAAU,CAAC;AAC7B,yBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,wBAAM,SAAS,UAAU,CAAC,EAAE,SAAQ;AACpC,wBAAM3B,QAAO,MAAM,0BAA0B,MAAM;AACnD,+BAAa,WAAW,KAAK;AAAA,oBAC3B,MAAAA;AAAA,oBACA;AAAA,oBACA,UAAU;AAAA,kBACpB,CAAS;AAAA,gBACT;AAAA,cACA,OAAW;AACL,6BAAa,aAAa,CAAA;AAC1B,sBAAM,YAAY,UAAU,CAAC;AAC7B,yBAAS,KAAK,WAAW;AACvB,sBAAI,CAAC,UAAU,eAAe,CAAC,EAAG;AAClC,wBAAM,SAAS,UAAU,CAAC,EAAE,SAAQ;AACpC,wBAAMA,QAAO,MAAM,0BAA0B,MAAM;AACnD,+BAAa,WAAW,KAAK;AAAA,oBAC3B,MAAMA,SAAQ;AAAA,oBACd;AAAA,oBACA,UAAU;AAAA,kBACpB,CAAS;AAAA,gBACT;AAAA,cACA;AACI,qBAAO,KAAK,aAAa,IAAI,YAAY;AAAA,YAC7C;AAAA,YAEE,iBAAiB;AACf,oBAAM,cAAc,UAAU,CAAC;AAC/B,oBAAM,iBAAiB,UAAU,UAAU,SAAS,CAAC;AACrD,kBAAI,YAAY,OAAO,YAAY,SAAS,MAAO,QAAO;AAC1D,oBAAM,SAAS,UAAU,CAAC,EAAE;AAC5B,oBAAM,UAAU,UAAU,CAAC,EAAE;AAC7B,oBAAM,MAAM,UAAU,SAAS;AAC/B,uBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,0BAAU,CAAC,EACR,UAAU,MAAM,EAChB,WAAW,OAAO,EAClB,YAAY,IAAI;AAAA,cACzB;AAEI,qBAAO,WAAW;AAChB,sBAAM,UAAU,eAAe,MAAM,MAAM,SAAS;AACpD,oBAAI,QAAQ,SAAS;AACnB,yBAAO,QAAQ,QAAO;AAAA,gBAC9B;AACM,uBAAO;AAAA,cACb;AAAA,YACA;AAAA,YAEE,aAAa,WAAW;AACtB,mBAAK,YAAY;AACjB,qBAAO;AAAA,YACX;AAAA,YAEE,mBAAmB,iBAAiB;AAClC,mBAAK,kBAAkB;AACvB,qBAAO;AAAA,YACX;AAAA,YAEE,YAAY,QAAQ,UAAU;AAC5B,mBAAK,UAAU,KAAK,EAAE,QAAQ,SAAQ,CAAE;AACxC,qBAAO;AAAA,YACX;AAAA,YAEE,kBAAkBA,OAAM,QAAQ,UAAU;AACxC,kBAAI,KAAK,QAAQ,SAAS,GAAG;AAC3B,sBAAM,IAAI,MAAM,wEAAwE;AAAA,cAC9F;AACI,mBAAK,gBAAgB,KAAK,OAAO,OAAO,EAAE,MAAAA,OAAM,UAAU,QAAQ,CAAC;AACnE,qBAAO;AAAA,YACX;AAAA,YAEE,aAAa,QAAQ;AACnB,mBAAK,iBAAiB;AACtB,qBAAO;AAAA,YACX;AAAA,YAEE,UAAU;AACR,qBAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,oBAAI,CAAC,KAAK,SAAS;AACjB,0BAAO;AAAA,gBACf;AACM,2BAAW,MAAM;AACf,sBAAI;AACF,6BAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC5C,2BAAK,QAAQ,CAAC,EAAE,QAAQ,IAAI;AAAA,oBACxC;AACU,wBAAI,cAAc,KAAK,QAAQ,CAAC;AAChC,wBAAI,aAAa;AACf,0BAAI,YAAY,QAAQ;AACtB,sCAAc,YAAY;AAAA,sBACxC;AACY,0BAAI,YAAY,YAAY,gBAAgB;AAC1C,oCAAY,YAAY,eAAe,KAAK,OAAO;AAAA,sBACjE;AAAA,oBACA;AAAA,kBACA,SAAiB,GAAG;AACV,2BAAO,CAAC;AAAA,kBAClB;AACQ,0BAAO;AAAA,gBACf,GAAS,CAAC;AAAA,cACV,CAAK;AAAA,YACL;AAAA,UACA;AAhZU;AAAV,cAAM,MAAN;AAmZA,mBAAS,sCAAsC,UAAU;AACvD,gBAAI,CAAC,UAAU;AACb,qBAAO,CAAA;AAAA,YACX;AACE,kBAAM,mBAAmB,OAAO,OAAO,CAAA,GAAI,QAAQ;AAEnD,gBAAI,SAAS,eAAe,aAAa,GAAG;AAC1C,oBAAM,eAAe,WAAW,eAAe,WAAW;AAC1D,+BAAiB,YAAY,SAAS,cAAc,WAAW;AAAA,YACnE;AACE,gBAAI,SAAS,eAAe,iBAAiB,GAAG;AAC9C,oBAAM,eAAe,WAAW,mBAAmB,UAAU;AAC7D,+BAAiB,WAAW,QAAQ,SAAS,eAAe;AAAA,YAChE;AACE,gBAAI,SAAS,eAAe,iBAAiB,GAAG;AAC9C,oBAAM,eAAe,WAAW,mBAAmB,WAAW;AAC9D,+BAAiB,YAAY,QAAQ,SAAS,eAAe;AAAA,YACjE;AACE,gBAAI,SAAS,eAAe,eAAe,GAAG;AAC5C,oBAAM,eAAe,WAAW,iBAAiB,qBAAqB;AACtE,+BAAiB,sBAAsB,QAAQ,SAAS,aAAa;AAAA,YACzE;AACE,mBAAO;AAAA,UACT;AAvBS;AAyBT,UAAAT,QAAO,UAAU;AAAA,YACf;AAAA,YACA;AAAA,YACA;AAAA;QAEF,GAAE,EAAC,wBAAuB,GAAE,gCAA+B,IAAG,oBAAmB,IAAG,2BAA0B,IAAG,4BAA2B,KAAI,yBAAwB,KAAI,WAAU,KAAI,eAAc,EAAC,CAAC,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACjP,gBAAM,EAAE,IAAG,IAAKE,SAAQ,OAAO;AAC/B,gBAAM,EAAE,MAAK,IAAKA,SAAQ,SAAS;AACnC,gBAAM,EAAE,MAAK,IAAKA,SAAQ,SAAS;AACnC,gBAAM,EAAE,OAAO,UAAUA,SAAQ,SAAS;AAC1C,gBAAM,EAAE,QAAO,IAAKA,SAAQ,WAAW;AACvC,gBAAM,EAAE,gBAAe,IAAKA,SAAQ,4BAA4B;AAChE,gBAAM,EAAE,aAAY,IAAKA,SAAQ,yBAAyB;AAC1D,gBAAM,EAAE,gBAAe,IAAKA,SAAQ,6BAA6B;AACjE,gBAAM,EAAE,UAAS,IAAKA,SAAQ,sBAAsB;AAEpD,gBAAM,EAAE,iBAAgB,IAAKA,SAAQ,8BAA8B;AAEnE,gBAAM,EAAE,kBAAiB,IAAKA,SAAQ,gCAAgC;AACtE,gBAAM,EAAE,YAAW,IAAKA,SAAQ,yBAAyB;AACzD,gBAAM,EAAE,iBAAiB,yBAAyBA,SAAQ,oCAAoC;AAE9F,gBAAM,EAAE,mBAAkB,IAAKA,SAAQ,iCAAiC;AACxE,gBAAM,EAAE,aAAY,IAAKA,SAAQ,0BAA0B;AAC3D,gBAAM,EAAE,iBAAiB,0BAA0BA,SAAQ,qCAAqC;AAEhG,gBAAM,EAAE,SAAQ,IAAKA,SAAQ,qBAAqB;AAElD,gBAAM,EAAE,OAAM,IAAKA,SAAQ,kBAAkB;AAE7C,gBAAM,EAAE,eAAc,IAAKA,SAAQ,2BAA2B;AAE9D,gBAAM,aAAaA,SAAQ,6CAA6C;AAExE,UAAAL,QAAO,UAAU;AAAA,YACf;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YAEA;AAAA,YACA;AAAA,YACA;AAAA,YAEA;AAAA,YACA;AAAA,YACA;AAAA,YAEA;AAAA,YACA;AAAA,YACA;AAAA,YAEA,SAAS;AAAA,cACP;AAAA,YACJ;AAAA;QAEA,GAAE,EAAC,WAAU,GAAE,+BAA8B,GAAE,wBAAuB,GAAE,8BAA6B,GAAE,2BAA0B,IAAG,6BAA4B,IAAG,uBAAsB,IAAG,gCAA+B,IAAG,oBAAmB,IAAG,kCAAiC,IAAG,2BAA0B,IAAG,sCAAqC,IAAG,mCAAkC,IAAG,4BAA2B,KAAI,uCAAsC,IAAG,SAAQ,KAAI,WAAU,KAAI,+CAA8C,KAAI,aAAY,KAAI,WAAU,IAAG,CAAC,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3lB,gBAAM,SAAN,MAAM,OAAM;AAAA,YACV,YAAYiB,QAAO,MAAM;AACvB,mBAAK,QAAQA;AACb,kBAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,qBAAK,OAAO;AAAA,cAClB,OAAW;AACL,qBAAK,OAAO,IAAI,WAAW,CAAC;AAC5B,oBAAI,KAAK,GAAG;AACV,uBAAK,OAAO,IAAI,WAAW,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;AAAA,gBAC3D,WAAiB,KAAK,GAAG;AACjB,uBAAK,OAAO,IAAI,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;AAAA,gBACnD,OAAa;AACL,uBAAK,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;AAAA,gBAC3C;AAAA,cACA;AAEI,oBAAM,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK;AACvB,kBAAI,GAAG;AACL,oBAAI,KAAK,MAAM,WAAY,IAAI,IAAI,GAAI;AACrC,wBAAM,IAAI,MAAM,cAAc,KAAK,MAAM,MAAM,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,MAAO,IAAI,IAAI,CAAC,EAAG;AAAA,gBAC5G;AAAA,cACA,WAAe,GAAG;AACZ,oBAAI,KAAK,MAAM,WAAY,IAAI,GAAI;AACjC,wBAAM,IAAI,MAAM,cAAc,KAAK,MAAM,MAAM,mBAAmB,CAAC,MAAM,CAAC,MAAO,IAAI,CAAC,EAAG;AAAA,gBACjG;AAAA,cACA,OAAW;AACL,oBAAI,KAAK,MAAM,WAAW,GAAG;AAC3B,wBAAM,IAAI,MAAM,cAAc,KAAK,MAAM,MAAM,mBAAmB,CAAC,EAAE;AAAA,gBAC7E;AAAA,cACA;AAAA,YAEA;AAAA,YAEE,UAAU;AACR,oBAAM,EAAE,MAAK,IAAKf,SAAQ,SAAS;AACnC,oBAAM,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK;AACvB,kBAAI,GAAG;AACL,uBAAO,MAAM,4BAA4B,KAAK,MAAM,WAAW,KAAK,QAAQ,IAAI,aAAa,KAAK,KAAK,GAAG,GAAG,GAAG,CAAC;AAAA,cACvH,WAAe,GAAG;AACZ,uBAAO,MAAM,4BAA4B,KAAK,MAAM,WAAW,KAAK,QAAQ,IAAI,aAAa,KAAK,KAAK,GAAG,GAAG,CAAC;AAAA,cACpH,OAAW;AACL,uBAAO,KAAK;AAAA,cAClB;AAAA,YACA;AAAA,UACA;AA5CY;AAAZ,cAAM,QAAN;AA8CA,mBAAS,MAAMe,QAAO,MAAM;AAC1B,mBAAO,IAAI,MAAMA,QAAO,IAAI;AAAA,UAC9B;AAFS;AAIT,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA,YACA;AAAA;QAEF,GAAE,EAAC,WAAU,IAAG,CAAC,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACxD,gBAAM,EAAE,MAAK,IAAKE,SAAQ,SAAS;AAEnC,mBAAS,kBAAkB,QAAQ;AACjC,gBAAI,MAAM,kCAAW;AACnB,qBAAO,MAAM,MAAM,QAAQ,SAAS;AACpC,oBAAM,kCAAW;AACf,oBAAI,SAAS,OAAO,IAAI,MAAM,QAAQ,SAAS;AAC/C,oBAAI,OAAO,kBAAkB;AAC3B,wBAAM,UAAU,OAAO,sBAAqB;AAC5C,wBAAM,YAAY,OAAO,sBAAsB,SAAS,WAAW,MAAM;AACzE,2BAAS,SAAS,SAAS;AAC3B,2BAAS,UAAU,IAAI,MAAM,WAAW,SAAS;AAAA,gBACzD;AACM,oBAAI,OAAO,eAAe;AACxB,yBAAO,OAAO,cAAa;AAAA,gBACnC,WAAiB,OAAO,cAAc;AAC9B,yBAAO,OAAO,aAAY;AAAA,gBAClC,OAAa;AACL,yBAAO;AAAA,gBACf;AAAA,cACA,GAfU;AAgBN,qBAAO,IAAI,MAAM,QAAQ,SAAS;AAAA,YACtC,GAnBY;AAoBV,kBAAM,WAAW,kCAAW;AAC1B,qBAAO,IAAI,MAAM,QAAQ,SAAS;AAAA,YACtC,GAFmB;AAGjB,qBAAS,OAAO,WAAW;AACzB,qBAAO,IAAI,QAAQ,CAAC,QAAQ,WAAW;AACrC,oBAAI;AACF,yBAAO,IAAI,MAAM,MAAM,SAAS,CAAC;AAAA,gBACzC,SAAe,GAAG;AACV,yBAAO,CAAC;AAAA,gBAChB;AAAA,cACA,CAAK;AAAA,YACL;AACE,qBAAS,gBAAgB,SAAS,mBAAmB;AACnD,uBAAS;AACT,mCAAqB,QAAQ,QAAQ;AAAA,YACzC;AAEE,iCAAqB,QAAQ,QAAQ;AACrC,mBAAO;AAAA,UACT;AAxCS;AA0CT,mBAAS,qBAAqB,QAAQ,UAAU;AAC9C,gBAAI,SAAS,QAAQ;AACnB,uBAAS,SAAS;AAClB;AAAA,YACJ;AACE,kBAAM,aAAa,MAAM,gBAAgB,MAAM;AAC/C,qBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,oBAAM,WAAW,WAAW,CAAC;AAC7B,kBAAI,SAAS,CAAC,MAAM,OAAO,SAAS,CAAC,MAAM,IAAK;AAChD,kBAAI,OAAO,OAAO,QAAQ,MAAM,YAAY;AAC1C,oBAAI,SAAS,UAAU,GAAG,CAAC,MAAM,SAAS,SAAS,UAAU,GAAG,CAAC,MAAM,OAAO;AAC5E,2BAAS,QAAQ,IAAI,WAAW;AAC9B,6BAAS,OAAO,QAAQ,EAAE,MAAM,SAAS,QAAQ,SAAS;AAC1D,2BAAO;AAAA,kBACjB;AAAA,gBACA,OAAa;AACL,2BAAS,QAAQ,IAAI,WAAW;AAC9B,2BAAO,SAAS,OAAO,QAAQ,EAAE,MAAM,SAAS,QAAQ,SAAS;AAAA,kBAC3E;AAAA,gBACA;AAAA,cACA,OAAW;AACL,yBAAS,iBAAiB,UAAU,MAAM,SAAS,OAAO,QAAQ,CAAC;AACnE,yBAAS,iBAAiB,UAAU,CAACe,WAAU;AAC7C,2BAAS,OAAO,QAAQ,IAAIA;AAAA,gBACpC,CAAO;AAAA,cACP;AAAA,YACA;AACE,qBAAS,SAAS;AAAA,UACpB;AA5BS;AA6BT,UAAApB,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,WAAU,IAAG,CAAC,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AACxD,gBAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBf,gBAAMM,QAAO;AAEb,gBAAM,gBAAgB;AAEtB,gBAAM,kBAAkB;AAExB,gBAAM,qBAAqB;AAC3B,gBAAM,cAAc,wBAAC,WAAW;AAC9B,mBAAO,aAAa,eAAe,KAAK,OAAM,CAAE;AAChD,mBAAO,aAAa,eAAe,KAAK,OAAM,CAAE;AAAA,UAClD,GAHoB;AAKpB,gBAAM,SAAS;AAAA,YACb,MAAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAGF,UAAAT,QAAO,UAAU;AAAA,QACjB,GAAE,CAAA,CAAE,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3C,gBAAM,WAAN,MAAM,SAAQ;AAAA,YACZ,YAAY,UAAU;AACpB,oBAAM;AAAA,gBACJ;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,OAAO;AAAA,gBACP;AAAA,gBACA;AAAA,gBACA;AAAA,cACN,IAAQ;AACJ,kBAAI,CAAC,OAAQ,OAAM,IAAI,MAAM,sCAAsC;AACnE,kBAAI,CAAC,QAAS,OAAM,IAAI,MAAM,uCAAuC;AACrE,kBAAI,CAAC,QAAS,OAAM,IAAI,MAAM,uCAAuC;AACrE,kBAAI,CAAC,OAAQ,OAAM,IAAI,MAAM,sCAAsC;AACnE,mBAAK,UAAU;AACf,kBAAI,QAAQ,OAAO;AACjB,wBAAQ;AAAA,cACd,OAAW;AACL,wBAAQ,QAAQ;AAAA,cACtB;AACI,mBAAK,OAAO;AACZ,mBAAK,aAAa;AAClB,mBAAK,SAAS;AACd,mBAAK,UAAU;AACf,mBAAK,SAAS;AACd,mBAAK,OAAO;AACZ,mBAAK,WAAW;AAChB,mBAAK,iBAAiB;AACtB,mBAAK,gBAAgB;AAAA,YACzB;AAAA,YAEE,UAAU;AACR,oBAAM,IAAI,MAAM,sBAAsB,KAAK,YAAY,IAAI,EAAE;AAAA,YACjE;AAAA,YAEE,QAAQ;AACN,oBAAM,IAAI,MAAM,sBAAsB,KAAK,YAAY,IAAI,EAAE;AAAA,YACjE;AAAA,YAEE,SAAS;AACP,oBAAM,IAAI,MAAM,sBAAsB,KAAK,YAAY,IAAI,EAAE;AAAA,YACjE;AAAA,YAEE,QAAQ;AACN,oBAAM,IAAI,MAAM,sBAAsB,KAAK,YAAY,IAAI,EAAE;AAAA,YACjE;AAAA,UACA;AAjDc;AAAd,cAAM,UAAN;AAmDA,UAAAH,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,CAAA,CAAE,GAAE,KAAI,CAAC,SAASK,UAAQL,SAAOG,UAAQ;AAC3C,gBAAM,QAAQE,SAAQ,OAAO;AAC7B,gBAAM,EAAE,MAAK,IAAKA,SAAQ,SAAS;AACnC,gBAAM,EAAE,QAAO,IAAKA,SAAQ,WAAW;AAEvC,gBAAM,gBAAgB;AACtB,gBAAM,iBAAiB;AACvB,gBAAM,iBAAiB;AAEvB,gBAAM,QAAQ;AAAA,YACZ,mBAAmB;AACjB,qBAAO;AAAA,YACX;AAAA,YACE,sBAAsB;AACpB,oBAAM,IAAI,IAAI,YAAY,CAAC;AAC3B,oBAAM,IAAI,IAAI,YAAY,CAAC;AAC3B,oBAAM,IAAI,IAAI,WAAW,CAAC;AAC1B,gBAAE,CAAC,IAAI;AACP,kBAAI,EAAE,CAAC,MAAM,IAAM,QAAO;AAC1B,kBAAI,EAAE,CAAC,MAAM,IAAM,QAAO;AAC1B,oBAAM,IAAI,MAAM,oBAAoB;AAAA,YACxC;AAAA,YAEE,WAAW,SAAS;AAClB,qBAAO,OAAO,YAAa;AAAA,YAC/B;AAAA,YAEE,iBAAiB,IAAI;AACnB,kBAAI,OAAO,OAAO,UAAU;AAC1B,uBAAQ,GACL,MAAM,GAAG,WAAW,MAAM,EAC1B,YAAW,MAAO;AAAA,cAC3B;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,0BAA0B,SAAS;AACjC,oBAAM,SAAS,cAAc,KAAK,OAAO;AACzC,kBAAI,CAAC,UAAU,OAAO,WAAW,EAAG,QAAO;AAC3C,qBAAO,OAAO,CAAC,EAAE,KAAI;AAAA,YACzB;AAAA,YAEE,0BAA0B,SAAS;AACjC,qBAAO,QAAQ,UAAU,QAAQ,QAAQ,GAAG,IAAI,GAAG,QAAQ,YAAY,GAAG,CAAC;AAAA,YAC/E;AAAA,YAEE,2BAA2B,IAAI;AAC7B,oBAAM,QAAQ,GAAG,QAAQ,gBAAgB,EAAE;AAC3C,kBAAI,SAAS,MAAM,MAAM,MAAM,QAAQ,GAAG,IAAI,GAAG,MAAM,QAAQ,GAAG,CAAC,EAAE,MAAM,cAAc;AACzF,kBAAI,WAAW,MAAM;AACnB,yBAAS,CAAA;AAAA,cACf;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,MAAM,KAAK;AACT,kBAAI,QAAQ,QAAQ,OAAO,QAAQ,YAAY,IAAI,eAAe,eAAe,EAAG,QAAO;AAE3F,oBAAM,OAAO,IAAI;AAEjB,uBAAS,OAAO,KAAK;AACnB,oBAAI,OAAO,UAAU,eAAe,KAAK,KAAK,GAAG,GAAG;AAClD,sBAAI,gBAAgB;AACpB,uBAAK,GAAG,IAAI,MAAM,MAAM,IAAI,GAAG,CAAC;AAChC,yBAAO,IAAI;AAAA,gBACnB;AAAA,cACA;AAEI,qBAAO;AAAA,YACX;AAAA,YAEE,QAAQ,OAAO;AACb,qBAAO,CAAC,MAAM,MAAM,MAAM;AAAA,YAC9B;AAAA,YAEE,gBAAgBe,QAAO,gBAAgB;AACrC,kBAAI,MAAM,QAAQA,MAAK,GAAG;AACxB,oBAAIA,OAAM,SAAS,KAAKA,OAAM,CAAC,EAAE,aAAa,OAAO;AACnD,yBAAO;AAAA,gBACf;AACM,uBAAO;AAAA,cACb;AAEI,sBAAQA,OAAM,aAAW;AAAA,gBACvB,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AACH,sBAAI,kBAAkB,OAAO,UAAUA,MAAK,GAAG;AAC7C,2BAAO;AAAA,kBACjB;AACQ,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAOA,OAAM;AAAA,gBACf,KAAK;AACH,yBAAO;AAAA,cACf;AACI,kBAAI,cAAcA,QAAO;AACvB,wBAAQA,OAAM,UAAQ;AAAA,kBACpB,KAAK;AACH,2BAAO;AAAA,kBACT,KAAK;AACH,2BAAO;AAAA,kBACT,KAAK;AACH,2BAAO;AAAA,gBACjB;AAAA,cACA,WAAeA,OAAM,eAAe,MAAM,GAAG;AACvC,uBAAOA,OAAM;AAAA,cACnB,WAAe,OAAO,oBAAoB,eAAeA,kBAAiB,iBAAiB;AACrF,uBAAO;AAAA,cACb,WAAe,OAAO,gBAAgB,eAAeA,kBAAiB,aAAa;AAC7E,uBAAO;AAAA,cACb,WAAe,OAAO,cAAc,eAAeA,kBAAiB,WAAW;AACzE,uBAAO;AAAA,cACb;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,qBAAqB,UAAU,YAAY;AACzC,kBAAI,CAAC,GAAG,GAAG,CAAC,IAAI;AAChB,kBAAI,cAAc,KAAK,MAAM,KAAK,MAAM,KAAK;AAE7C,kBAAI,SAAS,uBAAuB,SAAS,cAAc,UAAU;AACnE,oBAAI,aAAa,KAAK,KAAK,aAAa,CAAC;AAAA,cAC/C;AACI,kBAAI,IAAI,KAAK,IAAI,MAAM,YAAY;AACjC,uBAAO,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;AAAA,cAClC;AACI,qBAAO,MAAM,wBAAwB,UAAU;AAAA,YACnD;AAAA,YAEE,wBAAwB,QAAQ;AAC9B,oBAAMiB,QAAO,KAAK,KAAK,MAAM;AAC7B,kBAAI,OAAO,KAAK,KAAKA,KAAI;AACzB,kBAAI,MAAM,KAAK,MAAMA,KAAI;AACzB,qBAAO,OAAO,MAAM,QAAQ;AAC1B;AACA,sBAAM,KAAK,KAAK,SAAS,IAAI;AAAA,cACnC;AACI,qBAAO,IAAI,WAAW,CAAC,KAAK,KAAK,KAAK,SAAS,GAAG,CAAC,CAAC;AAAA,YACxD;AAAA,YAEE,mCAAmC,YAAY,UAAU;AACvD,oBAAM,YAAY,MAAM,SAAS,WAAW,CAAC,KAAK,MAAM,WAAW,CAAC,KAAK,MAAM,WAAW,CAAC,KAAK,MAAM,WAAW,CAAC,KAAK,IAAI,CAAC;AAC5H,oBAAM,aAAa,YAAY;AAC/B,qBAAO,MAAM,wBAAwB,UAAU;AAAA,YACnD;AAAA,YAEE,oCAAoC,YAAY,UAAU;AACxD,oBAAM,CAAC,GAAG,GAAG,CAAC,IAAI;AAClB,oBAAM,YAAY,MAAM,SAAS,KAAK,MAAM,KAAK,MAAM,KAAK,IAAI,CAAC;AACjE,oBAAM,aAAa,aAAa,IAAI;AACpC,qBAAO,MAAM,wBAAwB,UAAU;AAAA,YACnD;AAAA,YAEE,QAAQ,GAAG,GAAG;AACZ,qBAAO,KAAK,OAAO,IAAI,IAAI,KAAK,CAAC,IAAI;AAAA,YACzC;AAAA,YACE,cAAc,GAAG,KAAK;AACpB,kBAAI;AACJ,kBAAI,MAAM,QAAQ,CAAC,GAAG;AACpB,sBAAM,MAAM,CAAA;AACZ,oBAAI,OAAO;AACX,uBAAO,MAAM,QAAQ,IAAI,GAAG;AAC1B,sBAAI,KAAK,KAAK,MAAM;AACpB,yBAAO,KAAK,CAAC;AAAA,gBACrB;AACM,sBAAM,IAAI,QAAO;AAAA,cACvB,WAAe,aAAa,SAAS;AAC/B,sBAAM,EAAE;AAAA,cACd,WAAe,aAAa,OAAO;AAC7B,sBAAM,EAAE;AAAA,cACd,OAAW;AACL,sBAAM,IAAI,MAAM,yBAAyB,CAAC,EAAE;AAAA,cAClD;AAEI,kBAAI,KAAK;AACP,sBAAM,MAAM,KAAK,GAAG;AACpB,uBAAO,IAAI,SAAS,GAAG;AACrB,sBAAI,KAAK,CAAC;AAAA,gBAClB;AAAA,cACA;AAEI,qBAAO,IAAI,WAAW,GAAG;AAAA,YAC7B;AAAA,YAEE,iBAAiB,OAAO,QAAQ;AAC9B,kBAAI,SAAS;AACb,uBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,uBAAO,IAAI,MAAM,CAAC,GAAG,MAAM;AAC3B,0BAAU,MAAM,CAAC,EAAE;AAAA,cACzB;AAAA,YACA;AAAA,YAEE,iBAAiB,OAAO,QAAQ;AAC9B,kBAAI,SAAS;AACb,uBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,yBAAS,IAAI,GAAG,IAAI,MAAM,CAAC,EAAE,QAAQ,KAAK;AACxC,yBAAO,IAAI,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM;AAC9B,4BAAU,MAAM,CAAC,EAAE,CAAC,EAAE;AAAA,gBAC9B;AAAA,cACA;AAAA,YACA;AAAA,YAEE,iBAAiB,OAAO,QAAQ;AAC9B,kBAAI,SAAS;AACb,uBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,yBAAS,IAAI,GAAG,IAAI,MAAM,CAAC,EAAE,QAAQ,KAAK;AACxC,2BAAS,IAAI,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,EAAE,QAAQ,KAAK;AAC3C,2BAAO,IAAI,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,MAAM;AACjC,8BAAU,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAAA,kBACnC;AAAA,gBACA;AAAA,cACA;AAAA,YACA;AAAA,YAEE,UAAU,OAAO,QAAQ;AACvB,kBAAI,MAAM,QAAQ,MAAM,CAAC,CAAC,GAAG;AAC3B,oBAAI,MAAM,QAAQ,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG;AAC9B,sBAAI,MAAM,QAAQ,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG;AACjC,0BAAM,iBAAiB,OAAO,MAAM;AAAA,kBAC9C,OAAe;AACL,0BAAM,iBAAiB,OAAO,MAAM;AAAA,kBAC9C;AAAA,gBACA,OAAa;AACL,wBAAM,iBAAiB,OAAO,MAAM;AAAA,gBAC5C;AAAA,cACA,OAAW;AACL,uBAAO,IAAI,KAAK;AAAA,cACtB;AAAA,YACA;AAAA,YAEE,WAAW,OAAO,MAAM;AACtB,oBAAM,SAAS,CAAA;AACf,uBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,MAAM;AAC3C,uBAAO,KAAK,IAAI,MAAM,YAAY,MAAM,QAAQ,IAAI,IAAI,MAAM,YAAY,IAAI,CAAC;AAAA,cACrF;AACI,qBAAO;AAAA,YACX;AAAA,YAEE,aAAa,QAAQ,KAAK;AACxB,oBAAM,QAAQ,MAAM,QAAQ,MAAM,IAAI,SAAS,OAAO,MAAM,QAAQ;AACpE,oBAAM,QAAQ,IAAI,IAAI;AACtB,oBAAM,MAAM,IAAI,IAAI;AACpB,oBAAM,SAAS,CAAA;AACf,kBAAI,MAAM,SAAS,IAAI,MAAM;AAC3B,uBAAO,KAAK,MAAM,MAAM,OAAO,CAAC,EAAE,UAAU,MAAM,QAAQ,IAAI,MAAM,CAAC;AAAA,cAC3E,OAAW;AACL,uBAAO,KAAK,MAAM,MAAM,OAAO,CAAC,EAAE,MAAM,MAAM,MAAM,CAAC;AACrD,yBAAS,IAAI,MAAM,MAAM,IAAI,IAAI,MAAM,KAAK;AAC1C,yBAAO,KAAK,MAAM,CAAC,CAAC;AAAA,gBAC5B;AACM,uBAAO,KAAK,MAAM,IAAI,OAAO,CAAC,EAAE,MAAM,GAAG,IAAI,MAAM,CAAC;AAAA,cAC1D;AACI,qBAAO,OAAO,KAAK,IAAI;AAAA,YAC3B;AAAA,YAEE,gBAAgB,KAAK;AACnB,oBAAM,QAAQ,CAAA;AAEd,iBAAG;AACD,sBAAM,KAAK,MAAM,OAAO,OAAO,oBAAoB,GAAG,CAAC;AAAA,cAC7D,SAAa,MAAM,OAAO,eAAe,GAAG;AAExC,qBAAO;AAAA,YACX;AAAA,YAEE,cAAc,OAAO;AACnB,kBAAI,MAAM,SAAS,GAAG;AACpB,uBAAO,MAAM,KAAK,KAAK,IAAI;AAAA,cACjC,OAAW;AACL,uBAAO;AAAA,cACb;AAAA,YACA;AAAA,YACE,eAAe,MAAM,SAAS,SAAS;AACrC,kBAAI,SAAS;AACX,wBAAQ,KAAK,8BAA+B,IAAI,KAAO,wCAA0C,OAAO,2DAA4D;AAAA,cAC1K,OAAW;AACL,wBAAQ,KAAK,8BAA+B,IAAI,KAAO,OAAO,gFAAiF;AAAA,cACrJ;AAAA,YACA;AAAA,YACE,YAAY,wBAAC,QAAQ,OAAO,WAAW;AACrC,oBAAM,aAAa,SAAS,IAAI;AAChC,oBAAM,cAAc,QAAQ;AAC5B,oBAAM,OAAO,IAAI,kBAAkB,QAAQ,CAAC;AAC5C,oBAAM,SAAS,OAAO,MAAM,CAAC;AAC7B,uBAAS,IAAI,GAAG,IAAI,YAAY,EAAE,GAAG;AACnC,sBAAM,YAAY,IAAI;AACtB,sBAAM,gBAAgB,SAAS,IAAI,KAAK;AAExC,qBAAK,IAAI,OAAO,SAAS,WAAW,YAAY,WAAW,CAAC;AAE5D,uBAAO,WAAW,WAAW,cAAc,eAAe,WAAW;AAErE,uBAAO,IAAI,MAAM,YAAY;AAAA,cACnC;AACI,qBAAO;AAAA,YACX,GAhBc;AAAA,YAiBZ,kBAAkB,wBAAC,OAAO,UAAU;AAClC,qBAAO,MAAM,SAAS,GAAG,KAAK;AAAA,YAClC,GAFoB;AAAA,YAGlB,oBAAoB,wBAAC,OAAO,OAAO,WAAW;AAC5C,oBAAM,WAAW,IAAI,MAAM,MAAM;AACjC,uBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,sBAAM,SAAS,IAAI;AACnB,sBAAM,OAAO,SAAS;AACtB,yBAAS,CAAC,IAAI,MAAM,SAAS,QAAQ,IAAI;AAAA,cAC/C;AACI,qBAAO;AAAA,YACX,GARsB;AAAA,YASpB,oBAAoB,wBAAC,OAAO,OAAO,QAAQ,UAAU;AACnD,oBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,uBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,sBAAM,WAAW,IAAI,MAAM,MAAM;AACjC,yBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,wBAAM,SAAU,IAAI,SAAS,QAAS,IAAI;AAC1C,wBAAM,OAAO,SAAS;AACtB,2BAAS,CAAC,IAAI,MAAM,SAAS,QAAQ,IAAI;AAAA,gBACjD;AACM,yBAAS,CAAC,IAAI;AAAA,cACpB;AACI,qBAAO;AAAA,YACX,GAZsB;AAAA,YAapB,2BAA2B,wBAAC,OAAO,UAAU;AAC3C,qBAAO,MAAM,SAAS,GAAG,KAAK;AAAA,YAClC,GAF6B;AAAA,YAG3B,6BAA6B,wBAAC,OAAO,OAAO,WAAW;AACrD,oBAAM,WAAW,IAAI,MAAM,MAAM;AACjC,uBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,sBAAM,SAAS,IAAI;AACnB,yBAAS,CAAC,IAAI,MAAM,SAAS,QAAQ,SAAS,KAAK;AAAA,cACzD;AACI,qBAAO;AAAA,YACX,GAP+B;AAAA,YAQ7B,6BAA6B,wBAAC,OAAO,OAAO,QAAQ,UAAU;AAC5D,oBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,uBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,sBAAM,WAAW,IAAI,MAAM,MAAM;AACjC,yBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,wBAAM,SAAU,IAAI,SAAS,QAAU,IAAI;AAC3C,2BAAS,CAAC,IAAI,MAAM,SAAS,QAAQ,SAAS,KAAK;AAAA,gBAC3D;AACM,yBAAS,CAAC,IAAI;AAAA,cACpB;AACI,qBAAO;AAAA,YACX,GAX+B;AAAA,YAY7B,YAAY,wBAAC,OAAO,UAAU;AAC5B,oBAAM,WAAW,IAAI,aAAa,KAAK;AACvC,kBAAI,IAAI;AACR,uBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,yBAAS,CAAC,IAAI,MAAM,CAAC;AACrB,qBAAK;AAAA,cACX;AACI,qBAAO;AAAA,YACX,GARc;AAAA,YASZ,cAAc,wBAAC,OAAO,OAAO,WAAW;AACtC,oBAAM,WAAW,IAAI,MAAM,MAAM;AACjC,kBAAI,IAAI;AACR,uBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,sBAAM,WAAW,IAAI,aAAa,KAAK;AACvC,yBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,2BAAS,CAAC,IAAI,MAAM,CAAC;AACrB,uBAAK;AAAA,gBACb;AACM,yBAAS,CAAC,IAAI;AAAA,cACpB;AACI,qBAAO;AAAA,YACX,GAZgB;AAAA,YAad,cAAc,wBAAC,OAAO,OAAO,QAAQ,UAAU;AAC7C,oBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,kBAAI,IAAI;AACR,uBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,sBAAM,WAAW,IAAI,MAAM,MAAM;AACjC,yBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,wBAAM,WAAW,IAAI,aAAa,KAAK;AACvC,2BAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,6BAAS,CAAC,IAAI,MAAM,CAAC;AACrB,yBAAK;AAAA,kBACf;AACQ,2BAAS,CAAC,IAAI;AAAA,gBACtB;AACM,yBAAS,CAAC,IAAI;AAAA,cACpB;AACI,qBAAO;AAAA,YACX,GAhBgB;AAAA,YAiBd,aAAa,wBAAC,OAAO,UAAU;AAC7B,oBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,oBAAM,cAAc,QAAQ;AAC5B,kBAAI,IAAI;AACR,uBAAS,IAAI,GAAG,IAAI,aAAa,KAAK,GAAG;AACvC,yBAAS,GAAG,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC;AAAA,cAC7C;AACI,qBAAO;AAAA,YACX,GARe;AAAA,YASb,eAAe,wBAAC,OAAO,OAAO,WAAW;AACvC,oBAAM,WAAW,IAAI,MAAM,MAAM;AACjC,oBAAM,cAAc,QAAQ;AAC5B,uBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,sBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,sBAAM,SAAS,IAAI;AACnB,oBAAI,IAAI;AACR,yBAAS,IAAI,GAAG,IAAI,aAAa,KAAK,GAAG;AACvC,2BAAS,GAAG,IAAI,MAAM,SAAS,IAAI,QAAQ,IAAI,SAAS,CAAC;AAAA,gBACjE;AACM,yBAAS,CAAC,IAAI;AAAA,cACpB;AACI,qBAAO;AAAA,YACX,GAbiB;AAAA,YAcf,eAAe,wBAAC,OAAO,OAAO,QAAQ,UAAU;AAC9C,oBAAM,cAAc,QAAQ;AAC5B,oBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,uBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,sBAAM,WAAW,IAAI,MAAM,MAAM;AACjC,yBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,wBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,wBAAM,SAAU,IAAI,cAAc,SAAW,IAAI;AACjD,sBAAI,IAAI;AACR,2BAAS,IAAI,GAAG,IAAI,aAAa,KAAK,GAAG;AACvC,6BAAS,GAAG,IAAI,MAAM,SAAS,IAAI,QAAQ,IAAI,SAAS,CAAC;AAAA,kBACnE;AACQ,2BAAS,CAAC,IAAI;AAAA,gBACtB;AACM,yBAAS,CAAC,IAAI;AAAA,cACpB;AACI,qBAAO;AAAA,YACX,GAjBiB;AAAA,YAkBf,aAAa,wBAAC,OAAO,UAAU;AAC7B,oBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,oBAAM,cAAc,QAAQ;AAC5B,kBAAI,IAAI;AACR,uBAAS,IAAI,GAAG,IAAI,aAAa,KAAK,GAAG;AACvC,yBAAS,GAAG,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC;AAAA,cAC7C;AACI,qBAAO;AAAA,YACX,GARe;AAAA,YASb,eAAe,wBAAC,OAAO,OAAO,WAAW;AACvC,oBAAM,cAAc,QAAQ;AAC5B,oBAAM,WAAW,IAAI,MAAM,MAAM;AACjC,uBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,sBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,sBAAM,SAAS,IAAI;AACnB,oBAAI,IAAI;AACR,yBAAS,IAAI,GAAG,IAAI,aAAa,KAAK,GAAG;AACvC,2BAAS,GAAG,IAAI,MAAM,SAAS,IAAI,QAAQ,IAAI,SAAS,CAAC;AAAA,gBACjE;AACM,yBAAS,CAAC,IAAI;AAAA,cACpB;AACI,qBAAO;AAAA,YACX,GAbiB;AAAA,YAcf,eAAe,wBAAC,OAAO,OAAO,QAAQ,UAAU;AAC9C,oBAAM,cAAc,QAAQ;AAC5B,oBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,uBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,sBAAM,WAAW,IAAI,MAAM,MAAM;AACjC,yBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,wBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,wBAAM,SAAU,IAAI,cAAc,SAAW,IAAI;AACjD,sBAAI,IAAI;AACR,2BAAS,IAAI,GAAG,IAAI,aAAa,KAAK,GAAG;AACvC,6BAAS,GAAG,IAAI,MAAM,SAAS,IAAI,QAAQ,IAAI,SAAS,CAAC;AAAA,kBACnE;AACQ,2BAAS,CAAC,IAAI;AAAA,gBACtB;AACM,yBAAS,CAAC,IAAI;AAAA,cACpB;AACI,qBAAO;AAAA,YACX,GAjBiB;AAAA,YAkBf,aAAa,wBAAC,OAAO,UAAU;AAC7B,oBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,oBAAM,cAAc,QAAQ;AAC5B,kBAAI,IAAI;AACR,uBAAS,IAAI,GAAG,IAAI,aAAa,KAAK,GAAG;AACvC,yBAAS,GAAG,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC;AAAA,cAC7C;AACI,qBAAO;AAAA,YACX,GARe;AAAA,YASb,eAAe,wBAAC,OAAO,OAAO,WAAW;AACvC,oBAAM,cAAc,QAAQ;AAC5B,oBAAM,WAAW,IAAI,MAAM,MAAM;AACjC,uBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,sBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,sBAAM,SAAS,IAAI;AACnB,oBAAI,IAAI;AACR,yBAAS,IAAI,GAAG,IAAI,aAAa,KAAK,GAAG;AACvC,2BAAS,GAAG,IAAI,MAAM,SAAS,IAAI,QAAQ,IAAI,SAAS,CAAC;AAAA,gBACjE;AACM,yBAAS,CAAC,IAAI;AAAA,cACpB;AACI,qBAAO;AAAA,YACX,GAbiB;AAAA,YAcf,eAAe,wBAAC,OAAO,OAAO,QAAQ,UAAU;AAC9C,oBAAM,cAAc,QAAQ;AAC5B,oBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,uBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,sBAAM,WAAW,IAAI,MAAM,MAAM;AACjC,yBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,wBAAM,WAAW,IAAI,MAAM,KAAK;AAChC,wBAAM,SAAU,IAAI,cAAc,SAAW,IAAI;AACjD,sBAAI,IAAI;AACR,2BAAS,IAAI,GAAG,IAAI,aAAa,KAAK,GAAG;AACvC,6BAAS,GAAG,IAAI,MAAM,SAAS,IAAI,QAAQ,IAAI,SAAS,CAAC;AAAA,kBACnE;AACQ,2BAAS,CAAC,IAAI;AAAA,gBACtB;AACM,yBAAS,CAAC,IAAI;AAAA,cACpB;AACI,qBAAO;AAAA,YACX,GAjBiB;AAAA,YAmBf,yBAAyB,wBAAC,QAAQ,aAAa;AAC7C,oBAAM,EAAE,gBAAgB,YAAY,YAAW,IAAK;AACpD,kBAAI,YAAY,SAAS;AACzB,kBAAI,CAAC,WAAW;AACd,4BAAY,SAAS,YAAY,CAAA;AAAA,cACvC;AACI,oBAAM,MAAM,MAAM,MAAM,MAAM;AAC9B,oBAAM,uBAAuB,CAAA;AAC7B,kBAAI,SAAS;AAEb,uBAAS,QAAQN,MAAK;AACpB,oBAAI,MAAM,QAAQA,IAAG,GAAG;AACtB,wBAAM,UAAU,CAAA;AAChB,2BAAS,IAAI,GAAG,IAAIA,KAAI,QAAQ,KAAK;AACnC,4BAAQ,KAAK,QAAQA,KAAI,CAAC,CAAC,CAAC;AAAA,kBACtC;AACQ,yBAAO,QAAQ,KAAK,EAAE;AAAA,gBAC9B;AACM,wBAAQA,KAAI,MAAI;AAAA,kBACd,KAAK;AACH,2BAAO,QAAQA,KAAI,IAAI,KAAKA,KAAI,KAAK,CAAC,EAAE,SAAS,wBAAwB,MAAM;AAAA,kBACjF,KAAK;AACH,2BAAO,YAAYA,KAAI,GAAG,IAAI,IAAIA,KAAI,OAAO,IAAI,OAAO,EAAE,KAAK,IAAI,CAAC,KAAM,QAAQA,KAAI,IAAI;kBAC5F,KAAK,kBAAkB;AACrB,0BAAMO,UAAS,CAAA;AACf,8BAAU;AACV,6BAAS,IAAI,GAAG,IAAIP,KAAI,KAAK,QAAQ,KAAK;AACxC,4BAAM,OAAO,QAAQA,KAAI,KAAK,CAAC,CAAC;AAChC,0BAAI,MAAM;AACR,wBAAAO,QAAO,KAAK,IAAI,OAAO,MAAM,IAAI,MAAM,KAAK;AAAA,sBAC1D;AAAA,oBACA;AACU,8BAAU;AACV,2BAAO;AAAA,EAAMA,QAAO,KAAK,EAAE,CAAC;AAAA,kBACtC;AAAA,kBACQ,KAAK;AACH,0BAAM,eAAe,MAAM,sBAAsBP,IAAG,EACjD,IAAI,OAAO,EACX,OAAO,OAAK,MAAM,IAAI;AACzB,wBAAI,aAAa,SAAS,GAAG;AAC3B,6BAAO;AAAA,oBACnB,OAAiB;AACL,6BAAO,GAAGA,KAAI,IAAI,IAAI,aAAa,KAAK,GAAG,CAAC;AAAA,oBACxD;AAAA,kBACU,KAAK;AACH,wBAAIA,KAAI,KAAK,UAAUA,KAAI,KAAK,OAAO,SAAS,kBAAkB;AAChE,4BAAM,SAAS,WAAWA,KAAI,KAAK,SAAS,MAAM,IAAI;AACtD,0BAAI,QAAQ;AACV,+BAAO,GAAGA,KAAI,GAAG,IAAI,MAAM,QAAQA,KAAI,IAAI,CAAC;AAAA,sBAC5D,OAAqB;AACL,+BAAO;AAAA,sBACvB;AAAA,oBACA,OAAmB;AACL,6BAAO,GAAGA,KAAI,GAAG,IAAI,MAAM,QAAQA,KAAI,IAAI,CAAC;AAAA,oBAC1D;AAAA,kBACY,KAAK,kBAAkB;AACrB,wBAAIA,KAAI,OAAO,SAAS,SAAS,YAAY;AAC3C,6BAAO,GAAG,QAAQA,KAAI,OAAO,MAAM,CAAC,IAAI,QAAQA,KAAI,OAAO,QAAQ,CAAC,IAAIA,KAAI,UAAU,IAAI,CAAAX,WAAS,QAAQA,MAAK,CAAC,EAAE,KAAK,IAAI,CAAC;AAAA,oBAC7I;AACc,wBAAIW,KAAI,OAAO,OAAO,SAAS,QAAQA,KAAI,OAAO,OAAO,SAAS,WAAW;AAC3E,6BAAO,GAAG,QAAQA,KAAI,OAAO,MAAM,CAAC,IAAI,QAAQA,KAAI,OAAO,QAAQ,CAAC,IAAIA,KAAI,UAAU,IAAI,CAAAX,WAAS,QAAQA,MAAK,CAAC,EAAE,KAAK,IAAI,CAAC;AAAA,oBAC7I;AACc,wBAAIW,KAAI,OAAO,OAAO,SAAS,kBAAkB;AAC/C,2CAAqB,KAAK,eAAe,QAAQA,KAAI,OAAO,SAAS,IAAI,CAAC;AAC1E,6BAAO,GAAGA,KAAI,OAAO,SAAS,IAAI,IAAIA,KAAI,UAAU,IAAI,CAAAX,WAAS,QAAQA,MAAK,CAAC,EAAE,KAAK,IAAI,CAAC;AAAA,oBAC3G,WAAyBW,KAAI,OAAO,OAAO,MAAM;AACjC,4BAAM,cAAc,eAAeA,KAAI,OAAO,OAAO,MAAMA,KAAI,OAAO,SAAS,IAAI;AACnF,0BAAI,gBAAgB,MAAM;AACxB,+BAAO,GAAGA,KAAI,OAAO,OAAO,IAAI,IAAIA,KAAI,OAAO,SAAS,IAAI,IAAIA,KAAI,UAAU,IAAI,CAAAX,WAAS,QAAQA,MAAK,CAAC,EAAE,KAAK,IAAI,CAAC;AAAA,sBACvI,OAAuB;AACL,6CAAqB,KAAK,WAAW;AACrC,+BAAO,GAAGW,KAAI,OAAO,SAAS,IAAI,IAAIA,KAAI,UAAU,IAAI,CAAAX,WAAS,QAAQA,MAAK,CAAC,EAAE,KAAK,IAAI,CAAC;AAAA,sBAC7G;AAAA,oBACA,WAAyBW,KAAI,OAAO,OAAO,SAAS,oBAAoB;AACxD,6BAAO,GAAG,QAAQA,KAAI,OAAO,MAAM,CAAC,IAAIA,KAAI,OAAO,SAAS,IAAI,IAAIA,KAAI,UAAU,IAAI,CAAAX,WAAS,QAAQA,MAAK,CAAC,EAAE,KAAK,IAAI,CAAC;AAAA,oBACzI,OAAqB;AACL,4BAAM,IAAI,MAAM,oBAAoB;AAAA,oBACpD;AAAA,kBACA;AAAA,kBACY,KAAK;AACH,2BAAO,UAAU,QAAQW,KAAI,QAAQ,CAAC;AAAA,kBACxC,KAAK;AACH,2BAAO,IAAI,QAAQA,KAAI,IAAI,CAAC,GAAGA,KAAI,QAAQ,GAAG,QAAQA,KAAI,KAAK,CAAC;AAAA,kBAClE,KAAK;AACH,wBAAIA,KAAI,QAAQ;AACd,6BAAO,GAAGA,KAAI,QAAQ,IAAI,QAAQA,KAAI,QAAQ,CAAC;AAAA,oBAC/D,OAAqB;AACL,6BAAO,GAAG,QAAQA,KAAI,QAAQ,CAAC,IAAIA,KAAI,QAAQ;AAAA,oBAC/D;AAAA,kBACc,KAAK;AACH,2BAAO,GAAG,QAAQA,KAAI,UAAU,CAAC;AAAA,kBACnC,KAAK;AACH,2BAAO,IAAI,QAAQA,KAAI,WAAW,CAAC;AAAA,kBACrC,KAAK;AACH,2BAAO,IAAIA,KAAI,OAAO,IAAI,OAAO,EAAE,KAAK,IAAI,CAAC,QAAQ,QAAQA,KAAI,IAAI,CAAC;AAAA,kBACxE,KAAK;AACH,2BAAOA,KAAI;AAAA,kBACb,KAAK;AACH,2BAAOA,KAAI;AAAA,kBACb,KAAK;AACH,wBAAIA,KAAI,OAAO,SAAS,kBAAkB;AACxC,6BAAO,WAAWA,KAAI,SAAS,IAAI;AAAA,oBACrD;AACgB,wBAAIA,KAAI,UAAU;AAChB,6BAAO,GAAG,QAAQA,KAAI,MAAM,CAAC,IAAI,QAAQA,KAAI,QAAQ,CAAC;AAAA,oBACxE;AACgB,2BAAO,QAAQA,KAAI,MAAM,IAAI,MAAM,QAAQA,KAAI,QAAQ;AAAA,kBACzD,KAAK;AACH,2BAAO;AAAA,kBACT,KAAK;AACH,2BAAO,OAAO,QAAQA,KAAI,MAAM,CAAC,IAAIA,KAAI,UAAU,IAAI,CAAAX,WAAS,QAAQA,MAAK,CAAC,EAAE,KAAK,IAAI,CAAC;AAAA,kBAC5F,KAAK;AACH,2BAAO,QAAQ,QAAQW,KAAI,IAAI,CAAC,IAAI,QAAQA,KAAI,IAAI,CAAC,IAAI,QAAQA,KAAI,MAAM,CAAC,KAAK,QAAQA,KAAI,IAAI,CAAC;AAAA,kBACpG,KAAK;AACH,2BAAO,GAAG,QAAQA,KAAI,IAAI,CAAC,GAAGA,KAAI,QAAQ,GAAG,QAAQA,KAAI,KAAK,CAAC;AAAA,kBACjE,KAAK;AACH,2BAAO,GAAG,QAAQA,KAAI,QAAQ,CAAC,GAAGA,KAAI,QAAQ;AAAA,kBAChD,KAAK;AACH,2BAAO,OAAO,QAAQA,KAAI,IAAI,CAAC,KAAK,QAAQA,KAAI,UAAU,CAAC;AAAA,kBAC7D,KAAK;AACH,2BAAO,SAAS,QAAQA,KAAI,QAAQ,CAAC;AAAA,kBACvC,KAAK;AACH,2BAAOA,KAAI,WAAW,IAAI,OAAO,EAAE,KAAK,IAAI;AAAA,kBAC9C,KAAK;AACH,2BAAOA,KAAI,SAAS,IAAI,OAAO,EAAE,KAAK,IAAI;AAAA,kBAC5C,KAAK;AACH,2BAAO;AAAA,kBACT,KAAK;AACH,2BAAO,GAAG,QAAQA,KAAI,IAAI,CAAC,IAAI,QAAQA,KAAI,UAAU,CAAC,IAAI,QAAQA,KAAI,SAAS,CAAC;AAAA,kBAClF,KAAK;AACH,wBAAIA,KAAI,SAAS,QAAQ;AACvB,6BAAO,QAAQA,KAAI,GAAG;AAAA,oBACxC;AAAA,gBACA;AACM,sBAAM,IAAI,MAAM,yBAA0BA,KAAI,IAAI,EAAG;AAAA,cAC3D;AA7Ha;AA8HT,oBAAM,SAAS,QAAQ,GAAG;AAC1B,kBAAI,qBAAqB,SAAS,GAAG;AACnC,sBAAM,gCAAgC,CAAA;AACtC,yBAAS,IAAI,GAAG,IAAI,qBAAqB,QAAQ,KAAK;AACpD,wBAAM,qBAAqB,qBAAqB,CAAC;AACjD,sBAAI,CAAC,UAAU,kBAAkB,GAAG;AAClC,8BAAU,kBAAkB,IAAI;AAAA,kBAC1C;AACQ,uCAAqB,8BAA8B,KAAK,MAAM,wBAAwB,oBAAoB,QAAQ,IAAI,IAAI,IAAI;AAAA,gBACtI;AACM,uBAAO,8BAA8B,KAAK,EAAE,IAAI;AAAA,cACtD;AACI,qBAAO;AAAA,YACX,GArJ2B;AAAA,YAuJzB,uBAAuB,wBAAC,QAAQ;AAC9B,kBAAI,IAAI,SAAS,sBAAuB,OAAM,IAAI,MAAM,0CAA0C;AAClG,oBAAM,yBAAyB,CAAA;AAC/B,uBAAS,mBAAmB,GAAG,mBAAmB,IAAI,aAAa,QAAQ,oBAAoB;AAC7F,sBAAM,cAAc,IAAI,aAAa,gBAAgB;AACrD,oBAAI,YAAY,MAAM,YAAY,GAAG,SAAS,mBAAmB,YAAY,GAAG,YAAY;AAC1F,wBAAM,EAAE,eAAe,YAAY;AACnC,2BAAS,gBAAgB,GAAG,gBAAgB,WAAW,QAAQ,iBAAiB;AAC9E,0BAAM,WAAW,WAAW,aAAa;AACzC,wBAAI,SAAS,MAAM,SAAS,mBAAmB,SAAS,MAAM,YAAY;AACxE,+BAAS,mBAAmB,GAAG,mBAAmB,SAAS,MAAM,WAAW,QAAQ,oBAAoB;AACtG,8BAAM,cAAc,SAAS,MAAM,WAAW,gBAAgB;AAC9D,4BAAI,YAAY,SAAS,YAAY;AACnC,iDAAuB,KAAK;AAAA,4BAC1B,MAAM;AAAA,4BACN,IAAI;AAAA,8BACF,MAAM;AAAA,8BACN,MAAM,YAAY,IAAI;AAAA;4BAExB,MAAM;AAAA,8BACJ,MAAM;AAAA,8BACN,QAAQ;AAAA,gCACN,MAAM;AAAA,gCACN,QAAQ,YAAY;AAAA,gCACpB,UAAU;AAAA,kCACR,MAAM;AAAA,kCACN,MAAM,SAAS,IAAI;AAAA;gCAErB,UAAU;AAAA;8BAEZ,UAAU;AAAA,gCACR,MAAM;AAAA,gCACN,MAAM,YAAY,IAAI;AAAA;8BAExB,UAAU;AAAA,4BAC9B;AAAA,0BACA,CAAiB;AAAA,wBACjB,OAAqB;AACL,gCAAM,IAAI,MAAM,kBAAkB;AAAA,wBAClD;AAAA,sBACA;AAAA,oBACA,WAAqB,SAAS,MAAM,SAAS,cAAc;AAC/C,6CAAuB,KAAK;AAAA,wBAC1B,MAAM;AAAA,wBACN,IAAI;AAAA,0BACF,MAAM;AAAA,0BACN,MAAM,SAAS,SAAS,SAAS,MAAM,OAAO,SAAS,MAAM,OAAO,SAAS,IAAI;AAAA;wBAEnF,MAAM;AAAA,0BACJ,MAAM;AAAA,0BACN,QAAQ,YAAY;AAAA,0BACpB,UAAU;AAAA,4BACR,MAAM;AAAA,4BACN,MAAM,SAAS,IAAI;AAAA;0BAErB,UAAU;AAAA,wBAC1B;AAAA,sBACA,CAAa;AAAA,oBACb,OAAiB;AACL,4BAAM,IAAI,MAAM,kBAAkB;AAAA,oBAC9C;AAAA,kBACA;AAAA,gBACA,WAAiB,YAAY,MAAM,YAAY,GAAG,SAAS,kBAAkB,YAAY,GAAG,UAAU;AAC9F,wBAAM,EAAE,aAAa,YAAY;AACjC,2BAAS,eAAe,GAAG,eAAe,SAAS,QAAQ,gBAAgB;AACzE,0BAAM,UAAU,SAAS,YAAY;AACrC,wBAAI,QAAQ,SAAS,cAAc;AACjC,6CAAuB,KAAK;AAAA,wBAC1B,MAAM;AAAA,wBACN,IAAI;AAAA,0BACF,MAAM;AAAA,0BACN,MAAM,QAAQ;AAAA;wBAEhB,MAAM;AAAA,0BACJ,MAAM;AAAA,0BACN,QAAQ,YAAY;AAAA,0BACpB,UAAU;AAAA,4BACR,MAAM;AAAA,4BACN,OAAO;AAAA,4BACP,KAAK,aAAa,SAAQ;AAAA,4BAC1B,OAAO,QAAQ;AAAA,4BACf,KAAK,QAAQ;AAAA;0BAEf,UAAU;AAAA,wBAC1B;AAAA,sBACA,CAAa;AAAA,oBACb,OAAiB;AACL,4BAAM,IAAI,MAAM,kBAAkB;AAAA,oBAC9C;AAAA,kBACA;AAAA,gBACA,OAAa;AACL,yCAAuB,KAAK,WAAW;AAAA,gBAC/C;AAAA,cACA;AACI,qBAAO;AAAA,YACX,GA/FyB;AAAA,YAiGvB,qBAAqB,wBAACQ,MAAK,UAAU;AACnC,oBAAM,UAAUA,KAAI,aAAa,SAAS,GAAG;AAC3C,sBAAM,QAAQ,EAAE,KAAK,OAAO,CAAC,EAAE,KAAK,OAAO,CAAC;AAC5C,uBAAO,MAAM,IAAI;AAAA,cACvB,GAAO;AAAA,gBACD,QAAQ,CAAC,MAAM,OAAO,MAAM,MAAM;AAAA,gBAClC,WAAW;AAAA,gBACX,eAAe,EAAE,GAAG,YAAW;AAAA,cACrC,CAAK;AACD,oBAAM,UAAUA,KAAI,aAAa,SAAS,GAAG;AAC3C,sBAAM,QAAQ,EAAE,KAAK,OAAO,CAAC,EAAE,KAAK,OAAO,CAAC;AAC5C,uBAAO,MAAM,IAAI;AAAA,cACvB,GAAO;AAAA,gBACD,QAAQ,CAAC,MAAM,OAAO,MAAM,MAAM;AAAA,gBAClC,WAAW;AAAA,gBACX,eAAe,EAAE,GAAG,YAAW;AAAA,cACrC,CAAK;AACD,oBAAM,UAAUA,KAAI,aAAa,SAAS,GAAG;AAC3C,sBAAM,QAAQ,EAAE,KAAK,OAAO,CAAC,EAAE,KAAK,OAAO,CAAC;AAC5C,uBAAO,MAAM,IAAI;AAAA,cACvB,GAAO;AAAA,gBACD,QAAQ,CAAC,MAAM,OAAO,MAAM,MAAM;AAAA,gBAClC,WAAW;AAAA,gBACX,eAAe,EAAE,GAAG,YAAW;AAAA,cACrC,CAAK;AACD,oBAAM,UAAUA,KAAI,aAAa,SAAS,GAAG;AAC3C,sBAAM,QAAQ,EAAE,KAAK,OAAO,CAAC,EAAE,KAAK,OAAO,CAAC;AAC5C,uBAAO,MAAM,IAAI;AAAA,cACvB,GAAO;AAAA,gBACD,QAAQ,CAAC,MAAM,OAAO,MAAM,MAAM;AAAA,gBAClC,WAAW;AAAA,gBACX,eAAe,EAAE,GAAG,YAAW;AAAA,cACrC,CAAK;AACD,oBAAM,SAAS;AAAA,gBACb,QAAQ,KAAK;AAAA,gBACb,QAAQ,KAAK;AAAA,gBACb,QAAQ,KAAK;AAAA,gBACb,QAAQ,KAAK;AAAA;AAEf,qBAAO,UAAU;AACjB,qBAAO,UAAU;AACjB,qBAAO,UAAU;AACjB,qBAAO,UAAU;AACjB,qBAAO,MAAMA;AACb,qBAAO;AAAA,YACX,GA7CuB;AAAA,YA+CrB,qBAAqB,wBAACA,MAAK,MAAM,OAAO,WAAW;AACjD,oBAAM,gBAAgBA,KAAI,aAAa,SAAS,GAAG;AACjD,sBAAM,QAAQ,EAAE,KAAK,OAAO,CAAC,EAAE,KAAK,OAAO,CAAC;AAC5C,qBAAK,MAAM,MAAM,IAAI,KAAK,GAAG,GAAG,GAAG;AAAA,cACzC,GAAO;AAAA,gBACD,QAAQ,CAAC,OAAO,MAAM;AAAA,gBACtB,WAAW;AAAA,gBACX,eAAe,EAAE,GAAG,aAAY;AAAA,cACtC,CAAK;AACD,4BAAc,IAAI;AAElB,oBAAM,gBAAgBA,KAAI,aAAa,SAAS,GAAG;AACjD,sBAAM,QAAQ,EAAE,KAAK,OAAO,CAAC,EAAE,KAAK,OAAO,CAAC;AAC5C,qBAAK,MAAM,GAAG,MAAM,IAAI,KAAK,GAAG,GAAG;AAAA,cACzC,GAAO;AAAA,gBACD,QAAQ,CAAC,OAAO,MAAM;AAAA,gBACtB,WAAW;AAAA,gBACX,eAAe,EAAE,GAAG,aAAY;AAAA,cACtC,CAAK;AACD,4BAAc,IAAI;AAElB,oBAAM,gBAAgBA,KAAI,aAAa,SAAS,GAAG;AACjD,sBAAM,QAAQ,EAAE,KAAK,OAAO,CAAC,EAAE,KAAK,OAAO,CAAC;AAC5C,qBAAK,MAAM,GAAG,GAAG,MAAM,IAAI,KAAK,GAAG;AAAA,cACzC,GAAO;AAAA,gBACD,QAAQ,CAAC,OAAO,MAAM;AAAA,gBACtB,WAAW;AAAA,gBACX,eAAe,EAAE,GAAG,aAAY;AAAA,cACtC,CAAK;AACD,4BAAc,IAAI;AAElB,oBAAM,gBAAgBA,KAAI,aAAa,SAAS,GAAG;AACjD,sBAAM,QAAQ,EAAE,KAAK,OAAO,CAAC,EAAE,KAAK,OAAO,CAAC;AAC5C,qBAAK,MAAM,KAAK,KAAK,KAAK,MAAM,IAAI,GAAG;AAAA,cAC7C,GAAO;AAAA,gBACD,QAAQ,CAAC,OAAO,MAAM;AAAA,gBACtB,WAAW;AAAA,gBACX,eAAe,EAAE,GAAG,aAAY;AAAA,cACtC,CAAK;AACD,4BAAc,IAAI;AAClB,qBAAO;AAAA,gBACL,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA,gBACd,cAAc;AAAA;YAEpB,GA9CuB;AAAA,YAgDrB,mBAAmB,wBAAC,OAAO;AACzB,kBAAI;AACF,sBAAM,MAAM,MAAM,MAAM,iBAAiB,GAAG,SAAQ,CAAE,EAAE;AACxD,sBAAM,EAAE,KAAI,IAAK,IAAI,KAAK,CAAC,EAAE,aAAa,CAAC;AAC3C,uBAAO,KAAK,KAAK,QAAQ,KAAK,KAAK,KAAK,CAAC,EAAE,SAAS;AAAA,cAC1D,SAAa,GAAG;AACV,sBAAM,IAAI,MAAM,6HAA6H;AAAA,cACnJ;AAAA,YACA,GARqB;AAAA,YASnB,cAAc,gCAAS9B,OAAM;AAC3B,kBAAI,WAAW,KAAKA,KAAI,GAAG;AACzB,gBAAAA,QAAOA,MAAK,QAAQ,YAAY,KAAK;AAAA,cAC3C;AACI,kBAAI,iBAAiB,KAAKA,KAAI,GAAG;AAC/B,gBAAAA,QAAOA,MAAK,QAAQ,kBAAkB,KAAK;AAAA,cACjD,WAAe,iBAAiB,KAAKA,KAAI,GAAG;AACtC,gBAAAA,QAAOA,MAAK,QAAQ,kBAAkB,KAAK;AAAA,cACjD;AACI,qBAAOA;AAAA,YACX,GAVgB;AAAA;AAahB,gBAAM,aAAa;AACnB,gBAAM,mBAAmB;AACzB,gBAAM,mBAAmB;AAEzB,gBAAM,oBAAoB,MAAM,oBAAmB;AAEnD,UAAAT,QAAO,UAAU;AAAA,YACf;AAAA;QAEF,GAAE,EAAC,WAAU,KAAI,aAAY,KAAI,SAAQ,EAAC,CAAC,EAAC,GAAE,CAAA,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG;AAAA,MAC3D,CAAC;AAAA;;;;;;ACvioBM,WAAS,iBAAiB,SAAmB,SAA6B;AAC/E,UAAM,gBAAgB,KAAK,IAAI,QAAQ,QAAQ,QAAQ,MAAM;AAC7D,UAAM,iBAAiB,CAAC,GAAG,MAAM,gBAAgB,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,GAAG,OAAO;AACpF,UAAM,iBAAiB,CAAC,GAAG,MAAM,gBAAgB,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,GAAG,OAAO;AAEpF,UAAM,eAAyB,CAAA;AAE/B,aAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACtC,UACE,eAAe,CAAC,MAAM,eAAe,CAAC,KACtC,eAAe,CAAC,MAAM,KACtB,eAAe,CAAC,MAAM,GACtB;AACA,cAAM,IAAI,MAAM,mBAAmB,OAAO,QAAQ,OAAO,EAAE;AAAA,MAC7D;AAEA,mBAAa,KAAK,KAAK,IAAI,eAAe,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC;AAAA,IAClE;AAEA,WAAO;AAAA,EACT;AApBgB;AAsBT,WAAS,WAAW,OAAiB,iBAAqC;AAC/E,QAAI,MAAM,UAAU,gBAAgB,QAAQ;AAC1C,aAAO;AAAA,IACT;AAEA,WAAO,CAAC,GAAG,MAAM,gBAAgB,SAAS,MAAM,MAAM,EAAE,KAAK,CAAC,GAAG,GAAG,KAAK;AAAA,EAC3E;AANgB;AAQT,WAAS,oBACd,gBACA,WACAsB,QACQ;AACR,QAAI,iBAAiB;AACrB,QAAI,aAAa;AACjB,QAAI,aAAaA;AAEjB,aAAS,IAAI,eAAe,SAAS,GAAG,KAAK,GAAG,KAAK;AACnD,UAAI,eAAe,CAAC,IAAI,GAAG;AACzB,cAAM,YAAY,aAAa,UAAU,CAAC;AAC1C,yBAAiB,iBAAiB,YAAY;AAAA,MAChD;AACA,oBAAc,eAAe,CAAC;AAC9B,mBAAa,KAAK,MAAM,aAAa,UAAU,CAAC,CAAC;AAAA,IACnD;AACA,WAAO;AAAA,EACT;AAlBgB;AAoBT,WAAS,2BACd,gBACA,WACAA,QACQ;AACR,QAAI,iBAAiB;AACrB,QAAI,aAAa;AACjB,QAAI,aAAaA;AAEjB,aAAS,IAAI,KAAK,UAAU,eAAe,GAAG,KAAK,GAAG,KAAK;AACzD,UAAI,eAAe,CAAC,IAAI,GAAG;AACzB,cAAM,YAAY,aAAa,UAAU,CAAC;AAC1C,yBAAiB,iBAAiB,YAAY;AAAA,MAChD;AACA,mBAAa,aAAa,eAAe,CAAC;AAC1C,mBAAa,KAAK,MAAM,aAAa,UAAU,CAAC,CAAC;AAAA,IACnD;AACA,WAAO;AAAA,EACT;AAlBgB;AAoBT,WAAS,0CACd,gBACA,MACA,MACA,kBACQ;AACR,QAAI,iBAAiB;AACrB,QAAI,aAAa;AACjB,QAAI,aAAa;AAEjB,QAAI,aAAa;AACjB,QAAI,aAAa;AAEjB,aAAS,IAAI,KAAK,UAAU,eAAe,GAAG,KAAK,GAAG,KAAK;AACzD,YAAM,YAAY,aAAa,eAAe,CAAC;AAC/C,UAAI,KAAK,MAAM;AACb,qBAAa;AAAA,MACf;AACA,UAAI,KAAK,MAAM;AACb,qBAAa;AAAA,MACf;AACA,mBAAa,KAAK,MAAM,aAAa,eAAe,CAAC,CAAC;AAAA,IACxD;AAEA,iBAAa;AAEb,aAAS,IAAI,KAAK,UAAU,eAAe,GAAG,KAAK,GAAG,KAAK;AACzD,YAAM,YAAY,aAAa,eAAe,CAAC;AAC/C,UAAI,KAAK,MAAM;AACb,yBAAiB,iBAAiB,aAAa;AAAA,MACjD,WAAW,KAAK,MAAM;AACpB,yBAAiB,iBAAiB,aAAa;AAAA,MACjD,OAAO;AACL,yBAAiB,iBAAiB,YAAY;AAAA,MAChD;AACA,mBAAa,aAAa,eAAe,CAAC;AAC1C,mBAAa,KAAK,MAAM,aAAa,eAAe,CAAC,CAAC;AAAA,IACxD;AAEA,WAAO;AAAA,EAGT;AA1CgB;ACjDhB,QAAM,MAAM,IAAIkB,kBAAAA,IAAI,EAAE,MAAM,OAAO;AAGnC,MAAI,YAAY,4BAA4B;AAAA,IAC1C,YAAY;AAAA,IACZ,eAAe;AAAA,MACb,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,OAAO;AAAA,IAAA;AAAA,EAEX,CAAC;AAED,MAAI,YAAY,2CAA2C;AAAA,IACzD,YAAY;AAAA,IACZ,eAAe;AAAA,MACb,gBAAgB;AAAA,MAChB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,kBAAkB;AAAA,IAAA;AAAA,EAEtB,CAAC;ACvCD,QAAM,iCAAiB,IAAA;AACvB,QAAM,uCAAuB,IAAA;AAEtB,WAAS,kBAAkB/B,OAAc,MAA4B;AAC1E,eAAW,IAAIA,OAAM,IAAI;AAAA,EAC3B;AAFgB;AAIT,WAAS,aAAaA,OAAoC;AAC/D,UAAM,OAAO,WAAW,IAAIA,KAAI;AAChC,QAAI,CAAC,MAAM;AACT,YAAM,IAAI,MAAM,cAAcA,KAAI,sBAAsB;AAAA,IAC1D;AACA,WAAO;AAAA,EACT;AANgB;AAQT,WAAS,kBAAkBA,OAAyB;AACzD,UAAM,YAAY,iBAAiB,IAAIA,KAAI;AAC3C,QAAI,CAAC,WAAW;AACd,uBAAiB,IAAIA,OAAM,KAAK,aAAaA,KAAI,IAAI;AACrD,aAAO,iBAAiB,IAAIA,KAAI;AAAA,IAClC;AACA,WAAO;AAAA,EACT;AAPgB;ACKhB,WAAS,WAAW,MAAmC;AACrD,QAAI,YAAY,OAAO,IAAI,GAAG;AAC5B,aAAO,CAAC,KAAK,MAAM;AAAA,IACrB;AAEA,UAAM,QAAQ,CAAA;AACd,WAAO,MAAM,QAAQ,IAAI,GAAG;AAC1B,YAAM,KAAK,KAAK,MAAM;AACtB,aAAO,KAAK,CAAC;AAAA,IACf;AACA,WAAO;AAAA,EACT;AAXS;AAaT,WAAS,SAAS,MAAmC;AACnD,QAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,aAAO,KAAK,QAAQ,CAAA,SAAQ,SAAS,IAAI,CAAC;AAAA,IAC5C,WAAW,YAAY,OAAO,IAAI,GAAG;AACnC,aAAO,MAAM,KAAK,IAAI;AAAA,IACxB,OAAO;AACL,aAAO,CAAC,IAAI;AAAA,IACd;AAAA,EACF;AARS;AAUF,QAAM,UAAN,MAAM,QAAO;AAAA,IAClB;AAAA,IACA;AAAA,IACA,YAA8B;AAAA,IACvB,OAAsB;AAAA,IAE7B;AAAA,IAEA,YACE,MACA,UAAuC,CAAA,GACvC,mBAAgE,CAAA,GAChE;AACA,WAAK,OAAO,gBAAgBgC,kBAAAA,UAAU,OAAO,SAAS,IAAI;AAC1D,WAAK,gBAAgB,QAAQ,iBAAiB;AAE9C,WAAK,SAAS,iBAAiB,SAAS,WAAW,gBAAgBA,kBAAAA,UAAU,KAAK,QAAA,IAAY,IAAI;AAClG,WAAK,YAAY,iBAAiB,aAAa;AAAA,IACjD;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,IAAI,QAAkB;AACpB,aAAO,KAAK,OAAO,WAAW,IAAI,CAAC,CAAC,IAAI,KAAK;AAAA,IAE/C;AAAA,IAEA,WAAiB;AACf,UAAI,KAAK,gBAAgBA,2BAAS;AAChC,aAAK,OAAO,KAAK,KAAK,QAAA;AAAA,MACxB;AAAA,IACF;AAAA,IAEA,UAAoB;AAClB,UAAI,KAAK,gBAAgBA,2BAAS;AAChC,eAAO,KAAK,KAAK,QAAA;AAAA,MACnB;AACA,aAAO,KAAK;AAAA,IACd;AAAA,IAEA,aAAqB;AACnB,UAAI,KAAK,gBAAgBA,2BAAS;AAChC,eAAO,KAAK,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC;AAAA,MACrD;AACA,aAAO,KAAK,KAAK;AAAA,IACnB;AAAA,IAEA,IAAI,MAAM,OAAiB;AACzB,WAAK,SAAS;AAAA,IAChB;AAAA,IAEQ,gBAAgB,QAAwB;AAC9C,YAAM,YAAY,KAAK,gBAAgB,KAAK,aAAa,MAAM,GAAA,IAAO,kBAAkB,MAAM;AAC9F,aAAO,UAAU,QAAQ,IAAI;AAAA,IAC/B;AAAA,IAEQ,iBAAiB,QAAgB,OAAgC;AACvE,UAAI,OAAO,SAAS,UAAU;AAC5B,gBAAQ,IAAI,QAAO,KAAK;AAAA,MAC1B;AACA,YAAM,YAAY,KAAK,iBAAiB,MAAM,gBAAgB,KAAK,aAAa,MAAM,OAAO,kBAAkB,MAAM;AACrH,aAAO,UAAU,QAAQ,MAAM,KAAK;AAAA,IACtC;AAAA,IAEQ,cAAc,WAAmB,MAAqB;AAC5D,YAAM,YAAY,KAAK,aAAa,MAAM,GAAA;AAC1C,aAAO,UAAU,QAAQ,MAAM,GAAG,IAAI;AAAA,IACxC;AAAA,IAEA,OAAe;AACb,UAAI,KAAK,WAAA,MAAiB,GAAG;AAC3B,cAAM,IAAI,MAAM,yCAAyC;AAAA,MAC3D;AACA,aAAO,KAAK,QAAA,EAAU,CAAC;AAAA,IACzB;AAAA,IAEA,SAAiB;AACf,aAAO,IAAI,QAAO,KAAK,MAAM,EAAE,eAAe,MAAA,GAAS,EAAE,OAAO,KAAK,MAAA,CAAO;AAAA,IAC9E;AAAA,IAEA,UAAgB;AACd,WAAK,gBAAgB;AACrB,WAAK,OAAO;AACZ,WAAK,YAAY;AAAA,IACnB;AAAA,IAEA,QAAc;AACZ,WAAK,OAAO,MAAM,KAAK,YAAY,EAAE,KAAK,CAAC;AAAA,IAC7C;AAAA,IAEA,SAAS,MAA4B;AACnC,UAAI,CAAC,KAAK,eAAe;AAGvB;AAAA,MACF;AAEA,UAAI,CAAC,MAAM;AACT,YAAI,KAAK,WAAA,MAAiB,GAAG;AAC3B,gBAAM,IAAI,MAAM,6CAA6C;AAAA,QAC/D;AACA,eAAO,IAAI,QAAO,CAAC;AAAA,MACrB,OAAO;AACL,aAAK,SAAA;AAAA,MACP;AAEA,UAAI,CAAC,KAAK,MAAM;AACd,aAAK,OAAO,IAAI,QAAO,MAAM,KAAK,YAAY,EAAE,KAAK,CAAC,CAAC;AAAA,MACzD;AAEA,WAAK,KAAK,SAAA;AAGV,eAAS,IAAI,GAAG,IAAI,KAAK,WAAA,GAAc,KAAK;AAC1C,aAAK,KAAK,KAAK,oBAAoB,KAAK,OAAO,KAAK,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC;AAAA,MAC/E;AAEA,UAAI,KAAK,WAAW;AAKlB,aAAK,UAAU,SAAS,KAAK,IAAI;AAAA,MACnC;AAAA,IACF;AAAA;AAAA;AAAA,IAMA,IAAI,OAAgC;AAClC,aAAO,KAAK,iBAAiB,OAAO,KAAK;AAAA,IAC3C;AAAA,IAEA,IAAI,OAAgC;AAClC,aAAO,KAAK,iBAAiB,OAAO,KAAK;AAAA,IAC3C;AAAA,IAEA,IAAI,OAAgC;AAClC,aAAO,KAAK,iBAAiB,OAAO,KAAK;AAAA,IAC3C;AAAA,IAEA,IAAI,OAAgC;AAClC,aAAO,KAAK,iBAAiB,OAAO,KAAK;AAAA,IAC3C;AAAA,IAEA,IAAI,OAAgC;AAClC,UAAI,OAAO,SAAS,YAAY,QAAQ,MAAM,GAAG;AAC/C,eAAO,KAAK,cAAc,UAAU,KAAK;AAAA,MAC3C;AACA,aAAO,KAAK,iBAAiB,OAAO,KAAK;AAAA,IAC3C;AAAA,IAEA,KAAK,OAAgC;AACnC,aAAO,KAAK,iBAAiB,QAAQ,KAAK;AAAA,IAC5C;AAAA;AAAA,IAIA,MAAc;AACZ,aAAO,KAAK,gBAAgB,KAAK;AAAA,IACnC;AAAA,IAEA,OAAe;AACb,aAAO,KAAK,gBAAgB,MAAM;AAAA,IACpC;AAAA,IAEA,MAAc;AACZ,aAAO,KAAK,gBAAgB,KAAK;AAAA,IACnC;AAAA,IAEA,MAAc;AACZ,aAAO,KAAK,gBAAgB,KAAK;AAAA,IACnC;AAAA,IAEA,OAAe;AACb,aAAO,KAAK,gBAAgB,MAAM;AAAA,IACpC;AAAA,IAEA,MAAc;AACZ,aAAO,KAAK,gBAAgB,KAAK;AAAA,IACnC;AAAA,IAEA,aAAqB;AACnB,aAAO,KAAK,gBAAgB,YAAY;AAAA,IAC1C;AAAA,IAEA,QAAQ,OAAyB;AAC/B,aAAO,KAAK,cAAc,WAAW,KAAK;AAAA,IAC5C;AAAA;AAAA,IAIA,MAAc;AACZ,aAAO,KAAK,gBAAgB,KAAK;AAAA,IACnC;AAAA,IAEA,MAAc;AACZ,aAAO,KAAK,gBAAgB,KAAK;AAAA,IACnC;AAAA,IAEA,MAAc;AACZ,aAAO,KAAK,gBAAgB,KAAK;AAAA,IACnC;AAAA;AAAA,IAIA,MAAc;AACZ,aAAO,KAAK,gBAAgB,KAAK;AAAA,IACnC;AAAA,IAEA,OAAe;AACb,aAAO,KAAK,gBAAgB,MAAM;AAAA,IACpC;AAAA;AAAA,IAIA,UAAU,MAAc,MAAsB;AAC5C,aAAO,KAAK,cAAc,aAAa,MAAM,IAAI;AAAA,IACnD;AAAA,IAEA,OAAO,OAAuB;AAC5B,aAAO,KAAK,iBAAiB,UAAU,KAAK;AAAA,IAC9C;AAAA;AAAA,IAIA,GAAG,OAAgC;AACjC,aAAO,KAAK,iBAAiB,MAAM,KAAK;AAAA,IAC1C;AAAA,IAEA,GAAG,OAAgC;AACjC,aAAO,KAAK,iBAAiB,MAAM,KAAK;AAAA,IAC1C;AAAA,IAEA,GAAG,OAAgC;AACjC,aAAO,KAAK,iBAAiB,MAAM,KAAK;AAAA,IAC1C;AAAA,IAEA,GAAG,OAAgC;AACjC,aAAO,KAAK,iBAAiB,MAAM,KAAK;AAAA,IAC1C;AAAA,IAEA,GAAG,OAAgC;AACjC,aAAO,KAAK,iBAAiB,MAAM,KAAK;AAAA,IAC1C;AAAA,IAEA,GAAG,OAAgC;AACjC,aAAO,KAAK,iBAAiB,MAAM,KAAK;AAAA,IAC1C;AAAA,EACF;AA5PoB;AAAb,MAAM,SAAN;AC5CP,QAAe,aAAf,MAAe,WAAU;AAAA,EAGzB;AAHyB;AAAzB,MAAe,YAAf;AAKA,QAAe,kBAAf,MAAe,wBAAuB,UAAU;AAAA,EAGhD;AAHgD;AAAhD,MAAe,iBAAf;AAKA,QAAe,mBAAf,MAAe,yBAAwB,UAAU;AAAA,EAGjD;AAHiD;AAAjD,MAAe,kBAAf;ACTA,WAASC,oBAAkB,QAAgB;AACzC,WAAO,IAAI,SAA8B;AACvC,YAAM,YAAY,KAAK,aAAa,MAAM,GAAA;AAC1C,aAAO,UAAU,QAAQ,GAAG,IAAI;AAAA,IAClC;AAAA,EACF;AALSA;AAOT,WAASC,0BAAwB,QAAgB;AAC/C,WAAO,CAAC,MAAuB;AAC7B,UAAI,OAAO,KAAK,UAAU;AACxB,YAAI,IAAI,OAAO,CAAC;AAAA,MAClB;AAEA,YAAM,YAAY,KAAK,aAAa,MAAM,GAAA;AAC1C,aAAO,UAAU,QAAQ,CAAC;AAAA,IAC5B;AAAA,EACF;AATSA;AAWT,WAASC,2BAAyB,QAAgB;AAChD,WAAO,CAAC,GAAoB,MAAuB;AACjD,UAAI,OAAO,KAAK,UAAU;AACxB,YAAI,IAAI,OAAO,CAAC;AAAA,MAClB;AAEA,UAAI,OAAO,KAAK,UAAU;AACxB,YAAI,IAAI,OAAO,CAAC;AAAA,MAClB;AAEA,YAAM,YAAY,KAAK,aAAa,MAAM,GAAA;AAC1C,aAAO,UAAU,QAAQ,GAAG,CAAC;AAAA,IAC/B;AAAA,EACF;AAbSA;AAiBF,QAAM,MAAMA,2BAAyB,KAAK;AAC1C,QAAM,MAAMA,2BAAyB,KAAK;AAC1C,QAAM,MAAMA,2BAAyB,KAAK;AAC1C,QAAM,MAAMA,2BAAyB,KAAK;AAC1C,QAAM,MAAMA,2BAAyB,KAAK;AAC1C,QAAM,OAAOA,2BAAyB,MAAM;AAI5C,QAAM,MAAMD,0BAAwB,KAAK;AACzC,QAAM,OAAOA,0BAAwB,MAAM;AAC3C,QAAM,MAAMA,0BAAwB,KAAK;AACzC,QAAM,MAAMA,0BAAwB,KAAK;AACzC,QAAM,OAAOA,0BAAwB,MAAM;AAC3C,QAAM,MAAMA,0BAAwB,KAAK;AACzC,QAAM,aAAaA,0BAAwB,YAAY;AACvD,QAAM,UAAUD,oBAAkB,SAAS;AAI3C,QAAM,MAAMC,0BAAwB,KAAK;AACzC,QAAM,MAAMA,0BAAwB,KAAK;AACzC,QAAM,MAAMA,0BAAwB,KAAK;AAIzC,QAAM,MAAMA,0BAAwB,KAAK;AACzC,QAAM,OAAOA,0BAAwB,MAAM;AAI3C,QAAM,YAAYD,oBAAkB,WAAW;AAC/C,QAAM,SAASE,2BAAyB,QAAQ;AAIhD,QAAM,KAAKA,2BAAyB,IAAI;AACxC,QAAM,KAAKA,2BAAyB,IAAI;AACxC,QAAM,KAAKA,2BAAyB,IAAI;AACxC,QAAM,KAAKA,2BAAyB,IAAI;AACxC,QAAM,KAAKA,2BAAyB,IAAI;AACxC,QAAM,KAAKA,2BAAyB,IAAI;AChE/C,QAAM,cAAc,IAAI;AAAA,IACtB,SAAU,GAAa,IAAc,GAAa,IAAc,KAAe;AAC7E,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AACjE,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAEjE,aAAO,EAAE,OAAO,IAAI,EAAE,OAAO;AAAA,IAC/B;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,YAAY,GAAW,GAAW,YAA8B,MAAc;AACrF,UAAM,kBAAkB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzD,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAC1D,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,gBAAgB;AAAA,IAAA,CAC/B;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,gBAAgB,EAAE,MAAM,gBAAgB,eAAe;AAAA,MACtE,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gBAAA;AAAA,IAAgB;AAAA,EAEnD;AAhBS;AAkBF,QAAM,OAAN,MAAM,aAAY,gBAAgB;AAAA,IAC/B;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,YAAY,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC3E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAGpB,QAAE,SAAS,EAAE;AACb,QAAE,SAAS,EAAE;AAAA,IACf;AAAA,EACF;AAfyC;AAAlC,MAAM,MAAN;AAgBP,oBAAkB,OAAO,GAAG;AAE5B,QAAM,cAAc,IAAI;AAAA,IACtB,SAAU,GAAa,IAAc,GAAa,IAAc,KAAe;AAC7E,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AACjE,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAEjE,aAAO,EAAE,OAAO,IAAI,EAAE,OAAO;AAAA,IAC/B;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,YAAY,GAAW,GAAW,YAA8B,MAAc;AACrF,UAAM,kBAAkB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzD,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAC1D,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,gBAAgB;AAAA,IAAA,CAC/B;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,gBAAgB,EAAE,MAAM,gBAAgB,eAAe;AAAA,MACtE,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gBAAA;AAAA,IAAgB;AAAA,EAEnD;AAhBS;AAkBF,QAAM,OAAN,MAAM,aAAY,gBAAgB;AAAA,IAC/B;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,YAAY,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC3E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAGpB,QAAE,SAAS,EAAE;AACb,QAAE,SAAS,GAAG,IAAI,IAAI,OAAO,EAAE,CAAC,CAAC;AAAA,IACnC;AAAA,EACF;AAfyC;AAAlC,MAAM,MAAN;AAgBP,oBAAkB,OAAO,GAAG;AAE5B,QAAM,cAAc,IAAI;AAAA,IACtB,SAAU,GAAa,IAAc,GAAa,IAAc,KAAe;AAC7E,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AACjE,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAEjE,aAAO,EAAE,OAAO,IAAI,EAAE,OAAO;AAAA,IAC/B;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,YAAY,GAAW,GAAW,YAA8B,MAAc;AACrF,UAAM,kBAAkB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzD,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAC1D,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,gBAAgB;AAAA,IAAA,CAC/B;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,gBAAgB,EAAE,MAAM,gBAAgB,eAAe;AAAA,MACtE,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gBAAA;AAAA,IAAgB;AAAA,EAEnD;AAhBS;AAkBF,QAAM,OAAN,MAAM,aAAY,gBAAgB;AAAA,IAC/B;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,YAAY,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC3E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAGpB,QAAE,SAAS,GAAG,IAAI,CAAC,CAAC;AACpB,QAAE,SAAS,GAAG,IAAI,CAAC,CAAC;AAAA,IACtB;AAAA,EACF;AAfyC;AAAlC,MAAM,MAAN;AAgBP,oBAAkB,OAAO,GAAG;AAE5B,QAAM,cAAc,IAAI;AAAA,IACtB,SAAU,GAAa,IAAc,GAAa,IAAc,KAAe;AAC7E,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AACjE,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAEjE,aAAO,EAAE,OAAO,IAAI,EAAE,OAAO;AAAA,IAC/B;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,YAAY,GAAW,GAAW,YAA8B,MAAc;AACrF,UAAM,kBAAkB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzD,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAC1D,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,gBAAgB;AAAA,IAAA,CAC/B;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,gBAAgB,EAAE,MAAM,gBAAgB,eAAe;AAAA,MACtE,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gBAAA;AAAA,IAAgB;AAAA,EAEnD;AAhBS;AAkBF,QAAM,OAAN,MAAM,aAAY,gBAAgB;AAAA,IAC/B;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,YAAY,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC3E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAGpB,QAAE,SAAS,GAAG,IAAI,CAAC,CAAC;AACpB,QAAE,SAAS,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AAAA,IACxD;AAAA,EACF;AAfyC;AAAlC,MAAM,MAAN;AAgBP,oBAAkB,OAAO,GAAG;AAE5B,QAAM,cAAc,IAAI;AAAA,IACtB,SAAU,GAAa,IAAc,GAAa,IAAc,KAAe;AAC7E,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AACjE,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAEjE,aAAO,KAAK,IAAI,EAAE,OAAO,GAAG,EAAE,OAAO,CAAC;AAAA,IACxC;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,YAAY,GAAW,GAAW,YAA8B,MAAc;AACrF,UAAM,kBAAkB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzD,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAC1D,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,gBAAgB;AAAA,IAAA,CAC/B;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,gBAAgB,EAAE,MAAM,gBAAgB,eAAe;AAAA,MACtE,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gBAAA;AAAA,IAAgB;AAAA,EAEnD;AAhBS;AAkBF,QAAM,OAAN,MAAM,aAAY,gBAAgB;AAAA,IAC/B;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,YAAY,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC3E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAGpB,QAAE,SAAS,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,QAAE,SAAS,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,IAAA,CAAK,CAAC;AAAA,IAC1C;AAAA,EACF;AAfyC;AAAlC,MAAM,MAAN;AAgBP,oBAAkB,OAAO,GAAG;AAE5B,QAAM,eAAe,IAAI;AAAA,IACvB,SAAU,GAAa,IAAc,GAAa,IAAc,KAAe;AAC7E,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AACjE,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAEjE,aAAO,EAAE,OAAO,IAAI,EAAE,OAAO;AAAA,IAC/B;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,aAAa,GAAW,GAAW,YAA8B,MAAc;AACtF,UAAM,kBAAkB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzD,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAC1D,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,gBAAgB;AAAA,IAAA,CAC/B;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,gBAAgB,EAAE,MAAM,gBAAgB,eAAe;AAAA,MACtE,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gBAAA;AAAA,IAAgB;AAAA,EAEnD;AAhBS;AAkBF,QAAM,QAAN,MAAM,cAAa,gBAAgB;AAAA,IAChC;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,aAAa,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC5E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAGpB,QAAE,SAAS,EAAE;AAAA,IACf;AAAA,EACF;AAd0C;AAAnC,MAAM,OAAN;AAeP,oBAAkB,QAAQ,IAAI;AAE9B,WAAS,wBAAwB,GAAa,GAAW;AACvD,WAAO,KAAK,IAAI,EAAE,KAAK,OAAO,CAAC,GAAG,CAAC;AAAA,EACrC;AAFS;AAIT,QAAM,iBAAiB,IAAI;AAAA,IACzB;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,eAAe,GAAW,GAAW,YAA8B,MAAc;AACxF,UAAM,SAAS;AACf,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,CAAC;AAAA,MAChB,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,EAAE,MAAA;AAAA,IAAM;AAAA,EAE3C;AATS;AAWF,QAAM,UAAN,MAAM,gBAAe,UAAU;AAAA,IAC5B;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AAEA,aAAO,eAAe,GAAG,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC3D;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAGpB,QAAE,SAAS,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;AAAA,IACxC;AAAA,EACF;AAfsC;AAA/B,MAAM,SAAN;AAgBP,oBAAkB,UAAU,MAAM;AAMlC,QAAM,cAAc,IAAI;AAAA,IACtB,SAAU,GAAa;AACrB,aAAO,KAAK,IAAI,EAAE,KAAK,OAAO,CAAC,CAAC;AAAA,IAClC;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,YAAY,GAAW,YAA8B,MAAc;AAC1E,UAAM,SAAS;AACf,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,IAAI;AAAA,MACb,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,EAAE,MAAA;AAAA,IAAM;AAAA,EAE3C;AATS;AAWF,QAAM,OAAN,MAAM,aAAY,eAAe;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,YAAY,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IACrD;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,QAAE,SAAS,IAAI,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;AAAA,IACjC;AAAA,EACF;AAdwC;AAAjC,MAAM,MAAN;AAeP,oBAAkB,OAAO,GAAG;AAI5B,QAAM,eAAe,IAAI;AAAA,IACvB,SAAU,GAAa;AACrB,aAAO,KAAK,KAAK,EAAE,KAAK,OAAO,CAAC,CAAC;AAAA,IACnC;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,aAAa,GAAW,YAA8B,MAAc;AAC3E,UAAM,SAAS;AACf,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,IAAI;AAAA,MACb,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,EAAE,MAAA;AAAA,IAAM;AAAA,EAE3C;AATS;AAWF,QAAM,QAAN,MAAM,cAAa,eAAe;AAAA,IAC/B;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,aAAa,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IACtD;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,QAAE,SAAS,IAAI,OAAO,CAAC,EAAE,IAAI,EAAE,KAAA,CAAM,EAAE,IAAI,CAAC,CAAC;AAAA,IAC/C;AAAA,EACF;AAdyC;AAAlC,MAAM,OAAN;AAeP,oBAAkB,QAAQ,IAAI;AAI9B,QAAM,cAAc,IAAI;AAAA,IACtB,SAAU,GAAa;AACrB,aAAO,KAAK,IAAI,EAAE,KAAK,OAAO,CAAC,CAAC;AAAA,IAClC;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,YAAY,GAAW,YAA8B,MAAc;AAC1E,UAAM,SAAS;AACf,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,IAAI;AAAA,MACb,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,EAAE,MAAA;AAAA,IAAM;AAAA,EAE3C;AATS;AAWF,QAAM,OAAN,MAAM,aAAY,eAAe;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,YAAY,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IACrD;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,QAAE,SAAS,GAAG,IAAI,EAAE,IAAA,CAAK,CAAC;AAAA,IAC5B;AAAA,EACF;AAdwC;AAAjC,MAAM,MAAN;AAeP,oBAAkB,OAAO,GAAG;AAI5B,QAAM,cAAc,IAAI;AAAA,IACtB,SAAU,GAAa;AACrB,aAAO,KAAK,IAAI,EAAE,KAAK,OAAO,CAAC,CAAC;AAAA,IAClC;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,YAAY,GAAW,YAA8B,MAAc;AAC1E,UAAM,SAAS;AACf,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,IAAI;AAAA,MACb,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,EAAE,MAAA;AAAA,IAAM;AAAA,EAE3C;AATS;AAWF,QAAM,OAAN,MAAM,aAAY,eAAe;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,YAAY,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IACrD;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,QAAE,SAAS,GAAG,IAAIC,KAAgB,CAAC,CAAC,CAAC;AAAA,IACvC;AAAA,EACF;AAdwC;AAAjC,MAAM,MAAN;AAeP,oBAAkB,OAAO,GAAG;AAI5B,QAAM,eAAe,IAAI;AAAA,IACvB,SAAU,GAAa;AACrB,aAAO,KAAK,KAAK,EAAE,KAAK,OAAO,CAAC,CAAC;AAAA,IACnC;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,aAAa,GAAW,YAA8B,MAAc;AAC3E,UAAM,SAAS;AACf,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,IAAI;AAAA,MACb,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,EAAE,MAAA;AAAA,IAAM;AAAA,EAE3C;AATS;AAWF,QAAM,QAAN,MAAM,cAAa,eAAe;AAAA,IAC/B;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,aAAa,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IACtD;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAAA,IAInB;AAAA,EACF;AAdyC;AAAlC,MAAM,OAAN;AAeP,oBAAkB,QAAQ,IAAI;AAI9B,QAAM,cAAc,IAAI;AAAA,IACtB,SAAU,GAAa;AACrB,aAAO,KAAK,KAAK,EAAE,KAAK,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,OAAO,CAAC;AAAA,IACtD;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,YAAY,GAAW,YAA8B,MAAc;AAC1E,UAAM,SAAS;AACf,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,IAAI;AAAA,MACb,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,EAAE,MAAA;AAAA,IAAM;AAAA,EAE3C;AATS;AAWF,QAAM,OAAN,MAAM,aAAY,eAAe;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,YAAY,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IACrD;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,QAAE,SAAS,GAAG,IAAI,IAAI,OAAO,EAAE,CAAC,CAAC;AAAA,IACnC;AAAA,EACF;AAdwC;AAAjC,MAAM,MAAN;AAeP,oBAAkB,OAAO,GAAG;AAI5B,QAAM,qBAAqB,IAAI;AAAA,IAC7B,SAAU,GAAa;AACrB,aAAO,IAAI,EAAE,KAAK,OAAO,CAAC;AAAA,IAC5B;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,mBAAmB,GAAW,YAA8B,MAAc;AACjF,UAAM,SAAS;AACf,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,IAAI;AAAA,MACb,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,EAAE,MAAA;AAAA,IAAM;AAAA,EAE3C;AATS;AAWF,QAAM,cAAN,MAAM,oBAAmB,eAAe;AAAA,IACrC;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,mBAAmB,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC5D;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,QAAE,SAAS,GAAG,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AAAA,IAC9B;AAAA,EACF;AAd+C;AAAxC,MAAM,aAAN;AAeP,oBAAkB,cAAc,UAAU;AAEnC,QAAM,WAAN,MAAM,iBAAgB,UAAU;AAAA,IAC7B;AAAA,IACD,QAAQ,GAAW,OAAiB;AACzC,YAAM,kBAAkB,EAAE,WAAA;AAC1B,YAAM,gBAAgB,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC;AAE7D,UAAI,oBAAoB,eAAe;AACrC,cAAM,IAAI,MAAM,qBAAqB,EAAE,QAAQ,UAAU,KAAK;AAAA,MAChE;AAEA,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AAEA,aAAO,IAAI;AAAA,QACT,EAAE;AAAA,QACF,EAAE,eAAe,EAAE,cAAA;AAAA,QACnB,EAAE,WAAW,EAAE,gBAAgB,OAAO,MAAM,MAAA;AAAA,MAAM;AAAA,IAEtD;AAAA,IACO,SAAS,IAAY;AAC1B,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,QAAE,SAAS,GAAG,QAAQ,EAAE,KAAK,CAAC;AAAA,IAChC;AAAA,EACF;AA1BuC;AAAhC,MAAM,UAAN;AA2BP,oBAAkB,WAAW,OAAO;AAMpC,QAAM,cAAc,IAAI;AAAA,IACtB,SAAU,GAAa;AACrB,aAAO,KAAK,IAAI,EAAE,KAAK,OAAO,CAAC,CAAC;AAAA,IAClC;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,YAAY,GAAW,YAA8B,MAAc;AAC1E,UAAM,SAAS;AACf,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,IAAI;AAAA,MACb,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,EAAE,MAAA;AAAA,IAAM;AAAA,EAE3C;AATS;AAWF,QAAM,OAAN,MAAM,aAAY,eAAe;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,YAAY,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IACrD;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,QAAE,SAAS,GAAG,IAAI,EAAE,IAAA,CAAK,CAAC;AAAA,IAC5B;AAAA,EACF;AAdwC;AAAjC,MAAM,MAAN;AAeP,oBAAkB,OAAO,GAAG;AAI5B,QAAM,cAAc,IAAI;AAAA,IACtB,SAAU,GAAa;AACrB,aAAO,KAAK,IAAI,EAAE,KAAK,OAAO,CAAC,CAAC;AAAA,IAClC;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,YAAY,GAAW,YAA8B,MAAc;AAC1E,UAAM,SAAS;AACf,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,IAAI;AAAA,MACb,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,EAAE,MAAA;AAAA,IAAM;AAAA,EAE3C;AATS;AAWF,QAAM,OAAN,MAAM,aAAY,eAAe;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,YAAY,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IACrD;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,QAAE,SAAS,GAAG,IAAI,EAAE,MAAM,IAAA,CAAK,CAAC;AAAA,IAClC;AAAA,EACF;AAdwC;AAAjC,MAAM,MAAN;AAeP,oBAAkB,OAAO,GAAG;AAI5B,QAAM,cAAc,IAAI;AAAA,IACtB,SAAU,GAAa;AACrB,aAAO,KAAK,IAAI,EAAE,KAAK,OAAO,CAAC,CAAC;AAAA,IAClC;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,YAAY,GAAW,YAA8B,MAAc;AAC1E,UAAM,SAAS;AACf,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,IAAI;AAAA,MACb,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,EAAE,MAAA;AAAA,IAAM;AAAA,EAE3C;AATS;AAWF,QAAM,OAAN,MAAM,aAAY,eAAe;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,YAAY,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IACrD;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,QAAE,SAAS,GAAG,IAAI,EAAE,MAAM,IAAI,EAAE,CAAC,CAAC;AAAA,IACpC;AAAA,EACF;AAdwC;AAAjC,MAAM,MAAN;AAeP,oBAAkB,OAAO,GAAG;AAI5B,WAAS,YAAY,GAAW,YAA8B,MAAc;AAC1E,WAAO,IAAI;AAAA,MACT,EAAE,UAAU,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC;AAAA,MAC7C,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,UAAA;AAAA,IAAqB;AAAA,EAE3B;AANS;AASF,QAAM,OAAN,MAAM,aAAY,eAAe;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,YAAY,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IACrD;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,YAAM,SAAS,IAAI,OAAO,MAAM,EAAE,WAAA,CAAY,EAAE,KAAK,GAAG,KAAA,CAAM,CAAC;AAC/D,QAAE,SAAS,MAAM;AAAA,IACnB;AAAA,EACF;AAfwC;AAAjC,MAAM,MAAN;AAgBP,oBAAkB,OAAO,GAAG;AAE5B,WAAS,aAAa,GAAW,YAA8B,MAAc;AAC3E,WAAO,IAAI;AAAA,MACT,EAAE,QAAA,EAAU,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,IAAI,EAAE,WAAA;AAAA,MACnD,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,UAAA;AAAA,IAAqB;AAAA,EAE3B;AANS;AASF,QAAM,QAAN,MAAM,cAAa,eAAe;AAAA,IAC/B;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,aAAa,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IACtD;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,YAAM,SAAS,IAAI,OAAO,MAAM,EAAE,WAAA,CAAY,EAAE,KAAK,GAAG,KAAA,IAAS,EAAE,WAAA,CAAY,CAAC;AAChF,QAAE,SAAS,MAAM;AAAA,IACnB;AAAA,EACF;AAfyC;AAAlC,MAAM,OAAN;AAgBP,oBAAkB,QAAQ,IAAI;AAI9B,QAAM,oBAAoB,IAAI;AAAA,IAC5B,SAAU,GAAa,IAAc,MAAc,MAAc;AAC/D,YAAM,UAAU,0CAA0C,IAAI,MAAM,MAAM,KAAK,OAAO,CAAC;AACvF,aAAO,EAAE,OAAO;AAAA,IAClB;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,kBACP,GACA,MACA,MACA,YAA8B,MACtB;AACR,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,EAAE,MAAM;AAAA,IAAA,CACvB;AACD,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,UAAM,gBAAgB,CAAC,GAAG,EAAE,KAAK;AACjC,KAAC,cAAc,IAAI,GAAG,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,GAAG,cAAc,IAAI,CAAC;AAEtF,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,EAAE,OAAO,MAAM,IAAI;AAAA,MAClC,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,cAAA;AAAA,IAAc;AAAA,EAEjD;AApBS;AAsBF,QAAM,aAAN,MAAM,mBAAkB,UAAU;AAAA,IACvC;AAAA,IACA,QAAQ,GAAW,MAAc,MAAsB;AACrD,WAAK,QAAQ,CAAC,GAAG,MAAM,IAAI;AAC3B,aAAO,kBAAkB,GAAG,MAAM,MAAM,IAAI;AAAA,IAC9C;AAAA,IACA,SAAS,IAAkB;AACzB,YAAM,CAAC,GAAG,MAAM,IAAI,IAAI,KAAK;AAG7B,QAAE,SAAS,GAAG,UAAU,MAAM,IAAI,CAAC;AAAA,IACrC;AAAA,EACF;AAZyC;AAAlC,MAAM,YAAN;AAaP,oBAAkB,aAAa,SAAS;AAExC,WAAS,wBACP,GACA,IACA,GACA,IACA,KACA;AACA,QAAI,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAC/D,QAAI,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAE/D,UAAM,IAAI,KAAK,UAAU;AAEzB,UAAM,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;AAC/B,UAAM,WAAW,KAAK,OAAO,IAAI;AAEjC,cAAU,UAAU,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;AACpF,cAAU,UAAU,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,IAAK,WAAW,IAAI,IAAI,CAAC;AAE7D,UAAM,WAAW,GAAG,IAAI,CAAC;AAEzB,QAAIC,OAAM;AACV,aAAS,IAAI,GAAG,IAAI,KAAK,UAAU,IAAI,KAAK;AAC1C,MAAAA,OAAMA,OAAM,EAAE,OAAO,IAAI,EAAE,OAAO;AAClC,gBAAU,UAAU;AACpB,gBAAU,UAAU;AAAA,IACtB;AAEA,WAAOA;AAAA,EACT;AA5BS;AA8BT,QAAM,iBAAiB,IAAI;AAAA,IAAa;AAAA,IACtC;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,eAAe,GAAW,GAAW,YAA8B,MAAc;AACxF,QAAI,EAAE,MAAM,UAAU,KAAK,EAAE,MAAM,UAAU,GAAG;AAC9C,aAAO,EAAE,IAAI,CAAC,EAAE,IAAA;AAAA,IAClB;AAEA,UAAM,OAAO,EAAE,MAAM,UAAU;AAC/B,UAAM,OAAO,EAAE,MAAM,UAAU;AAE/B,UAAM,UAAU,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,IAAI,EAAE;AAC3C,UAAM,UAAU,OAAO,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE;AAE3C,QAAI,QAAQ,QAAQ,SAAS,CAAC,KAAK,QAAQ,QAAQ,SAAS,CAAC,GAAG;AAE9D,YAAM,IAAI,MAAM,qBAAqB,EAAE,QAAQ,UAAU,EAAE,KAAK;AAAA,IAClE;AAEA,UAAM,kBAAkB,QAAQ,QAAQ,SAAS,CAAC;AAElD,QAAI,kBAAkB,KAAM;AAE1B,YAAM,IAAI,MAAM,gCAAgC,eAAe;AAAA,IACjE;AAEA,UAAM,kBAAkB,iBAAiB,QAAQ,MAAM,GAAG,EAAE,GAAG,QAAQ,MAAM,GAAG,EAAE,CAAC,EAAE,OAAO;AAAA,MAC1F,QAAQ,QAAQ,SAAS,CAAC;AAAA,MAC1B,QAAQ,QAAQ,SAAS,CAAC;AAAA,IAAA,CAC3B;AAED,UAAM,iBAAiB,WAAW,SAAS,eAAe;AAC1D,UAAM,iBAAiB,WAAW,SAAS,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,IAAI;AAAA;AAAA,MAEJ,cAAc,gBAAgB,SAAS;AAAA,IAAA,CACxC;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,QAAI,kCAAkC,CAAC,GAAG,eAAe;AAEzD,QAAI,MAAM;AACR,wCAAkC,gCAC/B,MAAM,GAAG,EAAE,EACX,OAAO,CAAC,gBAAgB,gBAAgB,SAAS,CAAC,CAAC,CAAC;AAAA,IACzD;AAEA,QAAI,MAAM;AACR,wCAAkC,gCAAgC,MAAM,GAAG,EAAE;AAAA,IAC/E;AAEA,WAAO,IAAI;AAAA,MACT;AAAA,QACE,EAAE;AAAA,QACF;AAAA,QACA,EAAE;AAAA,QACF;AAAA,QACA;AAAA,MAAA;AAAA,MAEF,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gCAAA;AAAA,IAAgC;AAAA,EAEnE;AA9DS;AAiEF,QAAM,UAAN,MAAM,gBAAe,gBAAgB;AAAA,IAClC;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,eAAe,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC9E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAAA,IAItB;AAAA,EACF;AAd4C;AAArC,MAAM,SAAN;AAeP,oBAAkB,UAAU,MAAM;AAIlC,QAAM,aAAa,IAAI;AAAA,IACrB,SAAU,GAAa,IAAc,GAAa,IAAc,KAAe;AAC7E,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AACjE,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAEjE,aAAQ,EAAE,OAAO,IAAI,EAAE,OAAO,IAAK,IAAI;AAAA,IACzC;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,WAAW,GAAW,GAAW,YAA8B,MAAc;AACpF,UAAM,kBAAkB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzD,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAC1D,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,gBAAgB;AAAA,IAAA,CAC/B;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,gBAAgB,EAAE,MAAM,gBAAgB,eAAe;AAAA,MACtE,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gBAAA;AAAA,IAAgB;AAAA,EAEnD;AAhBS;AAkBF,QAAM,MAAN,MAAM,YAAW,gBAAgB;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,WAAW,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC1E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAAA,IAItB;AAAA,EACF;AAdwC;AAAjC,MAAM,KAAN;AAeP,oBAAkB,MAAM,EAAE;AAE1B,QAAM,aAAa,IAAI;AAAA,IACrB,SAAU,GAAa,IAAc,GAAa,IAAc,KAAe;AAC7E,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AACjE,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAEjE,aAAQ,EAAE,OAAO,IAAI,EAAE,OAAO,IAAK,IAAI;AAAA,IACzC;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,WAAW,GAAW,GAAW,YAA8B,MAAc;AACpF,UAAM,kBAAkB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzD,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAC1D,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,gBAAgB;AAAA,IAAA,CAC/B;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,gBAAgB,EAAE,MAAM,gBAAgB,eAAe;AAAA,MACtE,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gBAAA;AAAA,IAAgB;AAAA,EAEnD;AAhBS;AAkBF,QAAM,MAAN,MAAM,YAAW,gBAAgB;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,WAAW,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC1E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAAA,IAItB;AAAA,EACF;AAdwC;AAAjC,MAAM,KAAN;AAeP,oBAAkB,MAAM,EAAE;AAE1B,QAAM,aAAa,IAAI;AAAA,IACrB,SAAU,GAAa,IAAc,GAAa,IAAc,KAAe;AAC7E,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AACjE,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAEjE,aAAQ,EAAE,OAAO,KAAK,EAAE,OAAO,IAAK,IAAI;AAAA,IAC1C;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,WAAW,GAAW,GAAW,YAA8B,MAAc;AACpF,UAAM,kBAAkB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzD,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAC1D,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,gBAAgB;AAAA,IAAA,CAC/B;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,gBAAgB,EAAE,MAAM,gBAAgB,eAAe;AAAA,MACtE,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gBAAA;AAAA,IAAgB;AAAA,EAEnD;AAhBS;AAkBF,QAAM,MAAN,MAAM,YAAW,gBAAgB;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,WAAW,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC1E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAAA,IAItB;AAAA,EACF;AAdwC;AAAjC,MAAM,KAAN;AAeP,oBAAkB,MAAM,EAAE;AAE1B,QAAM,aAAa,IAAI;AAAA,IACrB,SAAU,GAAa,IAAc,GAAa,IAAc,KAAe;AAC7E,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AACjE,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAEjE,aAAQ,EAAE,OAAO,KAAK,EAAE,OAAO,IAAK,IAAI;AAAA,IAC1C;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,WAAW,GAAW,GAAW,YAA8B,MAAc;AACpF,UAAM,kBAAkB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzD,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAC1D,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,gBAAgB;AAAA,IAAA,CAC/B;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,gBAAgB,EAAE,MAAM,gBAAgB,eAAe;AAAA,MACtE,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gBAAA;AAAA,IAAgB;AAAA,EAEnD;AAhBS;AAkBF,QAAM,MAAN,MAAM,YAAW,gBAAgB;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,WAAW,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC1E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAAA,IAItB;AAAA,EACF;AAdwC;AAAjC,MAAM,KAAN;AAeP,oBAAkB,MAAM,EAAE;AAE1B,QAAM,aAAa,IAAI;AAAA,IACrB,SAAU,GAAa,IAAc,GAAa,IAAc,KAAe;AAC7E,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AACjE,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAEjE,aAAQ,EAAE,OAAO,KAAK,EAAE,OAAO,IAAK,IAAI;AAAA,IAC1C;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,WAAW,GAAW,GAAW,YAA8B,MAAc;AACpF,UAAM,kBAAkB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzD,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAC1D,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,gBAAgB;AAAA,IAAA,CAC/B;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,gBAAgB,EAAE,MAAM,gBAAgB,eAAe;AAAA,MACtE,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gBAAA;AAAA,IAAgB;AAAA,EAEnD;AAhBS;AAkBF,QAAM,MAAN,MAAM,YAAW,gBAAgB;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,WAAW,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC1E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAAA,IAItB;AAAA,EACF;AAdwC;AAAjC,MAAM,KAAN;AAeP,oBAAkB,MAAM,EAAE;AAE1B,QAAM,aAAa,IAAI;AAAA,IACrB,SAAU,GAAa,IAAc,GAAa,IAAc,KAAe;AAC7E,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AACjE,YAAM,UAAU,2BAA2B,IAAI,KAAK,KAAK,OAAO,CAAC;AAEjE,aAAQ,EAAE,OAAO,KAAK,EAAE,OAAO,IAAK,IAAI;AAAA,IAC1C;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,WAAW,GAAW,GAAW,YAA8B,MAAc;AACpF,UAAM,kBAAkB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzD,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAC1D,UAAM,iBAAiB,WAAW,EAAE,OAAO,eAAe;AAE1D,UAAM,SAAS;AACf,WAAO,aAAa;AAAA,MAClB,cAAc,gBAAgB;AAAA,IAAA,CAC/B;AACD,WAAO,UAAU,CAAC,gBAAgB,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAErE,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,MAAM,gBAAgB,EAAE,MAAM,gBAAgB,eAAe;AAAA,MACtE,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAA;AAAA,MACtC,EAAE,WAAsB,OAAO,gBAAA;AAAA,IAAgB;AAAA,EAEnD;AAhBS;AAkBF,QAAM,MAAN,MAAM,YAAW,gBAAgB;AAAA,IAC9B;AAAA,IACD,QAAQ,GAAW,GAAmB;AAC3C,UAAI,EAAE,iBAAiB,EAAE,eAAe;AACtC,aAAK,QAAQ,CAAC,GAAG,CAAC;AAAA,MACpB;AACA,aAAO,WAAW,GAAG,GAAG,EAAE,iBAAiB,EAAE,gBAAgB,OAAO,IAAI;AAAA,IAC1E;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,GAAG,CAAC,IAAI,KAAK;AAAA,IAItB;AAAA,EACF;AAdwC;AAAjC,MAAM,KAAN;AAeP,oBAAkB,MAAM,EAAE;AC/zCnB,WAAS,SAAS,OAAe,KAAa,OAAe;AAClE,UAAM,OAAO,CAAA;AACb,UAAM,QAAQ,MAAM,UAAU,QAAQ;AACtC,aAAS,IAAI,GAAG,IAAI,QAAQ,GAAG,KAAK;AAClC,WAAK,KAAK,QAAQ,IAAI,IAAI;AAAA,IAC5B;AACA,SAAK,KAAK,GAAG;AACb,WAAO,IAAI,OAAO,IAAI;AAAA,EACxB;AARgB;AAUhB,WAAS,oBAAoB,MAAuC;AAClE,QAAI,MAAM,QAAQ,KAAK,CAAC,CAAC,GAAG;AAC1B,aAAO,KAAK,CAAC;AAAA,IACf;AAEA,WAAO;AAAA,EACT;AANS;AAQF,WAAS,QAAQ,MAAqC;AAC3D,UAAM,QAAQ,oBAAoB,IAAI;AACtC,UAAM,SAAS,IAAI,OAAO,MAAM,MAAM,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACzE,WAAO,QAAQ;AACf,WAAO;AAAA,EACT;AALgB;AAOT,WAAS,SAAS,MAAqC;AAC5D,UAAM,QAAQ,oBAAoB,IAAI;AACtC,UAAM,SAAS,IAAI,OAAO,MAAM,MAAM,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACzE,WAAO,QAAQ;AACf,WAAO;AAAA,EACT;AALgB;AAST,WAAS,SAAS,MAAqC;AAC5D,UAAM,QAAQ,oBAAoB,IAAI;AACtC,UAAM,SAAS,IAAI,OAAO,MAAM,MAAM,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,KAAK,KAAK,OAAA,CAAQ,CAAC;AACrF,WAAO,QAAQ;AACf,WAAO;AAAA,EACT;AALgB;AAOT,WAAS,QAAQ,MAAqC;AAC3D,UAAM,QAAQ,oBAAoB,IAAI;AACtC,UAAM,SAAS,IAAI,OAAO,MAAM,MAAM,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,KAAK,KAAK,OAAA,CAAQ,CAAC;AACrF,WAAO,QAAQ;AACf,WAAO;AAAA,EACT;AALgB;AAOT,WAAS,QAAQ,KAAa,MAAc,OAAyB;AAC1E,UAAM,SAAS,IAAI;AAAA,MACjB,MAAM,MAAM,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,KAAK,KAAK,MAAM,KAAK,OAAA,KAAY,OAAO,OAAO,GAAG,CAAC;AAAA,IAAA;AAE7F,WAAO,QAAQ;AACf,WAAO;AAAA,EACT;AANgB;ACpChB,QAAM,eAAe,IAAI;AAAA,IACvB,SAAU,GAAa;AACrB,aAAO,KAAK,IAAI,EAAE,KAAK,OAAO,CAAC,GAAG,CAAC;AAAA,IACrC;AAAA,IACA;AAAA,MACE,eAAe;AAAA,MACf,kBAAkB;AAAA;AAAA;AAAA,IAAA;AAAA,EAItB;AAEA,WAAS,aAAa,GAAW,YAA8B,MAAc;AAC3E,UAAM,SAAS;AACf,WAAO,UAAU,CAAC,EAAE,MAAM,OAAO,CAAC,KAAK,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC;AAE7D,WAAO,IAAI;AAAA,MACT,OAAO,EAAE,IAAI;AAAA,MACb,EAAE,eAAe,EAAE,cAAA;AAAA,MACnB,EAAE,WAAsB,OAAO,EAAE,MAAA;AAAA,IAAM;AAAA,EAE3C;AATS;AAWF,QAAM,QAAN,MAAM,cAAa,eAAe;AAAA,IAC/B;AAAA,IACD,QAAQ,GAAmB;AAChC,UAAI,EAAE,eAAe;AACnB,aAAK,QAAQ,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,aAAa,GAAG,EAAE,gBAAgB,OAAO,IAAI;AAAA,IACtD;AAAA,IACO,SAAS,IAAkB;AAChC,YAAM,CAAC,CAAC,IAAI,KAAK;AAGjB,QAAE,SAAS,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;AAAA,IAC5B;AAAA,EACF;AAdyC;AAAlC,MAAM,OAAN;AAeP,oBAAkB,QAAQ,IAAI;AC9CvB,QAAM,aAAN,MAAM,mBAAkB,OAAO;AAAA,IACpC,YACE,MAEA,UAAuC;AAAA,MACnC,eAAe;AAAA,IAAA,GAEnB,mBAAgE,CAAA,GAChE;AACA,UAAI,gBAAgB,QAAQ;AAC1B,cAAM,KAAK,MAAM,EAAE,eAAe,KAAA,GAAQ,EAAE,OAAO,KAAK,OAAO;AAAA,MACjE,WAAW,gBAAgB,YAAW;AACpC,cAAM,KAAK,MAAM,EAAE,eAAe,KAAA,GAAQ,EAAE,OAAO,KAAK,OAAO;AAAA,MACjE,OAAO;AACL,cAAM,MAAM,SAAS,gBAAgB;AAAA,MACvC;AAAA,IACF;AAAA,EACF;AAjBsC;AAA/B,MAAM,YAAN;AAmBA,QAAe,UAAf,MAAe,QAAO;AAAA,IACnB;AAAA,IACA;AAAA,IAER,cAAc;AACZ,WAAK,cAAc,CAAA;AACnB,WAAK,WAAW,CAAA;AAAA,IAClB;AAAA,IAEQ,mBAAmB,gBAAwB,WAAsB;AACvE,WAAK,YAAY,cAAc,IAAI;AAAA,IACrC;AAAA,IAEQ,gBAAgB,aAAqB9C,SAAgB;AAC3D,WAAK,SAAS,WAAW,IAAIA;AAAA,IAC/B;AAAA,IAEU,SAASS,OAAcW,QAA2B;AAC1D,UAAIA,kBAAiB,WAAW;AAC9B,aAAK,mBAAmBX,OAAMW,MAAK;AAAA,MACrC,OAAO;AACL,aAAK,gBAAgBX,OAAMW,MAAK;AAAA,MAClC;AAAA,IACF;AAAA,IAIO,aAA0B;AAC/B,UAAI,SAAsB,OAAO,OAAO,KAAK,WAAW;AACxD,iBAAWpB,WAAU,OAAO,OAAO,KAAK,QAAQ,GAAG;AACjD,iBAAS,OAAO,OAAOA,QAAO,WAAA,CAAY;AAAA,MAC5C;AACA,aAAO;AAAA,IACT;AAAA,EACF;AAlC6B;AAAtB,MAAe,SAAf;AAoCA,QAAM,UAAN,MAAM,gBAAe,OAAO;AAAA,IACzB;AAAA,IACA;AAAA,IAER,YAAY,aAAqB,cAAsB;AACrD,YAAA;AACA,YAAM,IAAI,KAAK,KAAK,IAAI,WAAW;AAEnC,WAAK,SAAS,IAAI,UAAU,KAAK,CAAC,cAAc,WAAW,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AAC/E,WAAK,OAAO,IAAI,UAAU,KAAK,CAAC,YAAY,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AAEhE,WAAK,SAAS,UAAU,KAAK,MAAM;AACnC,WAAK,SAAS,QAAQ,KAAK,IAAI;AAAA,IACjC;AAAA,IAEA,QAAQ,OAAe;AACrB,aAAO,MAAM,OAAO,KAAK,OAAO,UAAU,GAAG,CAAC,CAAC,EAAE,IAAI,KAAK,IAAI;AAAA,IAChE;AAAA,EACF;AAlBmC;AAA5B,MAAM,SAAN;AAoBA,QAAM,QAAN,MAAM,cAAa,OAAO;AAAA,IAC/B,cAAc;AACZ,YAAA;AAAA,IACF;AAAA,IAEA,QAAQ,OAAe;AACrB,aAAO+C,KAAgB,KAAK;AAAA,IAC9B;AAAA,EACF;AARiC;AAA1B,MAAM,OAAN;AC9EP,WAAS,kBAAkB,QAAgB;AACzC,WAAO,IAAI,SAA8B;AACvC,YAAM,YAAY,KAAK,aAAa,MAAM,GAAA;AAC1C,aAAO,UAAU,QAAQ,GAAG,IAAI;AAAA,IAClC;AAAA,EACF;AALS;AAOT,WAAS,wBAAwB,QAAgB;AAC/C,WAAO,CAAC,MAAuB;AAC7B,UAAI,OAAO,KAAK,UAAU;AACxB,YAAI,IAAI,OAAO,CAAC;AAAA,MAClB;AAEA,YAAM,YAAY,KAAK,aAAa,MAAM,GAAA;AAC1C,aAAO,UAAU,QAAQ,CAAC;AAAA,IAC5B;AAAA,EACF;AATS;AAWT,WAAS,yBAAyB,QAAgB;AAChD,WAAO,CAAC,GAAoB,MAAuB;AACjD,UAAI,OAAO,KAAK,UAAU;AACxB,YAAI,IAAI,OAAO,CAAC;AAAA,MAClB;AAEA,UAAI,OAAO,KAAK,UAAU;AACxB,YAAI,IAAI,OAAO,CAAC;AAAA,MAClB;AAEA,YAAM,YAAY,KAAK,aAAa,MAAM,GAAA;AAC1C,aAAO,UAAU,QAAQ,GAAG,CAAC;AAAA,IAC/B;AAAA,EACF;AAbS;AAeF,QAAM,OAAO,wBAAwB,MAAM;;;;;;;;;;;;;AClC3C,QAAe,aAAf,MAAe,WAAU;AAAA,IAC9B;AAAA,IACA;AAAA,IAEA,YAAY,QAAqB,UAAkC;AACjE,WAAK,SAAS;AACd,WAAK,WAAW;AAAA,IAClB;AAAA,IAEO,YAAkB;AACvB,iBAAW,SAAS,KAAK,QAAQ;AAC/B,cAAM,OAAO;AAAA,MACf;AAAA,IACF;AAAA,EAGF;AAhBgC;AAAzB,MAAe,YAAf;ACGA,QAAM,OAAN,MAAM,aAAY,UAAU;AAAA,IACzB,4BAAkD,IAAA;AAAA,IAClD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAER,YACE,QACA,KAAa,MACb,WAAmB,GACnB,YAAoB,GACpB,eAAuB,GACvB,WAAoB,OACpB,WAAoB,OACpB;AACA,YAAM,QAAQ,EAAE;AAChB,WAAK,KAAK;AACV,WAAK,WAAW;AAChB,WAAK,YAAY;AACjB,WAAK,eAAe;AACpB,WAAK,WAAW;AAChB,WAAK,WAAW;AAAA,IAClB;AAAA,IAEA,OAAa;AACX,iBAAW,SAAS,KAAK,QAAQ;AAC/B,YAAI,IAAI,KAAK,WAAW,MAAM,KAAK,IAAI,EAAE,IAAI,MAAM;AACnD,YAAI,KAAK,gBAAgB,GAAG;AAC1B,cAAI,EAAE,IAAI,MAAM,IAAI,KAAK,YAAY,CAAC;AAAA,QACxC;AAEA,YAAI,KAAK,YAAY,GAAG;AACtB,cAAI,YAAY,KAAK;AACrB,cAAG,CAAC,KAAK,MAAM,IAAI,KAAK,GAAG;AACzB,iBAAK,MAAM,IAAI,OAAO,EAAE,UAAU,MAAM,MAAM,KAAK,GAAG;AACtD,wBAAY;AAAA,UACd;AAEA,cAAI,MAAM,KAAK,MAAM,IAAI,KAAK,EAAG;AACjC,gBAAM,IAAI,IAAI,KAAK,QAAQ;AAC3B,gBAAM,IAAI,IAAI,EAAE,IAAI,SAAS,CAAC;AAE9B,cAAI,KAAK,UAAU;AACjB,gBAAI,EAAE,IAAI,IAAI,IAAI,KAAK,QAAQ,CAAC;AAAA,UAClC,OAAO;AACL,gBAAI,EAAE,IAAI,GAAG;AAAA,UACf;AAEA,eAAK,MAAM,IAAI,OAAO,EAAE,UAAU,KAAK;AAAA,QACzC;AAGA,cAAM,WAAW,MAAM,IAAI,EAAE,IAAI,KAAK,EAAE,CAAC;AACzC,cAAM,OAAO,SAAS;AAAA,MACxB;AAAA,IACF;AAAA,EACF;AA3DmC;AAA5B,MAAM,MAAN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}